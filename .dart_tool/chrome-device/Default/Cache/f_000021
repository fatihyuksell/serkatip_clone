define(['dart_sdk', 'packages/chewie/src/chewie_progress_colors.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/video_player/video_player.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/rendering/custom_paint.dart'], (function load__packages__chewie__src__progress_bar_dart(dart_sdk, packages__chewie__src__chewie_progress_colors$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__video_player__video_player$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__rendering__custom_paint$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const chewie_progress_colors = packages__chewie__src__chewie_progress_colors$46dart.src__chewie_progress_colors;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const video_player = packages__video_player__video_player$46dart.video_player;
  const box$ = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  var progress_bar = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    DragStartDetailsTovoid: () => (T.DragStartDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragStartDetails])))(),
    DragUpdateDetailsTovoid: () => (T.DragUpdateDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragUpdateDetails])))(),
    DragEndDetailsTovoid: () => (T.DragEndDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragEndDetails])))(),
    TapDownDetailsTovoid: () => (T.TapDownDetailsTovoid = dart.constFn(dart.fnType(dart.void, [tap.TapDownDetails])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 13,
        [_Location_line]: 107,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 106,
        [_Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/chewie-1.2.2/lib/src/progress_bar.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], T._LocationL());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[4] || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 102,
        [_Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/chewie-1.2.2/lib/src/progress_bar.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11], T._LocationL());
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[10] || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 101,
        [_Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/chewie-1.2.2/lib/src/progress_bar.dart"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 7,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 7,
        [_Location_line]: 80,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 7,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.constList([C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18], T._LocationL());
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[13] || CT.C13,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 68,
        [_Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/chewie-1.2.2/lib/src/progress_bar.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    }
  }, false);
  var C = Array(20).fill(void 0);
  var I = [
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/chewie-1.2.2/lib/src/progress_bar.dart",
    "package:chewie/src/progress_bar.dart"
  ];
  var controller$ = dart.privateName(progress_bar, "VideoProgressBar.controller");
  var colors$ = dart.privateName(progress_bar, "VideoProgressBar.colors");
  var onDragStart$ = dart.privateName(progress_bar, "VideoProgressBar.onDragStart");
  var onDragEnd$ = dart.privateName(progress_bar, "VideoProgressBar.onDragEnd");
  var onDragUpdate$ = dart.privateName(progress_bar, "VideoProgressBar.onDragUpdate");
  var barHeight$ = dart.privateName(progress_bar, "VideoProgressBar.barHeight");
  var handleHeight$ = dart.privateName(progress_bar, "VideoProgressBar.handleHeight");
  var drawShadow$ = dart.privateName(progress_bar, "VideoProgressBar.drawShadow");
  progress_bar.VideoProgressBar = class VideoProgressBar extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get colors() {
      return this[colors$];
    }
    set colors(value) {
      super.colors = value;
    }
    get onDragStart() {
      return this[onDragStart$];
    }
    set onDragStart(value) {
      super.onDragStart = value;
    }
    get onDragEnd() {
      return this[onDragEnd$];
    }
    set onDragEnd(value) {
      super.onDragEnd = value;
    }
    get onDragUpdate() {
      return this[onDragUpdate$];
    }
    set onDragUpdate(value) {
      super.onDragUpdate = value;
    }
    get barHeight() {
      return this[barHeight$];
    }
    set barHeight(value) {
      super.barHeight = value;
    }
    get handleHeight() {
      return this[handleHeight$];
    }
    set handleHeight(value) {
      super.handleHeight = value;
    }
    get drawShadow() {
      return this[drawShadow$];
    }
    set drawShadow(value) {
      super.drawShadow = value;
    }
    createState() {
      return new progress_bar._VideoProgressBarState.new();
    }
  };
  (progress_bar.VideoProgressBar.new = function(controller, opts) {
    let t0;
    if (controller == null) dart.nullFailed(I[0], 8, 10, "controller");
    let colors = opts && 'colors' in opts ? opts.colors : null;
    let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
    let onDragStart = opts && 'onDragStart' in opts ? opts.onDragStart : null;
    let onDragUpdate = opts && 'onDragUpdate' in opts ? opts.onDragUpdate : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let barHeight = opts && 'barHeight' in opts ? opts.barHeight : null;
    if (barHeight == null) dart.nullFailed(I[0], 14, 19, "barHeight");
    let handleHeight = opts && 'handleHeight' in opts ? opts.handleHeight : null;
    if (handleHeight == null) dart.nullFailed(I[0], 15, 19, "handleHeight");
    let drawShadow = opts && 'drawShadow' in opts ? opts.drawShadow : null;
    if (drawShadow == null) dart.nullFailed(I[0], 16, 19, "drawShadow");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = controller;
    this[onDragEnd$] = onDragEnd;
    this[onDragStart$] = onDragStart;
    this[onDragUpdate$] = onDragUpdate;
    this[barHeight$] = barHeight;
    this[handleHeight$] = handleHeight;
    this[drawShadow$] = drawShadow;
    this[colors$] = (t0 = colors, t0 == null ? new chewie_progress_colors.ChewieProgressColors.new() : t0);
    progress_bar.VideoProgressBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = progress_bar.VideoProgressBar.prototype;
  dart.addTypeTests(progress_bar.VideoProgressBar);
  dart.addTypeCaches(progress_bar.VideoProgressBar);
  dart.setMethodSignature(progress_bar.VideoProgressBar, () => ({
    __proto__: dart.getMethods(progress_bar.VideoProgressBar.__proto__),
    createState: dart.fnType(progress_bar._VideoProgressBarState, [])
  }));
  dart.setLibraryUri(progress_bar.VideoProgressBar, I[1]);
  dart.setFieldSignature(progress_bar.VideoProgressBar, () => ({
    __proto__: dart.getFields(progress_bar.VideoProgressBar.__proto__),
    controller: dart.finalFieldType(video_player.VideoPlayerController),
    colors: dart.finalFieldType(chewie_progress_colors.ChewieProgressColors),
    onDragStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    onDragEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    onDragUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    barHeight: dart.finalFieldType(core.double),
    handleHeight: dart.finalFieldType(core.double),
    drawShadow: dart.finalFieldType(core.bool)
  }));
  var _controllerWasPlaying = dart.privateName(progress_bar, "_controllerWasPlaying");
  var _seekToRelativePosition = dart.privateName(progress_bar, "_seekToRelativePosition");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  progress_bar._VideoProgressBarState = class _VideoProgressBarState extends framework.State$(progress_bar.VideoProgressBar) {
    listener() {
      if (!dart.test(this.mounted)) return;
      this.setState(dart.fn(() => {
      }, T.VoidTovoid()));
    }
    get controller() {
      return this.widget.controller;
    }
    initState() {
      super.initState();
      this.controller.addListener(dart.bind(this, 'listener'));
    }
    deactivate() {
      this.controller.removeListener(dart.bind(this, 'listener'));
      super.deactivate();
    }
    [_seekToRelativePosition](globalPosition) {
      if (globalPosition == null) dart.nullFailed(I[0], 58, 39, "globalPosition");
      let box = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let tapPos = box.globalToLocal(globalPosition);
      let relative = dart.notNull(tapPos.dx) / dart.notNull(box.size.width);
      let position = this.controller.value.duration['*'](relative);
      this.controller.seekTo(position);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 67, 29, "context");
      return new gesture_detector.GestureDetector.new({onHorizontalDragStart: dart.fn(details => {
          let t0;
          if (details == null) dart.nullFailed(I[0], 69, 48, "details");
          if (!dart.test(this.controller.value.isInitialized)) {
            return;
          }
          this[_controllerWasPlaying] = this.controller.value.isPlaying;
          if (dart.test(this[_controllerWasPlaying])) {
            this.controller.pause();
          }
          t0 = this.widget.onDragStart;
          t0 == null ? null : t0();
        }, T.DragStartDetailsTovoid()), onHorizontalDragUpdate: dart.fn(details => {
          let t0;
          if (details == null) dart.nullFailed(I[0], 80, 50, "details");
          if (!dart.test(this.controller.value.isInitialized)) {
            return;
          }
          this[_seekToRelativePosition](details.globalPosition);
          t0 = this.widget.onDragUpdate;
          t0 == null ? null : t0();
        }, T.DragUpdateDetailsTovoid()), onHorizontalDragEnd: dart.fn(details => {
          let t0;
          if (details == null) dart.nullFailed(I[0], 88, 44, "details");
          if (dart.test(this[_controllerWasPlaying])) {
            this.controller.play();
          }
          t0 = this.widget.onDragEnd;
          t0 == null ? null : t0();
        }, T.DragEndDetailsTovoid()), onTapDown: dart.fn(details => {
          if (details == null) dart.nullFailed(I[0], 95, 34, "details");
          if (!dart.test(this.controller.value.isInitialized)) {
            return;
          }
          this[_seekToRelativePosition](details.globalPosition);
        }, T.TapDownDetailsTovoid()), child: new basic.Center.new({child: new container.Container.new({height: media_query.MediaQuery.of(context).size.height, width: media_query.MediaQuery.of(context).size.width, color: colors.Colors.transparent, child: new basic.CustomPaint.new({painter: new progress_bar._ProgressBarPainter.new({value: this.controller.value, colors: this.widget.colors, barHeight: this.widget.barHeight, handleHeight: this.widget.handleHeight, drawShadow: this.widget.drawShadow}), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3}), $creationLocationd_0dea112b090073317d4: C[9] || CT.C9}), $creationLocationd_0dea112b090073317d4: C[12] || CT.C12});
    }
  };
  (progress_bar._VideoProgressBarState.new = function() {
    this[_controllerWasPlaying] = false;
    progress_bar._VideoProgressBarState.__proto__.new.call(this);
    ;
  }).prototype = progress_bar._VideoProgressBarState.prototype;
  dart.addTypeTests(progress_bar._VideoProgressBarState);
  dart.addTypeCaches(progress_bar._VideoProgressBarState);
  dart.setMethodSignature(progress_bar._VideoProgressBarState, () => ({
    __proto__: dart.getMethods(progress_bar._VideoProgressBarState.__proto__),
    listener: dart.fnType(dart.void, []),
    [_seekToRelativePosition]: dart.fnType(dart.void, [ui.Offset]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(progress_bar._VideoProgressBarState, () => ({
    __proto__: dart.getGetters(progress_bar._VideoProgressBarState.__proto__),
    controller: video_player.VideoPlayerController
  }));
  dart.setLibraryUri(progress_bar._VideoProgressBarState, I[1]);
  dart.setFieldSignature(progress_bar._VideoProgressBarState, () => ({
    __proto__: dart.getFields(progress_bar._VideoProgressBarState.__proto__),
    [_controllerWasPlaying]: dart.fieldType(core.bool)
  }));
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  progress_bar._ProgressBarPainter = class _ProgressBarPainter extends custom_paint.CustomPainter {
    shouldRepaint(painter) {
      custom_paint.CustomPainter.as(painter);
      if (painter == null) dart.nullFailed(I[0], 138, 36, "painter");
      return true;
    }
    paint(canvas, size) {
      let t0;
      if (canvas == null) dart.nullFailed(I[0], 143, 21, "canvas");
      if (size == null) dart.nullFailed(I[0], 143, 34, "size");
      let baseOffset = dart.notNull(size.height) / 2 - dart.notNull(this.barHeight) / 2;
      canvas.drawRRect(new ui.RRect.fromRectAndRadius(new ui.Rect.fromPoints(new ui.Offset.new(0.0, baseOffset), new ui.Offset.new(size.width, baseOffset + dart.notNull(this.barHeight))), C[19] || CT.C19), this.colors.backgroundPaint);
      if (!dart.test(this.value.isInitialized)) {
        return;
      }
      let playedPartPercent = dart.notNull(this.value.position.inMilliseconds) / dart.notNull(this.value.duration.inMilliseconds);
      let playedPart = playedPartPercent > 1 ? size.width : playedPartPercent * dart.notNull(size.width);
      for (let range of this.value.buffered) {
        let start = dart.notNull(range.startFraction(this.value.duration)) * dart.notNull(size.width);
        let end = dart.notNull(range.endFraction(this.value.duration)) * dart.notNull(size.width);
        canvas.drawRRect(new ui.RRect.fromRectAndRadius(new ui.Rect.fromPoints(new ui.Offset.new(start, baseOffset), new ui.Offset.new(end, baseOffset + dart.notNull(this.barHeight))), C[19] || CT.C19), this.colors.bufferedPaint);
      }
      canvas.drawRRect(new ui.RRect.fromRectAndRadius(new ui.Rect.fromPoints(new ui.Offset.new(0.0, baseOffset), new ui.Offset.new(playedPart, baseOffset + dart.notNull(this.barHeight))), C[19] || CT.C19), this.colors.playedPaint);
      if (dart.test(this.drawShadow)) {
        let shadowPath = (t0 = ui.Path.new(), (() => {
          t0.addOval(new ui.Rect.fromCircle({center: new ui.Offset.new(playedPart, baseOffset + dart.notNull(this.barHeight) / 2), radius: this.handleHeight}));
          return t0;
        })());
        canvas.drawShadow(shadowPath, colors.Colors.black, 0.2, false);
      }
      canvas.drawCircle(new ui.Offset.new(playedPart, baseOffset + dart.notNull(this.barHeight) / 2), this.handleHeight, this.colors.handlePaint);
    }
  };
  (progress_bar._ProgressBarPainter.new = function(opts) {
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(I[0], 123, 19, "value");
    let colors = opts && 'colors' in opts ? opts.colors : null;
    if (colors == null) dart.nullFailed(I[0], 124, 19, "colors");
    let barHeight = opts && 'barHeight' in opts ? opts.barHeight : null;
    if (barHeight == null) dart.nullFailed(I[0], 125, 19, "barHeight");
    let handleHeight = opts && 'handleHeight' in opts ? opts.handleHeight : null;
    if (handleHeight == null) dart.nullFailed(I[0], 126, 19, "handleHeight");
    let drawShadow = opts && 'drawShadow' in opts ? opts.drawShadow : null;
    if (drawShadow == null) dart.nullFailed(I[0], 127, 19, "drawShadow");
    this.value = value;
    this.colors = colors;
    this.barHeight = barHeight;
    this.handleHeight = handleHeight;
    this.drawShadow = drawShadow;
    progress_bar._ProgressBarPainter.__proto__.new.call(this);
    ;
  }).prototype = progress_bar._ProgressBarPainter.prototype;
  dart.addTypeTests(progress_bar._ProgressBarPainter);
  dart.addTypeCaches(progress_bar._ProgressBarPainter);
  dart.setMethodSignature(progress_bar._ProgressBarPainter, () => ({
    __proto__: dart.getMethods(progress_bar._ProgressBarPainter.__proto__),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size])
  }));
  dart.setLibraryUri(progress_bar._ProgressBarPainter, I[1]);
  dart.setFieldSignature(progress_bar._ProgressBarPainter, () => ({
    __proto__: dart.getFields(progress_bar._ProgressBarPainter.__proto__),
    value: dart.fieldType(video_player.VideoPlayerValue),
    colors: dart.fieldType(chewie_progress_colors.ChewieProgressColors),
    barHeight: dart.finalFieldType(core.double),
    handleHeight: dart.finalFieldType(core.double),
    drawShadow: dart.finalFieldType(core.bool)
  }));
  dart.trackLibraries("packages/chewie/src/progress_bar.dart", {
    "package:chewie/src/progress_bar.dart": progress_bar
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["progress_bar.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../C:/packages/chewie/src/progress_bar.dart.lib.js"}');
  // Exports:
  return {
    src__progress_bar: progress_bar
  };
}));

//# sourceMappingURL=progress_bar.dart.lib.js.map
