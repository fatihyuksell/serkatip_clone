define(['dart_sdk', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/services/text_editing.dart', 'packages/flutter_math_fork/src/utils/render_box_extensions.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/rendering/editable.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/gestures/force_press.dart', 'packages/flutter/src/gestures/long_press.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter_math_fork/src/utils/iterable_extensions.dart', 'packages/collection/src/iterable_extensions.dart', 'packages/flutter_math_fork/src/utils/unicode_literal.dart', 'packages/flutter_math_fork/src/ast/types.dart', 'packages/flutter_math_fork/src/utils/alpha_numeric.dart', 'packages/collection/src/list_extensions.dart', 'packages/flutter_math_fork/src/encoder/exception.dart', 'packages/flutter_math_fork/src/utils/log.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter_math_fork/src/widgets/exception.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/provider/src/provider.dart', 'packages/flutter_math_fork/src/widgets/mode.dart', 'packages/flutter/src/material/selectable_text.dart', 'packages/flutter_math_fork/src/utils/text_extension.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter_math_fork/src/render/utils/render_box_offset.dart', 'packages/flutter/src/rendering/debug_overflow_indicator.dart', 'packages/flutter_math_fork/src/render/layout/shift_baseline.dart', 'packages/provider/src/selector.dart', 'packages/provider/src/proxy_provider.dart', 'packages/flutter_math_fork/src/utils/num_extension.dart', 'packages/tuple/tuple.dart', 'packages/flutter_math_fork/src/utils/wrapper.dart', 'packages/flutter_math_fork/src/parser/tex/colors.dart', 'packages/flutter_math_fork/src/ast/symbols/symbols_unicode.dart', 'packages/flutter_math_fork/src/parser/tex/unicode_accents.dart', 'packages/flutter_math_fork/src/font/metrics/unicode_scripts.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter_math_fork/src/render/layout/vlist.dart', 'packages/flutter_math_fork/src/render/layout/min_dimension.dart', 'packages/flutter_math_fork/src/render/layout/layout_builder_baseline.dart', 'packages/flutter_math_fork/src/render/svg/svg_geomertry.dart', 'packages/flutter_math_fork/src/render/layout/reset_baseline.dart', 'packages/flutter_math_fork/src/render/svg/svg_string.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter_math_fork/src/render/utils/get_type_of.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter_math_fork/src/ast/accents.dart', 'packages/flutter_math_fork/src/ast/symbols/unicode_accents.dart', 'packages/flutter_math_fork/src/ast/symbols/symbols_extra.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/cupertino/text_selection.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/material/text_selection.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/provider/src/listenable_provider.dart', 'packages/nested/nested.dart', 'packages/flutter_math_fork/src/widgets/selection/focus_manager.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter_math_fork/src/ast/font_metrics.dart'], (function load__packages__flutter_math_fork__src__widgets__selection__web_selection_manager_dart(dart_sdk, packages__flutter__src__services__text_input$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__services__text_editing$46dart, packages__flutter_math_fork__src__utils__render_box_extensions$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__rendering__editable$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__gestures__force_press$46dart, packages__flutter__src__gestures__long_press$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter_math_fork__src__utils__iterable_extensions$46dart, packages__collection__src__iterable_extensions$46dart, packages__flutter_math_fork__src__utils__unicode_literal$46dart, packages__flutter_math_fork__src__ast__types$46dart, packages__flutter_math_fork__src__utils__alpha_numeric$46dart, packages__collection__src__list_extensions$46dart, packages__flutter_math_fork__src__encoder__exception$46dart, packages__flutter_math_fork__src__utils__log$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter_math_fork__src__widgets__exception$46dart, packages__flutter__src__painting__strut_style$46dart, packages__provider__src__provider$46dart, packages__flutter_math_fork__src__widgets__mode$46dart, packages__flutter__src__material__selectable_text$46dart, packages__flutter_math_fork__src__utils__text_extension$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter_math_fork__src__render__utils__render_box_offset$46dart, packages__flutter__src__rendering__debug_overflow_indicator$46dart, packages__flutter_math_fork__src__render__layout__shift_baseline$46dart, packages__provider__src__selector$46dart, packages__provider__src__proxy_provider$46dart, packages__flutter_math_fork__src__utils__num_extension$46dart, packages__tuple__tuple$46dart, packages__flutter_math_fork__src__utils__wrapper$46dart, packages__flutter_math_fork__src__parser__tex__colors$46dart, packages__flutter_math_fork__src__ast__symbols__symbols_unicode$46dart, packages__flutter_math_fork__src__parser__tex__unicode_accents$46dart, packages__flutter_math_fork__src__font__metrics__unicode_scripts$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter_math_fork__src__render__layout__vlist$46dart, packages__flutter_math_fork__src__render__layout__min_dimension$46dart, packages__flutter_math_fork__src__render__layout__layout_builder_baseline$46dart, packages__flutter_math_fork__src__render__svg__svg_geomertry$46dart, packages__flutter_math_fork__src__render__layout__reset_baseline$46dart, packages__flutter_math_fork__src__render__svg__svg_string$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter_math_fork__src__render__utils__get_type_of$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter_math_fork__src__ast__accents$46dart, packages__flutter_math_fork__src__ast__symbols__unicode_accents$46dart, packages__flutter_math_fork__src__ast__symbols__symbols_extra$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__cupertino__text_selection$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__material__text_selection$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__provider__src__listenable_provider$46dart, packages__nested__nested$46dart, packages__flutter_math_fork__src__widgets__selection__focus_manager$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter_math_fork__src__ast__font_metrics$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _interceptors = dart_sdk._interceptors;
  const _js_helper = dart_sdk._js_helper;
  const convert = dart_sdk.convert;
  const async = dart_sdk.async;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const autofill = packages__flutter__src__services__text_input$46dart.src__services__autofill;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const binding = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const text_editing = packages__flutter__src__services__text_editing$46dart.src__services__text_editing;
  const render_box_extensions = packages__flutter_math_fork__src__utils__render_box_extensions$46dart.src__utils__render_box_extensions;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const text_selection = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text_selection;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const overlay$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__overlay;
  const visibility = packages__flutter__src__widgets__widget_span$46dart.src__widgets__visibility;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const automatic_keep_alive = packages__flutter__src__widgets__widget_span$46dart.src__widgets__automatic_keep_alive;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const editable = packages__flutter__src__rendering__editable$46dart.src__rendering__editable;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const feedback = packages__flutter__src__material__icon_button$46dart.src__material__feedback;
  const text_selection_theme = packages__flutter__src__material__icon_button$46dart.src__material__text_selection_theme;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const force_press = packages__flutter__src__gestures__force_press$46dart.src__gestures__force_press;
  const long_press = packages__flutter__src__gestures__long_press$46dart.src__gestures__long_press;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const iterable_extensions = packages__flutter_math_fork__src__utils__iterable_extensions$46dart.src__utils__iterable_extensions;
  const iterable_extensions$ = packages__collection__src__iterable_extensions$46dart.src__iterable_extensions;
  const unicode_literal = packages__flutter_math_fork__src__utils__unicode_literal$46dart.src__utils__unicode_literal;
  const types = packages__flutter_math_fork__src__ast__types$46dart.src__ast__types;
  const alpha_numeric = packages__flutter_math_fork__src__utils__alpha_numeric$46dart.src__utils__alpha_numeric;
  const list_extensions = packages__collection__src__list_extensions$46dart.src__list_extensions;
  const exception = packages__flutter_math_fork__src__encoder__exception$46dart.src__encoder__exception;
  const log = packages__flutter_math_fork__src__utils__log$46dart.src__utils__log;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const exception$ = packages__flutter_math_fork__src__widgets__exception$46dart.src__widgets__exception;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const provider = packages__provider__src__provider$46dart.src__provider;
  const mode$ = packages__flutter_math_fork__src__widgets__mode$46dart.src__widgets__mode;
  const selectable_text = packages__flutter__src__material__selectable_text$46dart.src__material__selectable_text;
  const text_extension = packages__flutter_math_fork__src__utils__text_extension$46dart.src__utils__text_extension;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const render_box_offset = packages__flutter_math_fork__src__render__utils__render_box_offset$46dart.src__render__utils__render_box_offset;
  const debug_overflow_indicator = packages__flutter__src__rendering__debug_overflow_indicator$46dart.src__rendering__debug_overflow_indicator;
  const shift_baseline = packages__flutter_math_fork__src__render__layout__shift_baseline$46dart.src__render__layout__shift_baseline;
  const consumer = packages__provider__src__selector$46dart.src__consumer;
  const selector = packages__provider__src__selector$46dart.src__selector;
  const proxy_provider = packages__provider__src__proxy_provider$46dart.src__proxy_provider;
  const num_extension = packages__flutter_math_fork__src__utils__num_extension$46dart.src__utils__num_extension;
  const tuple = packages__tuple__tuple$46dart.tuple;
  const wrapper = packages__flutter_math_fork__src__utils__wrapper$46dart.src__utils__wrapper;
  const colors = packages__flutter_math_fork__src__parser__tex__colors$46dart.src__parser__tex__colors;
  const symbols_unicode = packages__flutter_math_fork__src__ast__symbols__symbols_unicode$46dart.src__ast__symbols__symbols_unicode;
  const unicode_accents = packages__flutter_math_fork__src__parser__tex__unicode_accents$46dart.src__parser__tex__unicode_accents;
  const unicode_scripts = packages__flutter_math_fork__src__font__metrics__unicode_scripts$46dart.src__font__metrics__unicode_scripts;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const vlist = packages__flutter_math_fork__src__render__layout__vlist$46dart.src__render__layout__vlist;
  const min_dimension = packages__flutter_math_fork__src__render__layout__min_dimension$46dart.src__render__layout__min_dimension;
  const layout_builder_baseline = packages__flutter_math_fork__src__render__layout__layout_builder_baseline$46dart.src__render__layout__layout_builder_baseline;
  const svg_geomertry = packages__flutter_math_fork__src__render__svg__svg_geomertry$46dart.src__render__svg__svg_geomertry;
  const reset_baseline = packages__flutter_math_fork__src__render__layout__reset_baseline$46dart.src__render__layout__reset_baseline;
  const svg_string = packages__flutter_math_fork__src__render__svg__svg_string$46dart.src__render__svg__svg_string;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const get_type_of = packages__flutter_math_fork__src__render__utils__get_type_of$46dart.src__render__utils__get_type_of;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const accents = packages__flutter_math_fork__src__ast__accents$46dart.src__ast__accents;
  const unicode_accents$ = packages__flutter_math_fork__src__ast__symbols__unicode_accents$46dart.src__ast__symbols__unicode_accents;
  const symbols_extra = packages__flutter_math_fork__src__ast__symbols__symbols_extra$46dart.src__ast__symbols__symbols_extra;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const text_selection$ = packages__flutter__src__cupertino__text_selection$46dart.src__cupertino__text_selection;
  const theme$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const text_selection$0 = packages__flutter__src__material__text_selection$46dart.src__material__text_selection;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const change_notifier_provider = packages__provider__src__listenable_provider$46dart.src__change_notifier_provider;
  const nested = packages__nested__nested$46dart.nested;
  const focus_manager$ = packages__flutter_math_fork__src__widgets__selection__focus_manager$46dart.src__widgets__selection__focus_manager;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const font_metrics = packages__flutter_math_fork__src__ast__font_metrics$46dart.src__ast__font_metrics;
  var web_selection_manager = Object.create(dart.library);
  var handle_overlay = Object.create(dart.library);
  var overlay$0 = Object.create(dart.library);
  var gesture_detector_builder_selectable = Object.create(dart.library);
  var gesture_detector_builder = Object.create(dart.library);
  var overlay_manager = Object.create(dart.library);
  var optimization$ = Object.create(dart.library);
  var matcher = Object.create(dart.library);
  var functions = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var encoder$ = Object.create(dart.library);
  var selection_manager = Object.create(dart.library);
  var cursor_timer_manager = Object.create(dart.library);
  var tex_break = Object.create(dart.library);
  var math$ = Object.create(dart.library);
  var controller = Object.create(dart.library);
  var katex_ext = Object.create(dart.library);
  var eqn_array = Object.create(dart.library);
  var equation_array = Object.create(dart.library);
  var eqn_array$ = Object.create(dart.library);
  var symbols_extra$ = Object.create(dart.library);
  var symbols = Object.create(dart.library);
  var namespace = Object.create(dart.library);
  var macro_expander = Object.create(dart.library);
  var parser$ = Object.create(dart.library);
  var matrix = Object.create(dart.library);
  var array = Object.create(dart.library);
  var define_environment = Object.create(dart.library);
  var under = Object.create(dart.library);
  var stretchy_op = Object.create(dart.library);
  var sqrt = Object.create(dart.library);
  var space = Object.create(dart.library);
  var raise_box = Object.create(dart.library);
  var phantom = Object.create(dart.library);
  var nary_op = Object.create(dart.library);
  var multiscripts = Object.create(dart.library);
  var multiscripts$ = Object.create(dart.library);
  var delimiter = Object.create(dart.library);
  var left_right = Object.create(dart.library);
  var spacing$ = Object.create(dart.library);
  var $function = Object.create(dart.library);
  var frac$ = Object.create(dart.library);
  var custom_layout = Object.create(dart.library);
  var enclosure = Object.create(dart.library);
  var accent_under = Object.create(dart.library);
  var font = Object.create(dart.library);
  var symbol$ = Object.create(dart.library);
  var style$ = Object.create(dart.library);
  var over = Object.create(dart.library);
  var make_composite = Object.create(dart.library);
  var symbols_composite = Object.create(dart.library);
  var symbols$ = Object.create(dart.library);
  var make_symbol = Object.create(dart.library);
  var stretchy = Object.create(dart.library);
  var $static = Object.create(dart.library);
  var reset_dimension = Object.create(dart.library);
  var accent$ = Object.create(dart.library);
  var katex_base = Object.create(dart.library);
  var functions$ = Object.create(dart.library);
  var macros = Object.create(dart.library);
  var settings = Object.create(dart.library);
  var lexer = Object.create(dart.library);
  var source_location = Object.create(dart.library);
  var token = Object.create(dart.library);
  var parse_error = Object.create(dart.library);
  var selectable = Object.create(dart.library);
  var line_editable = Object.create(dart.library);
  var constants = Object.create(dart.library);
  var line = Object.create(dart.library);
  var syntax_tree = Object.create(dart.library);
  var font_metrics_data = Object.create(dart.library);
  var style$0 = Object.create(dart.library);
  var size$ = Object.create(dart.library);
  var font_metrics$ = Object.create(dart.library);
  var options$ = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    DurationTovoid: () => (T$.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    intTobool: () => (T$.intTobool = dart.constFn(dart.fnType(core.bool, [core.int])))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    VoidToNvoid: () => (T$.VoidToNvoid = dart.constFn(dart.nullable(T$.VoidTovoid())))(),
    BuildContextAndTextSelectionHandleTypeAnddouble__ToWidget: () => (T$.BuildContextAndTextSelectionHandleTypeAnddouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, text_selection.TextSelectionHandleType, core.double, T$.VoidToNvoid()])))(),
    _LocationL: () => (T$._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    MathSelectionHandlePositionL: () => (T$.MathSelectionHandlePositionL = dart.constFn(dart.legacy(overlay$0.MathSelectionHandlePosition)))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    JSArrayOfOverlayEntry: () => (T$.JSArrayOfOverlayEntry = dart.constFn(_interceptors.JSArray$(overlay$.OverlayEntry)))(),
    TextSelectionTovoid: () => (T$.TextSelectionTovoid = dart.constFn(dart.fnType(dart.void, [text_editing.TextSelection])))(),
    JSArrayOfTextSelectionPoint: () => (T$.JSArrayOfTextSelectionPoint = dart.constFn(_interceptors.JSArray$(editable.TextSelectionPoint)))(),
    MatcherToint: () => (T$.MatcherToint = dart.constFn(dart.fnType(core.int, [matcher.Matcher])))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    GreenNodeToEncodeResult: () => (T$.GreenNodeToEncodeResult = dart.constFn(dart.fnType(encoder.EncodeResult, [syntax_tree.GreenNode])))(),
    MapEntryOfString$String: () => (T$.MapEntryOfString$String = dart.constFn(core.MapEntry$(core.String, core.String)))(),
    MapEntryOfString$StringTobool: () => (T$.MapEntryOfString$StringTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfString$String()])))(),
    MapEntryOfString$StringToString: () => (T$.MapEntryOfString$StringToString = dart.constFn(dart.fnType(core.String, [T$.MapEntryOfString$String()])))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToEncodeResult: () => (T$.StringNToEncodeResult = dart.constFn(dart.fnType(encoder.EncodeResult, [T$.StringN()])))(),
    MapEntryOfString$PartialFontOptions: () => (T$.MapEntryOfString$PartialFontOptions = dart.constFn(core.MapEntry$(core.String, options$.PartialFontOptions)))(),
    MapEntryOfString$PartialFontOptionsTobool: () => (T$.MapEntryOfString$PartialFontOptionsTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfString$PartialFontOptions()])))(),
    MapEntryOfString$FontOptions: () => (T$.MapEntryOfString$FontOptions = dart.constFn(core.MapEntry$(core.String, options$.FontOptions)))(),
    MapEntryOfString$FontOptionsTobool: () => (T$.MapEntryOfString$FontOptionsTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfString$FontOptions()])))(),
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    MapEntryOfString$TexSymbolConfig: () => (T$.MapEntryOfString$TexSymbolConfig = dart.constFn(core.MapEntry$(core.String, symbols.TexSymbolConfig)))(),
    JSArrayOfMapEntryOfString$TexSymbolConfig: () => (T$.JSArrayOfMapEntryOfString$TexSymbolConfig = dart.constFn(_interceptors.JSArray$(T$.MapEntryOfString$TexSymbolConfig())))(),
    MapEntryOfString$TexSymbolConfigTobool: () => (T$.MapEntryOfString$TexSymbolConfigTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfString$TexSymbolConfig()])))(),
    MapEntryOfString$TexSymbolConfigToint: () => (T$.MapEntryOfString$TexSymbolConfigToint = dart.constFn(dart.fnType(core.int, [T$.MapEntryOfString$TexSymbolConfig()])))(),
    TypeL: () => (T$.TypeL = dart.constFn(dart.legacy(core.Type)))(),
    EncodeResultL: () => (T$.EncodeResultL = dart.constFn(dart.legacy(encoder.EncodeResult)))(),
    GreenNodeL: () => (T$.GreenNodeL = dart.constFn(dart.legacy(syntax_tree.GreenNode)))(),
    GreenNodeLToEncodeResultL: () => (T$.GreenNodeLToEncodeResultL = dart.constFn(dart.fnType(T$.EncodeResultL(), [T$.GreenNodeL()])))(),
    GreenNodeLToLEncodeResultL: () => (T$.GreenNodeLToLEncodeResultL = dart.constFn(dart.legacy(T$.GreenNodeLToEncodeResultL())))(),
    ListOfOptimizationEntry: () => (T$.ListOfOptimizationEntry = dart.constFn(core.List$(optimization$.OptimizationEntry)))(),
    OptimizationEntryToint: () => (T$.OptimizationEntryToint = dart.constFn(dart.fnType(core.int, [optimization$.OptimizationEntry])))(),
    StyleNodeTobool: () => (T$.StyleNodeTobool = dart.constFn(dart.fnType(core.bool, [style$.StyleNode])))(),
    FracNodeTobool: () => (T$.FracNodeTobool = dart.constFn(dart.fnType(core.bool, [frac$.FracNode])))(),
    GreenNodeTovoid: () => (T$.GreenNodeTovoid = dart.constFn(dart.fnType(dart.void, [syntax_tree.GreenNode])))(),
    LeftRightNodeTobool: () => (T$.LeftRightNodeTobool = dart.constFn(dart.fnType(core.bool, [left_right.LeftRightNode])))(),
    JSArrayOfOptimizationEntry: () => (T$.JSArrayOfOptimizationEntry = dart.constFn(_interceptors.JSArray$(optimization$.OptimizationEntry)))(),
    GreenNodeToString: () => (T$.GreenNodeToString = dart.constFn(dart.fnType(core.String, [syntax_tree.GreenNode])))(),
    MultiscriptsNodeTobool: () => (T$.MultiscriptsNodeTobool = dart.constFn(dart.fnType(core.bool, [multiscripts$.MultiscriptsNode])))(),
    GreenNodeN: () => (T$.GreenNodeN = dart.constFn(dart.nullable(syntax_tree.GreenNode)))(),
    GreenNodeNToString: () => (T$.GreenNodeNToString = dart.constFn(dart.fnType(core.String, [T$.GreenNodeN()])))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    MathStyleL: () => (T$.MathStyleL = dart.constFn(dart.legacy(style$0.MathStyle)))(),
    MathSizeL: () => (T$.MathSizeL = dart.constFn(dart.legacy(size$.MathSize)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    IdentityMapOfString$ObjectN: () => (T$.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ObjectN())))(),
    ModeN: () => (T$.ModeN = dart.constFn(dart.nullable(types.Mode)))(),
    ListOfModeN: () => (T$.ListOfModeN = dart.constFn(core.List$(T$.ModeN())))(),
    IterableOfString: () => (T$.IterableOfString = dart.constFn(core.Iterable$(core.String)))(),
    intToString: () => (T$.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    dynamicToString: () => (T$.dynamicToString = dart.constFn(dart.fnType(core.String, [dart.dynamic])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    __ToString: () => (T$.__ToString = dart.constFn(dart.fnType(core.String, [], {conf: encoder$.TexEncodeConf}, {})))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    OptimizationEntryTobool: () => (T$.OptimizationEntryTobool = dart.constFn(dart.fnType(core.bool, [optimization$.OptimizationEntry])))(),
    ExpandoOfEncodeResult: () => (T$.ExpandoOfEncodeResult = dart.constFn(core.Expando$(encoder.EncodeResult)))(),
    ExtraSelectionChangedCauseL: () => (T$.ExtraSelectionChangedCauseL = dart.constFn(dart.legacy(selection_manager.ExtraSelectionChangedCause)))(),
    BreakResultOfSyntaxTree: () => (T$.BreakResultOfSyntaxTree = dart.constFn(tex_break.BreakResult$(syntax_tree.SyntaxTree)))(),
    EquationRowNodeToSyntaxTree: () => (T$.EquationRowNodeToSyntaxTree = dart.constFn(dart.fnType(syntax_tree.SyntaxTree, [syntax_tree.EquationRowNode])))(),
    __ToBreakResultOfSyntaxTree: () => (T$.__ToBreakResultOfSyntaxTree = dart.constFn(dart.fnType(T$.BreakResultOfSyntaxTree(), [], {binOpPenalty: core.int, enforceNoBreak: core.bool, relPenalty: core.int}, {})))(),
    JSArrayOfEquationRowNode: () => (T$.JSArrayOfEquationRowNode = dart.constFn(_interceptors.JSArray$(syntax_tree.EquationRowNode)))(),
    BreakResultOfEquationRowNode: () => (T$.BreakResultOfEquationRowNode = dart.constFn(tex_break.BreakResult$(syntax_tree.EquationRowNode)))(),
    __ToBreakResultOfEquationRowNode: () => (T$.__ToBreakResultOfEquationRowNode = dart.constFn(dart.fnType(T$.BreakResultOfEquationRowNode(), [], {binOpPenalty: core.int, enforceNoBreak: core.bool, relPenalty: core.int}, {})))(),
    FlutterMathExceptionToWidget: () => (T$.FlutterMathExceptionToWidget = dart.constFn(dart.fnType(framework.Widget, [exception$.FlutterMathException])))(),
    MacroDefinitionL: () => (T$.MacroDefinitionL = dart.constFn(dart.legacy(macros.MacroDefinition)))(),
    ProviderOfFlutterMathMode: () => (T$.ProviderOfFlutterMathMode = dart.constFn(provider.Provider$(mode$.FlutterMathMode)))(),
    BreakResultOfMath: () => (T$.BreakResultOfMath = dart.constFn(tex_break.BreakResult$(math$.Math)))(),
    JSArrayOfMath: () => (T$.JSArrayOfMath = dart.constFn(_interceptors.JSArray$(math$.Math)))(),
    SyntaxTreeToMath: () => (T$.SyntaxTreeToMath = dart.constFn(dart.fnType(math$.Math, [syntax_tree.SyntaxTree])))(),
    FunctionSpecOfGreenNodeL: () => (T$.FunctionSpecOfGreenNodeL = dart.constFn(functions$.FunctionSpec$(T$.GreenNodeL())))(),
    TexParserAndFunctionContextToGreenNode: () => (T$.TexParserAndFunctionContextToGreenNode = dart.constFn(dart.fnType(syntax_tree.GreenNode, [parser$.TexParser, functions$.FunctionContext])))(),
    ListOfStringL: () => (T$.ListOfStringL = dart.constFn(core.List$(T$.StringL())))(),
    ListLOfStringL: () => (T$.ListLOfStringL = dart.constFn(dart.legacy(T$.ListOfStringL())))(),
    FunctionSpecLOfGreenNodeL: () => (T$.FunctionSpecLOfGreenNodeL = dart.constFn(dart.legacy(T$.FunctionSpecOfGreenNodeL())))(),
    JSArrayOfdouble: () => (T$.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    JSArrayOfRenderBox: () => (T$.JSArrayOfRenderBox = dart.constFn(_interceptors.JSArray$(box.RenderBox)))(),
    RenderBoxTodouble: () => (T$.RenderBoxTodouble = dart.constFn(dart.fnType(core.double, [box.RenderBox])))(),
    JSArrayOfMatrixSeparatorStyle: () => (T$.JSArrayOfMatrixSeparatorStyle = dart.constFn(_interceptors.JSArray$(matrix.MatrixSeparatorStyle)))(),
    JSArrayOfMeasurement: () => (T$.JSArrayOfMeasurement = dart.constFn(_interceptors.JSArray$(size$.Measurement)))(),
    MeasurementTodouble: () => (T$.MeasurementTodouble = dart.constFn(dart.fnType(core.double, [size$.Measurement])))(),
    BuildResultN: () => (T$.BuildResultN = dart.constFn(dart.nullable(syntax_tree.BuildResult)))(),
    BuildResultNToWidget: () => (T$.BuildResultNToWidget = dart.constFn(dart.fnType(framework.Widget, [T$.BuildResultN()])))(),
    ListOfMathOptions: () => (T$.ListOfMathOptions = dart.constFn(core.List$(options$.MathOptions)))(),
    ListOfEquationRowNode: () => (T$.ListOfEquationRowNode = dart.constFn(core.List$(syntax_tree.EquationRowNode)))(),
    MapOfString$ObjectN: () => (T$.MapOfString$ObjectN = dart.constFn(core.Map$(core.String, T$.ObjectN())))(),
    EquationRowNodeToMapOfString$ObjectN: () => (T$.EquationRowNodeToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [syntax_tree.EquationRowNode])))(),
    MatrixSeparatorStyleToString: () => (T$.MatrixSeparatorStyleToString = dart.constFn(dart.fnType(core.String, [matrix.MatrixSeparatorStyle])))(),
    MeasurementToString: () => (T$.MeasurementToString = dart.constFn(dart.fnType(core.String, [size$.Measurement])))(),
    GreenNodeToint: () => (T$.GreenNodeToint = dart.constFn(dart.fnType(core.int, [syntax_tree.GreenNode])))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    intToint: () => (T$.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    JSArrayOfGreenNode: () => (T$.JSArrayOfGreenNode = dart.constFn(_interceptors.JSArray$(syntax_tree.GreenNode)))(),
    ListOfGreenNode: () => (T$.ListOfGreenNode = dart.constFn(core.List$(syntax_tree.GreenNode)))(),
    GreenNodeToListOfGreenNode: () => (T$.GreenNodeToListOfGreenNode = dart.constFn(dart.fnType(T$.ListOfGreenNode(), [syntax_tree.GreenNode])))(),
    JSArrayOfBuildResult: () => (T$.JSArrayOfBuildResult = dart.constFn(_interceptors.JSArray$(syntax_tree.BuildResult)))(),
    ListOfBuildResult: () => (T$.ListOfBuildResult = dart.constFn(core.List$(syntax_tree.BuildResult)))(),
    BuildResultNToListOfBuildResult: () => (T$.BuildResultNToListOfBuildResult = dart.constFn(dart.fnType(T$.ListOfBuildResult(), [T$.BuildResultN()])))(),
    BuildResultToMathOptions: () => (T$.BuildResultToMathOptions = dart.constFn(dart.fnType(options$.MathOptions, [syntax_tree.BuildResult])))(),
    ListOf_NodeSpacingConf: () => (T$.ListOf_NodeSpacingConf = dart.constFn(core.List$(syntax_tree._NodeSpacingConf)))(),
    intTo_NodeSpacingConf: () => (T$.intTo_NodeSpacingConf = dart.constFn(dart.fnType(syntax_tree._NodeSpacingConf, [core.int])))(),
    AtomTypeN: () => (T$.AtomTypeN = dart.constFn(dart.nullable(syntax_tree.AtomType)))(),
    _NodeSpacingConfN: () => (T$._NodeSpacingConfN = dart.constFn(dart.nullable(syntax_tree._NodeSpacingConf)))(),
    _NodeSpacingConfNAnd_NodeSpacingConfNTovoid: () => (T$._NodeSpacingConfNAnd_NodeSpacingConfNTovoid = dart.constFn(dart.fnType(dart.void, [T$._NodeSpacingConfN(), T$._NodeSpacingConfN()])))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    ListOfLineElement: () => (T$.ListOfLineElement = dart.constFn(core.List$(line.LineElement)))(),
    intToLineElement: () => (T$.intToLineElement = dart.constFn(dart.fnType(line.LineElement, [core.int])))(),
    ConsumerOfFlutterMathMode: () => (T$.ConsumerOfFlutterMathMode = dart.constFn(consumer.Consumer$(mode$.FlutterMathMode)))(),
    ProxyProviderOfTextSelection$TextSelection: () => (T$.ProxyProviderOfTextSelection$TextSelection = dart.constFn(proxy_provider.ProxyProvider$(text_editing.TextSelection, text_editing.TextSelection)))(),
    BuildContextToTextSelection: () => (T$.BuildContextToTextSelection = dart.constFn(dart.fnType(text_editing.TextSelection, [framework.BuildContext])))(),
    TextSelectionN: () => (T$.TextSelectionN = dart.constFn(dart.nullable(text_editing.TextSelection)))(),
    BuildContextAndTextSelectionAndTextSelectionNToTextSelection: () => (T$.BuildContextAndTextSelectionAndTextSelectionNToTextSelection = dart.constFn(dart.fnType(text_editing.TextSelection, [framework.BuildContext, text_editing.TextSelection, T$.TextSelectionN()])))(),
    Tuple2OfLayerLink$LayerLink: () => (T$.Tuple2OfLayerLink$LayerLink = dart.constFn(tuple.Tuple2$(layer.LayerLink, layer.LayerLink)))(),
    LayerLinkN: () => (T$.LayerLinkN = dart.constFn(dart.nullable(layer.LayerLink)))(),
    Tuple3OfTextSelection$LayerLinkN$LayerLinkN: () => (T$.Tuple3OfTextSelection$LayerLinkN$LayerLinkN = dart.constFn(tuple.Tuple3$(text_editing.TextSelection, T$.LayerLinkN(), T$.LayerLinkN())))(),
    Selector2OfTextSelection$Tuple2OfLayerLink$LayerLink$Tuple3OfTextSelection$LayerLinkN$LayerLinkN: () => (T$.Selector2OfTextSelection$Tuple2OfLayerLink$LayerLink$Tuple3OfTextSelection$LayerLinkN$LayerLinkN = dart.constFn(selector.Selector2$(text_editing.TextSelection, T$.Tuple2OfLayerLink$LayerLink(), T$.Tuple3OfTextSelection$LayerLinkN$LayerLinkN())))(),
    BuildContextAndTextSelectionAndTuple2OfLayerLink$LayerLinkToTuple3OfTextSelection$LayerLinkN$LayerLinkN: () => (T$.BuildContextAndTextSelectionAndTuple2OfLayerLink$LayerLinkToTuple3OfTextSelection$LayerLinkN$LayerLinkN = dart.constFn(dart.fnType(T$.Tuple3OfTextSelection$LayerLinkN$LayerLinkN(), [framework.BuildContext, text_editing.TextSelection, T$.Tuple2OfLayerLink$LayerLink()])))(),
    WrapperOfAnimationController: () => (T$.WrapperOfAnimationController = dart.constFn(wrapper.Wrapper$(animation_controller.AnimationController)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndTuple3OfTextSelection$LayerLinkN$LayerLinkNAndWidgetNToEditableLine: () => (T$.BuildContextAndTuple3OfTextSelection$LayerLinkN$LayerLinkNAndWidgetNToEditableLine = dart.constFn(dart.fnType(line_editable.EditableLine, [framework.BuildContext, T$.Tuple3OfTextSelection$LayerLinkN$LayerLinkN(), T$.WidgetN()])))(),
    BuildContextAndFlutterMathModeAndWidgetNToWidget: () => (T$.BuildContextAndFlutterMathModeAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, mode$.FlutterMathMode, T$.WidgetN()])))(),
    GreenNodeToMapOfString$ObjectN: () => (T$.GreenNodeToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [syntax_tree.GreenNode])))(),
    ListOfEquationRowNodeToEquationRowNode: () => (T$.ListOfEquationRowNodeToEquationRowNode = dart.constFn(dart.fnType(syntax_tree.EquationRowNode, [T$.ListOfEquationRowNode()])))(),
    EquationRowNodeToListOfGreenNode: () => (T$.EquationRowNodeToListOfGreenNode = dart.constFn(dart.fnType(T$.ListOfGreenNode(), [syntax_tree.EquationRowNode])))(),
    JSArrayOfListOfEquationRowNode: () => (T$.JSArrayOfListOfEquationRowNode = dart.constFn(_interceptors.JSArray$(T$.ListOfEquationRowNode())))(),
    TexParserAndEnvContextToGreenNode: () => (T$.TexParserAndEnvContextToGreenNode = dart.constFn(dart.fnType(syntax_tree.GreenNode, [parser$.TexParser, define_environment.EnvContext])))(),
    EnvSpecL: () => (T$.EnvSpecL = dart.constFn(dart.legacy(define_environment.EnvSpec)))(),
    TexSymbolConfigL: () => (T$.TexSymbolConfigL = dart.constFn(dart.legacy(symbols.TexSymbolConfig)))(),
    FontOptionsL: () => (T$.FontOptionsL = dart.constFn(dart.legacy(options$.FontOptions)))(),
    ModeL: () => (T$.ModeL = dart.constFn(dart.legacy(types.Mode)))(),
    MapOfStringL$TexSymbolConfigL: () => (T$.MapOfStringL$TexSymbolConfigL = dart.constFn(core.Map$(T$.StringL(), T$.TexSymbolConfigL())))(),
    MapLOfStringL$TexSymbolConfigL: () => (T$.MapLOfStringL$TexSymbolConfigL = dart.constFn(dart.legacy(T$.MapOfStringL$TexSymbolConfigL())))(),
    JSArrayOfToken: () => (T$.JSArrayOfToken = dart.constFn(_interceptors.JSArray$(token.Token)))(),
    NamespaceOfMacroDefinition: () => (T$.NamespaceOfMacroDefinition = dart.constFn(namespace.Namespace$(macros.MacroDefinition)))(),
    ListOfToken: () => (T$.ListOfToken = dart.constFn(core.List$(token.Token)))(),
    ListOfListOfToken: () => (T$.ListOfListOfToken = dart.constFn(core.List$(T$.ListOfToken())))(),
    intToListOfToken: () => (T$.intToListOfToken = dart.constFn(dart.fnType(T$.ListOfToken(), [core.int])))(),
    TokenToString: () => (T$.TokenToString = dart.constFn(dart.fnType(core.String, [token.Token])))(),
    ListQueueOfArgumentParsingContext: () => (T$.ListQueueOfArgumentParsingContext = dart.constFn(collection.ListQueue$(parser$.ArgumentParsingContext)))(),
    StringToSymbolNode: () => (T$.StringToSymbolNode = dart.constFn(dart.fnType(symbol$.SymbolNode, [core.String])))(),
    MatrixSeparatorStyleL: () => (T$.MatrixSeparatorStyleL = dart.constFn(dart.legacy(matrix.MatrixSeparatorStyle)))(),
    MatrixColumnAlignL: () => (T$.MatrixColumnAlignL = dart.constFn(dart.legacy(matrix.MatrixColumnAlign)))(),
    MatrixRowAlignL: () => (T$.MatrixRowAlignL = dart.constFn(dart.legacy(matrix.MatrixRowAlign)))(),
    EquationRowNodeN: () => (T$.EquationRowNodeN = dart.constFn(dart.nullable(syntax_tree.EquationRowNode)))(),
    ListOfEquationRowNodeN: () => (T$.ListOfEquationRowNodeN = dart.constFn(core.List$(T$.EquationRowNodeN())))(),
    ListOfEquationRowNodeNTobool: () => (T$.ListOfEquationRowNodeNTobool = dart.constFn(dart.fnType(core.bool, [T$.ListOfEquationRowNodeN()])))(),
    MeasurementL: () => (T$.MeasurementL = dart.constFn(dart.legacy(size$.Measurement)))(),
    ListOfEquationRowNodeNToint: () => (T$.ListOfEquationRowNodeNToint = dart.constFn(dart.fnType(core.int, [T$.ListOfEquationRowNodeN()])))(),
    ListOfEquationRowNodeNToListOfEquationRowNodeN: () => (T$.ListOfEquationRowNodeNToListOfEquationRowNodeN = dart.constFn(dart.fnType(T$.ListOfEquationRowNodeN(), [T$.ListOfEquationRowNodeN()])))(),
    CustomLayoutOfint: () => (T$.CustomLayoutOfint = dart.constFn(custom_layout.CustomLayout$(core.int)))(),
    CustomLayoutIdOfint: () => (T$.CustomLayoutIdOfint = dart.constFn(custom_layout.CustomLayoutId$(core.int)))(),
    CustomLayoutIdNOfint: () => (T$.CustomLayoutIdNOfint = dart.constFn(dart.nullable(T$.CustomLayoutIdOfint())))(),
    intAndBuildResultNToCustomLayoutIdNOfint: () => (T$.intAndBuildResultNToCustomLayoutIdNOfint = dart.constFn(dart.fnType(T$.CustomLayoutIdNOfint(), [core.int, T$.BuildResultN()])))(),
    ListOfListOfEquationRowNode: () => (T$.ListOfListOfEquationRowNode = dart.constFn(core.List$(T$.ListOfEquationRowNode())))(),
    intToListOfEquationRowNode: () => (T$.intToListOfEquationRowNode = dart.constFn(dart.fnType(T$.ListOfEquationRowNode(), [core.int])))(),
    MatrixColumnAlignToString: () => (T$.MatrixColumnAlignToString = dart.constFn(dart.fnType(core.String, [matrix.MatrixColumnAlign])))(),
    MeasurementTobool: () => (T$.MeasurementTobool = dart.constFn(dart.fnType(core.bool, [size$.Measurement])))(),
    MatrixSeparatorStyleTobool: () => (T$.MatrixSeparatorStyleTobool = dart.constFn(dart.fnType(core.bool, [matrix.MatrixSeparatorStyle])))(),
    MapNOfString$ObjectN: () => (T$.MapNOfString$ObjectN = dart.constFn(dart.nullable(T$.MapOfString$ObjectN())))(),
    IterableOfMapNOfString$ObjectN: () => (T$.IterableOfMapNOfString$ObjectN = dart.constFn(core.Iterable$(T$.MapNOfString$ObjectN())))(),
    EquationRowNodeNToMapNOfString$ObjectN: () => (T$.EquationRowNodeNToMapNOfString$ObjectN = dart.constFn(dart.fnType(T$.MapNOfString$ObjectN(), [T$.EquationRowNodeN()])))(),
    ListOfEquationRowNodeNToIterableOfMapNOfString$ObjectN: () => (T$.ListOfEquationRowNodeNToIterableOfMapNOfString$ObjectN = dart.constFn(dart.fnType(T$.IterableOfMapNOfString$ObjectN(), [T$.ListOfEquationRowNodeN()])))(),
    ListOfdouble: () => (T$.ListOfdouble = dart.constFn(core.List$(core.double)))(),
    MapOfint$RenderBox: () => (T$.MapOfint$RenderBox = dart.constFn(core.Map$(core.int, box.RenderBox)))(),
    MapOfint$double: () => (T$.MapOfint$double = dart.constFn(core.Map$(core.int, core.double)))(),
    intTodouble: () => (T$.intTodouble = dart.constFn(dart.fnType(core.double, [core.int])))(),
    AxisConfigurationOfint: () => (T$.AxisConfigurationOfint = dart.constFn(custom_layout.AxisConfiguration$(core.int)))(),
    ColSeparationTypeL: () => (T$.ColSeparationTypeL = dart.constFn(dart.legacy(array.ColSeparationType)))(),
    JSArrayOfSymbolNode: () => (T$.JSArrayOfSymbolNode = dart.constFn(_interceptors.JSArray$(symbol$.SymbolNode)))(),
    JSArrayOfMatrixColumnAlign: () => (T$.JSArrayOfMatrixColumnAlign = dart.constFn(_interceptors.JSArray$(matrix.MatrixColumnAlign)))(),
    ListNOfStringL: () => (T$.ListNOfStringL = dart.constFn(dart.nullable(T$.ListOfStringL())))(),
    JSArrayOfMatrixNode: () => (T$.JSArrayOfMatrixNode = dart.constFn(_interceptors.JSArray$(matrix.MatrixNode)))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringAndEnvSpecTovoid: () => (T$.ListOfStringAndEnvSpecTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfString(), define_environment.EnvSpec])))(),
    IdentityMapOfString$EnvSpec: () => (T$.IdentityMapOfString$EnvSpec = dart.constFn(_js_helper.IdentityMap$(core.String, define_environment.EnvSpec)))(),
    LinkedMapOfListOfString$EnvSpec: () => (T$.LinkedMapOfListOfString$EnvSpec = dart.constFn(_js_helper.LinkedMap$(T$.ListOfString(), define_environment.EnvSpec)))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    JSArrayOfMathOptions: () => (T$.JSArrayOfMathOptions = dart.constFn(_interceptors.JSArray$(options$.MathOptions)))(),
    doubleToBoxConstraints: () => (T$.doubleToBoxConstraints = dart.constFn(dart.fnType(box.BoxConstraints, [core.double])))(),
    BuildContextAndBoxConstraintsToShiftBaseline: () => (T$.BuildContextAndBoxConstraintsToShiftBaseline = dart.constFn(dart.fnType(shift_baseline.ShiftBaseline, [framework.BuildContext, box.BoxConstraints])))(),
    JSArrayOfEquationRowNodeN: () => (T$.JSArrayOfEquationRowNodeN = dart.constFn(_interceptors.JSArray$(T$.EquationRowNodeN())))(),
    CustomLayoutOf_SqrtPos: () => (T$.CustomLayoutOf_SqrtPos = dart.constFn(custom_layout.CustomLayout$(sqrt._SqrtPos)))(),
    CustomLayoutIdOf_SqrtPos: () => (T$.CustomLayoutIdOf_SqrtPos = dart.constFn(custom_layout.CustomLayoutId$(sqrt._SqrtPos)))(),
    BuildContextAndBoxConstraintsToWidget: () => (T$.BuildContextAndBoxConstraintsToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, box.BoxConstraints])))(),
    _SqrtPosL: () => (T$._SqrtPosL = dart.constFn(dart.legacy(sqrt._SqrtPos)))(),
    MapOf_SqrtPos$RenderBox: () => (T$.MapOf_SqrtPos$RenderBox = dart.constFn(core.Map$(sqrt._SqrtPos, box.RenderBox)))(),
    DelimiterConfTobool: () => (T$.DelimiterConfTobool = dart.constFn(dart.fnType(core.bool, [delimiter.DelimiterConf])))(),
    doubleL: () => (T$.doubleL = dart.constFn(dart.legacy(core.double)))(),
    DelimiterConfL: () => (T$.DelimiterConfL = dart.constFn(dart.legacy(delimiter.DelimiterConf)))(),
    MathOptionsL: () => (T$.MathOptionsL = dart.constFn(dart.legacy(options$.MathOptions)))(),
    intL: () => (T$.intL = dart.constFn(dart.legacy(core.int)))(),
    _ScriptPosL: () => (T$._ScriptPosL = dart.constFn(dart.legacy(multiscripts._ScriptPos)))(),
    CustomLayoutOf_ScriptPos: () => (T$.CustomLayoutOf_ScriptPos = dart.constFn(custom_layout.CustomLayout$(multiscripts._ScriptPos)))(),
    CustomLayoutIdOf_ScriptPos: () => (T$.CustomLayoutIdOf_ScriptPos = dart.constFn(custom_layout.CustomLayoutId$(multiscripts._ScriptPos)))(),
    MapOf_ScriptPos$RenderBox: () => (T$.MapOf_ScriptPos$RenderBox = dart.constFn(core.Map$(multiscripts._ScriptPos, box.RenderBox)))(),
    MapOf_ScriptPos$double: () => (T$.MapOf_ScriptPos$double = dart.constFn(core.Map$(multiscripts._ScriptPos, core.double)))(),
    AxisConfigurationOf_ScriptPos: () => (T$.AxisConfigurationOf_ScriptPos = dart.constFn(custom_layout.AxisConfiguration$(multiscripts._ScriptPos)))(),
    LinkedMapOf_ScriptPos$double: () => (T$.LinkedMapOf_ScriptPos$double = dart.constFn(_js_helper.LinkedMap$(multiscripts._ScriptPos, core.double)))(),
    Tuple2Ofdouble$double: () => (T$.Tuple2Ofdouble$double = dart.constFn(tuple.Tuple2$(core.double, core.double)))(),
    doubleAnddoubleToBoxConstraints: () => (T$.doubleAnddoubleToBoxConstraints = dart.constFn(dart.fnType(box.BoxConstraints, [core.double, core.double])))(),
    StackDelimiterConfL: () => (T$.StackDelimiterConfL = dart.constFn(dart.legacy(left_right.StackDelimiterConf)))(),
    AtomTypeL: () => (T$.AtomTypeL = dart.constFn(dart.legacy(syntax_tree.AtomType)))(),
    MapOfAtomTypeL$MeasurementL: () => (T$.MapOfAtomTypeL$MeasurementL = dart.constFn(core.Map$(T$.AtomTypeL(), T$.MeasurementL())))(),
    MapLOfAtomTypeL$MeasurementL: () => (T$.MapLOfAtomTypeL$MeasurementL = dart.constFn(dart.legacy(T$.MapOfAtomTypeL$MeasurementL())))(),
    CustomLayoutOf_FracPos: () => (T$.CustomLayoutOf_FracPos = dart.constFn(custom_layout.CustomLayout$(frac$._FracPos)))(),
    CustomLayoutIdOf_FracPos: () => (T$.CustomLayoutIdOf_FracPos = dart.constFn(custom_layout.CustomLayoutId$(frac$._FracPos)))(),
    _FracPosL: () => (T$._FracPosL = dart.constFn(dart.legacy(frac$._FracPos)))(),
    MapOf_FracPos$RenderBox: () => (T$.MapOf_FracPos$RenderBox = dart.constFn(core.Map$(frac$._FracPos, box.RenderBox)))(),
    MapOf_FracPos$double: () => (T$.MapOf_FracPos$double = dart.constFn(core.Map$(frac$._FracPos, core.double)))(),
    AxisConfigurationOf_FracPos: () => (T$.AxisConfigurationOf_FracPos = dart.constFn(custom_layout.AxisConfiguration$(frac$._FracPos)))(),
    LinkedMapOf_FracPos$double: () => (T$.LinkedMapOf_FracPos$double = dart.constFn(_js_helper.LinkedMap$(frac$._FracPos, core.double)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    RenderBoxAnddoubleTodouble: () => (T$.RenderBoxAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [box.RenderBox, core.double])))(),
    BuildContextAndBoxConstraintsToCustomPaint: () => (T$.BuildContextAndBoxConstraintsToCustomPaint = dart.constFn(dart.fnType(basic.CustomPaint, [framework.BuildContext, box.BoxConstraints])))(),
    PartialFontOptionsL: () => (T$.PartialFontOptionsL = dart.constFn(dart.legacy(options$.PartialFontOptions)))(),
    intToListOfString: () => (T$.intToListOfString = dart.constFn(dart.fnType(T$.ListOfString(), [core.int])))(),
    IdentityMapOfString$Measurement: () => (T$.IdentityMapOfString$Measurement = dart.constFn(_js_helper.IdentityMap$(core.String, size$.Measurement)))(),
    IdentityMapOfString$AtomType: () => (T$.IdentityMapOfString$AtomType = dart.constFn(_js_helper.IdentityMap$(core.String, syntax_tree.AtomType)))(),
    SymbolRenderConfigL: () => (T$.SymbolRenderConfigL = dart.constFn(dart.legacy(symbols$.SymbolRenderConfig)))(),
    StringToWidget: () => (T$.StringToWidget = dart.constFn(dart.fnType(framework.Widget, [core.String])))(),
    LinkedHashSetOfString: () => (T$.LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))(),
    JSArrayOfAlignment: () => (T$.JSArrayOfAlignment = dart.constFn(_interceptors.JSArray$(alignment.Alignment)))(),
    AlignmentL: () => (T$.AlignmentL = dart.constFn(dart.legacy(alignment.Alignment)))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToWidget: () => (T$.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    _KatexImagesDataL: () => (T$._KatexImagesDataL = dart.constFn(dart.legacy(stretchy._KatexImagesData)))(),
    ListOfdoubleL: () => (T$.ListOfdoubleL = dart.constFn(core.List$(T$.doubleL())))(),
    ListLOfdoubleL: () => (T$.ListLOfdoubleL = dart.constFn(dart.legacy(T$.ListOfdoubleL())))(),
    BuildContextAndBoxConstraintsToResetDimension: () => (T$.BuildContextAndBoxConstraintsToResetDimension = dart.constFn(dart.fnType(reset_dimension.ResetDimension, [framework.BuildContext, box.BoxConstraints])))(),
    TexSymbolConfigTobool: () => (T$.TexSymbolConfigTobool = dart.constFn(dart.fnType(core.bool, [symbols.TexSymbolConfig])))(),
    JSArrayOfListOfGreenNode: () => (T$.JSArrayOfListOfGreenNode = dart.constFn(_interceptors.JSArray$(T$.ListOfGreenNode())))(),
    JSArrayOfStringN: () => (T$.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T$.StringN())))(),
    ListOfGreenNodeToEquationRowNode: () => (T$.ListOfGreenNodeToEquationRowNode = dart.constFn(dart.fnType(syntax_tree.EquationRowNode, [T$.ListOfGreenNode()])))(),
    GreenNodeNTobool: () => (T$.GreenNodeNTobool = dart.constFn(dart.fnType(core.bool, [T$.GreenNodeN()])))(),
    StringToTexSymbolConfig: () => (T$.StringToTexSymbolConfig = dart.constFn(dart.fnType(symbols.TexSymbolConfig, [core.String])))(),
    FunctionSpecOfGreenNode: () => (T$.FunctionSpecOfGreenNode = dart.constFn(functions$.FunctionSpec$(syntax_tree.GreenNode)))(),
    ListOfStringAndFunctionSpecOfGreenNodeTovoid: () => (T$.ListOfStringAndFunctionSpecOfGreenNodeTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfString(), T$.FunctionSpecOfGreenNode()])))(),
    MapOfListOfString$FunctionSpecOfGreenNode: () => (T$.MapOfListOfString$FunctionSpecOfGreenNode = dart.constFn(core.Map$(T$.ListOfString(), T$.FunctionSpecOfGreenNode())))(),
    MapOfListOfString$FunctionSpecOfGreenNodeTovoid: () => (T$.MapOfListOfString$FunctionSpecOfGreenNodeTovoid = dart.constFn(dart.fnType(dart.void, [T$.MapOfListOfString$FunctionSpecOfGreenNode()])))(),
    IdentityMapOfString$FunctionSpecOfGreenNode: () => (T$.IdentityMapOfString$FunctionSpecOfGreenNode = dart.constFn(_js_helper.IdentityMap$(core.String, T$.FunctionSpecOfGreenNode())))(),
    MacroContextToMacroExpansion: () => (T$.MacroContextToMacroExpansion = dart.constFn(dart.fnType(macros.MacroExpansion, [macro_expander.MacroContext])))(),
    MacroContextToString: () => (T$.MacroContextToString = dart.constFn(dart.fnType(core.String, [macro_expander.MacroContext])))(),
    IdentityMapOfString$MacroDefinition: () => (T$.IdentityMapOfString$MacroDefinition = dart.constFn(_js_helper.IdentityMap$(core.String, macros.MacroDefinition)))(),
    StrictL: () => (T$.StrictL = dart.constFn(dart.legacy(settings.Strict)))(),
    IdentityMapOfString$int: () => (T$.IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    ChangeNotifierProviderOfMathController: () => (T$.ChangeNotifierProviderOfMathController = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(controller.MathController)))(),
    ProxyProviderOfMathController$TextSelection: () => (T$.ProxyProviderOfMathController$TextSelection = dart.constFn(proxy_provider.ProxyProvider$(controller.MathController, text_editing.TextSelection)))(),
    BuildContextAndMathControllerAndTextSelectionNToTextSelection: () => (T$.BuildContextAndMathControllerAndTextSelectionNToTextSelection = dart.constFn(dart.fnType(text_editing.TextSelection, [framework.BuildContext, controller.MathController, T$.TextSelectionN()])))(),
    ProviderOfSelectionStyle: () => (T$.ProviderOfSelectionStyle = dart.constFn(provider.Provider$(selectable.SelectionStyle)))(),
    ProviderOfTuple2OfLayerLink$LayerLink: () => (T$.ProviderOfTuple2OfLayerLink$LayerLink = dart.constFn(provider.Provider$(T$.Tuple2OfLayerLink$LayerLink())))(),
    ProviderOfWrapperOfAnimationController: () => (T$.ProviderOfWrapperOfAnimationController = dart.constFn(provider.Provider$(T$.WrapperOfAnimationController())))(),
    JSArrayOfSingleChildWidget: () => (T$.JSArrayOfSingleChildWidget = dart.constFn(_interceptors.JSArray$(nested.SingleChildWidget)))(),
    WidgetL: () => (T$.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    EnumPropertyOfTextBaseline: () => (T$.EnumPropertyOfTextBaseline = dart.constFn(diagnostics.EnumProperty$(ui.TextBaseline)))(),
    EnumPropertyOfCrossAxisAlignment: () => (T$.EnumPropertyOfCrossAxisAlignment = dart.constFn(diagnostics.EnumProperty$(flex.CrossAxisAlignment)))(),
    EnumPropertyOfTextDirection: () => (T$.EnumPropertyOfTextDirection = dart.constFn(diagnostics.EnumProperty$(ui.TextDirection)))(),
    PaintingContextAndOffsetTovoid: () => (T$.PaintingContextAndOffsetTovoid = dart.constFn(dart.fnType(dart.void, [object.PaintingContext, ui.Offset])))(),
    SyntaxNodeN: () => (T$.SyntaxNodeN = dart.constFn(dart.nullable(syntax_tree.SyntaxNode)))(),
    SyntaxNodeNToGreenNodeN: () => (T$.SyntaxNodeNToGreenNodeN = dart.constFn(dart.fnType(T$.GreenNodeN(), [T$.SyntaxNodeN()])))(),
    JSArrayOfSyntaxNode: () => (T$.JSArrayOfSyntaxNode = dart.constFn(_interceptors.JSArray$(syntax_tree.SyntaxNode)))(),
    SyntaxNodeNTobool: () => (T$.SyntaxNodeNTobool = dart.constFn(dart.fnType(core.bool, [T$.SyntaxNodeN()])))(),
    ListOfSyntaxNodeN: () => (T$.ListOfSyntaxNodeN = dart.constFn(core.List$(T$.SyntaxNodeN())))(),
    intToSyntaxNodeN: () => (T$.intToSyntaxNodeN = dart.constFn(dart.fnType(T$.SyntaxNodeN(), [core.int])))(),
    PositionDependentMixinOfGreenNode: () => (T$.PositionDependentMixinOfGreenNode = dart.constFn(syntax_tree.PositionDependentMixin$(syntax_tree.GreenNode)))(),
    ListOfBuildResultN: () => (T$.ListOfBuildResultN = dart.constFn(core.List$(T$.BuildResultN())))(),
    intToBuildResultN: () => (T$.intToBuildResultN = dart.constFn(dart.fnType(T$.BuildResultN(), [core.int])))(),
    VoidToEquationRowNode: () => (T$.VoidToEquationRowNode = dart.constFn(dart.fnType(syntax_tree.EquationRowNode, [])))(),
    VoidToListOfGreenNode: () => (T$.VoidToListOfGreenNode = dart.constFn(dart.fnType(T$.ListOfGreenNode(), [])))(),
    VoidToGreenNode: () => (T$.VoidToGreenNode = dart.constFn(dart.fnType(syntax_tree.GreenNode, [])))(),
    CharacterMetricsL: () => (T$.CharacterMetricsL = dart.constFn(dart.legacy(font_metrics$.CharacterMetrics)))(),
    MapOfintL$CharacterMetricsL: () => (T$.MapOfintL$CharacterMetricsL = dart.constFn(core.Map$(T$.intL(), T$.CharacterMetricsL())))(),
    MapLOfintL$CharacterMetricsL: () => (T$.MapLOfintL$CharacterMetricsL = dart.constFn(dart.legacy(T$.MapOfintL$CharacterMetricsL())))(),
    MathStyleDiffL: () => (T$.MathStyleDiffL = dart.constFn(dart.legacy(style$0.MathStyleDiff)))(),
    MathStyleDiffN: () => (T$.MathStyleDiffN = dart.constFn(dart.nullable(style$0.MathStyleDiff)))(),
    MathStyleDiffNToMathStyle: () => (T$.MathStyleDiffNToMathStyle = dart.constFn(dart.fnType(style$0.MathStyle, [T$.MathStyleDiffN()])))(),
    VoidToMathStyle: () => (T$.VoidToMathStyle = dart.constFn(dart.fnType(style$0.MathStyle, [])))(),
    MathStyleToMathSize: () => (T$.MathStyleToMathSize = dart.constFn(dart.fnType(size$.MathSize, [style$0.MathStyle])))(),
    ListOfintL: () => (T$.ListOfintL = dart.constFn(core.List$(T$.intL())))(),
    ListLOfintL: () => (T$.ListLOfintL = dart.constFn(dart.legacy(T$.ListOfintL())))(),
    UnitL: () => (T$.UnitL = dart.constFn(dart.legacy(size$.Unit)))(),
    UnitN: () => (T$.UnitN = dart.constFn(dart.nullable(size$.Unit)))(),
    VoidToUnitN: () => (T$.VoidToUnitN = dart.constFn(dart.fnType(T$.UnitN(), [])))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    MapEntryOfString$double: () => (T$.MapEntryOfString$double = dart.constFn(core.MapEntry$(core.String, core.double)))(),
    StringAndListOfdoubleToMapEntryOfString$double: () => (T$.StringAndListOfdoubleToMapEntryOfString$double = dart.constFn(dart.fnType(T$.MapEntryOfString$double(), [core.String, T$.ListOfdouble()])))()
  };
  var S = {
    __WebSelectionControlsManagerMixin__oldFocusNode: dart.privateName(web_selection_manager, "_#WebSelectionControlsManagerMixin#_oldFocusNode"),
    __WebSelectionControlsManagerMixin__oldFocusNode_isSet: dart.privateName(web_selection_manager, "_#WebSelectionControlsManagerMixin#_oldFocusNode#isSet"),
    _textInputConnection: dart.privateName(web_selection_manager, "_textInputConnection"),
    __WebSelectionControlsManagerMixin__oldController: dart.privateName(web_selection_manager, "_#WebSelectionControlsManagerMixin#_oldController"),
    __WebSelectionControlsManagerMixin__oldController_isSet: dart.privateName(web_selection_manager, "_#WebSelectionControlsManagerMixin#_oldController#isSet"),
    _oldFocusNode: dart.privateName(web_selection_manager, "_oldFocusNode"),
    _oldController: dart.privateName(web_selection_manager, "_oldController"),
    _handleFocusChange: dart.privateName(web_selection_manager, "_handleFocusChange"),
    _handleControllerChange: dart.privateName(web_selection_manager, "_handleControllerChange"),
    _closeInputConnectionIfNeeded: dart.privateName(web_selection_manager, "_closeInputConnectionIfNeeded"),
    _openInputConnection: dart.privateName(web_selection_manager, "_openInputConnection"),
    _hasInputConnection: dart.privateName(web_selection_manager, "_hasInputConnection"),
    _updateSizeAndTransform: dart.privateName(web_selection_manager, "_updateSizeAndTransform"),
    __SelectionManagerMixin__oldFocusNode: dart.privateName(selection_manager, "_#SelectionManagerMixin#_oldFocusNode"),
    __SelectionManagerMixin__oldFocusNode_isSet: dart.privateName(selection_manager, "_#SelectionManagerMixin#_oldFocusNode#isSet"),
    __SelectionManagerMixin__oldController: dart.privateName(selection_manager, "_#SelectionManagerMixin#_oldController"),
    __SelectionManagerMixin__oldController_isSet: dart.privateName(selection_manager, "_#SelectionManagerMixin#_oldController#isSet"),
    _oldAst: dart.privateName(selection_manager, "_oldAst"),
    _oldSelection: dart.privateName(selection_manager, "_oldSelection"),
    _oldFocusNode$1: dart.privateName(selection_manager, "_oldFocusNode"),
    _oldController$1: dart.privateName(selection_manager, "_oldController"),
    _handleFocusChange$1: dart.privateName(selection_manager, "_handleFocusChange"),
    _onControllerChanged: dart.privateName(selection_manager, "_onControllerChanged"),
    $clamp: dartx.clamp,
    $_get: dartx._get,
    $indexWhere: dartx.indexWhere,
    $length: dartx.length,
    manager: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.manager"),
    selection: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.selection"),
    position: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.position"),
    startHandleLayerLink: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.startHandleLayerLink"),
    endHandleLayerLink: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.endHandleLayerLink"),
    onSelectionHandleChanged: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.onSelectionHandleChanged"),
    onSelectionHandleTapped: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.onSelectionHandleTapped"),
    selectionControls: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.selectionControls"),
    dragStartBehavior: dart.privateName(handle_overlay, "MathSelectionHandleOverlay.dragStartBehavior"),
    _name: dart.privateName(recognizer, "_name"),
    ___MathSelectionHandleOverlayState__dragPosition: dart.privateName(handle_overlay, "_#_MathSelectionHandleOverlayState#_dragPosition"),
    ___MathSelectionHandleOverlayState__dragPosition_isSet: dart.privateName(handle_overlay, "_#_MathSelectionHandleOverlayState#_dragPosition#isSet"),
    ___MathSelectionHandleOverlayState__controller: dart.privateName(handle_overlay, "_#_MathSelectionHandleOverlayState#_controller"),
    ___MathSelectionHandleOverlayState__controller_isSet: dart.privateName(handle_overlay, "_#_MathSelectionHandleOverlayState#_controller#isSet"),
    _dragPosition: dart.privateName(handle_overlay, "_dragPosition"),
    _controller: dart.privateName(handle_overlay, "_controller"),
    _opacity: dart.privateName(handle_overlay, "_opacity"),
    _handleDragStart: dart.privateName(handle_overlay, "_handleDragStart"),
    _name$1: dart.privateName(overlay$0, "_name"),
    _handleDragUpdate: dart.privateName(handle_overlay, "_handleDragUpdate"),
    _handleTap: dart.privateName(handle_overlay, "_handleTap"),
    _chooseType: dart.privateName(handle_overlay, "_chooseType"),
    _Location_parameterLocations: dart.privateName(widget_inspector, "_Location.parameterLocations"),
    _Location_name: dart.privateName(widget_inspector, "_Location.name"),
    _Location_column: dart.privateName(widget_inspector, "_Location.column"),
    _Location_line: dart.privateName(widget_inspector, "_Location.line"),
    _Location_file: dart.privateName(widget_inspector, "_Location.file"),
    _name$2: dart.privateName(ui, "_name"),
    debugRequiredFor: dart.privateName(overlay$0, "MathSelectionOverlay.debugRequiredFor"),
    toolbarLayerLink: dart.privateName(overlay$0, "MathSelectionOverlay.toolbarLayerLink"),
    startHandleLayerLink$1: dart.privateName(overlay$0, "MathSelectionOverlay.startHandleLayerLink"),
    endHandleLayerLink$1: dart.privateName(overlay$0, "MathSelectionOverlay.endHandleLayerLink"),
    selectionControls$1: dart.privateName(overlay$0, "MathSelectionOverlay.selectionControls"),
    manager$1: dart.privateName(overlay$0, "MathSelectionOverlay.manager"),
    dragStartBehavior$1: dart.privateName(overlay$0, "MathSelectionOverlay.dragStartBehavior"),
    onSelectionHandleTapped$1: dart.privateName(overlay$0, "MathSelectionOverlay.onSelectionHandleTapped"),
    clipboardStatus: dart.privateName(overlay$0, "MathSelectionOverlay.clipboardStatus"),
    __MathSelectionOverlay__toolbarController: dart.privateName(overlay$0, "_#MathSelectionOverlay#_toolbarController"),
    __MathSelectionOverlay__toolbarController_isSet: dart.privateName(overlay$0, "_#MathSelectionOverlay#_toolbarController#isSet"),
    _value: dart.privateName(overlay$0, "_value"),
    _handles: dart.privateName(overlay$0, "_handles"),
    _toolbar: dart.privateName(overlay$0, "_toolbar"),
    _handlesVisible: dart.privateName(overlay$0, "_handlesVisible"),
    _toolbarController: dart.privateName(overlay$0, "_toolbarController"),
    _toolbarOpacity: dart.privateName(overlay$0, "_toolbarOpacity"),
    _selection: dart.privateName(overlay$0, "_selection"),
    _markNeedsBuild: dart.privateName(overlay$0, "_markNeedsBuild"),
    _buildHandle: dart.privateName(overlay$0, "_buildHandle"),
    _buildToolbar: dart.privateName(overlay$0, "_buildToolbar"),
    _handleSelectionHandleChanged: dart.privateName(overlay$0, "_handleSelectionHandleChanged"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    _name$3: dart.privateName(platform, "_name"),
    delegate: dart.privateName(gesture_detector_builder, "MathSelectionGestureDetectorBuilder.delegate"),
    lastTapDownPosition: dart.privateName(gesture_detector_builder, "MathSelectionGestureDetectorBuilder.lastTapDownPosition"),
    _shouldShowSelectionToolbar: dart.privateName(gesture_detector_builder, "_shouldShowSelectionToolbar"),
    toolbarLayerLink$1: dart.privateName(overlay_manager, "SelectionOverlayManagerMixin.toolbarLayerLink"),
    startHandleLayerLink$2: dart.privateName(overlay_manager, "SelectionOverlayManagerMixin.startHandleLayerLink"),
    endHandleLayerLink$2: dart.privateName(overlay_manager, "SelectionOverlayManagerMixin.endHandleLayerLink"),
    toolbarVisible: dart.privateName(overlay_manager, "SelectionOverlayManagerMixin.toolbarVisible"),
    _selectionOverlay: dart.privateName(overlay_manager, "_selectionOverlay"),
    __SelectionOverlayManagerMixin__selectionGestureDetectorBuilder: dart.privateName(overlay_manager, "_#SelectionOverlayManagerMixin#_selectionGestureDetectorBuilder"),
    __SelectionOverlayManagerMixin__selectionGestureDetectorBuilder_isSet: dart.privateName(overlay_manager, "_#SelectionOverlayManagerMixin#_selectionGestureDetectorBuilder#isSet"),
    _selectionGestureDetectorBuilder: dart.privateName(overlay_manager, "_selectionGestureDetectorBuilder"),
    _shouldShowSelectionHandles: dart.privateName(overlay_manager, "_shouldShowSelectionHandles"),
    matcher: dart.privateName(optimization$, "OptimizationEntry.matcher"),
    optimize: dart.privateName(optimization$, "OptimizationEntry.optimize"),
    _priority: dart.privateName(optimization$, "OptimizationEntry._priority"),
    _priority$1: dart.privateName(optimization$, "_priority"),
    matcher1: dart.privateName(matcher, "OrMatcher.matcher1"),
    matcher2: dart.privateName(matcher, "OrMatcher.matcher2"),
    matchSelf: dart.privateName(matcher, "NodeMatcher.matchSelf"),
    selfSpecificity: dart.privateName(matcher, "NodeMatcher.selfSpecificity"),
    child: dart.privateName(matcher, "NodeMatcher.child"),
    children: dart.privateName(matcher, "NodeMatcher.children"),
    firstChild: dart.privateName(matcher, "NodeMatcher.firstChild"),
    lastChild: dart.privateName(matcher, "NodeMatcher.lastChild"),
    everyChild: dart.privateName(matcher, "NodeMatcher.everyChild"),
    anyChild: dart.privateName(matcher, "NodeMatcher.anyChild"),
    $map: dartx.map,
    $first: dartx.first,
    $isEmpty: dartx.isEmpty,
    $last: dartx.last,
    $every: dartx.every,
    $any: dartx.any,
    $toList: dartx.toList,
    $entries: dartx.entries,
    $where: dartx.where,
    $addAll: dartx.addAll,
    $add: dartx.add,
    $contains: dartx.contains,
    $toRadixString: dartx.toRadixString,
    $padLeft: dartx.padLeft,
    $containsKey: dartx.containsKey,
    $truncate: dartx.truncate,
    $runes: dartx.runes,
    $join: dartx.join,
    $_set: dartx._set,
    _name$4: dart.privateName(style$0, "_name"),
    _name$5: dart.privateName(size$, "_name"),
    string: dart.privateName(encoder, "StaticEncodeResult.string"),
    errorCode: dart.privateName(encoder, "NonStrictEncodeResult.errorCode"),
    errorMsg: dart.privateName(encoder, "NonStrictEncodeResult.errorMsg"),
    placeHolder: dart.privateName(encoder, "NonStrictEncodeResult.placeHolder"),
    strict: dart.privateName(encoder, "EncodeConf.strict"),
    strictFun: dart.privateName(encoder, "EncodeConf.strictFun"),
    _name$6: dart.privateName(settings, "_name"),
    _oldOptions: dart.privateName(syntax_tree, "_oldOptions"),
    _oldBuildResult: dart.privateName(syntax_tree, "_oldBuildResult"),
    _oldChildBuildResults: dart.privateName(syntax_tree, "_oldChildBuildResults"),
    $runtimeType: dartx.runtimeType,
    mode: dart.privateName(encoder$, "TexEncodeConf.mode"),
    removeRowBracket: dart.privateName(encoder$, "TexEncodeConf.removeRowBracket"),
    _name$7: dart.privateName(types, "_name"),
    command: dart.privateName(encoder$, "TexCommandEncodeResult.command"),
    args: dart.privateName(encoder$, "TexCommandEncodeResult.args"),
    __TexCommandEncodeResult_spec: dart.privateName(encoder$, "_#TexCommandEncodeResult#spec"),
    __TexCommandEncodeResult_spec_isSet: dart.privateName(encoder$, "_#TexCommandEncodeResult#spec#isSet"),
    __TexCommandEncodeResult_numArgs: dart.privateName(encoder$, "_#TexCommandEncodeResult#numArgs"),
    __TexCommandEncodeResult_numArgs_isSet: dart.privateName(encoder$, "_#TexCommandEncodeResult#numArgs#isSet"),
    __TexCommandEncodeResult_numOptionalArgs: dart.privateName(encoder$, "_#TexCommandEncodeResult#numOptionalArgs"),
    __TexCommandEncodeResult_numOptionalArgs_isSet: dart.privateName(encoder$, "_#TexCommandEncodeResult#numOptionalArgs#isSet"),
    __TexCommandEncodeResult_argModes: dart.privateName(encoder$, "_#TexCommandEncodeResult#argModes"),
    __TexCommandEncodeResult_argModes_isSet: dart.privateName(encoder$, "_#TexCommandEncodeResult#argModes#isSet"),
    _numArgs: dart.privateName(encoder$, "_numArgs"),
    _numOptionalArgs: dart.privateName(encoder$, "_numOptionalArgs"),
    $isNotEmpty: dartx.isNotEmpty,
    children$1: dart.privateName(encoder$, "EquationRowTexEncodeResult.children"),
    children$2: dart.privateName(encoder$, "TransparentTexEncodeResult.children"),
    text: dart.privateName(encoder$, "ModeDependentEncodeResult.text"),
    math: dart.privateName(encoder$, "ModeDependentEncodeResult.math"),
    $toString: dartx.toString,
    command$1: dart.privateName(encoder$, "TexModeCommandEncodeResult.command"),
    children$3: dart.privateName(encoder$, "TexModeCommandEncodeResult.children"),
    base: dart.privateName(encoder$, "TexMultiscriptEncodeResult.base"),
    sub: dart.privateName(encoder$, "TexMultiscriptEncodeResult.sub"),
    sup: dart.privateName(encoder$, "TexMultiscriptEncodeResult.sup"),
    presub: dart.privateName(encoder$, "TexMultiscriptEncodeResult.presub"),
    presup: dart.privateName(encoder$, "TexMultiscriptEncodeResult.presup"),
    $iterator: dartx.iterator,
    _name$8: dart.privateName(selection_manager, "_name"),
    _cursorTimer: dart.privateName(cursor_timer_manager, "_cursorTimer"),
    __CursorTimerManagerMixin_cursorBlinkOpacityController: dart.privateName(cursor_timer_manager, "_#CursorTimerManagerMixin#cursorBlinkOpacityController"),
    __CursorTimerManagerMixin_cursorBlinkOpacityController_isSet: dart.privateName(cursor_timer_manager, "_#CursorTimerManagerMixin#cursorBlinkOpacityController#isSet"),
    _targetCursorVisibility: dart.privateName(cursor_timer_manager, "_targetCursorVisibility"),
    __CursorTimerManagerMixin__oldController: dart.privateName(cursor_timer_manager, "_#CursorTimerManagerMixin#_oldController"),
    __CursorTimerManagerMixin__oldController_isSet: dart.privateName(cursor_timer_manager, "_#CursorTimerManagerMixin#_oldController#isSet"),
    __CursorTimerManagerMixin__oldFocusNode: dart.privateName(cursor_timer_manager, "_#CursorTimerManagerMixin#_oldFocusNode"),
    __CursorTimerManagerMixin__oldFocusNode_isSet: dart.privateName(cursor_timer_manager, "_#CursorTimerManagerMixin#_oldFocusNode#isSet"),
    _oldController$2: dart.privateName(cursor_timer_manager, "_oldController"),
    _oldFocusNode$2: dart.privateName(cursor_timer_manager, "_oldFocusNode"),
    _startOrStopOrResetCursorTimerIfNeeded: dart.privateName(cursor_timer_manager, "_startOrStopOrResetCursorTimerIfNeeded"),
    _stopCursorTimer: dart.privateName(cursor_timer_manager, "_stopCursorTimer"),
    _cursorTick: dart.privateName(cursor_timer_manager, "_cursorTick"),
    _cursorWaitForStart: dart.privateName(cursor_timer_manager, "_cursorWaitForStart"),
    _startCursorTimer: dart.privateName(cursor_timer_manager, "_startCursorTimer"),
    parts: dart.privateName(tex_break, "BreakResult.parts"),
    penalties: dart.privateName(tex_break, "BreakResult.penalties"),
    ast: dart.privateName(math$, "Math.ast"),
    mathStyle: dart.privateName(math$, "Math.mathStyle"),
    logicalPpi: dart.privateName(math$, "Math.logicalPpi"),
    onErrorFallback: dart.privateName(math$, "Math.onErrorFallback"),
    options: dart.privateName(math$, "Math.options"),
    parseError: dart.privateName(math$, "Math.parseError"),
    textScaleFactor: dart.privateName(math$, "Math.textScaleFactor"),
    textStyle: dart.privateName(math$, "Math.textStyle"),
    TexParserSettings_colorIsTextColor: dart.privateName(settings, "TexParserSettings.colorIsTextColor"),
    TexParserSettings_globalGroup: dart.privateName(settings, "TexParserSettings.globalGroup"),
    TexParserSettings_strictFun: dart.privateName(settings, "TexParserSettings.strictFun"),
    TexParserSettings_strict: dart.privateName(settings, "TexParserSettings.strict"),
    TexParserSettings_maxExpand: dart.privateName(settings, "TexParserSettings.maxExpand"),
    TexParserSettings_macros: dart.privateName(settings, "TexParserSettings.macros"),
    TexParserSettings_throwOnError: dart.privateName(settings, "TexParserSettings.throwOnError"),
    TexParserSettings_displayMode: dart.privateName(settings, "TexParserSettings.displayMode"),
    TextStyle_fontFeatures: dart.privateName(text_style, "TextStyle.fontFeatures"),
    TextStyle_shadows: dart.privateName(text_style, "TextStyle.shadows"),
    TextStyle_debugLabel: dart.privateName(text_style, "TextStyle.debugLabel"),
    TextStyle_decorationThickness: dart.privateName(text_style, "TextStyle.decorationThickness"),
    TextStyle_decorationStyle: dart.privateName(text_style, "TextStyle.decorationStyle"),
    TextStyle_decorationColor: dart.privateName(text_style, "TextStyle.decorationColor"),
    TextStyle_decoration: dart.privateName(text_style, "TextStyle.decoration"),
    TextStyle_background: dart.privateName(text_style, "TextStyle.background"),
    TextStyle_foreground: dart.privateName(text_style, "TextStyle.foreground"),
    TextStyle_locale: dart.privateName(text_style, "TextStyle.locale"),
    TextStyle_leadingDistribution: dart.privateName(text_style, "TextStyle.leadingDistribution"),
    TextStyle_height: dart.privateName(text_style, "TextStyle.height"),
    TextStyle_textBaseline: dart.privateName(text_style, "TextStyle.textBaseline"),
    TextStyle_wordSpacing: dart.privateName(text_style, "TextStyle.wordSpacing"),
    TextStyle_letterSpacing: dart.privateName(text_style, "TextStyle.letterSpacing"),
    TextStyle_fontStyle: dart.privateName(text_style, "TextStyle.fontStyle"),
    FontWeight_index: dart.privateName(ui, "FontWeight.index"),
    TextStyle_fontWeight: dart.privateName(text_style, "TextStyle.fontWeight"),
    TextStyle_fontSize: dart.privateName(text_style, "TextStyle.fontSize"),
    TextStyle__package: dart.privateName(text_style, "TextStyle._package"),
    TextStyle__fontFamilyFallback: dart.privateName(text_style, "TextStyle._fontFamilyFallback"),
    TextStyle_fontFamily: dart.privateName(text_style, "TextStyle.fontFamily"),
    TextStyle_backgroundColor: dart.privateName(text_style, "TextStyle.backgroundColor"),
    TextStyle_color: dart.privateName(text_style, "TextStyle.color"),
    TextStyle_inherit: dart.privateName(text_style, "TextStyle.inherit"),
    TextRange_end: dart.privateName(ui, "TextRange.end"),
    TextRange_start: dart.privateName(ui, "TextRange.start"),
    TextSelection_isDirectional: dart.privateName(text_editing, "TextSelection.isDirectional"),
    TextSelection_affinity: dart.privateName(text_editing, "TextSelection.affinity"),
    TextSelection_extentOffset: dart.privateName(text_editing, "TextSelection.extentOffset"),
    TextSelection_baseOffset: dart.privateName(text_editing, "TextSelection.baseOffset"),
    _ast: dart.privateName(controller, "_ast"),
    _selection$1: dart.privateName(controller, "_selection"),
    FunctionSpec_argModes: dart.privateName(functions$, "FunctionSpec.argModes"),
    FunctionSpec_handler: dart.privateName(functions$, "FunctionSpec.handler"),
    FunctionSpec_infix: dart.privateName(functions$, "FunctionSpec.infix"),
    FunctionSpec_numOptionalArgs: dart.privateName(functions$, "FunctionSpec.numOptionalArgs"),
    FunctionSpec_allowedInMath: dart.privateName(functions$, "FunctionSpec.allowedInMath"),
    FunctionSpec_allowedInText: dart.privateName(functions$, "FunctionSpec.allowedInText"),
    FunctionSpec_greediness: dart.privateName(functions$, "FunctionSpec.greediness"),
    FunctionSpec_numArgs: dart.privateName(functions$, "FunctionSpec.numArgs"),
    ruleThickness: dart.privateName(eqn_array, "EqnArray.ruleThickness"),
    jotSize: dart.privateName(eqn_array, "EqnArray.jotSize"),
    arrayskip: dart.privateName(eqn_array, "EqnArray.arrayskip"),
    hlines: dart.privateName(eqn_array, "EqnArray.hlines"),
    rowSpacings: dart.privateName(eqn_array, "EqnArray.rowSpacings"),
    hlinePos: dart.privateName(eqn_array, "RenderEqnArray.hlinePos"),
    width: dart.privateName(eqn_array, "RenderEqnArray.width"),
    _ruleThickness: dart.privateName(eqn_array, "_ruleThickness"),
    _jotSize: dart.privateName(eqn_array, "_jotSize"),
    _arrayskip: dart.privateName(eqn_array, "_arrayskip"),
    _hlines: dart.privateName(eqn_array, "_hlines"),
    _rowSpacings: dart.privateName(eqn_array, "_rowSpacings"),
    arrayStretch: dart.privateName(equation_array, "EquationArrayNode.arrayStretch"),
    addJot: dart.privateName(equation_array, "EquationArrayNode.addJot"),
    body: dart.privateName(equation_array, "EquationArrayNode.body"),
    hlines$1: dart.privateName(equation_array, "EquationArrayNode.hlines"),
    rowSpacings$1: dart.privateName(equation_array, "EquationArrayNode.rowSpacings"),
    __SlotableNode_children: dart.privateName(syntax_tree, "_#SlotableNode#children"),
    __SlotableNode_children_isSet: dart.privateName(syntax_tree, "_#SlotableNode#children#isSet"),
    __ParentableNode_editingWidth: dart.privateName(syntax_tree, "_#ParentableNode#editingWidth"),
    __ParentableNode_editingWidth_isSet: dart.privateName(syntax_tree, "_#ParentableNode#editingWidth#isSet"),
    __ParentableNode_childPositions: dart.privateName(syntax_tree, "_#ParentableNode#childPositions"),
    __ParentableNode_childPositions_isSet: dart.privateName(syntax_tree, "_#ParentableNode#childPositions#isSet"),
    overrideType: dart.privateName(syntax_tree, "EquationRowNode.overrideType"),
    children$4: dart.privateName(syntax_tree, "EquationRowNode.children"),
    _key: dart.privateName(syntax_tree, "_key"),
    __EquationRowNode_flattenedChildList: dart.privateName(syntax_tree, "_#EquationRowNode#flattenedChildList"),
    __EquationRowNode_flattenedChildList_isSet: dart.privateName(syntax_tree, "_#EquationRowNode#flattenedChildList#isSet"),
    __EquationRowNode_caretPositions: dart.privateName(syntax_tree, "_#EquationRowNode#caretPositions"),
    __EquationRowNode_caretPositions_isSet: dart.privateName(syntax_tree, "_#EquationRowNode#caretPositions#isSet"),
    $expand: dartx.expand,
    _name$9: dart.privateName(syntax_tree, "_name"),
    $ceil: dartx.ceil,
    $floor: dartx.floor,
    range: dart.privateName(syntax_tree, "PositionDependentMixin.range"),
    $removeLast: dartx.removeLast,
    EnvSpec_handler: dart.privateName(define_environment, "EnvSpec.handler"),
    EnvSpec_numOptionalArgs: dart.privateName(define_environment, "EnvSpec.numOptionalArgs"),
    EnvSpec_allowedInText: dart.privateName(define_environment, "EnvSpec.allowedInText"),
    EnvSpec_greediness: dart.privateName(define_environment, "EnvSpec.greediness"),
    EnvSpec_numArgs: dart.privateName(define_environment, "EnvSpec.numArgs"),
    TexSymbolConfig_font: dart.privateName(symbols, "TexSymbolConfig.font"),
    TexSymbolConfig_type: dart.privateName(symbols, "TexSymbolConfig.type"),
    TexSymbolConfig_variantForm: dart.privateName(symbols, "TexSymbolConfig.variantForm"),
    TexSymbolConfig_symbol: dart.privateName(symbols, "TexSymbolConfig.symbol"),
    symbol: dart.privateName(symbols, "TexSymbolConfig.symbol"),
    variantForm: dart.privateName(symbols, "TexSymbolConfig.variantForm"),
    type: dart.privateName(symbols, "TexSymbolConfig.type"),
    font: dart.privateName(symbols, "TexSymbolConfig.font"),
    FontOptions_fallback: dart.privateName(options$, "FontOptions.fallback"),
    FontOptions_fontShape: dart.privateName(options$, "FontOptions.fontShape"),
    FontOptions_fontWeight: dart.privateName(options$, "FontOptions.fontWeight"),
    FontOptions_fontFamily: dart.privateName(options$, "FontOptions.fontFamily"),
    current: dart.privateName(namespace, "Namespace.current"),
    builtins: dart.privateName(namespace, "Namespace.builtins"),
    undefStack: dart.privateName(namespace, "Namespace.undefStack"),
    $remove: dartx.remove,
    $forEach: dartx.forEach,
    input: dart.privateName(macro_expander, "MacroExpander.input"),
    settings: dart.privateName(macro_expander, "MacroExpander.settings"),
    mode$1: dart.privateName(macro_expander, "MacroExpander.mode"),
    expansionCount: dart.privateName(macro_expander, "MacroExpander.expansionCount"),
    stack: dart.privateName(macro_expander, "MacroExpander.stack"),
    lexer: dart.privateName(macro_expander, "MacroExpander.lexer"),
    macros: dart.privateName(macro_expander, "MacroExpander.macros"),
    _getExpansion: dart.privateName(macro_expander, "_getExpansion"),
    $removeAt: dartx.removeAt,
    $replaceRange: dartx.replaceRange,
    $reversed: dartx.reversed,
    settings$1: dart.privateName(parser$, "TexParser.settings"),
    mode$2: dart.privateName(parser$, "TexParser.mode"),
    leftrightDepth: dart.privateName(parser$, "TexParser.leftrightDepth"),
    macroExpander: dart.privateName(parser$, "TexParser.macroExpander"),
    nextToken: dart.privateName(parser$, "TexParser.nextToken"),
    argParsingContexts: dart.privateName(parser$, "TexParser.argParsingContexts"),
    _enterArgumentParsingMode: dart.privateName(parser$, "_enterArgumentParsingMode"),
    $clear: dartx.clear,
    _leaveArgumentParsingMode: dart.privateName(parser$, "_leaveArgumentParsingMode"),
    _handleScript: dart.privateName(parser$, "_handleScript"),
    _parseSymbol: dart.privateName(parser$, "_parseSymbol"),
    _formatUnsuppotedCmd: dart.privateName(parser$, "_formatUnsuppotedCmd"),
    _assertOptionalBeforeReturn: dart.privateName(parser$, "_assertOptionalBeforeReturn"),
    _parseStringGroup: dart.privateName(parser$, "_parseStringGroup"),
    $toLowerCase: dartx.toLowerCase,
    $times: dartx['*'],
    _parseRegexGroup: dart.privateName(parser$, "_parseRegexGroup"),
    $substring: dartx.substring,
    $split: dartx.split,
    $codeUnitAt: dartx.codeUnitAt,
    funcName: dart.privateName(parser$, "ArgumentParsingContext.funcName"),
    currArgNum: dart.privateName(parser$, "ArgumentParsingContext.currArgNum"),
    funcData: dart.privateName(parser$, "ArgumentParsingContext.funcData"),
    _optional: dart.privateName(parser$, "_optional"),
    subscript: dart.privateName(parser$, "ScriptsParsingResults.subscript"),
    superscript: dart.privateName(parser$, "ScriptsParsingResults.superscript"),
    limits: dart.privateName(parser$, "ScriptsParsingResults.limits"),
    _name$10: dart.privateName(matrix, "_name"),
    arrayStretch$1: dart.privateName(matrix, "MatrixNode.arrayStretch"),
    hskipBeforeAndAfter: dart.privateName(matrix, "MatrixNode.hskipBeforeAndAfter"),
    isSmall: dart.privateName(matrix, "MatrixNode.isSmall"),
    columnAligns: dart.privateName(matrix, "MatrixNode.columnAligns"),
    vLines: dart.privateName(matrix, "MatrixNode.vLines"),
    rowSpacings$2: dart.privateName(matrix, "MatrixNode.rowSpacings"),
    hLines: dart.privateName(matrix, "MatrixNode.hLines"),
    body$1: dart.privateName(matrix, "MatrixNode.body"),
    rows: dart.privateName(matrix, "MatrixNode.rows"),
    cols: dart.privateName(matrix, "MatrixNode.cols"),
    $sublist: dartx.sublist,
    rows$1: dart.privateName(matrix, "MatrixLayoutDelegate.rows"),
    cols$1: dart.privateName(matrix, "MatrixLayoutDelegate.cols"),
    ruleThickness$1: dart.privateName(matrix, "MatrixLayoutDelegate.ruleThickness"),
    arrayskip$1: dart.privateName(matrix, "MatrixLayoutDelegate.arrayskip"),
    rowSpacings$3: dart.privateName(matrix, "MatrixLayoutDelegate.rowSpacings"),
    hLines$1: dart.privateName(matrix, "MatrixLayoutDelegate.hLines"),
    hskipBeforeAndAfter$1: dart.privateName(matrix, "MatrixLayoutDelegate.hskipBeforeAndAfter"),
    arraycolsep: dart.privateName(matrix, "MatrixLayoutDelegate.arraycolsep"),
    vLines$1: dart.privateName(matrix, "MatrixLayoutDelegate.vLines"),
    columnAligns$1: dart.privateName(matrix, "MatrixLayoutDelegate.columnAligns"),
    hLinePos: dart.privateName(matrix, "MatrixLayoutDelegate.hLinePos"),
    vLinePos: dart.privateName(matrix, "MatrixLayoutDelegate.vLinePos"),
    totalHeight: dart.privateName(matrix, "MatrixLayoutDelegate.totalHeight"),
    width$1: dart.privateName(matrix, "MatrixLayoutDelegate.width"),
    $modulo: dartx['%'],
    $asMap: dartx.asMap,
    _name$11: dart.privateName(array, "_name"),
    mode$3: dart.privateName(define_environment, "EnvContext.mode"),
    envName: dart.privateName(define_environment, "EnvContext.envName"),
    numArgs: dart.privateName(define_environment, "EnvSpec.numArgs"),
    greediness: dart.privateName(define_environment, "EnvSpec.greediness"),
    allowedInText: dart.privateName(define_environment, "EnvSpec.allowedInText"),
    numOptionalArgs: dart.privateName(define_environment, "EnvSpec.numOptionalArgs"),
    handler: dart.privateName(define_environment, "EnvSpec.handler"),
    base$1: dart.privateName(under, "UnderNode.base"),
    below: dart.privateName(under, "UnderNode.below"),
    symbol$1: dart.privateName(stretchy_op, "StretchyOpNode.symbol"),
    above: dart.privateName(stretchy_op, "StretchyOpNode.above"),
    below$1: dart.privateName(stretchy_op, "StretchyOpNode.below"),
    index: dart.privateName(sqrt, "SqrtNode.index"),
    base$2: dart.privateName(sqrt, "SqrtNode.base"),
    _name$12: dart.privateName(sqrt, "_name"),
    options$1: dart.privateName(sqrt, "SqrtLayoutDelegate.options"),
    baseOptions: dart.privateName(sqrt, "SqrtLayoutDelegate.baseOptions"),
    heightAboveBaseline: dart.privateName(sqrt, "SqrtLayoutDelegate.heightAboveBaseline"),
    svgHorizontalPos: dart.privateName(sqrt, "SqrtLayoutDelegate.svgHorizontalPos"),
    svgVerticalPos: dart.privateName(sqrt, "SqrtLayoutDelegate.svgVerticalPos"),
    $abs: dartx.abs,
    DelimiterConf_style: dart.privateName(delimiter, "DelimiterConf.style"),
    DelimiterConf_font: dart.privateName(delimiter, "DelimiterConf.font"),
    height: dart.privateName(space, "SpaceNode.height"),
    width$2: dart.privateName(space, "SpaceNode.width"),
    depth: dart.privateName(space, "SpaceNode.depth"),
    shift: dart.privateName(space, "SpaceNode.shift"),
    breakPenalty: dart.privateName(space, "SpaceNode.breakPenalty"),
    fill: dart.privateName(space, "SpaceNode.fill"),
    mode$4: dart.privateName(space, "SpaceNode.mode"),
    alignerOrSpacer: dart.privateName(space, "SpaceNode.alignerOrSpacer"),
    Measurement_unit: dart.privateName(size$, "Measurement.unit"),
    Measurement_value: dart.privateName(size$, "Measurement.value"),
    body$2: dart.privateName(raise_box, "RaiseBoxNode.body"),
    dy: dart.privateName(raise_box, "RaiseBoxNode.dy"),
    phantomChild: dart.privateName(phantom, "PhantomNode.phantomChild"),
    zeroWidth: dart.privateName(phantom, "PhantomNode.zeroWidth"),
    zeroHeight: dart.privateName(phantom, "PhantomNode.zeroHeight"),
    zeroDepth: dart.privateName(phantom, "PhantomNode.zeroDepth"),
    operator: dart.privateName(nary_op, "NaryOperatorNode.operator"),
    lowerLimit: dart.privateName(nary_op, "NaryOperatorNode.lowerLimit"),
    upperLimit: dart.privateName(nary_op, "NaryOperatorNode.upperLimit"),
    naryand: dart.privateName(nary_op, "NaryOperatorNode.naryand"),
    limits$1: dart.privateName(nary_op, "NaryOperatorNode.limits"),
    allowLargeOp: dart.privateName(nary_op, "NaryOperatorNode.allowLargeOp"),
    CharacterMetrics_width: dart.privateName(font_metrics$, "CharacterMetrics.width"),
    CharacterMetrics_skew: dart.privateName(font_metrics$, "CharacterMetrics.skew"),
    CharacterMetrics_italic: dart.privateName(font_metrics$, "CharacterMetrics.italic"),
    CharacterMetrics_height: dart.privateName(font_metrics$, "CharacterMetrics.height"),
    CharacterMetrics_depth: dart.privateName(font_metrics$, "CharacterMetrics.depth"),
    _name$13: dart.privateName(multiscripts, "_name"),
    alignPostscripts: dart.privateName(multiscripts, "Multiscripts.alignPostscripts"),
    isBaseCharacterBox: dart.privateName(multiscripts, "Multiscripts.isBaseCharacterBox"),
    baseResult: dart.privateName(multiscripts, "Multiscripts.baseResult"),
    subResult: dart.privateName(multiscripts, "Multiscripts.subResult"),
    supResult: dart.privateName(multiscripts, "Multiscripts.supResult"),
    presubResult: dart.privateName(multiscripts, "Multiscripts.presubResult"),
    presupResult: dart.privateName(multiscripts, "Multiscripts.presupResult"),
    alignPostscripts$1: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.alignPostscripts"),
    italic: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.italic"),
    isBaseCharacterBox$1: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.isBaseCharacterBox"),
    baseOptions$1: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.baseOptions"),
    subOptions: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.subOptions"),
    supOptions: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.supOptions"),
    presubOptions: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.presubOptions"),
    presupOptions: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.presupOptions"),
    baselineDistance: dart.privateName(multiscripts, "MultiscriptsLayoutDelegate.baselineDistance"),
    fullHeight: dart.privateName(multiscripts, "_ScriptUvConf.fullHeight"),
    baseline: dart.privateName(multiscripts, "_ScriptUvConf.baseline"),
    options$2: dart.privateName(multiscripts, "_ScriptUvConf.options"),
    alignPostscripts$2: dart.privateName(multiscripts$, "MultiscriptsNode.alignPostscripts"),
    base$3: dart.privateName(multiscripts$, "MultiscriptsNode.base"),
    sub$1: dart.privateName(multiscripts$, "MultiscriptsNode.sub"),
    sup$1: dart.privateName(multiscripts$, "MultiscriptsNode.sup"),
    presub$1: dart.privateName(multiscripts$, "MultiscriptsNode.presub"),
    presup$1: dart.privateName(multiscripts$, "MultiscriptsNode.presup"),
    font$1: dart.privateName(delimiter, "DelimiterConf.font"),
    style: dart.privateName(delimiter, "DelimiterConf.style"),
    leftDelim: dart.privateName(left_right, "LeftRightNode.leftDelim"),
    rightDelim: dart.privateName(left_right, "LeftRightNode.rightDelim"),
    body$3: dart.privateName(left_right, "LeftRightNode.body"),
    middle: dart.privateName(left_right, "LeftRightNode.middle"),
    top: dart.privateName(left_right, "StackDelimiterConf.top"),
    middle$1: dart.privateName(left_right, "StackDelimiterConf.middle"),
    repeat: dart.privateName(left_right, "StackDelimiterConf.repeat"),
    bottom: dart.privateName(left_right, "StackDelimiterConf.bottom"),
    font$2: dart.privateName(left_right, "StackDelimiterConf.font"),
    functionName: dart.privateName($function, "FunctionNode.functionName"),
    argument: dart.privateName($function, "FunctionNode.argument"),
    numerator: dart.privateName(frac$, "FracNode.numerator"),
    denominator: dart.privateName(frac$, "FracNode.denominator"),
    barSize: dart.privateName(frac$, "FracNode.barSize"),
    continued: dart.privateName(frac$, "FracNode.continued"),
    _name$14: dart.privateName(frac$, "_name"),
    barSize$1: dart.privateName(frac$, "FracLayoutDelegate.barSize"),
    options$3: dart.privateName(frac$, "FracLayoutDelegate.options"),
    theta: dart.privateName(frac$, "FracLayoutDelegate.theta"),
    height$1: dart.privateName(frac$, "FracLayoutDelegate.height"),
    a: dart.privateName(frac$, "FracLayoutDelegate.a"),
    width$3: dart.privateName(frac$, "FracLayoutDelegate.width"),
    barLength: dart.privateName(frac$, "FracLayoutDelegate.barLength"),
    id: dart.privateName(custom_layout, "CustomLayoutParentData.id"),
    id$1: dart.privateName(custom_layout, "CustomLayoutId.id"),
    delegate$1: dart.privateName(custom_layout, "CustomLayout.delegate"),
    _delegate: dart.privateName(custom_layout, "_delegate"),
    size: dart.privateName(custom_layout, "AxisConfiguration.size"),
    offsetTable: dart.privateName(custom_layout, "AxisConfiguration.offsetTable"),
    base$4: dart.privateName(enclosure, "EnclosureNode.base"),
    hasBorder: dart.privateName(enclosure, "EnclosureNode.hasBorder"),
    bordercolor: dart.privateName(enclosure, "EnclosureNode.bordercolor"),
    backgroundcolor: dart.privateName(enclosure, "EnclosureNode.backgroundcolor"),
    notation: dart.privateName(enclosure, "EnclosureNode.notation"),
    horizontalPadding: dart.privateName(enclosure, "EnclosureNode.horizontalPadding"),
    verticalPadding: dart.privateName(enclosure, "EnclosureNode.verticalPadding"),
    startRelativeX: dart.privateName(enclosure, "LinePainter.startRelativeX"),
    startRelativeY: dart.privateName(enclosure, "LinePainter.startRelativeY"),
    endRelativeX: dart.privateName(enclosure, "LinePainter.endRelativeX"),
    endRelativeY: dart.privateName(enclosure, "LinePainter.endRelativeY"),
    lineWidth: dart.privateName(enclosure, "LinePainter.lineWidth"),
    color: dart.privateName(enclosure, "LinePainter.color"),
    $_equals: dartx._equals,
    ruleThickness$2: dart.privateName(enclosure, "HorizontalStrikeDelegate.ruleThickness"),
    vShift: dart.privateName(enclosure, "HorizontalStrikeDelegate.vShift"),
    color$1: dart.privateName(enclosure, "HorizontalStrikeDelegate.color"),
    height$2: dart.privateName(enclosure, "HorizontalStrikeDelegate.height"),
    width$4: dart.privateName(enclosure, "HorizontalStrikeDelegate.width"),
    base$5: dart.privateName(accent_under, "AccentUnderNode.base"),
    label: dart.privateName(accent_under, "AccentUnderNode.label"),
    PartialFontOptions_fontShape: dart.privateName(options$, "PartialFontOptions.fontShape"),
    PartialFontOptions_fontWeight: dart.privateName(options$, "PartialFontOptions.fontWeight"),
    PartialFontOptions_fontFamily: dart.privateName(options$, "PartialFontOptions.fontFamily"),
    symbol$2: dart.privateName(symbol$, "SymbolNode.symbol"),
    variantForm$1: dart.privateName(symbol$, "SymbolNode.variantForm"),
    overrideAtomType: dart.privateName(symbol$, "SymbolNode.overrideAtomType")
  };
  var S$ = {
    overrideFont: dart.privateName(symbol$, "SymbolNode.overrideFont"),
    mode$5: dart.privateName(symbol$, "SymbolNode.mode"),
    __SymbolNode_atomType: dart.privateName(symbol$, "_#SymbolNode#atomType"),
    __SymbolNode_atomType_isSet: dart.privateName(symbol$, "_#SymbolNode#atomType#isSet"),
    $skip: dartx.skip,
    children$5: dart.privateName(style$, "StyleNode.children"),
    optionsDiff: dart.privateName(style$, "StyleNode.optionsDiff"),
    __TransparentNode_flattenedChildList: dart.privateName(syntax_tree, "_#TransparentNode#flattenedChildList"),
    __TransparentNode_flattenedChildList_isSet: dart.privateName(syntax_tree, "_#TransparentNode#flattenedChildList#isSet"),
    __TransparentNode_leftType: dart.privateName(syntax_tree, "_#TransparentNode#leftType"),
    __TransparentNode_leftType_isSet: dart.privateName(syntax_tree, "_#TransparentNode#leftType#isSet"),
    __TransparentNode_rightType: dart.privateName(syntax_tree, "_#TransparentNode#rightType"),
    __TransparentNode_rightType_isSet: dart.privateName(syntax_tree, "_#TransparentNode#rightType#isSet"),
    Widget__location: dart.privateName(framework, "Widget._location"),
    Widget_key: dart.privateName(framework, "Widget.key"),
    Text_textHeightBehavior: dart.privateName(text, "Text.textHeightBehavior"),
    Text_textWidthBasis: dart.privateName(text, "Text.textWidthBasis"),
    Text_semanticsLabel: dart.privateName(text, "Text.semanticsLabel"),
    Text_maxLines: dart.privateName(text, "Text.maxLines"),
    Text_textScaleFactor: dart.privateName(text, "Text.textScaleFactor"),
    Text_overflow: dart.privateName(text, "Text.overflow"),
    Text_softWrap: dart.privateName(text, "Text.softWrap"),
    Text_locale: dart.privateName(text, "Text.locale"),
    Text_textDirection: dart.privateName(text, "Text.textDirection"),
    Text_textAlign: dart.privateName(text, "Text.textAlign"),
    Text_strutStyle: dart.privateName(text, "Text.strutStyle"),
    Text_style: dart.privateName(text, "Text.style"),
    Text_textSpan: dart.privateName(text, "Text.textSpan"),
    Text_data: dart.privateName(text, "Text.data"),
    base$6: dart.privateName(over, "OverNode.base"),
    above$1: dart.privateName(over, "OverNode.above"),
    stackRel: dart.privateName(over, "OverNode.stackRel"),
    symbol$3: dart.privateName(symbols$, "SymbolId.symbol"),
    variantForm$2: dart.privateName(symbols$, "SymbolId.variantForm"),
    $hashCode: dartx.hashCode,
    math$1: dart.privateName(symbols$, "SymbolRenderConfig.math"),
    text$1: dart.privateName(symbols$, "SymbolRenderConfig.text"),
    variantForm$3: dart.privateName(symbols$, "SymbolRenderConfig.variantForm"),
    replaceChar: dart.privateName(symbols$, "RenderConfig.replaceChar"),
    defaultFont: dart.privateName(symbols$, "RenderConfig.defaultFont"),
    defaultType: dart.privateName(symbols$, "RenderConfig.defaultType"),
    paths: dart.privateName(stretchy, "_KatexImagesData.paths"),
    minWidth: dart.privateName(stretchy, "_KatexImagesData.minWidth"),
    viewBoxHeight: dart.privateName(stretchy, "_KatexImagesData.viewBoxHeight"),
    align: dart.privateName(stretchy, "_KatexImagesData.align"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    height$3: dart.privateName(reset_dimension, "ResetDimension.height"),
    depth$1: dart.privateName(reset_dimension, "ResetDimension.depth"),
    width$5: dart.privateName(reset_dimension, "ResetDimension.width"),
    horizontalAlignment: dart.privateName(reset_dimension, "ResetDimension.horizontalAlignment"),
    _name$15: dart.privateName(flex, "_name"),
    _layoutHeight: dart.privateName(reset_dimension, "_layoutHeight"),
    _layoutDepth: dart.privateName(reset_dimension, "_layoutDepth"),
    _layoutWidth: dart.privateName(reset_dimension, "_layoutWidth"),
    _horizontalAlignment: dart.privateName(reset_dimension, "_horizontalAlignment"),
    base$7: dart.privateName(accent$, "AccentNode.base"),
    label$1: dart.privateName(accent$, "AccentNode.label"),
    isStretchy: dart.privateName(accent$, "AccentNode.isStretchy"),
    isShifty: dart.privateName(accent$, "AccentNode.isShifty"),
    newLine: dart.privateName(katex_base, "CrNode.newLine"),
    newRow: dart.privateName(katex_base, "CrNode.newRow"),
    size$1: dart.privateName(katex_base, "CrNode.size"),
    $indexOf: dartx.indexOf,
    funcName$1: dart.privateName(functions$, "FunctionContext.funcName"),
    token: dart.privateName(functions$, "FunctionContext.token"),
    breakOnTokenText: dart.privateName(functions$, "FunctionContext.breakOnTokenText"),
    infixExistingArguments: dart.privateName(functions$, "FunctionContext.infixExistingArguments"),
    numArgs$1: dart.privateName(functions$, "FunctionSpec.numArgs"),
    greediness$1: dart.privateName(functions$, "FunctionSpec.greediness"),
    allowedInText$1: dart.privateName(functions$, "FunctionSpec.allowedInText"),
    allowedInMath: dart.privateName(functions$, "FunctionSpec.allowedInMath"),
    numOptionalArgs$1: dart.privateName(functions$, "FunctionSpec.numOptionalArgs"),
    infix: dart.privateName(functions$, "FunctionSpec.infix"),
    handler$1: dart.privateName(functions$, "FunctionSpec.handler"),
    argModes: dart.privateName(functions$, "FunctionSpec.argModes"),
    expand: dart.privateName(macros, "MacroDefinition.expand"),
    unexpandable: dart.privateName(macros, "MacroDefinition.unexpandable"),
    tokens: dart.privateName(macros, "MacroExpansion.tokens"),
    numArgs$2: dart.privateName(macros, "MacroExpansion.numArgs"),
    unexpandable$1: dart.privateName(macros, "MacroExpansion.unexpandable"),
    $replaceAll: dartx.replaceAll,
    displayMode: dart.privateName(settings, "TexParserSettings.displayMode"),
    throwOnError: dart.privateName(settings, "TexParserSettings.throwOnError"),
    macros$1: dart.privateName(settings, "TexParserSettings.macros"),
    maxExpand: dart.privateName(settings, "TexParserSettings.maxExpand"),
    strict$1: dart.privateName(settings, "TexParserSettings.strict"),
    strictFun$1: dart.privateName(settings, "TexParserSettings.strictFun"),
    globalGroup: dart.privateName(settings, "TexParserSettings.globalGroup"),
    colorIsTextColor: dart.privateName(settings, "TexParserSettings.colorIsTextColor"),
    input$1: dart.privateName(lexer, "Lexer.input"),
    settings$2: dart.privateName(lexer, "Lexer.settings"),
    catCodes: dart.privateName(lexer, "Lexer.catCodes"),
    pos: dart.privateName(lexer, "Lexer.pos"),
    it: dart.privateName(lexer, "Lexer.it"),
    lexer$1: dart.privateName(source_location, "SourceLocation.lexer"),
    start: dart.privateName(source_location, "SourceLocation.start"),
    end: dart.privateName(source_location, "SourceLocation.end"),
    text$2: dart.privateName(token, "Token.text"),
    loc: dart.privateName(token, "Token.loc"),
    noexpand: dart.privateName(token, "Token.noexpand"),
    treatAsRelax: dart.privateName(token, "Token.treatAsRelax"),
    position$1: dart.privateName(parse_error, "ParseException.position"),
    message: dart.privateName(parse_error, "ParseException.message"),
    token$1: dart.privateName(parse_error, "ParseException.token"),
    $replaceAllMapped: dartx.replaceAllMapped,
    ast$1: dart.privateName(selectable, "SelectableMath.ast"),
    autofocus: dart.privateName(selectable, "SelectableMath.autofocus"),
    cursorColor: dart.privateName(selectable, "SelectableMath.cursorColor"),
    cursorRadius: dart.privateName(selectable, "SelectableMath.cursorRadius"),
    cursorWidth: dart.privateName(selectable, "SelectableMath.cursorWidth"),
    cursorHeight: dart.privateName(selectable, "SelectableMath.cursorHeight"),
    dragStartBehavior$2: dart.privateName(selectable, "SelectableMath.dragStartBehavior"),
    enableInteractiveSelection: dart.privateName(selectable, "SelectableMath.enableInteractiveSelection"),
    focusNode: dart.privateName(selectable, "SelectableMath.focusNode"),
    mathStyle$1: dart.privateName(selectable, "SelectableMath.mathStyle"),
    logicalPpi$1: dart.privateName(selectable, "SelectableMath.logicalPpi"),
    onErrorFallback$1: dart.privateName(selectable, "SelectableMath.onErrorFallback"),
    options$4: dart.privateName(selectable, "SelectableMath.options"),
    parseException: dart.privateName(selectable, "SelectableMath.parseException"),
    showCursor: dart.privateName(selectable, "SelectableMath.showCursor"),
    textScaleFactor$1: dart.privateName(selectable, "SelectableMath.textScaleFactor"),
    textSelectionControls: dart.privateName(selectable, "SelectableMath.textSelectionControls"),
    textStyle$1: dart.privateName(selectable, "SelectableMath.textStyle"),
    toolbarOptions: dart.privateName(selectable, "SelectableMath.toolbarOptions"),
    ToolbarOptions_selectAll: dart.privateName(editable_text, "ToolbarOptions.selectAll"),
    ToolbarOptions_paste: dart.privateName(editable_text, "ToolbarOptions.paste"),
    ToolbarOptions_cut: dart.privateName(editable_text, "ToolbarOptions.cut"),
    ToolbarOptions_copy: dart.privateName(editable_text, "ToolbarOptions.copy"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    ast$2: dart.privateName(selectable, "InternalSelectableMath.ast"),
    autofocus$1: dart.privateName(selectable, "InternalSelectableMath.autofocus"),
    cursorColor$1: dart.privateName(selectable, "InternalSelectableMath.cursorColor"),
    cursorOffset: dart.privateName(selectable, "InternalSelectableMath.cursorOffset"),
    cursorOpacityAnimates: dart.privateName(selectable, "InternalSelectableMath.cursorOpacityAnimates"),
    cursorRadius$1: dart.privateName(selectable, "InternalSelectableMath.cursorRadius"),
    cursorWidth$1: dart.privateName(selectable, "InternalSelectableMath.cursorWidth"),
    cursorHeight$1: dart.privateName(selectable, "InternalSelectableMath.cursorHeight"),
    dragStartBehavior$3: dart.privateName(selectable, "InternalSelectableMath.dragStartBehavior"),
    enableInteractiveSelection$1: dart.privateName(selectable, "InternalSelectableMath.enableInteractiveSelection"),
    focusNode$1: dart.privateName(selectable, "InternalSelectableMath.focusNode"),
    forcePressEnabled: dart.privateName(selectable, "InternalSelectableMath.forcePressEnabled"),
    hintingColor: dart.privateName(selectable, "InternalSelectableMath.hintingColor"),
    options$5: dart.privateName(selectable, "InternalSelectableMath.options"),
    paintCursorAboveText: dart.privateName(selectable, "InternalSelectableMath.paintCursorAboveText"),
    selectionColor: dart.privateName(selectable, "InternalSelectableMath.selectionColor"),
    showCursor$1: dart.privateName(selectable, "InternalSelectableMath.showCursor"),
    textSelectionControls$1: dart.privateName(selectable, "InternalSelectableMath.textSelectionControls"),
    toolbarOptions$1: dart.privateName(selectable, "InternalSelectableMath.toolbarOptions"),
    _focusNode: dart.privateName(selectable, "_focusNode"),
    __InternalSelectableMathState_controller: dart.privateName(selectable, "_#InternalSelectableMathState#controller"),
    __InternalSelectableMathState_controller_isSet: dart.privateName(selectable, "_#InternalSelectableMathState#controller#isSet"),
    __InternalSelectableMathState__oldFocusNode: dart.privateName(selectable, "_#InternalSelectableMathState#_oldFocusNode"),
    __InternalSelectableMathState__oldFocusNode_isSet: dart.privateName(selectable, "_#InternalSelectableMathState#_oldFocusNode#isSet"),
    _didAutoFocus: dart.privateName(selectable, "_didAutoFocus"),
    _oldFocusNode$3: dart.privateName(selectable, "_oldFocusNode"),
    cursorColor$2: dart.privateName(selectable, "SelectionStyle.cursorColor"),
    cursorOffset$1: dart.privateName(selectable, "SelectionStyle.cursorOffset"),
    cursorRadius$2: dart.privateName(selectable, "SelectionStyle.cursorRadius"),
    cursorWidth$2: dart.privateName(selectable, "SelectionStyle.cursorWidth"),
    cursorHeight$2: dart.privateName(selectable, "SelectionStyle.cursorHeight"),
    hintingColor$1: dart.privateName(selectable, "SelectionStyle.hintingColor"),
    paintCursorAboveText$1: dart.privateName(selectable, "SelectionStyle.paintCursorAboveText"),
    selectionColor$1: dart.privateName(selectable, "SelectionStyle.selectionColor"),
    showCursor$2: dart.privateName(selectable, "SelectionStyle.showCursor"),
    crossAxisAlignment: dart.privateName(line_editable, "EditableLine.crossAxisAlignment"),
    cursorBlinkOpacityController: dart.privateName(line_editable, "EditableLine.cursorBlinkOpacityController"),
    cursorColor$3: dart.privateName(line_editable, "EditableLine.cursorColor"),
    cursorOffset$2: dart.privateName(line_editable, "EditableLine.cursorOffset"),
    cursorOpacityAnimates$1: dart.privateName(line_editable, "EditableLine.cursorOpacityAnimates"),
    cursorRadius$3: dart.privateName(line_editable, "EditableLine.cursorRadius"),
    cursorWidth$3: dart.privateName(line_editable, "EditableLine.cursorWidth"),
    cursorHeight$3: dart.privateName(line_editable, "EditableLine.cursorHeight"),
    devicePixelRatio: dart.privateName(line_editable, "EditableLine.devicePixelRatio"),
    hintingColor$2: dart.privateName(line_editable, "EditableLine.hintingColor"),
    minDepth: dart.privateName(line_editable, "EditableLine.minDepth"),
    minHeight: dart.privateName(line_editable, "EditableLine.minHeight"),
    node: dart.privateName(line_editable, "EditableLine.node"),
    paintCursorAboveText$2: dart.privateName(line_editable, "EditableLine.paintCursorAboveText"),
    preferredLineHeight: dart.privateName(line_editable, "EditableLine.preferredLineHeight"),
    selection$1: dart.privateName(line_editable, "EditableLine.selection"),
    selectionColor$2: dart.privateName(line_editable, "EditableLine.selectionColor"),
    showCursor$3: dart.privateName(line_editable, "EditableLine.showCursor"),
    startHandleLayerLink$3: dart.privateName(line_editable, "EditableLine.startHandleLayerLink"),
    endHandleLayerLink$3: dart.privateName(line_editable, "EditableLine.endHandleLayerLink"),
    textBaseline: dart.privateName(line_editable, "EditableLine.textBaseline"),
    textDirection: dart.privateName(line_editable, "EditableLine.textDirection"),
    _needTextDirection: dart.privateName(line_editable, "_needTextDirection"),
    node$1: dart.privateName(line_editable, "RenderEditableLine.node"),
    preferredLineHeight$1: dart.privateName(line_editable, "RenderEditableLine.preferredLineHeight"),
    _cursorBlinkOpacityController: dart.privateName(line_editable, "_cursorBlinkOpacityController"),
    _cursorColor: dart.privateName(line_editable, "_cursorColor"),
    _cursorOffset: dart.privateName(line_editable, "_cursorOffset"),
    _cursorRadius: dart.privateName(line_editable, "_cursorRadius"),
    _cursorWidth: dart.privateName(line_editable, "_cursorWidth"),
    _cursorHeight: dart.privateName(line_editable, "_cursorHeight"),
    _devicePixelRatio: dart.privateName(line_editable, "_devicePixelRatio"),
    _hintingColor: dart.privateName(line_editable, "_hintingColor"),
    _paintCursorAboveText: dart.privateName(line_editable, "_paintCursorAboveText"),
    _selection$2: dart.privateName(line_editable, "_selection"),
    _selectionColor: dart.privateName(line_editable, "_selectionColor"),
    _showCursor: dart.privateName(line_editable, "_showCursor"),
    _startHandleLayerLink: dart.privateName(line_editable, "_startHandleLayerLink"),
    _endHandleLayerLink: dart.privateName(line_editable, "_endHandleLayerLink"),
    _paintCaret: dart.privateName(line_editable, "_paintCaret"),
    _getPixelPerfectCursorOffset: dart.privateName(line_editable, "_getPixelPerfectCursorOffset"),
    $isFinite: dartx.isFinite,
    $round: dartx.round,
    maxHeightAboveBaseline: dart.privateName(line, "RenderLine.maxHeightAboveBaseline"),
    maxHeightAboveEndBaseline: dart.privateName(line, "RenderLine.maxHeightAboveEndBaseline"),
    alignColWidth: dart.privateName(line, "RenderLine.alignColWidth"),
    _overflow: dart.privateName(line, "_overflow"),
    __RenderLine_caretOffsets: dart.privateName(line, "_#RenderLine#caretOffsets"),
    __RenderLine_caretOffsets_isSet: dart.privateName(line, "_#RenderLine#caretOffsets#isSet"),
    _crossAxisAlignment: dart.privateName(line, "_crossAxisAlignment"),
    _minDepth: dart.privateName(line, "_minDepth"),
    _minHeight: dart.privateName(line, "_minHeight"),
    _textBaseline: dart.privateName(line, "_textBaseline"),
    _textDirection: dart.privateName(line, "_textDirection"),
    _debugHasNecessaryDirections: dart.privateName(line, "_debugHasNecessaryDirections"),
    _hasOverflow: dart.privateName(line, "_hasOverflow"),
    _getIntrinsicSize: dart.privateName(line, "_getIntrinsicSize"),
    canBreakBefore: dart.privateName(line, "LineParentData.canBreakBefore"),
    customCrossSize: dart.privateName(line, "LineParentData.customCrossSize"),
    trailingMargin: dart.privateName(line, "LineParentData.trailingMargin"),
    alignerOrSpacer$1: dart.privateName(line, "LineParentData.alignerOrSpacer"),
    BoxConstraints_maxHeight: dart.privateName(box, "BoxConstraints.maxHeight"),
    BoxConstraints_minHeight: dart.privateName(box, "BoxConstraints.minHeight"),
    BoxConstraints_maxWidth: dart.privateName(box, "BoxConstraints.maxWidth"),
    BoxConstraints_minWidth: dart.privateName(box, "BoxConstraints.minWidth"),
    canBreakBefore$1: dart.privateName(line, "LineElement.canBreakBefore"),
    customCrossSize$1: dart.privateName(line, "LineElement.customCrossSize"),
    trailingMargin$1: dart.privateName(line, "LineElement.trailingMargin"),
    alignerOrSpacer$2: dart.privateName(line, "LineElement.alignerOrSpacer"),
    crossAxisAlignment$1: dart.privateName(line, "Line.crossAxisAlignment"),
    minDepth$1: dart.privateName(line, "Line.minDepth"),
    minHeight$1: dart.privateName(line, "Line.minHeight"),
    textBaseline$1: dart.privateName(line, "Line.textBaseline"),
    textDirection$1: dart.privateName(line, "Line.textDirection"),
    _needTextDirection$1: dart.privateName(line, "_needTextDirection"),
    greenRoot: dart.privateName(syntax_tree, "SyntaxTree.greenRoot"),
    __SyntaxTree_root: dart.privateName(syntax_tree, "_#SyntaxTree#root"),
    __SyntaxTree_root_isSet: dart.privateName(syntax_tree, "_#SyntaxTree#root#isSet"),
    parent: dart.privateName(syntax_tree, "SyntaxNode.parent"),
    value: dart.privateName(syntax_tree, "SyntaxNode.value"),
    pos$1: dart.privateName(syntax_tree, "SyntaxNode.pos"),
    __SyntaxNode_children: dart.privateName(syntax_tree, "_#SyntaxNode#children"),
    __SyntaxNode_children_isSet: dart.privateName(syntax_tree, "_#SyntaxNode#children#isSet"),
    __SyntaxNode_range: dart.privateName(syntax_tree, "_#SyntaxNode#range"),
    __SyntaxNode_range_isSet: dart.privateName(syntax_tree, "_#SyntaxNode#range#isSet"),
    _buildChildWidgets: dart.privateName(syntax_tree, "_buildChildWidgets"),
    widget: dart.privateName(syntax_tree, "BuildResult.widget"),
    options$6: dart.privateName(syntax_tree, "BuildResult.options"),
    italic$1: dart.privateName(syntax_tree, "BuildResult.italic"),
    skew: dart.privateName(syntax_tree, "BuildResult.skew"),
    results: dart.privateName(syntax_tree, "BuildResult.results"),
    $isEven: dartx.isEven,
    $toInt: dartx.toInt,
    value$1: dart.privateName(size$, "Measurement.value"),
    unit: dart.privateName(size$, "Measurement.unit"),
    depth$2: dart.privateName(font_metrics$, "CharacterMetrics.depth"),
    height$4: dart.privateName(font_metrics$, "CharacterMetrics.height"),
    italic$2: dart.privateName(font_metrics$, "CharacterMetrics.italic"),
    skew$1: dart.privateName(font_metrics$, "CharacterMetrics.skew"),
    width$6: dart.privateName(font_metrics$, "CharacterMetrics.width"),
    style$1: dart.privateName(options$, "MathOptions.style"),
    color$2: dart.privateName(options$, "MathOptions.color"),
    sizeUnderTextStyle: dart.privateName(options$, "MathOptions.sizeUnderTextStyle"),
    textFontOptions: dart.privateName(options$, "MathOptions.textFontOptions"),
    mathFontOptions: dart.privateName(options$, "MathOptions.mathFontOptions"),
    fontSize: dart.privateName(options$, "MathOptions.fontSize"),
    logicalPpi$2: dart.privateName(options$, "MathOptions.logicalPpi"),
    Color_value: dart.privateName(ui, "Color.value"),
    __MathOptions_size: dart.privateName(options$, "_#MathOptions#size"),
    __MathOptions_size_isSet: dart.privateName(options$, "_#MathOptions#size#isSet"),
    __MathOptions_sizeMultiplier: dart.privateName(options$, "_#MathOptions#sizeMultiplier"),
    __MathOptions_sizeMultiplier_isSet: dart.privateName(options$, "_#MathOptions#sizeMultiplier#isSet"),
    __MathOptions_fontMetrics: dart.privateName(options$, "_#MathOptions#fontMetrics"),
    __MathOptions_fontMetrics_isSet: dart.privateName(options$, "_#MathOptions#fontMetrics#isSet"),
    style$2: dart.privateName(options$, "OptionsDiff.style"),
    size$2: dart.privateName(options$, "OptionsDiff.size"),
    color$3: dart.privateName(options$, "OptionsDiff.color"),
    textFontOptions$1: dart.privateName(options$, "OptionsDiff.textFontOptions"),
    mathFontOptions$1: dart.privateName(options$, "OptionsDiff.mathFontOptions"),
    fontFamily: dart.privateName(options$, "FontOptions.fontFamily"),
    fontWeight: dart.privateName(options$, "FontOptions.fontWeight"),
    fontShape: dart.privateName(options$, "FontOptions.fontShape"),
    fallback: dart.privateName(options$, "FontOptions.fallback"),
    fontFamily$1: dart.privateName(options$, "PartialFontOptions.fontFamily"),
    fontWeight$1: dart.privateName(options$, "PartialFontOptions.fontWeight"),
    fontShape$1: dart.privateName(options$, "PartialFontOptions.fontShape")
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [S._name]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: overlay$0.MathSelectionHandlePosition.prototype,
        [S._name$1]: "MathSelectionHandlePosition.start",
        index: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: overlay$0.MathSelectionHandlePosition.prototype,
        [S._name$1]: "MathSelectionHandlePosition.end",
        index: 1
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 221,
        [S._Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 227,
        [S._Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6], T$._LocationL());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[4] || CT.C4,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 220,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/handle_overlay.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 13,
        [S._Location_line]: 215,
        [S._Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 13,
        [S._Location_line]: 216,
        [S._Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPanStart",
        [S._Location_column]: 13,
        [S._Location_line]: 217,
        [S._Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onPanUpdate",
        [S._Location_column]: 13,
        [S._Location_line]: 218,
        [S._Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTap",
        [S._Location_column]: 13,
        [S._Location_line]: 219,
        [S._Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 220,
        [S._Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.constList([C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14], T$._LocationL());
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[8] || CT.C8,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 214,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/handle_overlay.dart"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignment",
        [S._Location_column]: 11,
        [S._Location_line]: 211,
        [S._Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 212,
        [S._Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 11,
        [S._Location_line]: 213,
        [S._Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 214,
        [S._Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.constList([C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20], T$._LocationL());
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[16] || CT.C16,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 210,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/handle_overlay.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 9,
        [S._Location_line]: 209,
        [S._Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 210,
        [S._Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.constList([C[23] || CT.C23, C[24] || CT.C24], T$._LocationL());
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[22] || CT.C22,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 208,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/handle_overlay.dart"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "link",
        [S._Location_column]: 7,
        [S._Location_line]: 205,
        [S._Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 7,
        [S._Location_line]: 206,
        [S._Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showWhenUnlinked",
        [S._Location_column]: 7,
        [S._Location_line]: 207,
        [S._Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 208,
        [S._Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.constList([C[27] || CT.C27, C[28] || CT.C28, C[29] || CT.C29, C[30] || CT.C30], T$._LocationL());
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[26] || CT.C26,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 204,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/handle_overlay.dart"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._name$2]: "TextDirection.ltr",
        index: 1
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._name$2]: "TextDirection.rtl",
        index: 0
      });
    },
    get C33() {
      return C[33] = dart.constList([C[1] || CT.C1, C[2] || CT.C2], T$.MathSelectionHandlePositionL());
    },
    get C35() {
      return C[35] = dart.constList([], T$._LocationL());
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[35] || CT.C35,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 248,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart"
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "manager",
        [S._Location_column]: 9,
        [S._Location_line]: 253,
        [S._Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSelectionHandleChanged",
        [S._Location_column]: 9,
        [S._Location_line]: 254,
        [S._Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSelectionHandleTapped",
        [S._Location_column]: 9,
        [S._Location_line]: 257,
        [S._Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "startHandleLayerLink",
        [S._Location_column]: 9,
        [S._Location_line]: 258,
        [S._Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "endHandleLayerLink",
        [S._Location_column]: 9,
        [S._Location_line]: 259,
        [S._Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selection",
        [S._Location_column]: 9,
        [S._Location_line]: 260,
        [S._Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectionControls",
        [S._Location_column]: 9,
        [S._Location_line]: 261,
        [S._Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "position",
        [S._Location_column]: 9,
        [S._Location_line]: 262,
        [S._Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 263,
        [S._Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.constList([C[38] || CT.C38, C[39] || CT.C39, C[40] || CT.C40, C[41] || CT.C41, C[42] || CT.C42, C[43] || CT.C43, C[44] || CT.C44, C[45] || CT.C45, C[46] || CT.C46], T$._LocationL());
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[37] || CT.C37,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 252,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart"
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "visible",
        [S._Location_column]: 7,
        [S._Location_line]: 251,
        [S._Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 252,
        [S._Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.constList([C[49] || CT.C49, C[50] || CT.C50], T$._LocationL());
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[48] || CT.C48,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 250,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[35] || CT.C35,
        [S._Location_name]: null,
        [S._Location_column]: 43,
        [S._Location_line]: 269,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart"
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "link",
        [S._Location_column]: 9,
        [S._Location_line]: 298,
        [S._Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showWhenUnlinked",
        [S._Location_column]: 9,
        [S._Location_line]: 299,
        [S._Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 9,
        [S._Location_line]: 300,
        [S._Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 301,
        [S._Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.constList([C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57], T$._LocationL());
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[53] || CT.C53,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 297,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 7,
        [S._Location_line]: 296,
        [S._Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 297,
        [S._Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.constList([C[60] || CT.C60, C[61] || CT.C61], T$._LocationL());
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[59] || CT.C59,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 295,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart"
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 150000
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [S._name$3]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [S._name$3]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [S._name$3]: "TargetPlatform.android",
        index: 0
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [S._name$3]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [S._name$3]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [S._name$3]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 9,
        [S._Location_line]: 185,
        [S._Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onTapDown",
        [S._Location_column]: 9,
        [S._Location_line]: 186,
        [S._Location_file]: null
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onForcePressStart",
        [S._Location_column]: 9,
        [S._Location_line]: 187,
        [S._Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onForcePressEnd",
        [S._Location_column]: 9,
        [S._Location_line]: 189,
        [S._Location_file]: null
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSingleTapUp",
        [S._Location_column]: 9,
        [S._Location_line]: 190,
        [S._Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSingleTapCancel",
        [S._Location_column]: 9,
        [S._Location_line]: 191,
        [S._Location_file]: null
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSingleLongTapStart",
        [S._Location_column]: 9,
        [S._Location_line]: 192,
        [S._Location_file]: null
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSingleLongTapMoveUpdate",
        [S._Location_column]: 9,
        [S._Location_line]: 193,
        [S._Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onSingleLongTapEnd",
        [S._Location_column]: 9,
        [S._Location_line]: 194,
        [S._Location_file]: null
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDoubleTapDown",
        [S._Location_column]: 9,
        [S._Location_line]: 195,
        [S._Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragSelectionStart",
        [S._Location_column]: 9,
        [S._Location_line]: 196,
        [S._Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragSelectionUpdate",
        [S._Location_column]: 9,
        [S._Location_line]: 197,
        [S._Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onDragSelectionEnd",
        [S._Location_column]: 9,
        [S._Location_line]: 198,
        [S._Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "behavior",
        [S._Location_column]: 9,
        [S._Location_line]: 199,
        [S._Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 200,
        [S._Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.constList([C[71] || CT.C71, C[72] || CT.C72, C[73] || CT.C73, C[74] || CT.C74, C[75] || CT.C75, C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84, C[85] || CT.C85], T$._LocationL());
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[70] || CT.C70,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 184,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/gesture_detector_builder.dart"
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: matcher.NullMatcher.prototype
      });
    },
    get C87() {
      return C[87] = dart.fn(encoder$.encodeTex, T$.GreenNodeToEncodeResult());
    },
    get C88() {
      return C[88] = dart.fn(functions._delimEncoder, T$.StringNToEncodeResult());
    },
    get C89() {
      return C[89] = dart.constSet(T$.StringL(), ["!", "*", "(", ")", "-", "+", "=", "|", ":", ";", "'", "\"", ",", "<", ".", ">", "?", "/"]);
    },
    get C91() {
      return C[91] = dart.fn(functions._equationRowNodeEncoderFun, T$.GreenNodeToEncodeResult());
    },
    get C92() {
      return C[92] = dart.fn(functions._accentEncoder, T$.GreenNodeToEncodeResult());
    },
    get C93() {
      return C[93] = dart.fn(functions._accentUnderEncoder, T$.GreenNodeToEncodeResult());
    },
    get C94() {
      return C[94] = dart.fn(functions._fracEncoder, T$.GreenNodeToEncodeResult());
    },
    get C95() {
      return C[95] = dart.fn(functions._functionEncoder, T$.GreenNodeToEncodeResult());
    },
    get C96() {
      return C[96] = dart.fn(functions._leftRightEncoder, T$.GreenNodeToEncodeResult());
    },
    get C97() {
      return C[97] = dart.fn(functions._multisciprtsEncoder, T$.GreenNodeToEncodeResult());
    },
    get C98() {
      return C[98] = dart.fn(functions._naryEncoder, T$.GreenNodeToEncodeResult());
    },
    get C99() {
      return C[99] = dart.fn(functions._sqrtEncoder, T$.GreenNodeToEncodeResult());
    },
    get C100() {
      return C[100] = dart.fn(functions._stretchyOpEncoder, T$.GreenNodeToEncodeResult());
    },
    get C101() {
      return C[101] = dart.fn(functions._symbolEncoder, T$.GreenNodeToEncodeResult());
    },
    get C102() {
      return C[102] = dart.fn(functions._styleEncoder, T$.GreenNodeToEncodeResult());
    },
    get C90() {
      return C[90] = dart.constMap(T$.TypeL(), T$.GreenNodeLToLEncodeResultL(), [dart.wrapType(syntax_tree.EquationRowNode), C[91] || CT.C91, dart.wrapType(accent$.AccentNode), C[92] || CT.C92, dart.wrapType(accent_under.AccentUnderNode), C[93] || CT.C93, dart.wrapType(frac$.FracNode), C[94] || CT.C94, dart.wrapType($function.FunctionNode), C[95] || CT.C95, dart.wrapType(left_right.LeftRightNode), C[96] || CT.C96, dart.wrapType(multiscripts$.MultiscriptsNode), C[97] || CT.C97, dart.wrapType(nary_op.NaryOperatorNode), C[98] || CT.C98, dart.wrapType(sqrt.SqrtNode), C[99] || CT.C99, dart.wrapType(stretchy_op.StretchyOpNode), C[100] || CT.C100, dart.wrapType(symbol$.SymbolNode), C[101] || CT.C101, dart.wrapType(style$.StyleNode), C[102] || CT.C102]);
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.display",
        index: 0
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.text",
        index: 2
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.script",
        index: 4
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.scriptscript",
        index: 6
      });
    },
    get C103() {
      return C[103] = dart.constMap(T$.MathStyleL(), T$.StringL(), [C[104] || CT.C104, "\\displaystyle", C[105] || CT.C105, "\\textstyle", C[106] || CT.C106, "\\scriptstyle", C[107] || CT.C107, "\\scriptscriptstyle"]);
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.tiny",
        index: 0
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.size2",
        index: 1
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.scriptsize",
        index: 2
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.footnotesize",
        index: 3
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.small",
        index: 4
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.normalsize",
        index: 5
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.large",
        index: 6
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.Large",
        index: 7
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.LARGE",
        index: 8
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.huge",
        index: 9
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: size$.MathSize.prototype,
        [S._name$5]: "MathSize.HUGE",
        index: 10
      });
    },
    get C108() {
      return C[108] = dart.constMap(T$.MathSizeL(), T$.StringL(), [C[109] || CT.C109, "\\tiny", C[110] || CT.C110, "\\tiny", C[111] || CT.C111, "\\scriptsize", C[112] || CT.C112, "\\footnotesize", C[113] || CT.C113, "\\small", C[114] || CT.C114, "\\normalsize", C[115] || CT.C115, "\\large", C[116] || CT.C116, "\\Large", C[117] || CT.C117, "\\LARGE", C[118] || CT.C118, "\\huge", C[119] || CT.C119, "\\HUGE"]);
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: encoder.StaticEncodeResult.prototype,
        [S.string]: ""
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: settings.Strict.prototype,
        [S._name$6]: "Strict.warn",
        index: 1
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: settings.Strict.prototype,
        [S._name$6]: "Strict.ignore",
        index: 0
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: settings.Strict.prototype,
        [S._name$6]: "Strict.error",
        index: 2
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: types.Mode.prototype,
        [S._name$7]: "Mode.math",
        index: 0
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: encoder$.TexEncodeConf.prototype,
        [S.strictFun]: null,
        [S.strict]: C[121] || CT.C121,
        [S.removeRowBracket]: false,
        [S.mode]: C[124] || CT.C124
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: encoder$.TexEncodeConf.prototype,
        [S.strictFun]: null,
        [S.strict]: C[121] || CT.C121,
        [S.removeRowBracket]: true,
        [S.mode]: C[124] || CT.C124
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: types.Mode.prototype,
        [S._name$7]: "Mode.text",
        index: 1
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: encoder$.TexEncodeConf.prototype,
        [S.strictFun]: null,
        [S.strict]: C[121] || CT.C121,
        [S.removeRowBracket]: false,
        [S.mode]: C[128] || CT.C128
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: encoder$.TexEncodeConf.prototype,
        [S.strictFun]: null,
        [S.strict]: C[121] || CT.C121,
        [S.removeRowBracket]: true,
        [S.mode]: C[128] || CT.C128
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: selection_manager.ExtraSelectionChangedCause.prototype,
        [S._name$8]: "ExtraSelectionChangedCause.handle",
        index: 0
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: selection_manager.ExtraSelectionChangedCause.prototype,
        [S._name$8]: "ExtraSelectionChangedCause.unfocus",
        index: 1
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: selection_manager.ExtraSelectionChangedCause.prototype,
        [S._name$8]: "ExtraSelectionChangedCause.exterior",
        index: 2
      });
    },
    get C133() {
      return C[133] = dart.constList([C[130] || CT.C130, C[131] || CT.C131, C[132] || CT.C132], T$.ExtraSelectionChangedCauseL());
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 500000
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 250000
      });
    },
    get C136() {
      return C[136] = dart.fn(math$.Math.defaultOnErrorFallback, T$.FlutterMathExceptionToWidget());
    },
    get C138() {
      return C[138] = dart.constMap(T$.StringL(), T$.MacroDefinitionL(), []);
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: settings.TexParserSettings.prototype,
        [S.TexParserSettings_colorIsTextColor]: false,
        [S.TexParserSettings_globalGroup]: false,
        [S.TexParserSettings_strictFun]: null,
        [S.TexParserSettings_strict]: C[121] || CT.C121,
        [S.TexParserSettings_maxExpand]: 1000,
        [S.TexParserSettings_macros]: C[138] || CT.C138,
        [S.TexParserSettings_throwOnError]: true,
        [S.TexParserSettings_displayMode]: false
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [S.FontWeight_index]: 6
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S.TextStyle_fontFeatures]: null,
        [S.TextStyle_shadows]: null,
        [S.TextStyle_debugLabel]: null,
        [S.TextStyle_decorationThickness]: null,
        [S.TextStyle_decorationStyle]: null,
        [S.TextStyle_decorationColor]: null,
        [S.TextStyle_decoration]: null,
        [S.TextStyle_background]: null,
        [S.TextStyle_foreground]: null,
        [S.TextStyle_locale]: null,
        [S.TextStyle_leadingDistribution]: null,
        [S.TextStyle_height]: null,
        [S.TextStyle_textBaseline]: null,
        [S.TextStyle_wordSpacing]: null,
        [S.TextStyle_letterSpacing]: null,
        [S.TextStyle_fontStyle]: null,
        [S.TextStyle_fontWeight]: C[140] || CT.C140,
        [S.TextStyle_fontSize]: null,
        [S.TextStyle__package]: null,
        [S.TextStyle__fontFamilyFallback]: null,
        [S.TextStyle_fontFamily]: null,
        [S.TextStyle_backgroundColor]: null,
        [S.TextStyle_color]: null,
        [S.TextStyle_inherit]: true
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 7,
        [S._Location_line]: 212,
        [S._Location_file]: null
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 213,
        [S._Location_file]: null
      });
    },
    get C142() {
      return C[142] = dart.constList([C[143] || CT.C143, C[144] || CT.C144], T$._LocationL());
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[142] || CT.C142,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 211,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/math.dart"
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 28,
        [S._Location_line]: 219,
        [S._Location_file]: null
      });
    },
    get C146() {
      return C[146] = dart.constList([C[147] || CT.C147], T$._LocationL());
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[146] || CT.C146,
        [S._Location_name]: null,
        [S._Location_column]: 7,
        [S._Location_line]: 219,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/math.dart"
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "ast",
        [S._Location_column]: 17,
        [S._Location_line]: 259,
        [S._Location_file]: null
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mathStyle",
        [S._Location_column]: 17,
        [S._Location_line]: 260,
        [S._Location_file]: null
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "logicalPpi",
        [S._Location_column]: 17,
        [S._Location_line]: 261,
        [S._Location_file]: null
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "onErrorFallback",
        [S._Location_column]: 17,
        [S._Location_line]: 262,
        [S._Location_file]: null
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "options",
        [S._Location_column]: 17,
        [S._Location_line]: 263,
        [S._Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "parseError",
        [S._Location_column]: 17,
        [S._Location_line]: 264,
        [S._Location_file]: null
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textScaleFactor",
        [S._Location_column]: 17,
        [S._Location_line]: 265,
        [S._Location_file]: null
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textStyle",
        [S._Location_column]: 17,
        [S._Location_line]: 266,
        [S._Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.constList([C[150] || CT.C150, C[151] || CT.C151, C[152] || CT.C152, C[153] || CT.C153, C[154] || CT.C154, C[155] || CT.C155, C[156] || CT.C156, C[157] || CT.C157], T$._LocationL());
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[149] || CT.C149,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 258,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/math.dart"
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: ui.TextAffinity.prototype,
        [S._name$2]: "TextAffinity.downstream",
        index: 1
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: text_editing.TextSelection.prototype,
        [S.TextRange_end]: -1,
        [S.TextRange_start]: -1,
        [S.TextSelection_isDirectional]: false,
        [S.TextSelection_affinity]: C[159] || CT.C159,
        [S.TextSelection_extentOffset]: -1,
        [S.TextSelection_baseOffset]: -1
      });
    },
    get C161() {
      return C[161] = dart.constList(["\\not"], T$.StringL());
    },
    get C163() {
      return C[163] = dart.fn(katex_ext._notHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[163] || CT.C163,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C160() {
      return C[160] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[161] || CT.C161, C[162] || CT.C162]);
    },
    get C164() {
      return C[164] = dart.constMap(T$.StringL(), T$.StringL(), ["←", "↚", "→", "↛", "↔", "↮", "⇐", "⇍", "⇒", "⇏", "⇔", "⇎", "∈", "∉", "∋", "∌", "∣", "∤", "∥", "∦", "∼", "≁", "~", "≁", "≃", "≄", "≅", "≇", "≈", "≉", "≍", "≭", "=", "≠", "≡", "≢", "<", "≮", ">", "≯", "≤", "≰", "≥", "≱", "≲", "≴", "≳", "≵", "≶", "≸", "≷", "≹", "≺", "⊀", "≻", "⊁", "⊂", "⊄", "⊃", "⊅", "⊆", "⊈", "⊇", "⊉", "⊢", "⊬", "⊨", "⊭", "⊩", "⊮", "⊫", "⊯", "≼", "⋠", "≽", "⋡", "⊑", "⋢", "⊒", "⋣", "⊲", "⋪", "⊳", "⋫", "⊴", "⋬", "⊵", "⋭", "∃", "∄"]);
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "ruleThickness",
        [S._Location_column]: 13,
        [S._Location_line]: 54,
        [S._Location_file]: null
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "jotSize",
        [S._Location_column]: 13,
        [S._Location_line]: 56,
        [S._Location_file]: null
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "arrayskip",
        [S._Location_column]: 13,
        [S._Location_line]: 57,
        [S._Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hlines",
        [S._Location_column]: 13,
        [S._Location_line]: 58,
        [S._Location_file]: null
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "rowSpacings",
        [S._Location_column]: 13,
        [S._Location_line]: 59,
        [S._Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 62,
        [S._Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.constList([C[167] || CT.C167, C[168] || CT.C168, C[169] || CT.C169, C[170] || CT.C170, C[171] || CT.C171, C[172] || CT.C172], T$._LocationL());
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[166] || CT.C166,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 53,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/equation_array.dart"
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 11,
        [S._Location_line]: 51,
        [S._Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 11,
        [S._Location_line]: 52,
        [S._Location_file]: null
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 53,
        [S._Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.constList([C[175] || CT.C175, C[176] || CT.C176, C[177] || CT.C177], T$._LocationL());
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[174] || CT.C174,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 50,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/equation_array.dart"
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.rel",
        index: 3
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.close",
        index: 5
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.punct",
        index: 6
      });
    },
    get C178() {
      return C[178] = dart.constSet(T$.AtomTypeN(), [C[179] || CT.C179, C[180] || CT.C180, C[181] || CT.C181, null]);
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.bin",
        index: 2
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.open",
        index: 4
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.op",
        index: 1
      });
    },
    get C182() {
      return C[182] = dart.constSet(T$.AtomTypeN(), [C[183] || CT.C183, C[184] || CT.C184, C[179] || CT.C179, C[185] || CT.C185, C[181] || CT.C181, null]);
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 551,
        [S._Location_file]: null
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "canBreakBefore",
        [S._Location_column]: 9,
        [S._Location_line]: 552,
        [S._Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignerOrSpacer",
        [S._Location_column]: 9,
        [S._Location_line]: 553,
        [S._Location_file]: null
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 9,
        [S._Location_line]: 555,
        [S._Location_file]: null
      });
    },
    get C187() {
      return C[187] = dart.constList([C[188] || CT.C188, C[189] || CT.C189, C[190] || CT.C190, C[191] || CT.C191], T$._LocationL());
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[187] || CT.C187,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 550,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 11,
        [S._Location_line]: 563,
        [S._Location_file]: null
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 564,
        [S._Location_file]: null
      });
    },
    get C193() {
      return C[193] = dart.constList([C[194] || CT.C194, C[195] || CT.C195], T$._LocationL());
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[193] || CT.C193,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 562,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "key",
        [S._Location_column]: 15,
        [S._Location_line]: 609,
        [S._Location_file]: null
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 15,
        [S._Location_line]: 610,
        [S._Location_file]: null
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "devicePixelRatio",
        [S._Location_column]: 15,
        [S._Location_line]: 611,
        [S._Location_file]: null
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "node",
        [S._Location_column]: 15,
        [S._Location_line]: 612,
        [S._Location_file]: null
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "preferredLineHeight",
        [S._Location_column]: 15,
        [S._Location_line]: 613,
        [S._Location_file]: null
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorBlinkOpacityController",
        [S._Location_column]: 15,
        [S._Location_line]: 614,
        [S._Location_file]: null
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selection",
        [S._Location_column]: 15,
        [S._Location_line]: 616,
        [S._Location_file]: null
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "startHandleLayerLink",
        [S._Location_column]: 15,
        [S._Location_line]: 617,
        [S._Location_file]: null
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "endHandleLayerLink",
        [S._Location_column]: 15,
        [S._Location_line]: 618,
        [S._Location_file]: null
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorColor",
        [S._Location_column]: 15,
        [S._Location_line]: 619,
        [S._Location_file]: null
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorOffset",
        [S._Location_column]: 15,
        [S._Location_line]: 620,
        [S._Location_file]: null
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorRadius",
        [S._Location_column]: 15,
        [S._Location_line]: 621,
        [S._Location_file]: null
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorWidth",
        [S._Location_column]: 15,
        [S._Location_line]: 622,
        [S._Location_file]: null
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorHeight",
        [S._Location_column]: 15,
        [S._Location_line]: 623,
        [S._Location_file]: null
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hintingColor",
        [S._Location_column]: 15,
        [S._Location_line]: 624,
        [S._Location_file]: null
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "paintCursorAboveText",
        [S._Location_column]: 15,
        [S._Location_line]: 625,
        [S._Location_file]: null
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectionColor",
        [S._Location_column]: 15,
        [S._Location_line]: 626,
        [S._Location_file]: null
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showCursor",
        [S._Location_column]: 15,
        [S._Location_line]: 627,
        [S._Location_file]: null
      });
    },
    get C197() {
      return C[197] = dart.constList([C[198] || CT.C198, C[199] || CT.C199, C[200] || CT.C200, C[201] || CT.C201, C[202] || CT.C202, C[203] || CT.C203, C[204] || CT.C204, C[205] || CT.C205, C[206] || CT.C206, C[207] || CT.C207, C[208] || CT.C208, C[209] || CT.C209, C[210] || CT.C210, C[211] || CT.C211, C[212] || CT.C212, C[213] || CT.C213, C[214] || CT.C214, C[215] || CT.C215], T$._LocationL());
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[197] || CT.C197,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 608,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selector",
        [S._Location_column]: 11,
        [S._Location_line]: 581,
        [S._Location_file]: null
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 11,
        [S._Location_line]: 606,
        [S._Location_file]: null
      });
    },
    get C217() {
      return C[217] = dart.constList([C[218] || CT.C218, C[219] || CT.C219], T$._LocationL());
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[217] || CT.C217,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 579,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "create",
        [S._Location_column]: 9,
        [S._Location_line]: 570,
        [S._Location_file]: null
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "update",
        [S._Location_column]: 9,
        [S._Location_line]: 571,
        [S._Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 579,
        [S._Location_file]: null
      });
    },
    get C221() {
      return C[221] = dart.constList([C[222] || CT.C222, C[223] || CT.C223, C[224] || CT.C224], T$._LocationL());
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[221] || CT.C221,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 569,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 46,
        [S._Location_line]: 560,
        [S._Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.constList([C[227] || CT.C227], T$._LocationL());
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[226] || CT.C226,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 560,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: ui.TextRange.prototype,
        [S.TextRange_end]: -1,
        [S.TextRange_start]: 0
      });
    },
    get C230() {
      return C[230] = dart.constList(["cases", "dcases", "rcases", "drcases"], T$.StringL());
    },
    get C232() {
      return C[232] = dart.fn(eqn_array$._casesHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[232] || CT.C232,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 0
      });
    },
    get C233() {
      return C[233] = dart.constList(["aligned"], T$.StringL());
    },
    get C235() {
      return C[235] = dart.fn(eqn_array$._alignedHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[235] || CT.C235,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 0
      });
    },
    get C236() {
      return C[236] = dart.constList(["alignedat"], T$.StringL());
    },
    get C238() {
      return C[238] = dart.fn(eqn_array$._alignedAtHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[238] || CT.C238,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 1
      });
    },
    get C229() {
      return C[229] = dart.constMap(T$.ListLOfStringL(), T$.EnvSpecL(), [C[230] || CT.C230, C[231] || CT.C231, C[233] || CT.C233, C[234] || CT.C234, C[236] || CT.C236, C[237] || CT.C237]);
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≙"
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≚"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≛"
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≝"
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≞"
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≟"
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≠"
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∉"
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∌"
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[181] || CT.C181,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: ":"
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∷"
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≔"
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≕"
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∹"
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟦"
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟧"
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⦃"
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⦄"
      });
    },
    get C239() {
      return C[239] = dart.constMap(T$.StringL(), T$.TexSymbolConfigL(), ["≙", C[240] || CT.C240, "≚", C[241] || CT.C241, "≛", C[242] || CT.C242, "≝", C[243] || CT.C243, "≞", C[244] || CT.C244, "≟", C[245] || CT.C245, "\\neq", C[246] || CT.C246, "\\notin", C[247] || CT.C247, "\\notni", C[248] || CT.C248, "≠", C[246] || CT.C246, "∉", C[247] || CT.C247, "∌", C[248] || CT.C248, "\\colon", C[249] || CT.C249, "\\dblcolon", C[250] || CT.C250, "\\coloneqq", C[251] || CT.C251, "\\eqqcolon", C[252] || CT.C252, "\\eqcolon", C[253] || CT.C253, "\\llbracket", C[254] || CT.C254, "\\rrbracket", C[255] || CT.C255, "\\lBrace", C[256] || CT.C256, "\\rBrace", C[257] || CT.C257]);
    },
    get C258() {
      return C[258] = dart.constMap(T$.StringL(), T$.TexSymbolConfigL(), []);
    },
    get C260() {
      return C[260] = dart.constList([], T$.FontOptionsL());
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: ui.FontStyle.prototype,
        [S._name$2]: "FontStyle.normal",
        index: 0
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [S.FontWeight_index]: 3
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Main"
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "AMS"
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: ui.FontStyle.prototype,
        [S._name$2]: "FontStyle.italic",
        index: 1
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[265] || CT.C265,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Math"
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "0"
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "1"
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "2"
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "3"
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "4"
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "5"
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "6"
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "7"
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "8"
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "9"
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≡"
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≺"
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≻"
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∼"
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪯"
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪰"
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≃"
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∣"
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≪"
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≫"
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≍"
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋈"
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌣"
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊑"
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊒"
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≐"
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌢"
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∋"
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∝"
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊢"
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊣"
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℵ"
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∀"
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℏ"
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∃"
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∇"
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♭"
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℓ"
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♮"
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♣"
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "℘"
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♯"
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♢"
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℜ"
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♡"
      });
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℑ"
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "♠"
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⎱"
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⎰"
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟯"
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟮"
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∓"
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊖"
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊎"
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊓"
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊔"
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≀"
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟵"
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇐"
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟸"
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟶"
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇒"
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟹"
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↔"
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟷"
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇔"
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟺"
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↦"
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟼"
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↗"
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↩"
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↪"
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↘"
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↼"
      });
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇀"
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↙"
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↽"
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇁"
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↖"
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇌"
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≮"
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪇"
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≨"
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋦"
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪉"
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊀"
      });
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋠"
      });
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋨"
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪹"
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≁"
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∤"
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊬"
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊭"
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋬"
      });
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊊"
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⫋"
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≯"
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪈"
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≩"
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋧"
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪊"
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊁"
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋡"
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋩"
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪺"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≆"
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∦"
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊯"
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋭"
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊋"
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⫌"
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊮"
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪵"
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪶"
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↚"
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↛"
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇍"
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇏"
      });
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↮"
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇎"
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∡"
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ⅎ"
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⅁"
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∢"
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∁"
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ð"
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "¥"
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "✓"
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℶ"
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℸ"
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℷ"
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϝ"
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "┌"
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "┐"
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "└"
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "┘"
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≦"
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⩽"
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪕"
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≲"
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪅"
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≊"
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋘"
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≶"
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋚"
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪋"
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≓"
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≒"
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∽"
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋍"
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⫅"
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋐"
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊏"
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≼"
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋞"
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≾"
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪷"
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊨"
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊪"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≏"
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≎"
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≧"
      });
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⩾"
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪖"
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≳"
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪆"
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋙"
      });
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≷"
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋛"
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪌"
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≖"
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≗"
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≜"
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⫆"
      });
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋑"
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊐"
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≽"
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋟"
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≿"
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⪸"
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊩"
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≬"
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋔"
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∴"
      });
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∵"
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≂"
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≑"
      });
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∔"
      });
    },
    get C456() {
      return C[456] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋒"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋓"
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⩞"
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊟"
      });
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊞"
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋇"
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋉"
      });
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋊"
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋋"
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋌"
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋏"
      });
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋎"
      });
    },
    get C468() {
      return C[468] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊝"
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊛"
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊺"
      });
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊠"
      });
    },
    get C472() {
      return C[472] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇢"
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇠"
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇇"
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇆"
      });
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇚"
      });
    },
    get C477() {
      return C[477] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↞"
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↢"
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↫"
      });
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇋"
      });
    },
    get C481() {
      return C[481] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↶"
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↺"
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↰"
      });
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇈"
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↿"
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇃"
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊸"
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↭"
      });
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇉"
      });
    },
    get C490() {
      return C[490] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇄"
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↠"
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↣"
      });
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↬"
      });
    },
    get C494() {
      return C[494] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↷"
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↻"
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↱"
      });
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇊"
      });
    },
    get C498() {
      return C[498] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↾"
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇂"
      });
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇝"
      });
    },
    get C501() {
      return C[501] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇛"
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "`"
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∠"
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∞"
      });
    },
    get C505() {
      return C[505] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Γ"
      });
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Δ"
      });
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Θ"
      });
    },
    get C508() {
      return C[508] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Λ"
      });
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ξ"
      });
    },
    get C510() {
      return C[510] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Π"
      });
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Σ"
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Υ"
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Φ"
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ψ"
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ω"
      });
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Α"
      });
    },
    get C517() {
      return C[517] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Β"
      });
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ε"
      });
    },
    get C519() {
      return C[519] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ζ"
      });
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Η"
      });
    },
    get C521() {
      return C[521] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ι"
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Κ"
      });
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Μ"
      });
    },
    get C524() {
      return C[524] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ν"
      });
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ο"
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ρ"
      });
    },
    get C527() {
      return C[527] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Τ"
      });
    },
    get C528() {
      return C[528] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Χ"
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "¬"
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "α"
      });
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "β"
      });
    },
    get C532() {
      return C[532] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "γ"
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "δ"
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϵ"
      });
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ζ"
      });
    },
    get C536() {
      return C[536] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "η"
      });
    },
    get C537() {
      return C[537] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "θ"
      });
    },
    get C538() {
      return C[538] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ι"
      });
    },
    get C539() {
      return C[539] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "κ"
      });
    },
    get C540() {
      return C[540] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "λ"
      });
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "μ"
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ν"
      });
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ξ"
      });
    },
    get C544() {
      return C[544] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ο"
      });
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "π"
      });
    },
    get C546() {
      return C[546] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ρ"
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "σ"
      });
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "τ"
      });
    },
    get C549() {
      return C[549] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "υ"
      });
    },
    get C550() {
      return C[550] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϕ"
      });
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "χ"
      });
    },
    get C552() {
      return C[552] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ψ"
      });
    },
    get C553() {
      return C[553] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ω"
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ε"
      });
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϑ"
      });
    },
    get C556() {
      return C[556] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϖ"
      });
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϱ"
      });
    },
    get C558() {
      return C[558] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ς"
      });
    },
    get C559() {
      return C[559] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "φ"
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "*"
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "+"
      });
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "-"
      });
    },
    get C563() {
      return C[563] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋅"
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "÷"
      });
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "±"
      });
    },
    get C566() {
      return C[566] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "×"
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∩"
      });
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∪"
      });
    },
    get C569() {
      return C[569] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∧"
      });
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∨"
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "("
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "["
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟨"
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: ")"
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "]"
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "?"
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "!"
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⟩"
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "="
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "<"
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: ">"
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: ":"
      });
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≈"
      });
    },
    get C584() {
      return C[584] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≅"
      });
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≥"
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∈"
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊂"
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊃"
      });
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊆"
      });
    },
    get C590() {
      return C[590] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊇"
      });
    },
    get C591() {
      return C[591] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊈"
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊉"
      });
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "←"
      });
    },
    get C594() {
      return C[594] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≤"
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "→"
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≱"
      });
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "≰"
      });
    },
    get C598() {
      return C[598] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: ","
      });
    },
    get C599() {
      return C[599] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: ";"
      });
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊼"
      });
    },
    get C601() {
      return C[601] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊻"
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊙"
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊕"
      });
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊗"
      });
    },
    get C605() {
      return C[605] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∂"
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊘"
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊚"
      });
    },
    get C608() {
      return C[608] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊡"
      });
    },
    get C609() {
      return C[609] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌊"
      });
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌋"
      });
    },
    get C611() {
      return C[611] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌈"
      });
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌉"
      });
    },
    get C613() {
      return C[613] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "|"
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↑"
      });
    },
    get C615() {
      return C[615] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇑"
      });
    },
    get C616() {
      return C[616] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↓"
      });
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇓"
      });
    },
    get C618() {
      return C[618] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "↕"
      });
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⇕"
      });
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "…"
      });
    },
    get C621() {
      return C[621] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋯"
      });
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋱"
      });
    },
    get C623() {
      return C[623] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ı"
      });
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ȷ"
      });
    },
    get C625() {
      return C[625] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "°"
      });
    },
    get C626() {
      return C[626] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "£"
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "/"
      });
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "@"
      });
    },
    get C629() {
      return C[629] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "."
      });
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "\""
      });
    },
    get C631() {
      return C[631] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "A"
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "B"
      });
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "C"
      });
    },
    get C634() {
      return C[634] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "D"
      });
    },
    get C635() {
      return C[635] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "E"
      });
    },
    get C636() {
      return C[636] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "F"
      });
    },
    get C637() {
      return C[637] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "G"
      });
    },
    get C638() {
      return C[638] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "H"
      });
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "I"
      });
    },
    get C640() {
      return C[640] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "J"
      });
    },
    get C641() {
      return C[641] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "K"
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "L"
      });
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "M"
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "N"
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "O"
      });
    },
    get C646() {
      return C[646] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "P"
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Q"
      });
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "R"
      });
    },
    get C649() {
      return C[649] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "S"
      });
    },
    get C650() {
      return C[650] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "T"
      });
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "U"
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "V"
      });
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "W"
      });
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "X"
      });
    },
    get C655() {
      return C[655] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Y"
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Z"
      });
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "a"
      });
    },
    get C658() {
      return C[658] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "b"
      });
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "c"
      });
    },
    get C660() {
      return C[660] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "d"
      });
    },
    get C661() {
      return C[661] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "e"
      });
    },
    get C662() {
      return C[662] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "f"
      });
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "g"
      });
    },
    get C664() {
      return C[664] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "h"
      });
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "i"
      });
    },
    get C666() {
      return C[666] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "j"
      });
    },
    get C667() {
      return C[667] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "k"
      });
    },
    get C668() {
      return C[668] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "l"
      });
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "m"
      });
    },
    get C670() {
      return C[670] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "n"
      });
    },
    get C671() {
      return C[671] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "o"
      });
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "p"
      });
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "q"
      });
    },
    get C674() {
      return C[674] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "r"
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "s"
      });
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "t"
      });
    },
    get C677() {
      return C[677] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "u"
      });
    },
    get C678() {
      return C[678] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "v"
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "w"
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "x"
      });
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "y"
      });
    },
    get C682() {
      return C[682] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "z"
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℂ"
      });
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℍ"
      });
    },
    get C685() {
      return C[685] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℕ"
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℙ"
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℚ"
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℝ"
      });
    },
    get C689() {
      return C[689] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℤ"
      });
    },
    get C690() {
      return C[690] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ℎ"
      });
    },
    get C691() {
      return C[691] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐀"
      });
    },
    get C692() {
      return C[692] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐴"
      });
    },
    get C693() {
      return C[693] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑨"
      });
    },
    get C694() {
      return C[694] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔄"
      });
    },
    get C695() {
      return C[695] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖠"
      });
    },
    get C696() {
      return C[696] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗔"
      });
    },
    get C697() {
      return C[697] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘈"
      });
    },
    get C698() {
      return C[698] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙰"
      });
    },
    get C699() {
      return C[699] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔸"
      });
    },
    get C700() {
      return C[700] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒜"
      });
    },
    get C701() {
      return C[701] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐁"
      });
    },
    get C702() {
      return C[702] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐵"
      });
    },
    get C703() {
      return C[703] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑩"
      });
    },
    get C704() {
      return C[704] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔅"
      });
    },
    get C705() {
      return C[705] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖡"
      });
    },
    get C706() {
      return C[706] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗕"
      });
    },
    get C707() {
      return C[707] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘉"
      });
    },
    get C708() {
      return C[708] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙱"
      });
    },
    get C709() {
      return C[709] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔹"
      });
    },
    get C710() {
      return C[710] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒝"
      });
    },
    get C711() {
      return C[711] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐂"
      });
    },
    get C712() {
      return C[712] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐶"
      });
    },
    get C713() {
      return C[713] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑪"
      });
    },
    get C714() {
      return C[714] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔆"
      });
    },
    get C715() {
      return C[715] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖢"
      });
    },
    get C716() {
      return C[716] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗖"
      });
    },
    get C717() {
      return C[717] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘊"
      });
    },
    get C718() {
      return C[718] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙲"
      });
    },
    get C719() {
      return C[719] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔺"
      });
    },
    get C720() {
      return C[720] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒞"
      });
    },
    get C721() {
      return C[721] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐃"
      });
    },
    get C722() {
      return C[722] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐷"
      });
    },
    get C723() {
      return C[723] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑫"
      });
    },
    get C724() {
      return C[724] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔇"
      });
    },
    get C725() {
      return C[725] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖣"
      });
    },
    get C726() {
      return C[726] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗗"
      });
    },
    get C727() {
      return C[727] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘋"
      });
    },
    get C728() {
      return C[728] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙳"
      });
    },
    get C729() {
      return C[729] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔻"
      });
    },
    get C730() {
      return C[730] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒟"
      });
    },
    get C731() {
      return C[731] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐄"
      });
    },
    get C732() {
      return C[732] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐸"
      });
    },
    get C733() {
      return C[733] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑬"
      });
    },
    get C734() {
      return C[734] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔈"
      });
    },
    get C735() {
      return C[735] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖤"
      });
    },
    get C736() {
      return C[736] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗘"
      });
    },
    get C737() {
      return C[737] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘌"
      });
    },
    get C738() {
      return C[738] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙴"
      });
    },
    get C739() {
      return C[739] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔼"
      });
    },
    get C740() {
      return C[740] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒠"
      });
    },
    get C741() {
      return C[741] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐅"
      });
    },
    get C742() {
      return C[742] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐹"
      });
    },
    get C743() {
      return C[743] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑭"
      });
    },
    get C744() {
      return C[744] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔉"
      });
    },
    get C745() {
      return C[745] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖥"
      });
    },
    get C746() {
      return C[746] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗙"
      });
    },
    get C747() {
      return C[747] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘍"
      });
    },
    get C748() {
      return C[748] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙵"
      });
    },
    get C749() {
      return C[749] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔽"
      });
    },
    get C750() {
      return C[750] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒡"
      });
    },
    get C751() {
      return C[751] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐆"
      });
    },
    get C752() {
      return C[752] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐺"
      });
    },
    get C753() {
      return C[753] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑮"
      });
    },
    get C754() {
      return C[754] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔊"
      });
    },
    get C755() {
      return C[755] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖦"
      });
    },
    get C756() {
      return C[756] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗚"
      });
    },
    get C757() {
      return C[757] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘎"
      });
    },
    get C758() {
      return C[758] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙶"
      });
    },
    get C759() {
      return C[759] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔾"
      });
    },
    get C760() {
      return C[760] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒢"
      });
    },
    get C761() {
      return C[761] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐇"
      });
    },
    get C762() {
      return C[762] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐻"
      });
    },
    get C763() {
      return C[763] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑯"
      });
    },
    get C764() {
      return C[764] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔋"
      });
    },
    get C765() {
      return C[765] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖧"
      });
    },
    get C766() {
      return C[766] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗛"
      });
    },
    get C767() {
      return C[767] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘏"
      });
    },
    get C768() {
      return C[768] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙷"
      });
    },
    get C769() {
      return C[769] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔿"
      });
    },
    get C770() {
      return C[770] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒣"
      });
    },
    get C771() {
      return C[771] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐈"
      });
    },
    get C772() {
      return C[772] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐼"
      });
    },
    get C773() {
      return C[773] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑰"
      });
    },
    get C774() {
      return C[774] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔌"
      });
    },
    get C775() {
      return C[775] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖨"
      });
    },
    get C776() {
      return C[776] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗜"
      });
    },
    get C777() {
      return C[777] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘐"
      });
    },
    get C778() {
      return C[778] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙸"
      });
    },
    get C779() {
      return C[779] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕀"
      });
    },
    get C780() {
      return C[780] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒤"
      });
    },
    get C781() {
      return C[781] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐉"
      });
    },
    get C782() {
      return C[782] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐽"
      });
    },
    get C783() {
      return C[783] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑱"
      });
    },
    get C784() {
      return C[784] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔍"
      });
    },
    get C785() {
      return C[785] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖩"
      });
    },
    get C786() {
      return C[786] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗝"
      });
    },
    get C787() {
      return C[787] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘑"
      });
    },
    get C788() {
      return C[788] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙹"
      });
    },
    get C789() {
      return C[789] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕁"
      });
    },
    get C790() {
      return C[790] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒥"
      });
    },
    get C791() {
      return C[791] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐊"
      });
    },
    get C792() {
      return C[792] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐾"
      });
    },
    get C793() {
      return C[793] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑲"
      });
    },
    get C794() {
      return C[794] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔎"
      });
    },
    get C795() {
      return C[795] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖪"
      });
    },
    get C796() {
      return C[796] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗞"
      });
    },
    get C797() {
      return C[797] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘒"
      });
    },
    get C798() {
      return C[798] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙺"
      });
    },
    get C799() {
      return C[799] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕂"
      });
    },
    get C800() {
      return C[800] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒦"
      });
    },
    get C801() {
      return C[801] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐋"
      });
    },
    get C802() {
      return C[802] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐿"
      });
    },
    get C803() {
      return C[803] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑳"
      });
    },
    get C804() {
      return C[804] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔏"
      });
    },
    get C805() {
      return C[805] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖫"
      });
    },
    get C806() {
      return C[806] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗟"
      });
    },
    get C807() {
      return C[807] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘓"
      });
    },
    get C808() {
      return C[808] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙻"
      });
    },
    get C809() {
      return C[809] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕃"
      });
    },
    get C810() {
      return C[810] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒧"
      });
    },
    get C811() {
      return C[811] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐌"
      });
    },
    get C812() {
      return C[812] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑀"
      });
    },
    get C813() {
      return C[813] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑴"
      });
    },
    get C814() {
      return C[814] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔐"
      });
    },
    get C815() {
      return C[815] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖬"
      });
    },
    get C816() {
      return C[816] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗠"
      });
    },
    get C817() {
      return C[817] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘔"
      });
    },
    get C818() {
      return C[818] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙼"
      });
    },
    get C819() {
      return C[819] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕄"
      });
    },
    get C820() {
      return C[820] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒨"
      });
    },
    get C821() {
      return C[821] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐍"
      });
    },
    get C822() {
      return C[822] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑁"
      });
    },
    get C823() {
      return C[823] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑵"
      });
    },
    get C824() {
      return C[824] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔑"
      });
    },
    get C825() {
      return C[825] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖭"
      });
    },
    get C826() {
      return C[826] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗡"
      });
    },
    get C827() {
      return C[827] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘕"
      });
    },
    get C828() {
      return C[828] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙽"
      });
    },
    get C829() {
      return C[829] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕅"
      });
    },
    get C830() {
      return C[830] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒩"
      });
    },
    get C831() {
      return C[831] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐎"
      });
    },
    get C832() {
      return C[832] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑂"
      });
    },
    get C833() {
      return C[833] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑶"
      });
    },
    get C834() {
      return C[834] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔒"
      });
    },
    get C835() {
      return C[835] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖮"
      });
    },
    get C836() {
      return C[836] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗢"
      });
    },
    get C837() {
      return C[837] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘖"
      });
    },
    get C838() {
      return C[838] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙾"
      });
    },
    get C839() {
      return C[839] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕆"
      });
    },
    get C840() {
      return C[840] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒪"
      });
    },
    get C841() {
      return C[841] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐏"
      });
    },
    get C842() {
      return C[842] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑃"
      });
    },
    get C843() {
      return C[843] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑷"
      });
    },
    get C844() {
      return C[844] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔓"
      });
    },
    get C845() {
      return C[845] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖯"
      });
    },
    get C846() {
      return C[846] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗣"
      });
    },
    get C847() {
      return C[847] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘗"
      });
    },
    get C848() {
      return C[848] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝙿"
      });
    },
    get C849() {
      return C[849] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕇"
      });
    },
    get C850() {
      return C[850] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒫"
      });
    },
    get C851() {
      return C[851] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐐"
      });
    },
    get C852() {
      return C[852] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑄"
      });
    },
    get C853() {
      return C[853] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑸"
      });
    },
    get C854() {
      return C[854] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔔"
      });
    },
    get C855() {
      return C[855] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖰"
      });
    },
    get C856() {
      return C[856] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗤"
      });
    },
    get C857() {
      return C[857] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘘"
      });
    },
    get C858() {
      return C[858] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚀"
      });
    },
    get C859() {
      return C[859] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕈"
      });
    },
    get C860() {
      return C[860] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒬"
      });
    },
    get C861() {
      return C[861] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐑"
      });
    },
    get C862() {
      return C[862] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑅"
      });
    },
    get C863() {
      return C[863] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑹"
      });
    },
    get C864() {
      return C[864] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔕"
      });
    },
    get C865() {
      return C[865] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖱"
      });
    },
    get C866() {
      return C[866] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗥"
      });
    },
    get C867() {
      return C[867] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘙"
      });
    },
    get C868() {
      return C[868] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚁"
      });
    },
    get C869() {
      return C[869] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕉"
      });
    },
    get C870() {
      return C[870] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒭"
      });
    },
    get C871() {
      return C[871] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐒"
      });
    },
    get C872() {
      return C[872] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑆"
      });
    },
    get C873() {
      return C[873] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑺"
      });
    },
    get C874() {
      return C[874] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔖"
      });
    },
    get C875() {
      return C[875] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖲"
      });
    },
    get C876() {
      return C[876] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗦"
      });
    },
    get C877() {
      return C[877] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘚"
      });
    },
    get C878() {
      return C[878] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚂"
      });
    },
    get C879() {
      return C[879] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕊"
      });
    },
    get C880() {
      return C[880] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒮"
      });
    },
    get C881() {
      return C[881] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐓"
      });
    },
    get C882() {
      return C[882] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑇"
      });
    },
    get C883() {
      return C[883] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑻"
      });
    },
    get C884() {
      return C[884] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔗"
      });
    },
    get C885() {
      return C[885] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖳"
      });
    },
    get C886() {
      return C[886] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗧"
      });
    },
    get C887() {
      return C[887] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘛"
      });
    },
    get C888() {
      return C[888] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚃"
      });
    },
    get C889() {
      return C[889] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕋"
      });
    },
    get C890() {
      return C[890] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒯"
      });
    },
    get C891() {
      return C[891] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐔"
      });
    },
    get C892() {
      return C[892] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑈"
      });
    },
    get C893() {
      return C[893] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑼"
      });
    },
    get C894() {
      return C[894] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔘"
      });
    },
    get C895() {
      return C[895] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖴"
      });
    },
    get C896() {
      return C[896] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗨"
      });
    },
    get C897() {
      return C[897] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘜"
      });
    },
    get C898() {
      return C[898] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚄"
      });
    },
    get C899() {
      return C[899] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕌"
      });
    },
    get C900() {
      return C[900] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒰"
      });
    },
    get C901() {
      return C[901] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐕"
      });
    },
    get C902() {
      return C[902] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑉"
      });
    },
    get C903() {
      return C[903] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑽"
      });
    },
    get C904() {
      return C[904] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔙"
      });
    },
    get C905() {
      return C[905] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖵"
      });
    },
    get C906() {
      return C[906] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗩"
      });
    },
    get C907() {
      return C[907] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘝"
      });
    },
    get C908() {
      return C[908] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚅"
      });
    },
    get C909() {
      return C[909] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕍"
      });
    },
    get C910() {
      return C[910] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒱"
      });
    },
    get C911() {
      return C[911] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐖"
      });
    },
    get C912() {
      return C[912] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑊"
      });
    },
    get C913() {
      return C[913] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑾"
      });
    },
    get C914() {
      return C[914] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔚"
      });
    },
    get C915() {
      return C[915] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖶"
      });
    },
    get C916() {
      return C[916] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗪"
      });
    },
    get C917() {
      return C[917] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘞"
      });
    },
    get C918() {
      return C[918] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚆"
      });
    },
    get C919() {
      return C[919] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕎"
      });
    },
    get C920() {
      return C[920] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒲"
      });
    },
    get C921() {
      return C[921] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐗"
      });
    },
    get C922() {
      return C[922] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑋"
      });
    },
    get C923() {
      return C[923] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑿"
      });
    },
    get C924() {
      return C[924] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔛"
      });
    },
    get C925() {
      return C[925] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖷"
      });
    },
    get C926() {
      return C[926] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗫"
      });
    },
    get C927() {
      return C[927] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘟"
      });
    },
    get C928() {
      return C[928] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚇"
      });
    },
    get C929() {
      return C[929] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕏"
      });
    },
    get C930() {
      return C[930] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒳"
      });
    },
    get C931() {
      return C[931] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐘"
      });
    },
    get C932() {
      return C[932] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑌"
      });
    },
    get C933() {
      return C[933] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒀"
      });
    },
    get C934() {
      return C[934] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔜"
      });
    },
    get C935() {
      return C[935] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖸"
      });
    },
    get C936() {
      return C[936] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗬"
      });
    },
    get C937() {
      return C[937] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘠"
      });
    },
    get C938() {
      return C[938] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚈"
      });
    },
    get C939() {
      return C[939] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕐"
      });
    },
    get C940() {
      return C[940] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒴"
      });
    },
    get C941() {
      return C[941] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐙"
      });
    },
    get C942() {
      return C[942] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑍"
      });
    },
    get C943() {
      return C[943] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒁"
      });
    },
    get C944() {
      return C[944] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔝"
      });
    },
    get C945() {
      return C[945] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖹"
      });
    },
    get C946() {
      return C[946] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗭"
      });
    },
    get C947() {
      return C[947] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘡"
      });
    },
    get C948() {
      return C[948] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚉"
      });
    },
    get C949() {
      return C[949] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕑"
      });
    },
    get C950() {
      return C[950] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒵"
      });
    },
    get C951() {
      return C[951] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐚"
      });
    },
    get C952() {
      return C[952] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑎"
      });
    },
    get C953() {
      return C[953] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒂"
      });
    },
    get C954() {
      return C[954] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔞"
      });
    },
    get C955() {
      return C[955] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖺"
      });
    },
    get C956() {
      return C[956] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗮"
      });
    },
    get C957() {
      return C[957] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘢"
      });
    },
    get C958() {
      return C[958] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚊"
      });
    },
    get C959() {
      return C[959] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐛"
      });
    },
    get C960() {
      return C[960] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑏"
      });
    },
    get C961() {
      return C[961] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒃"
      });
    },
    get C962() {
      return C[962] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔟"
      });
    },
    get C963() {
      return C[963] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖻"
      });
    },
    get C964() {
      return C[964] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗯"
      });
    },
    get C965() {
      return C[965] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘣"
      });
    },
    get C966() {
      return C[966] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚋"
      });
    },
    get C967() {
      return C[967] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐜"
      });
    },
    get C968() {
      return C[968] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑐"
      });
    },
    get C969() {
      return C[969] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒄"
      });
    },
    get C970() {
      return C[970] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔠"
      });
    },
    get C971() {
      return C[971] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖼"
      });
    },
    get C972() {
      return C[972] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗰"
      });
    },
    get C973() {
      return C[973] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘤"
      });
    },
    get C974() {
      return C[974] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚌"
      });
    },
    get C975() {
      return C[975] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐝"
      });
    },
    get C976() {
      return C[976] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑑"
      });
    },
    get C977() {
      return C[977] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒅"
      });
    },
    get C978() {
      return C[978] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔡"
      });
    },
    get C979() {
      return C[979] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖽"
      });
    },
    get C980() {
      return C[980] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗱"
      });
    },
    get C981() {
      return C[981] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘥"
      });
    },
    get C982() {
      return C[982] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚍"
      });
    },
    get C983() {
      return C[983] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐞"
      });
    },
    get C984() {
      return C[984] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑒"
      });
    },
    get C985() {
      return C[985] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒆"
      });
    },
    get C986() {
      return C[986] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔢"
      });
    },
    get C987() {
      return C[987] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖾"
      });
    },
    get C988() {
      return C[988] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗲"
      });
    },
    get C989() {
      return C[989] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘦"
      });
    },
    get C990() {
      return C[990] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚎"
      });
    },
    get C991() {
      return C[991] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐟"
      });
    },
    get C992() {
      return C[992] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑓"
      });
    },
    get C993() {
      return C[993] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒇"
      });
    },
    get C994() {
      return C[994] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔣"
      });
    },
    get C995() {
      return C[995] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝖿"
      });
    },
    get C996() {
      return C[996] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗳"
      });
    },
    get C997() {
      return C[997] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘧"
      });
    },
    get C998() {
      return C[998] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚏"
      });
    },
    get C999() {
      return C[999] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐠"
      });
    },
    get C1000() {
      return C[1000] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑔"
      });
    },
    get C1001() {
      return C[1001] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒈"
      });
    },
    get C1002() {
      return C[1002] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔤"
      });
    },
    get C1003() {
      return C[1003] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗀"
      });
    },
    get C1004() {
      return C[1004] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗴"
      });
    },
    get C1005() {
      return C[1005] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘨"
      });
    },
    get C1006() {
      return C[1006] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚐"
      });
    },
    get C1007() {
      return C[1007] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐡"
      });
    },
    get C1008() {
      return C[1008] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑕"
      });
    },
    get C1009() {
      return C[1009] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒉"
      });
    },
    get C1010() {
      return C[1010] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔥"
      });
    },
    get C1011() {
      return C[1011] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗁"
      });
    },
    get C1012() {
      return C[1012] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗵"
      });
    },
    get C1013() {
      return C[1013] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘩"
      });
    },
    get C1014() {
      return C[1014] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚑"
      });
    },
    get C1015() {
      return C[1015] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐢"
      });
    },
    get C1016() {
      return C[1016] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑖"
      });
    },
    get C1017() {
      return C[1017] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒊"
      });
    },
    get C1018() {
      return C[1018] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔦"
      });
    },
    get C1019() {
      return C[1019] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗂"
      });
    },
    get C1020() {
      return C[1020] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗶"
      });
    },
    get C1021() {
      return C[1021] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘪"
      });
    },
    get C1022() {
      return C[1022] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚒"
      });
    },
    get C1023() {
      return C[1023] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐣"
      });
    },
    get C1024() {
      return C[1024] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑗"
      });
    },
    get C1025() {
      return C[1025] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒋"
      });
    },
    get C1026() {
      return C[1026] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔧"
      });
    },
    get C1027() {
      return C[1027] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗃"
      });
    },
    get C1028() {
      return C[1028] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗷"
      });
    },
    get C1029() {
      return C[1029] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘫"
      });
    },
    get C1030() {
      return C[1030] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚓"
      });
    },
    get C1031() {
      return C[1031] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐤"
      });
    },
    get C1032() {
      return C[1032] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑘"
      });
    },
    get C1033() {
      return C[1033] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒌"
      });
    },
    get C1034() {
      return C[1034] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔨"
      });
    },
    get C1035() {
      return C[1035] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗄"
      });
    },
    get C1036() {
      return C[1036] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗸"
      });
    },
    get C1037() {
      return C[1037] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘬"
      });
    },
    get C1038() {
      return C[1038] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚔"
      });
    },
    get C1039() {
      return C[1039] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐥"
      });
    },
    get C1040() {
      return C[1040] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑙"
      });
    },
    get C1041() {
      return C[1041] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒍"
      });
    },
    get C1042() {
      return C[1042] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔩"
      });
    },
    get C1043() {
      return C[1043] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗅"
      });
    },
    get C1044() {
      return C[1044] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗹"
      });
    },
    get C1045() {
      return C[1045] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘭"
      });
    },
    get C1046() {
      return C[1046] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚕"
      });
    },
    get C1047() {
      return C[1047] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐦"
      });
    },
    get C1048() {
      return C[1048] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑚"
      });
    },
    get C1049() {
      return C[1049] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒎"
      });
    },
    get C1050() {
      return C[1050] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔪"
      });
    },
    get C1051() {
      return C[1051] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗆"
      });
    },
    get C1052() {
      return C[1052] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗺"
      });
    },
    get C1053() {
      return C[1053] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘮"
      });
    },
    get C1054() {
      return C[1054] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚖"
      });
    },
    get C1055() {
      return C[1055] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐧"
      });
    },
    get C1056() {
      return C[1056] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑛"
      });
    },
    get C1057() {
      return C[1057] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒏"
      });
    },
    get C1058() {
      return C[1058] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔫"
      });
    },
    get C1059() {
      return C[1059] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗇"
      });
    },
    get C1060() {
      return C[1060] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗻"
      });
    },
    get C1061() {
      return C[1061] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘯"
      });
    },
    get C1062() {
      return C[1062] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚗"
      });
    },
    get C1063() {
      return C[1063] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐨"
      });
    },
    get C1064() {
      return C[1064] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑜"
      });
    },
    get C1065() {
      return C[1065] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒐"
      });
    },
    get C1066() {
      return C[1066] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔬"
      });
    },
    get C1067() {
      return C[1067] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗈"
      });
    },
    get C1068() {
      return C[1068] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗼"
      });
    },
    get C1069() {
      return C[1069] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘰"
      });
    },
    get C1070() {
      return C[1070] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚘"
      });
    },
    get C1071() {
      return C[1071] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐩"
      });
    },
    get C1072() {
      return C[1072] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑝"
      });
    },
    get C1073() {
      return C[1073] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒑"
      });
    },
    get C1074() {
      return C[1074] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔭"
      });
    },
    get C1075() {
      return C[1075] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗉"
      });
    },
    get C1076() {
      return C[1076] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗽"
      });
    },
    get C1077() {
      return C[1077] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘱"
      });
    },
    get C1078() {
      return C[1078] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚙"
      });
    },
    get C1079() {
      return C[1079] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐪"
      });
    },
    get C1080() {
      return C[1080] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑞"
      });
    },
    get C1081() {
      return C[1081] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒒"
      });
    },
    get C1082() {
      return C[1082] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔮"
      });
    },
    get C1083() {
      return C[1083] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗊"
      });
    },
    get C1084() {
      return C[1084] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗾"
      });
    },
    get C1085() {
      return C[1085] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘲"
      });
    },
    get C1086() {
      return C[1086] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚚"
      });
    },
    get C1087() {
      return C[1087] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐫"
      });
    },
    get C1088() {
      return C[1088] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑟"
      });
    },
    get C1089() {
      return C[1089] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒓"
      });
    },
    get C1090() {
      return C[1090] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔯"
      });
    },
    get C1091() {
      return C[1091] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗋"
      });
    },
    get C1092() {
      return C[1092] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗿"
      });
    },
    get C1093() {
      return C[1093] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘳"
      });
    },
    get C1094() {
      return C[1094] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚛"
      });
    },
    get C1095() {
      return C[1095] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐬"
      });
    },
    get C1096() {
      return C[1096] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑠"
      });
    },
    get C1097() {
      return C[1097] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒔"
      });
    },
    get C1098() {
      return C[1098] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔰"
      });
    },
    get C1099() {
      return C[1099] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗌"
      });
    },
    get C1100() {
      return C[1100] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘀"
      });
    },
    get C1101() {
      return C[1101] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘴"
      });
    },
    get C1102() {
      return C[1102] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚜"
      });
    },
    get C1103() {
      return C[1103] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐭"
      });
    },
    get C1104() {
      return C[1104] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑡"
      });
    },
    get C1105() {
      return C[1105] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒕"
      });
    },
    get C1106() {
      return C[1106] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔱"
      });
    },
    get C1107() {
      return C[1107] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗍"
      });
    },
    get C1108() {
      return C[1108] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘁"
      });
    },
    get C1109() {
      return C[1109] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘵"
      });
    },
    get C1110() {
      return C[1110] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚝"
      });
    },
    get C1111() {
      return C[1111] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐮"
      });
    },
    get C1112() {
      return C[1112] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑢"
      });
    },
    get C1113() {
      return C[1113] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒖"
      });
    },
    get C1114() {
      return C[1114] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔲"
      });
    },
    get C1115() {
      return C[1115] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗎"
      });
    },
    get C1116() {
      return C[1116] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘂"
      });
    },
    get C1117() {
      return C[1117] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘶"
      });
    },
    get C1118() {
      return C[1118] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚞"
      });
    },
    get C1119() {
      return C[1119] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐯"
      });
    },
    get C1120() {
      return C[1120] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑣"
      });
    },
    get C1121() {
      return C[1121] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒗"
      });
    },
    get C1122() {
      return C[1122] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔳"
      });
    },
    get C1123() {
      return C[1123] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗏"
      });
    },
    get C1124() {
      return C[1124] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘃"
      });
    },
    get C1125() {
      return C[1125] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘷"
      });
    },
    get C1126() {
      return C[1126] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚟"
      });
    },
    get C1127() {
      return C[1127] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐰"
      });
    },
    get C1128() {
      return C[1128] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑤"
      });
    },
    get C1129() {
      return C[1129] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒘"
      });
    },
    get C1130() {
      return C[1130] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔴"
      });
    },
    get C1131() {
      return C[1131] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗐"
      });
    },
    get C1132() {
      return C[1132] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘄"
      });
    },
    get C1133() {
      return C[1133] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘸"
      });
    },
    get C1134() {
      return C[1134] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚠"
      });
    },
    get C1135() {
      return C[1135] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐱"
      });
    },
    get C1136() {
      return C[1136] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑥"
      });
    },
    get C1137() {
      return C[1137] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒙"
      });
    },
    get C1138() {
      return C[1138] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔵"
      });
    },
    get C1139() {
      return C[1139] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗑"
      });
    },
    get C1140() {
      return C[1140] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘅"
      });
    },
    get C1141() {
      return C[1141] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘹"
      });
    },
    get C1142() {
      return C[1142] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚡"
      });
    },
    get C1143() {
      return C[1143] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐲"
      });
    },
    get C1144() {
      return C[1144] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑦"
      });
    },
    get C1145() {
      return C[1145] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒚"
      });
    },
    get C1146() {
      return C[1146] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔶"
      });
    },
    get C1147() {
      return C[1147] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗒"
      });
    },
    get C1148() {
      return C[1148] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘆"
      });
    },
    get C1149() {
      return C[1149] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘺"
      });
    },
    get C1150() {
      return C[1150] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚢"
      });
    },
    get C1151() {
      return C[1151] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝐳"
      });
    },
    get C1152() {
      return C[1152] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝑧"
      });
    },
    get C1153() {
      return C[1153] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝒛"
      });
    },
    get C1154() {
      return C[1154] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝔷"
      });
    },
    get C1155() {
      return C[1155] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝗓"
      });
    },
    get C1156() {
      return C[1156] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘇"
      });
    },
    get C1157() {
      return C[1157] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝘻"
      });
    },
    get C1158() {
      return C[1158] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝚣"
      });
    },
    get C1159() {
      return C[1159] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝕜"
      });
    },
    get C1160() {
      return C[1160] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟎"
      });
    },
    get C1161() {
      return C[1161] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟢"
      });
    },
    get C1162() {
      return C[1162] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟬"
      });
    },
    get C1163() {
      return C[1163] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟶"
      });
    },
    get C1164() {
      return C[1164] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟏"
      });
    },
    get C1165() {
      return C[1165] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟣"
      });
    },
    get C1166() {
      return C[1166] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟭"
      });
    },
    get C1167() {
      return C[1167] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟷"
      });
    },
    get C1168() {
      return C[1168] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟐"
      });
    },
    get C1169() {
      return C[1169] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟤"
      });
    },
    get C1170() {
      return C[1170] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟮"
      });
    },
    get C1171() {
      return C[1171] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟸"
      });
    },
    get C1172() {
      return C[1172] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟑"
      });
    },
    get C1173() {
      return C[1173] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟥"
      });
    },
    get C1174() {
      return C[1174] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟯"
      });
    },
    get C1175() {
      return C[1175] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟹"
      });
    },
    get C1176() {
      return C[1176] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟒"
      });
    },
    get C1177() {
      return C[1177] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟦"
      });
    },
    get C1178() {
      return C[1178] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟰"
      });
    },
    get C1179() {
      return C[1179] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟺"
      });
    },
    get C1180() {
      return C[1180] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟓"
      });
    },
    get C1181() {
      return C[1181] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟧"
      });
    },
    get C1182() {
      return C[1182] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟱"
      });
    },
    get C1183() {
      return C[1183] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟻"
      });
    },
    get C1184() {
      return C[1184] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟔"
      });
    },
    get C1185() {
      return C[1185] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟨"
      });
    },
    get C1186() {
      return C[1186] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟲"
      });
    },
    get C1187() {
      return C[1187] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟼"
      });
    },
    get C1188() {
      return C[1188] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟕"
      });
    },
    get C1189() {
      return C[1189] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟩"
      });
    },
    get C1190() {
      return C[1190] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟳"
      });
    },
    get C1191() {
      return C[1191] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟽"
      });
    },
    get C1192() {
      return C[1192] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟖"
      });
    },
    get C1193() {
      return C[1193] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟪"
      });
    },
    get C1194() {
      return C[1194] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟴"
      });
    },
    get C1195() {
      return C[1195] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟾"
      });
    },
    get C1196() {
      return C[1196] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟗"
      });
    },
    get C1197() {
      return C[1197] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟫"
      });
    },
    get C1198() {
      return C[1198] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟵"
      });
    },
    get C1199() {
      return C[1199] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "𝟿"
      });
    },
    get C1200() {
      return C[1200] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ç"
      });
    },
    get C1201() {
      return C[1201] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ð"
      });
    },
    get C1202() {
      return C[1202] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Þ"
      });
    },
    get C1203() {
      return C[1203] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ç"
      });
    },
    get C1204() {
      return C[1204] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "þ"
      });
    },
    get C1205() {
      return C[1205] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: " "
      });
    },
    get C1206() {
      return C[1206] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: " "
      });
    },
    get C1207() {
      return C[1207] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[181] || CT.C181,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "."
      });
    },
    get C1208() {
      return C[1208] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[181] || CT.C181,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋅"
      });
    },
    get C1209() {
      return C[1209] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⪇"
      });
    },
    get C1210() {
      return C[1210] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "≰"
      });
    },
    get C1211() {
      return C[1211] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "≨"
      });
    },
    get C1212() {
      return C[1212] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∤"
      });
    },
    get C1213() {
      return C[1213] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⊊"
      });
    },
    get C1214() {
      return C[1214] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⫋"
      });
    },
    get C1215() {
      return C[1215] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⪈"
      });
    },
    get C1216() {
      return C[1216] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "≱"
      });
    },
    get C1217() {
      return C[1217] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "≩"
      });
    },
    get C1218() {
      return C[1218] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∦"
      });
    },
    get C1219() {
      return C[1219] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⊉"
      });
    },
    get C1220() {
      return C[1220] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⊋"
      });
    },
    get C1221() {
      return C[1221] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⫌"
      });
    },
    get C1222() {
      return C[1222] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⊈"
      });
    },
    get C1223() {
      return C[1223] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "ℏ"
      });
    },
    get C1224() {
      return C[1224] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌜"
      });
    },
    get C1225() {
      return C[1225] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌝"
      });
    },
    get C1226() {
      return C[1226] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌞"
      });
    },
    get C1227() {
      return C[1227] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⌟"
      });
    },
    get C1228() {
      return C[1228] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⌣"
      });
    },
    get C1229() {
      return C[1229] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⌢"
      });
    },
    get C1230() {
      return C[1230] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∼"
      });
    },
    get C1231() {
      return C[1231] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "≈"
      });
    },
    get C1232() {
      return C[1232] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∣"
      });
    },
    get C1233() {
      return C[1233] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∝"
      });
    },
    get C1234() {
      return C[1234] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⋅"
      });
    },
    get C1235() {
      return C[1235] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[184] || CT.C184,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∣"
      });
    },
    get C1236() {
      return C[1236] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[180] || CT.C180,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∣"
      });
    },
    get C1237() {
      return C[1237] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⊨"
      });
    },
    get C1239() {
      return C[1239] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.ord",
        index: 0
      });
    },
    get C1238() {
      return C[1238] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[1239] || CT.C1239,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∣"
      });
    },
    get C1240() {
      return C[1240] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊥"
      });
    },
    get C1241() {
      return C[1241] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[1239] || CT.C1239,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊥"
      });
    },
    get C1242() {
      return C[1242] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∥"
      });
    },
    get C1243() {
      return C[1243] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∥"
      });
    },
    get C1244() {
      return C[1244] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[184] || CT.C184,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∥"
      });
    },
    get C1245() {
      return C[1245] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[180] || CT.C180,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∥"
      });
    },
    get C1246() {
      return C[1246] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[1239] || CT.C1239,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∥"
      });
    },
    get C1247() {
      return C[1247] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "#"
      });
    },
    get C1248() {
      return C[1248] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "&"
      });
    },
    get C1249() {
      return C[1249] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[183] || CT.C183,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "&"
      });
    },
    get C1250() {
      return C[1250] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "†"
      });
    },
    get C1251() {
      return C[1251] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[1239] || CT.C1239,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "†"
      });
    },
    get C1252() {
      return C[1252] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "‡"
      });
    },
    get C1253() {
      return C[1253] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[1239] || CT.C1239,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "‡"
      });
    },
    get C1254() {
      return C[1254] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "◯"
      });
    },
    get C1255() {
      return C[1255] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∙"
      });
    },
    get C1256() {
      return C[1256] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⨿"
      });
    },
    get C1257() {
      return C[1257] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋪"
      });
    },
    get C1258() {
      return C[1258] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋫"
      });
    },
    get C1259() {
      return C[1259] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊴"
      });
    },
    get C1260() {
      return C[1260] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[183] || CT.C183,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊴"
      });
    },
    get C1261() {
      return C[1261] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊵"
      });
    },
    get C1262() {
      return C[1262] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[183] || CT.C183,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊵"
      });
    },
    get C1263() {
      return C[1263] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "△"
      });
    },
    get C1264() {
      return C[1264] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "△"
      });
    },
    get C1265() {
      return C[1265] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[1239] || CT.C1239,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "△"
      });
    },
    get C1266() {
      return C[1266] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "▽"
      });
    },
    get C1267() {
      return C[1267] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "▽"
      });
    },
    get C1268() {
      return C[1268] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "◊"
      });
    },
    get C1269() {
      return C[1269] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ⓢ"
      });
    },
    get C1270() {
      return C[1270] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "®"
      });
    },
    get C1271() {
      return C[1271] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∄"
      });
    },
    get C1272() {
      return C[1272] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "℧"
      });
    },
    get C1273() {
      return C[1273] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "‵"
      });
    },
    get C1274() {
      return C[1274] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "▲"
      });
    },
    get C1275() {
      return C[1275] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "▼"
      });
    },
    get C1276() {
      return C[1276] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "■"
      });
    },
    get C1277() {
      return C[1277] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⧫"
      });
    },
    get C1278() {
      return C[1278] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "★"
      });
    },
    get C1279() {
      return C[1279] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "╱"
      });
    },
    get C1280() {
      return C[1280] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "╲"
      });
    },
    get C1281() {
      return C[1281] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "□"
      });
    },
    get C1282() {
      return C[1282] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ϰ"
      });
    },
    get C1283() {
      return C[1283] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋖"
      });
    },
    get C1284() {
      return C[1284] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊲"
      });
    },
    get C1285() {
      return C[1285] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "⊲"
      });
    },
    get C1286() {
      return C[1286] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋗"
      });
    },
    get C1287() {
      return C[1287] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊳"
      });
    },
    get C1288() {
      return C[1288] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: C[183] || CT.C183,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊳"
      });
    },
    get C1289() {
      return C[1289] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "◀"
      });
    },
    get C1290() {
      return C[1290] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∍"
      });
    },
    get C1291() {
      return C[1291] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "▶"
      });
    },
    get C1292() {
      return C[1292] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∖"
      });
    },
    get C1293() {
      return C[1293] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∖"
      });
    },
    get C1294() {
      return C[1294] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "$"
      });
    },
    get C1295() {
      return C[1295] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "%"
      });
    },
    get C1296() {
      return C[1296] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "_"
      });
    },
    get C1297() {
      return C[1297] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "′"
      });
    },
    get C1298() {
      return C[1298] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⊤"
      });
    },
    get C1299() {
      return C[1299] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∅"
      });
    },
    get C1300() {
      return C[1300] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: true,
        [S.TexSymbolConfig_symbol]: "∅"
      });
    },
    get C1301() {
      return C[1301] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∘"
      });
    },
    get C1302() {
      return C[1302] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "√"
      });
    },
    get C1303() {
      return C[1303] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "̸"
      });
    },
    get C1304() {
      return C[1304] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋄"
      });
    },
    get C1305() {
      return C[1305] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋆"
      });
    },
    get C1306() {
      return C[1306] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "◃"
      });
    },
    get C1307() {
      return C[1307] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "▹"
      });
    },
    get C1308() {
      return C[1308] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "{"
      });
    },
    get C1309() {
      return C[1309] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "}"
      });
    },
    get C1310() {
      return C[1310] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "\\"
      });
    },
    get C1311() {
      return C[1311] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∐"
      });
    },
    get C1312() {
      return C[1312] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋁"
      });
    },
    get C1313() {
      return C[1313] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋀"
      });
    },
    get C1314() {
      return C[1314] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⨄"
      });
    },
    get C1315() {
      return C[1315] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋂"
      });
    },
    get C1316() {
      return C[1316] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋃"
      });
    },
    get C1317() {
      return C[1317] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∫"
      });
    },
    get C1318() {
      return C[1318] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∬"
      });
    },
    get C1319() {
      return C[1319] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∭"
      });
    },
    get C1320() {
      return C[1320] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∏"
      });
    },
    get C1321() {
      return C[1321] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∑"
      });
    },
    get C1322() {
      return C[1322] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⨂"
      });
    },
    get C1323() {
      return C[1323] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⨁"
      });
    },
    get C1324() {
      return C[1324] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⨀"
      });
    },
    get C1325() {
      return C[1325] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∮"
      });
    },
    get C1326() {
      return C[1326] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∯"
      });
    },
    get C1327() {
      return C[1327] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "∰"
      });
    },
    get C1328() {
      return C[1328] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⨆"
      });
    },
    get C1329() {
      return C[1329] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⋮"
      });
    },
    get C1330() {
      return C[1330] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ˊ"
      });
    },
    get C1331() {
      return C[1331] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ˋ"
      });
    },
    get C1332() {
      return C[1332] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "¨"
      });
    },
    get C1333() {
      return C[1333] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "~"
      });
    },
    get C1334() {
      return C[1334] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ˉ"
      });
    },
    get C1335() {
      return C[1335] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "˘"
      });
    },
    get C1336() {
      return C[1336] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ˇ"
      });
    },
    get C1337() {
      return C[1337] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "^"
      });
    },
    get C1338() {
      return C[1338] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "⃗"
      });
    },
    get C1339() {
      return C[1339] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "˙"
      });
    },
    get C1340() {
      return C[1340] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "˚"
      });
    },
    get C1341() {
      return C[1341] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "✠"
      });
    },
    get C267() {
      return C[267] = dart.constMap(T$.StringL(), T$.TexSymbolConfigL(), ["0", C[268] || CT.C268, "1", C[269] || CT.C269, "2", C[270] || CT.C270, "3", C[271] || CT.C271, "4", C[272] || CT.C272, "5", C[273] || CT.C273, "6", C[274] || CT.C274, "7", C[275] || CT.C275, "8", C[276] || CT.C276, "9", C[277] || CT.C277, "≡", C[278] || CT.C278, "≺", C[279] || CT.C279, "≻", C[280] || CT.C280, "∼", C[281] || CT.C281, "⪯", C[282] || CT.C282, "⪰", C[283] || CT.C283, "≃", C[284] || CT.C284, "∣", C[285] || CT.C285, "≪", C[286] || CT.C286, "≫", C[287] || CT.C287, "≍", C[288] || CT.C288, "⋈", C[289] || CT.C289, "⌣", C[290] || CT.C290, "⊑", C[291] || CT.C291, "⊒", C[292] || CT.C292, "≐", C[293] || CT.C293, "⌢", C[294] || CT.C294, "∋", C[295] || CT.C295, "∝", C[296] || CT.C296, "⊢", C[297] || CT.C297, "⊣", C[298] || CT.C298, "ℵ", C[299] || CT.C299, "∀", C[300] || CT.C300, "ℏ", C[301] || CT.C301, "∃", C[302] || CT.C302, "∇", C[303] || CT.C303, "♭", C[304] || CT.C304, "ℓ", C[305] || CT.C305, "♮", C[306] || CT.C306, "♣", C[307] || CT.C307, "℘", C[308] || CT.C308, "♯", C[309] || CT.C309, "♢", C[310] || CT.C310, "ℜ", C[311] || CT.C311, "♡", C[312] || CT.C312, "ℑ", C[313] || CT.C313, "♠", C[314] || CT.C314, "⎱", C[315] || CT.C315, "⎰", C[316] || CT.C316, "⟯", C[317] || CT.C317, "⟮", C[318] || CT.C318, "∓", C[319] || CT.C319, "⊖", C[320] || CT.C320, "⊎", C[321] || CT.C321, "⊓", C[322] || CT.C322, "⊔", C[323] || CT.C323, "≀", C[324] || CT.C324, "⟵", C[325] || CT.C325, "⇐", C[326] || CT.C326, "⟸", C[327] || CT.C327, "⟶", C[328] || CT.C328, "⇒", C[329] || CT.C329, "⟹", C[330] || CT.C330, "↔", C[331] || CT.C331, "⟷", C[332] || CT.C332, "⇔", C[333] || CT.C333, "⟺", C[334] || CT.C334, "↦", C[335] || CT.C335, "⟼", C[336] || CT.C336, "↗", C[337] || CT.C337, "↩", C[338] || CT.C338, "↪", C[339] || CT.C339, "↘", C[340] || CT.C340, "↼", C[341] || CT.C341, "⇀", C[342] || CT.C342, "↙", C[343] || CT.C343, "↽", C[344] || CT.C344, "⇁", C[345] || CT.C345, "↖", C[346] || CT.C346, "⇌", C[347] || CT.C347, "≮", C[348] || CT.C348, "⪇", C[349] || CT.C349, "≨", C[350] || CT.C350, "⋦", C[351] || CT.C351, "⪉", C[352] || CT.C352, "⊀", C[353] || CT.C353, "⋠", C[354] || CT.C354, "⋨", C[355] || CT.C355, "⪹", C[356] || CT.C356, "≁", C[357] || CT.C357, "∤", C[358] || CT.C358, "⊬", C[359] || CT.C359, "⊭", C[360] || CT.C360, "⋬", C[361] || CT.C361, "⊊", C[362] || CT.C362, "⫋", C[363] || CT.C363, "≯", C[364] || CT.C364, "⪈", C[365] || CT.C365, "≩", C[366] || CT.C366, "⋧", C[367] || CT.C367, "⪊", C[368] || CT.C368, "⊁", C[369] || CT.C369, "⋡", C[370] || CT.C370, "⋩", C[371] || CT.C371, "⪺", C[372] || CT.C372, "≆", C[373] || CT.C373, "∦", C[374] || CT.C374, "⊯", C[375] || CT.C375, "⋭", C[376] || CT.C376, "⊋", C[377] || CT.C377, "⫌", C[378] || CT.C378, "⊮", C[379] || CT.C379, "⪵", C[380] || CT.C380, "⪶", C[381] || CT.C381, "↚", C[382] || CT.C382, "↛", C[383] || CT.C383, "⇍", C[384] || CT.C384, "⇏", C[385] || CT.C385, "↮", C[386] || CT.C386, "⇎", C[387] || CT.C387, "∡", C[388] || CT.C388, "Ⅎ", C[389] || CT.C389, "⅁", C[390] || CT.C390, "∢", C[391] || CT.C391, "∁", C[392] || CT.C392, "ð", C[393] || CT.C393, "¥", C[394] || CT.C394, "✓", C[395] || CT.C395, "ℶ", C[396] || CT.C396, "ℸ", C[397] || CT.C397, "ℷ", C[398] || CT.C398, "ϝ", C[399] || CT.C399, "┌", C[400] || CT.C400, "┐", C[401] || CT.C401, "└", C[402] || CT.C402, "┘", C[403] || CT.C403, "≦", C[404] || CT.C404, "⩽", C[405] || CT.C405, "⪕", C[406] || CT.C406, "≲", C[407] || CT.C407, "⪅", C[408] || CT.C408, "≊", C[409] || CT.C409, "⋘", C[410] || CT.C410, "≶", C[411] || CT.C411, "⋚", C[412] || CT.C412, "⪋", C[413] || CT.C413, "≓", C[414] || CT.C414, "≒", C[415] || CT.C415, "∽", C[416] || CT.C416, "⋍", C[417] || CT.C417, "⫅", C[418] || CT.C418, "⋐", C[419] || CT.C419, "⊏", C[420] || CT.C420, "≼", C[421] || CT.C421, "⋞", C[422] || CT.C422, "≾", C[423] || CT.C423, "⪷", C[424] || CT.C424, "⊨", C[425] || CT.C425, "⊪", C[426] || CT.C426, "≏", C[427] || CT.C427, "≎", C[428] || CT.C428, "≧", C[429] || CT.C429, "⩾", C[430] || CT.C430, "⪖", C[431] || CT.C431, "≳", C[432] || CT.C432, "⪆", C[433] || CT.C433, "⋙", C[434] || CT.C434, "≷", C[435] || CT.C435, "⋛", C[436] || CT.C436, "⪌", C[437] || CT.C437, "≖", C[438] || CT.C438, "≗", C[439] || CT.C439, "≜", C[440] || CT.C440, "⫆", C[441] || CT.C441, "⋑", C[442] || CT.C442, "⊐", C[443] || CT.C443, "≽", C[444] || CT.C444, "⋟", C[445] || CT.C445, "≿", C[446] || CT.C446, "⪸", C[447] || CT.C447, "⊩", C[448] || CT.C448, "≬", C[449] || CT.C449, "⋔", C[450] || CT.C450, "∴", C[451] || CT.C451, "∵", C[452] || CT.C452, "≂", C[453] || CT.C453, "≑", C[454] || CT.C454, "∔", C[455] || CT.C455, "⋒", C[456] || CT.C456, "⋓", C[457] || CT.C457, "⩞", C[458] || CT.C458, "⊟", C[459] || CT.C459, "⊞", C[460] || CT.C460, "⋇", C[461] || CT.C461, "⋉", C[462] || CT.C462, "⋊", C[463] || CT.C463, "⋋", C[464] || CT.C464, "⋌", C[465] || CT.C465, "⋏", C[466] || CT.C466, "⋎", C[467] || CT.C467, "⊝", C[468] || CT.C468, "⊛", C[469] || CT.C469, "⊺", C[470] || CT.C470, "⊠", C[471] || CT.C471, "⇢", C[472] || CT.C472, "⇠", C[473] || CT.C473, "⇇", C[474] || CT.C474, "⇆", C[475] || CT.C475, "⇚", C[476] || CT.C476, "↞", C[477] || CT.C477, "↢", C[478] || CT.C478, "↫", C[479] || CT.C479, "⇋", C[480] || CT.C480, "↶", C[481] || CT.C481, "↺", C[482] || CT.C482, "↰", C[483] || CT.C483, "⇈", C[484] || CT.C484, "↿", C[485] || CT.C485, "⇃", C[486] || CT.C486, "⊸", C[487] || CT.C487, "↭", C[488] || CT.C488, "⇉", C[489] || CT.C489, "⇄", C[490] || CT.C490, "↠", C[491] || CT.C491, "↣", C[492] || CT.C492, "↬", C[493] || CT.C493, "↷", C[494] || CT.C494, "↻", C[495] || CT.C495, "↱", C[496] || CT.C496, "⇊", C[497] || CT.C497, "↾", C[498] || CT.C498, "⇂", C[499] || CT.C499, "⇝", C[500] || CT.C500, "⇛", C[501] || CT.C501, "`", C[502] || CT.C502, "∠", C[503] || CT.C503, "∞", C[504] || CT.C504, "Γ", C[505] || CT.C505, "Δ", C[506] || CT.C506, "Θ", C[507] || CT.C507, "Λ", C[508] || CT.C508, "Ξ", C[509] || CT.C509, "Π", C[510] || CT.C510, "Σ", C[511] || CT.C511, "Υ", C[512] || CT.C512, "Φ", C[513] || CT.C513, "Ψ", C[514] || CT.C514, "Ω", C[515] || CT.C515, "Α", C[516] || CT.C516, "Β", C[517] || CT.C517, "Ε", C[518] || CT.C518, "Ζ", C[519] || CT.C519, "Η", C[520] || CT.C520, "Ι", C[521] || CT.C521, "Κ", C[522] || CT.C522, "Μ", C[523] || CT.C523, "Ν", C[524] || CT.C524, "Ο", C[525] || CT.C525, "Ρ", C[526] || CT.C526, "Τ", C[527] || CT.C527, "Χ", C[528] || CT.C528, "¬", C[529] || CT.C529, "α", C[530] || CT.C530, "β", C[531] || CT.C531, "γ", C[532] || CT.C532, "δ", C[533] || CT.C533, "ϵ", C[534] || CT.C534, "ζ", C[535] || CT.C535, "η", C[536] || CT.C536, "θ", C[537] || CT.C537, "ι", C[538] || CT.C538, "κ", C[539] || CT.C539, "λ", C[540] || CT.C540, "μ", C[541] || CT.C541, "ν", C[542] || CT.C542, "ξ", C[543] || CT.C543, "ο", C[544] || CT.C544, "π", C[545] || CT.C545, "ρ", C[546] || CT.C546, "σ", C[547] || CT.C547, "τ", C[548] || CT.C548, "υ", C[549] || CT.C549, "ϕ", C[550] || CT.C550, "χ", C[551] || CT.C551, "ψ", C[552] || CT.C552, "ω", C[553] || CT.C553, "ε", C[554] || CT.C554, "ϑ", C[555] || CT.C555, "ϖ", C[556] || CT.C556, "ϱ", C[557] || CT.C557, "ς", C[558] || CT.C558, "φ", C[559] || CT.C559, "*", C[560] || CT.C560, "+", C[561] || CT.C561, "-", C[562] || CT.C562, "⋅", C[563] || CT.C563, "÷", C[564] || CT.C564, "±", C[565] || CT.C565, "×", C[566] || CT.C566, "∩", C[567] || CT.C567, "∪", C[568] || CT.C568, "∧", C[569] || CT.C569, "∨", C[570] || CT.C570, "(", C[571] || CT.C571, "[", C[572] || CT.C572, "⟨", C[573] || CT.C573, ")", C[574] || CT.C574, "]", C[575] || CT.C575, "?", C[576] || CT.C576, "!", C[577] || CT.C577, "⟩", C[578] || CT.C578, "=", C[579] || CT.C579, "<", C[580] || CT.C580, ">", C[581] || CT.C581, ":", C[582] || CT.C582, "≈", C[583] || CT.C583, "≅", C[584] || CT.C584, "≥", C[585] || CT.C585, "∈", C[586] || CT.C586, "⊂", C[587] || CT.C587, "⊃", C[588] || CT.C588, "⊆", C[589] || CT.C589, "⊇", C[590] || CT.C590, "⊈", C[591] || CT.C591, "⊉", C[592] || CT.C592, "←", C[593] || CT.C593, "≤", C[594] || CT.C594, "→", C[595] || CT.C595, "≱", C[596] || CT.C596, "≰", C[597] || CT.C597, ",", C[598] || CT.C598, ";", C[599] || CT.C599, "⊼", C[600] || CT.C600, "⊻", C[601] || CT.C601, "⊙", C[602] || CT.C602, "⊕", C[603] || CT.C603, "⊗", C[604] || CT.C604, "∂", C[605] || CT.C605, "⊘", C[606] || CT.C606, "⊚", C[607] || CT.C607, "⊡", C[608] || CT.C608, "⌊", C[609] || CT.C609, "⌋", C[610] || CT.C610, "⌈", C[611] || CT.C611, "⌉", C[612] || CT.C612, "|", C[613] || CT.C613, "↑", C[614] || CT.C614, "⇑", C[615] || CT.C615, "↓", C[616] || CT.C616, "⇓", C[617] || CT.C617, "↕", C[618] || CT.C618, "⇕", C[619] || CT.C619, "…", C[620] || CT.C620, "⋯", C[621] || CT.C621, "⋱", C[622] || CT.C622, "ı", C[623] || CT.C623, "ȷ", C[624] || CT.C624, "°", C[625] || CT.C625, "£", C[626] || CT.C626, "/", C[627] || CT.C627, "@", C[628] || CT.C628, ".", C[629] || CT.C629, "\"", C[630] || CT.C630, "A", C[631] || CT.C631, "B", C[632] || CT.C632, "C", C[633] || CT.C633, "D", C[634] || CT.C634, "E", C[635] || CT.C635, "F", C[636] || CT.C636, "G", C[637] || CT.C637, "H", C[638] || CT.C638, "I", C[639] || CT.C639, "J", C[640] || CT.C640, "K", C[641] || CT.C641, "L", C[642] || CT.C642, "M", C[643] || CT.C643, "N", C[644] || CT.C644, "O", C[645] || CT.C645, "P", C[646] || CT.C646, "Q", C[647] || CT.C647, "R", C[648] || CT.C648, "S", C[649] || CT.C649, "T", C[650] || CT.C650, "U", C[651] || CT.C651, "V", C[652] || CT.C652, "W", C[653] || CT.C653, "X", C[654] || CT.C654, "Y", C[655] || CT.C655, "Z", C[656] || CT.C656, "a", C[657] || CT.C657, "b", C[658] || CT.C658, "c", C[659] || CT.C659, "d", C[660] || CT.C660, "e", C[661] || CT.C661, "f", C[662] || CT.C662, "g", C[663] || CT.C663, "h", C[664] || CT.C664, "i", C[665] || CT.C665, "j", C[666] || CT.C666, "k", C[667] || CT.C667, "l", C[668] || CT.C668, "m", C[669] || CT.C669, "n", C[670] || CT.C670, "o", C[671] || CT.C671, "p", C[672] || CT.C672, "q", C[673] || CT.C673, "r", C[674] || CT.C674, "s", C[675] || CT.C675, "t", C[676] || CT.C676, "u", C[677] || CT.C677, "v", C[678] || CT.C678, "w", C[679] || CT.C679, "x", C[680] || CT.C680, "y", C[681] || CT.C681, "z", C[682] || CT.C682, "ℂ", C[683] || CT.C683, "ℍ", C[684] || CT.C684, "ℕ", C[685] || CT.C685, "ℙ", C[686] || CT.C686, "ℚ", C[687] || CT.C687, "ℝ", C[688] || CT.C688, "ℤ", C[689] || CT.C689, "ℎ", C[690] || CT.C690, "𝐀", C[691] || CT.C691, "𝐴", C[692] || CT.C692, "𝑨", C[693] || CT.C693, "𝔄", C[694] || CT.C694, "𝖠", C[695] || CT.C695, "𝗔", C[696] || CT.C696, "𝘈", C[697] || CT.C697, "𝙰", C[698] || CT.C698, "𝔸", C[699] || CT.C699, "𝒜", C[700] || CT.C700, "𝐁", C[701] || CT.C701, "𝐵", C[702] || CT.C702, "𝑩", C[703] || CT.C703, "𝔅", C[704] || CT.C704, "𝖡", C[705] || CT.C705, "𝗕", C[706] || CT.C706, "𝘉", C[707] || CT.C707, "𝙱", C[708] || CT.C708, "𝔹", C[709] || CT.C709, "𝒝", C[710] || CT.C710, "𝐂", C[711] || CT.C711, "𝐶", C[712] || CT.C712, "𝑪", C[713] || CT.C713, "𝔆", C[714] || CT.C714, "𝖢", C[715] || CT.C715, "𝗖", C[716] || CT.C716, "𝘊", C[717] || CT.C717, "𝙲", C[718] || CT.C718, "𝔺", C[719] || CT.C719, "𝒞", C[720] || CT.C720, "𝐃", C[721] || CT.C721, "𝐷", C[722] || CT.C722, "𝑫", C[723] || CT.C723, "𝔇", C[724] || CT.C724, "𝖣", C[725] || CT.C725, "𝗗", C[726] || CT.C726, "𝘋", C[727] || CT.C727, "𝙳", C[728] || CT.C728, "𝔻", C[729] || CT.C729, "𝒟", C[730] || CT.C730, "𝐄", C[731] || CT.C731, "𝐸", C[732] || CT.C732, "𝑬", C[733] || CT.C733, "𝔈", C[734] || CT.C734, "𝖤", C[735] || CT.C735, "𝗘", C[736] || CT.C736, "𝘌", C[737] || CT.C737, "𝙴", C[738] || CT.C738, "𝔼", C[739] || CT.C739, "𝒠", C[740] || CT.C740, "𝐅", C[741] || CT.C741, "𝐹", C[742] || CT.C742, "𝑭", C[743] || CT.C743, "𝔉", C[744] || CT.C744, "𝖥", C[745] || CT.C745, "𝗙", C[746] || CT.C746, "𝘍", C[747] || CT.C747, "𝙵", C[748] || CT.C748, "𝔽", C[749] || CT.C749, "𝒡", C[750] || CT.C750, "𝐆", C[751] || CT.C751, "𝐺", C[752] || CT.C752, "𝑮", C[753] || CT.C753, "𝔊", C[754] || CT.C754, "𝖦", C[755] || CT.C755, "𝗚", C[756] || CT.C756, "𝘎", C[757] || CT.C757, "𝙶", C[758] || CT.C758, "𝔾", C[759] || CT.C759, "𝒢", C[760] || CT.C760, "𝐇", C[761] || CT.C761, "𝐻", C[762] || CT.C762, "𝑯", C[763] || CT.C763, "𝔋", C[764] || CT.C764, "𝖧", C[765] || CT.C765, "𝗛", C[766] || CT.C766, "𝘏", C[767] || CT.C767, "𝙷", C[768] || CT.C768, "𝔿", C[769] || CT.C769, "𝒣", C[770] || CT.C770, "𝐈", C[771] || CT.C771, "𝐼", C[772] || CT.C772, "𝑰", C[773] || CT.C773, "𝔌", C[774] || CT.C774, "𝖨", C[775] || CT.C775, "𝗜", C[776] || CT.C776, "𝘐", C[777] || CT.C777, "𝙸", C[778] || CT.C778, "𝕀", C[779] || CT.C779, "𝒤", C[780] || CT.C780, "𝐉", C[781] || CT.C781, "𝐽", C[782] || CT.C782, "𝑱", C[783] || CT.C783, "𝔍", C[784] || CT.C784, "𝖩", C[785] || CT.C785, "𝗝", C[786] || CT.C786, "𝘑", C[787] || CT.C787, "𝙹", C[788] || CT.C788, "𝕁", C[789] || CT.C789, "𝒥", C[790] || CT.C790, "𝐊", C[791] || CT.C791, "𝐾", C[792] || CT.C792, "𝑲", C[793] || CT.C793, "𝔎", C[794] || CT.C794, "𝖪", C[795] || CT.C795, "𝗞", C[796] || CT.C796, "𝘒", C[797] || CT.C797, "𝙺", C[798] || CT.C798, "𝕂", C[799] || CT.C799, "𝒦", C[800] || CT.C800, "𝐋", C[801] || CT.C801, "𝐿", C[802] || CT.C802, "𝑳", C[803] || CT.C803, "𝔏", C[804] || CT.C804, "𝖫", C[805] || CT.C805, "𝗟", C[806] || CT.C806, "𝘓", C[807] || CT.C807, "𝙻", C[808] || CT.C808, "𝕃", C[809] || CT.C809, "𝒧", C[810] || CT.C810, "𝐌", C[811] || CT.C811, "𝑀", C[812] || CT.C812, "𝑴", C[813] || CT.C813, "𝔐", C[814] || CT.C814, "𝖬", C[815] || CT.C815, "𝗠", C[816] || CT.C816, "𝘔", C[817] || CT.C817, "𝙼", C[818] || CT.C818, "𝕄", C[819] || CT.C819, "𝒨", C[820] || CT.C820, "𝐍", C[821] || CT.C821, "𝑁", C[822] || CT.C822, "𝑵", C[823] || CT.C823, "𝔑", C[824] || CT.C824, "𝖭", C[825] || CT.C825, "𝗡", C[826] || CT.C826, "𝘕", C[827] || CT.C827, "𝙽", C[828] || CT.C828, "𝕅", C[829] || CT.C829, "𝒩", C[830] || CT.C830, "𝐎", C[831] || CT.C831, "𝑂", C[832] || CT.C832, "𝑶", C[833] || CT.C833, "𝔒", C[834] || CT.C834, "𝖮", C[835] || CT.C835, "𝗢", C[836] || CT.C836, "𝘖", C[837] || CT.C837, "𝙾", C[838] || CT.C838, "𝕆", C[839] || CT.C839, "𝒪", C[840] || CT.C840, "𝐏", C[841] || CT.C841, "𝑃", C[842] || CT.C842, "𝑷", C[843] || CT.C843, "𝔓", C[844] || CT.C844, "𝖯", C[845] || CT.C845, "𝗣", C[846] || CT.C846, "𝘗", C[847] || CT.C847, "𝙿", C[848] || CT.C848, "𝕇", C[849] || CT.C849, "𝒫", C[850] || CT.C850, "𝐐", C[851] || CT.C851, "𝑄", C[852] || CT.C852, "𝑸", C[853] || CT.C853, "𝔔", C[854] || CT.C854, "𝖰", C[855] || CT.C855, "𝗤", C[856] || CT.C856, "𝘘", C[857] || CT.C857, "𝚀", C[858] || CT.C858, "𝕈", C[859] || CT.C859, "𝒬", C[860] || CT.C860, "𝐑", C[861] || CT.C861, "𝑅", C[862] || CT.C862, "𝑹", C[863] || CT.C863, "𝔕", C[864] || CT.C864, "𝖱", C[865] || CT.C865, "𝗥", C[866] || CT.C866, "𝘙", C[867] || CT.C867, "𝚁", C[868] || CT.C868, "𝕉", C[869] || CT.C869, "𝒭", C[870] || CT.C870, "𝐒", C[871] || CT.C871, "𝑆", C[872] || CT.C872, "𝑺", C[873] || CT.C873, "𝔖", C[874] || CT.C874, "𝖲", C[875] || CT.C875, "𝗦", C[876] || CT.C876, "𝘚", C[877] || CT.C877, "𝚂", C[878] || CT.C878, "𝕊", C[879] || CT.C879, "𝒮", C[880] || CT.C880, "𝐓", C[881] || CT.C881, "𝑇", C[882] || CT.C882, "𝑻", C[883] || CT.C883, "𝔗", C[884] || CT.C884, "𝖳", C[885] || CT.C885, "𝗧", C[886] || CT.C886, "𝘛", C[887] || CT.C887, "𝚃", C[888] || CT.C888, "𝕋", C[889] || CT.C889, "𝒯", C[890] || CT.C890, "𝐔", C[891] || CT.C891, "𝑈", C[892] || CT.C892, "𝑼", C[893] || CT.C893, "𝔘", C[894] || CT.C894, "𝖴", C[895] || CT.C895, "𝗨", C[896] || CT.C896, "𝘜", C[897] || CT.C897, "𝚄", C[898] || CT.C898, "𝕌", C[899] || CT.C899, "𝒰", C[900] || CT.C900, "𝐕", C[901] || CT.C901, "𝑉", C[902] || CT.C902, "𝑽", C[903] || CT.C903, "𝔙", C[904] || CT.C904, "𝖵", C[905] || CT.C905, "𝗩", C[906] || CT.C906, "𝘝", C[907] || CT.C907, "𝚅", C[908] || CT.C908, "𝕍", C[909] || CT.C909, "𝒱", C[910] || CT.C910, "𝐖", C[911] || CT.C911, "𝑊", C[912] || CT.C912, "𝑾", C[913] || CT.C913, "𝔚", C[914] || CT.C914, "𝖶", C[915] || CT.C915, "𝗪", C[916] || CT.C916, "𝘞", C[917] || CT.C917, "𝚆", C[918] || CT.C918, "𝕎", C[919] || CT.C919, "𝒲", C[920] || CT.C920, "𝐗", C[921] || CT.C921, "𝑋", C[922] || CT.C922, "𝑿", C[923] || CT.C923, "𝔛", C[924] || CT.C924, "𝖷", C[925] || CT.C925, "𝗫", C[926] || CT.C926, "𝘟", C[927] || CT.C927, "𝚇", C[928] || CT.C928, "𝕏", C[929] || CT.C929, "𝒳", C[930] || CT.C930, "𝐘", C[931] || CT.C931, "𝑌", C[932] || CT.C932, "𝒀", C[933] || CT.C933, "𝔜", C[934] || CT.C934, "𝖸", C[935] || CT.C935, "𝗬", C[936] || CT.C936, "𝘠", C[937] || CT.C937, "𝚈", C[938] || CT.C938, "𝕐", C[939] || CT.C939, "𝒴", C[940] || CT.C940, "𝐙", C[941] || CT.C941, "𝑍", C[942] || CT.C942, "𝒁", C[943] || CT.C943, "𝔝", C[944] || CT.C944, "𝖹", C[945] || CT.C945, "𝗭", C[946] || CT.C946, "𝘡", C[947] || CT.C947, "𝚉", C[948] || CT.C948, "𝕑", C[949] || CT.C949, "𝒵", C[950] || CT.C950, "𝐚", C[951] || CT.C951, "𝑎", C[952] || CT.C952, "𝒂", C[953] || CT.C953, "𝔞", C[954] || CT.C954, "𝖺", C[955] || CT.C955, "𝗮", C[956] || CT.C956, "𝘢", C[957] || CT.C957, "𝚊", C[958] || CT.C958, "𝐛", C[959] || CT.C959, "𝑏", C[960] || CT.C960, "𝒃", C[961] || CT.C961, "𝔟", C[962] || CT.C962, "𝖻", C[963] || CT.C963, "𝗯", C[964] || CT.C964, "𝘣", C[965] || CT.C965, "𝚋", C[966] || CT.C966, "𝐜", C[967] || CT.C967, "𝑐", C[968] || CT.C968, "𝒄", C[969] || CT.C969, "𝔠", C[970] || CT.C970, "𝖼", C[971] || CT.C971, "𝗰", C[972] || CT.C972, "𝘤", C[973] || CT.C973, "𝚌", C[974] || CT.C974, "𝐝", C[975] || CT.C975, "𝑑", C[976] || CT.C976, "𝒅", C[977] || CT.C977, "𝔡", C[978] || CT.C978, "𝖽", C[979] || CT.C979, "𝗱", C[980] || CT.C980, "𝘥", C[981] || CT.C981, "𝚍", C[982] || CT.C982, "𝐞", C[983] || CT.C983, "𝑒", C[984] || CT.C984, "𝒆", C[985] || CT.C985, "𝔢", C[986] || CT.C986, "𝖾", C[987] || CT.C987, "𝗲", C[988] || CT.C988, "𝘦", C[989] || CT.C989, "𝚎", C[990] || CT.C990, "𝐟", C[991] || CT.C991, "𝑓", C[992] || CT.C992, "𝒇", C[993] || CT.C993, "𝔣", C[994] || CT.C994, "𝖿", C[995] || CT.C995, "𝗳", C[996] || CT.C996, "𝘧", C[997] || CT.C997, "𝚏", C[998] || CT.C998, "𝐠", C[999] || CT.C999, "𝑔", C[1000] || CT.C1000, "𝒈", C[1001] || CT.C1001, "𝔤", C[1002] || CT.C1002, "𝗀", C[1003] || CT.C1003, "𝗴", C[1004] || CT.C1004, "𝘨", C[1005] || CT.C1005, "𝚐", C[1006] || CT.C1006, "𝐡", C[1007] || CT.C1007, "𝑕", C[1008] || CT.C1008, "𝒉", C[1009] || CT.C1009, "𝔥", C[1010] || CT.C1010, "𝗁", C[1011] || CT.C1011, "𝗵", C[1012] || CT.C1012, "𝘩", C[1013] || CT.C1013, "𝚑", C[1014] || CT.C1014, "𝐢", C[1015] || CT.C1015, "𝑖", C[1016] || CT.C1016, "𝒊", C[1017] || CT.C1017, "𝔦", C[1018] || CT.C1018, "𝗂", C[1019] || CT.C1019, "𝗶", C[1020] || CT.C1020, "𝘪", C[1021] || CT.C1021, "𝚒", C[1022] || CT.C1022, "𝐣", C[1023] || CT.C1023, "𝑗", C[1024] || CT.C1024, "𝒋", C[1025] || CT.C1025, "𝔧", C[1026] || CT.C1026, "𝗃", C[1027] || CT.C1027, "𝗷", C[1028] || CT.C1028, "𝘫", C[1029] || CT.C1029, "𝚓", C[1030] || CT.C1030, "𝐤", C[1031] || CT.C1031, "𝑘", C[1032] || CT.C1032, "𝒌", C[1033] || CT.C1033, "𝔨", C[1034] || CT.C1034, "𝗄", C[1035] || CT.C1035, "𝗸", C[1036] || CT.C1036, "𝘬", C[1037] || CT.C1037, "𝚔", C[1038] || CT.C1038, "𝐥", C[1039] || CT.C1039, "𝑙", C[1040] || CT.C1040, "𝒍", C[1041] || CT.C1041, "𝔩", C[1042] || CT.C1042, "𝗅", C[1043] || CT.C1043, "𝗹", C[1044] || CT.C1044, "𝘭", C[1045] || CT.C1045, "𝚕", C[1046] || CT.C1046, "𝐦", C[1047] || CT.C1047, "𝑚", C[1048] || CT.C1048, "𝒎", C[1049] || CT.C1049, "𝔪", C[1050] || CT.C1050, "𝗆", C[1051] || CT.C1051, "𝗺", C[1052] || CT.C1052, "𝘮", C[1053] || CT.C1053, "𝚖", C[1054] || CT.C1054, "𝐧", C[1055] || CT.C1055, "𝑛", C[1056] || CT.C1056, "𝒏", C[1057] || CT.C1057, "𝔫", C[1058] || CT.C1058, "𝗇", C[1059] || CT.C1059, "𝗻", C[1060] || CT.C1060, "𝘯", C[1061] || CT.C1061, "𝚗", C[1062] || CT.C1062, "𝐨", C[1063] || CT.C1063, "𝑜", C[1064] || CT.C1064, "𝒐", C[1065] || CT.C1065, "𝔬", C[1066] || CT.C1066, "𝗈", C[1067] || CT.C1067, "𝗼", C[1068] || CT.C1068, "𝘰", C[1069] || CT.C1069, "𝚘", C[1070] || CT.C1070, "𝐩", C[1071] || CT.C1071, "𝑝", C[1072] || CT.C1072, "𝒑", C[1073] || CT.C1073, "𝔭", C[1074] || CT.C1074, "𝗉", C[1075] || CT.C1075, "𝗽", C[1076] || CT.C1076, "𝘱", C[1077] || CT.C1077, "𝚙", C[1078] || CT.C1078, "𝐪", C[1079] || CT.C1079, "𝑞", C[1080] || CT.C1080, "𝒒", C[1081] || CT.C1081, "𝔮", C[1082] || CT.C1082, "𝗊", C[1083] || CT.C1083, "𝗾", C[1084] || CT.C1084, "𝘲", C[1085] || CT.C1085, "𝚚", C[1086] || CT.C1086, "𝐫", C[1087] || CT.C1087, "𝑟", C[1088] || CT.C1088, "𝒓", C[1089] || CT.C1089, "𝔯", C[1090] || CT.C1090, "𝗋", C[1091] || CT.C1091, "𝗿", C[1092] || CT.C1092, "𝘳", C[1093] || CT.C1093, "𝚛", C[1094] || CT.C1094, "𝐬", C[1095] || CT.C1095, "𝑠", C[1096] || CT.C1096, "𝒔", C[1097] || CT.C1097, "𝔰", C[1098] || CT.C1098, "𝗌", C[1099] || CT.C1099, "𝘀", C[1100] || CT.C1100, "𝘴", C[1101] || CT.C1101, "𝚜", C[1102] || CT.C1102, "𝐭", C[1103] || CT.C1103, "𝑡", C[1104] || CT.C1104, "𝒕", C[1105] || CT.C1105, "𝔱", C[1106] || CT.C1106, "𝗍", C[1107] || CT.C1107, "𝘁", C[1108] || CT.C1108, "𝘵", C[1109] || CT.C1109, "𝚝", C[1110] || CT.C1110, "𝐮", C[1111] || CT.C1111, "𝑢", C[1112] || CT.C1112, "𝒖", C[1113] || CT.C1113, "𝔲", C[1114] || CT.C1114, "𝗎", C[1115] || CT.C1115, "𝘂", C[1116] || CT.C1116, "𝘶", C[1117] || CT.C1117, "𝚞", C[1118] || CT.C1118, "𝐯", C[1119] || CT.C1119, "𝑣", C[1120] || CT.C1120, "𝒗", C[1121] || CT.C1121, "𝔳", C[1122] || CT.C1122, "𝗏", C[1123] || CT.C1123, "𝘃", C[1124] || CT.C1124, "𝘷", C[1125] || CT.C1125, "𝚟", C[1126] || CT.C1126, "𝐰", C[1127] || CT.C1127, "𝑤", C[1128] || CT.C1128, "𝒘", C[1129] || CT.C1129, "𝔴", C[1130] || CT.C1130, "𝗐", C[1131] || CT.C1131, "𝘄", C[1132] || CT.C1132, "𝘸", C[1133] || CT.C1133, "𝚠", C[1134] || CT.C1134, "𝐱", C[1135] || CT.C1135, "𝑥", C[1136] || CT.C1136, "𝒙", C[1137] || CT.C1137, "𝔵", C[1138] || CT.C1138, "𝗑", C[1139] || CT.C1139, "𝘅", C[1140] || CT.C1140, "𝘹", C[1141] || CT.C1141, "𝚡", C[1142] || CT.C1142, "𝐲", C[1143] || CT.C1143, "𝑦", C[1144] || CT.C1144, "𝒚", C[1145] || CT.C1145, "𝔶", C[1146] || CT.C1146, "𝗒", C[1147] || CT.C1147, "𝘆", C[1148] || CT.C1148, "𝘺", C[1149] || CT.C1149, "𝚢", C[1150] || CT.C1150, "𝐳", C[1151] || CT.C1151, "𝑧", C[1152] || CT.C1152, "𝒛", C[1153] || CT.C1153, "𝔷", C[1154] || CT.C1154, "𝗓", C[1155] || CT.C1155, "𝘇", C[1156] || CT.C1156, "𝘻", C[1157] || CT.C1157, "𝚣", C[1158] || CT.C1158, "𝕜", C[1159] || CT.C1159, "𝟎", C[1160] || CT.C1160, "𝟢", C[1161] || CT.C1161, "𝟬", C[1162] || CT.C1162, "𝟶", C[1163] || CT.C1163, "𝟏", C[1164] || CT.C1164, "𝟣", C[1165] || CT.C1165, "𝟭", C[1166] || CT.C1166, "𝟷", C[1167] || CT.C1167, "𝟐", C[1168] || CT.C1168, "𝟤", C[1169] || CT.C1169, "𝟮", C[1170] || CT.C1170, "𝟸", C[1171] || CT.C1171, "𝟑", C[1172] || CT.C1172, "𝟥", C[1173] || CT.C1173, "𝟯", C[1174] || CT.C1174, "𝟹", C[1175] || CT.C1175, "𝟒", C[1176] || CT.C1176, "𝟦", C[1177] || CT.C1177, "𝟰", C[1178] || CT.C1178, "𝟺", C[1179] || CT.C1179, "𝟓", C[1180] || CT.C1180, "𝟧", C[1181] || CT.C1181, "𝟱", C[1182] || CT.C1182, "𝟻", C[1183] || CT.C1183, "𝟔", C[1184] || CT.C1184, "𝟨", C[1185] || CT.C1185, "𝟲", C[1186] || CT.C1186, "𝟼", C[1187] || CT.C1187, "𝟕", C[1188] || CT.C1188, "𝟩", C[1189] || CT.C1189, "𝟳", C[1190] || CT.C1190, "𝟽", C[1191] || CT.C1191, "𝟖", C[1192] || CT.C1192, "𝟪", C[1193] || CT.C1193, "𝟴", C[1194] || CT.C1194, "𝟾", C[1195] || CT.C1195, "𝟗", C[1196] || CT.C1196, "𝟫", C[1197] || CT.C1197, "𝟵", C[1198] || CT.C1198, "𝟿", C[1199] || CT.C1199, "Ç", C[1200] || CT.C1200, "Ð", C[1201] || CT.C1201, "Þ", C[1202] || CT.C1202, "ç", C[1203] || CT.C1203, "þ", C[1204] || CT.C1204, " ", C[1205] || CT.C1205, " ", C[1206] || CT.C1206, "\\equiv", C[278] || CT.C278, "\\prec", C[279] || CT.C279, "\\succ", C[280] || CT.C280, "\\sim", C[281] || CT.C281, "\\preceq", C[282] || CT.C282, "\\succeq", C[283] || CT.C283, "\\simeq", C[284] || CT.C284, "\\mid", C[285] || CT.C285, "\\ll", C[286] || CT.C286, "\\gg", C[287] || CT.C287, "\\asymp", C[288] || CT.C288, "\\bowtie", C[289] || CT.C289, "\\smile", C[290] || CT.C290, "\\sqsubseteq", C[291] || CT.C291, "\\sqsupseteq", C[292] || CT.C292, "\\doteq", C[293] || CT.C293, "\\frown", C[294] || CT.C294, "\\ni", C[295] || CT.C295, "\\propto", C[296] || CT.C296, "\\vdash", C[297] || CT.C297, "\\dashv", C[298] || CT.C298, "\\owns", C[295] || CT.C295, "\\ldotp", C[1207] || CT.C1207, "\\cdotp", C[1208] || CT.C1208, "\\aleph", C[299] || CT.C299, "\\forall", C[300] || CT.C300, "\\hbar", C[301] || CT.C301, "\\exists", C[302] || CT.C302, "\\nabla", C[303] || CT.C303, "\\flat", C[304] || CT.C304, "\\ell", C[305] || CT.C305, "\\natural", C[306] || CT.C306, "\\clubsuit", C[307] || CT.C307, "\\wp", C[308] || CT.C308, "\\sharp", C[309] || CT.C309, "\\diamondsuit", C[310] || CT.C310, "\\Re", C[311] || CT.C311, "\\heartsuit", C[312] || CT.C312, "\\Im", C[313] || CT.C313, "\\spadesuit", C[314] || CT.C314, "\\rmoustache", C[315] || CT.C315, "\\lmoustache", C[316] || CT.C316, "\\rgroup", C[317] || CT.C317, "\\lgroup", C[318] || CT.C318, "\\mp", C[319] || CT.C319, "\\ominus", C[320] || CT.C320, "\\uplus", C[321] || CT.C321, "\\sqcap", C[322] || CT.C322, "\\ast", C[560] || CT.C560, "\\sqcup", C[323] || CT.C323, "\\wr", C[324] || CT.C324, "\\longleftarrow", C[325] || CT.C325, "\\Leftarrow", C[326] || CT.C326, "\\Longleftarrow", C[327] || CT.C327, "\\longrightarrow", C[328] || CT.C328, "\\Rightarrow", C[329] || CT.C329, "\\Longrightarrow", C[330] || CT.C330, "\\leftrightarrow", C[331] || CT.C331, "\\longleftrightarrow", C[332] || CT.C332, "\\Leftrightarrow", C[333] || CT.C333, "\\Longleftrightarrow", C[334] || CT.C334, "\\mapsto", C[335] || CT.C335, "\\longmapsto", C[336] || CT.C336, "\\nearrow", C[337] || CT.C337, "\\hookleftarrow", C[338] || CT.C338, "\\hookrightarrow", C[339] || CT.C339, "\\searrow", C[340] || CT.C340, "\\leftharpoonup", C[341] || CT.C341, "\\rightharpoonup", C[342] || CT.C342, "\\swarrow", C[343] || CT.C343, "\\leftharpoondown", C[344] || CT.C344, "\\rightharpoondown", C[345] || CT.C345, "\\nwarrow", C[346] || CT.C346, "\\rightleftharpoons", C[347] || CT.C347, "\\nless", C[348] || CT.C348, "\\nleqslant", C[1209] || CT.C1209, "\\nleqq", C[1210] || CT.C1210, "\\lneq", C[349] || CT.C349, "\\lneqq", C[350] || CT.C350, "\\lvertneqq", C[1211] || CT.C1211, "\\lnsim", C[351] || CT.C351, "\\lnapprox", C[352] || CT.C352, "\\nprec", C[353] || CT.C353, "\\npreceq", C[354] || CT.C354, "\\precnsim", C[355] || CT.C355, "\\precnapprox", C[356] || CT.C356, "\\nsim", C[357] || CT.C357, "\\nshortmid", C[1212] || CT.C1212, "\\nmid", C[358] || CT.C358, "\\nvdash", C[359] || CT.C359, "\\nvDash", C[360] || CT.C360, "\\ntrianglelefteq", C[361] || CT.C361, "\\subsetneq", C[362] || CT.C362, "\\varsubsetneq", C[1213] || CT.C1213, "\\subsetneqq", C[363] || CT.C363, "\\varsubsetneqq", C[1214] || CT.C1214, "\\ngtr", C[364] || CT.C364, "\\ngeqslant", C[1215] || CT.C1215, "\\ngeqq", C[1216] || CT.C1216, "\\gneq", C[365] || CT.C365, "\\gneqq", C[366] || CT.C366, "\\gvertneqq", C[1217] || CT.C1217, "\\gnsim", C[367] || CT.C367, "\\gnapprox", C[368] || CT.C368, "\\nsucc", C[369] || CT.C369, "\\nsucceq", C[370] || CT.C370, "\\succnsim", C[371] || CT.C371, "\\succnapprox", C[372] || CT.C372, "\\ncong", C[373] || CT.C373, "\\nshortparallel", C[1218] || CT.C1218, "\\nparallel", C[374] || CT.C374, "\\nVDash", C[375] || CT.C375, "\\ntrianglerighteq", C[376] || CT.C376, "\\nsupseteqq", C[1219] || CT.C1219, "\\supsetneq", C[377] || CT.C377, "\\varsupsetneq", C[1220] || CT.C1220, "\\supsetneqq", C[378] || CT.C378, "\\varsupsetneqq", C[1221] || CT.C1221, "\\nVdash", C[379] || CT.C379, "\\precneqq", C[380] || CT.C380, "\\succneqq", C[381] || CT.C381, "\\nsubseteqq", C[1222] || CT.C1222, "\\nleftarrow", C[382] || CT.C382, "\\nrightarrow", C[383] || CT.C383, "\\nLeftarrow", C[384] || CT.C384, "\\nRightarrow", C[385] || CT.C385, "\\nleftrightarrow", C[386] || CT.C386, "\\nLeftrightarrow", C[387] || CT.C387, "\\hslash", C[1223] || CT.C1223, "\\measuredangle", C[388] || CT.C388, "\\Finv", C[389] || CT.C389, "\\Game", C[390] || CT.C390, "\\sphericalangle", C[391] || CT.C391, "\\complement", C[392] || CT.C392, "\\eth", C[393] || CT.C393, "\\yen", C[394] || CT.C394, "\\checkmark", C[395] || CT.C395, "\\beth", C[396] || CT.C396, "\\daleth", C[397] || CT.C397, "\\gimel", C[398] || CT.C398, "\\digamma", C[399] || CT.C399, "\\@ulcorner", C[1224] || CT.C1224, "\\@urcorner", C[1225] || CT.C1225, "\\@llcorner", C[1226] || CT.C1226, "\\@lrcorner", C[1227] || CT.C1227, "\\leqq", C[404] || CT.C404, "\\leqslant", C[405] || CT.C405, "\\eqslantless", C[406] || CT.C406, "\\lesssim", C[407] || CT.C407, "\\lessapprox", C[408] || CT.C408, "\\approxeq", C[409] || CT.C409, "\\lll", C[410] || CT.C410, "\\lessgtr", C[411] || CT.C411, "\\lesseqgtr", C[412] || CT.C412, "\\lesseqqgtr", C[413] || CT.C413, "\\doteqdot", C[454] || CT.C454, "\\risingdotseq", C[414] || CT.C414, "\\fallingdotseq", C[415] || CT.C415, "\\backsim", C[416] || CT.C416, "\\backsimeq", C[417] || CT.C417, "\\subseteqq", C[418] || CT.C418, "\\Subset", C[419] || CT.C419, "\\sqsubset", C[420] || CT.C420, "\\preccurlyeq", C[421] || CT.C421, "\\curlyeqprec", C[422] || CT.C422, "\\precsim", C[423] || CT.C423, "\\precapprox", C[424] || CT.C424, "\\vDash", C[425] || CT.C425, "\\Vvdash", C[426] || CT.C426, "\\smallsmile", C[1228] || CT.C1228, "\\smallfrown", C[1229] || CT.C1229, "\\bumpeq", C[427] || CT.C427, "\\Bumpeq", C[428] || CT.C428, "\\geqq", C[429] || CT.C429, "\\geqslant", C[430] || CT.C430, "\\eqslantgtr", C[431] || CT.C431, "\\gtrsim", C[432] || CT.C432, "\\gtrapprox", C[433] || CT.C433, "\\ggg", C[434] || CT.C434, "\\gtrless", C[435] || CT.C435, "\\gtreqless", C[436] || CT.C436, "\\gtreqqless", C[437] || CT.C437, "\\eqcirc", C[438] || CT.C438, "\\circeq", C[439] || CT.C439, "\\triangleq", C[440] || CT.C440, "\\thicksim", C[1230] || CT.C1230, "\\thickapprox", C[1231] || CT.C1231, "\\supseteqq", C[441] || CT.C441, "\\Supset", C[442] || CT.C442, "\\sqsupset", C[443] || CT.C443, "\\succcurlyeq", C[444] || CT.C444, "\\curlyeqsucc", C[445] || CT.C445, "\\succsim", C[446] || CT.C446, "\\succapprox", C[447] || CT.C447, "\\Vdash", C[448] || CT.C448, "\\shortmid", C[1232] || CT.C1232, "\\between", C[449] || CT.C449, "\\pitchfork", C[450] || CT.C450, "\\varpropto", C[1233] || CT.C1233, "\\therefore", C[451] || CT.C451, "\\because", C[452] || CT.C452, "\\llless", C[410] || CT.C410, "\\gggtr", C[434] || CT.C434, "\\eqsim", C[453] || CT.C453, "\\Join", C[289] || CT.C289, "\\Doteq", C[454] || CT.C454, "\\dotplus", C[455] || CT.C455, "\\Cap", C[456] || CT.C456, "\\Cup", C[457] || CT.C457, "\\doublebarwedge", C[458] || CT.C458, "\\boxminus", C[459] || CT.C459, "\\boxplus", C[460] || CT.C460, "\\divideontimes", C[461] || CT.C461, "\\ltimes", C[462] || CT.C462, "\\rtimes", C[463] || CT.C463, "\\leftthreetimes", C[464] || CT.C464, "\\rightthreetimes", C[465] || CT.C465, "\\curlywedge", C[466] || CT.C466, "\\curlyvee", C[467] || CT.C467, "\\circleddash", C[468] || CT.C468, "\\circledast", C[469] || CT.C469, "\\centerdot", C[1234] || CT.C1234, "\\intercal", C[470] || CT.C470, "\\doublecap", C[456] || CT.C456, "\\doublecup", C[457] || CT.C457, "\\boxtimes", C[471] || CT.C471, "\\dashrightarrow", C[472] || CT.C472, "\\dashleftarrow", C[473] || CT.C473, "\\leftleftarrows", C[474] || CT.C474, "\\leftrightarrows", C[475] || CT.C475, "\\Lleftarrow", C[476] || CT.C476, "\\twoheadleftarrow", C[477] || CT.C477, "\\leftarrowtail", C[478] || CT.C478, "\\looparrowleft", C[479] || CT.C479, "\\leftrightharpoons", C[480] || CT.C480, "\\curvearrowleft", C[481] || CT.C481, "\\circlearrowleft", C[482] || CT.C482, "\\Lsh", C[483] || CT.C483, "\\upuparrows", C[484] || CT.C484, "\\upharpoonleft", C[485] || CT.C485, "\\downharpoonleft", C[486] || CT.C486, "\\multimap", C[487] || CT.C487, "\\leftrightsquigarrow", C[488] || CT.C488, "\\rightrightarrows", C[489] || CT.C489, "\\rightleftarrows", C[490] || CT.C490, "\\twoheadrightarrow", C[491] || CT.C491, "\\rightarrowtail", C[492] || CT.C492, "\\looparrowright", C[493] || CT.C493, "\\curvearrowright", C[494] || CT.C494, "\\circlearrowright", C[495] || CT.C495, "\\Rsh", C[496] || CT.C496, "\\downdownarrows", C[497] || CT.C497, "\\upharpoonright", C[498] || CT.C498, "\\downharpoonright", C[499] || CT.C499, "\\rightsquigarrow", C[500] || CT.C500, "\\leadsto", C[500] || CT.C500, "\\Rrightarrow", C[501] || CT.C501, "\\restriction", C[498] || CT.C498, "\\angle", C[503] || CT.C503, "\\infty", C[504] || CT.C504, "\\Gamma", C[505] || CT.C505, "\\Delta", C[506] || CT.C506, "\\Theta", C[507] || CT.C507, "\\Lambda", C[508] || CT.C508, "\\Xi", C[509] || CT.C509, "\\Pi", C[510] || CT.C510, "\\Sigma", C[511] || CT.C511, "\\Upsilon", C[512] || CT.C512, "\\Phi", C[513] || CT.C513, "\\Psi", C[514] || CT.C514, "\\Omega", C[515] || CT.C515, "\\neg", C[529] || CT.C529, "\\lnot", C[529] || CT.C529, "\\alpha", C[530] || CT.C530, "\\beta", C[531] || CT.C531, "\\gamma", C[532] || CT.C532, "\\delta", C[533] || CT.C533, "\\epsilon", C[534] || CT.C534, "\\zeta", C[535] || CT.C535, "\\eta", C[536] || CT.C536, "\\theta", C[537] || CT.C537, "\\iota", C[538] || CT.C538, "\\kappa", C[539] || CT.C539, "\\lambda", C[540] || CT.C540, "\\mu", C[541] || CT.C541, "\\nu", C[542] || CT.C542, "\\xi", C[543] || CT.C543, "\\omicron", C[544] || CT.C544, "\\pi", C[545] || CT.C545, "\\rho", C[546] || CT.C546, "\\sigma", C[547] || CT.C547, "\\tau", C[548] || CT.C548, "\\upsilon", C[549] || CT.C549, "\\phi", C[550] || CT.C550, "\\chi", C[551] || CT.C551, "\\psi", C[552] || CT.C552, "\\omega", C[553] || CT.C553, "\\varepsilon", C[554] || CT.C554, "\\vartheta", C[555] || CT.C555, "\\varpi", C[556] || CT.C556, "\\varrho", C[557] || CT.C557, "\\varsigma", C[558] || CT.C558, "\\varphi", C[559] || CT.C559, "\\cdot", C[563] || CT.C563, "\\div", C[564] || CT.C564, "\\pm", C[565] || CT.C565, "\\times", C[566] || CT.C566, "\\cap", C[567] || CT.C567, "\\cup", C[568] || CT.C568, "\\land", C[569] || CT.C569, "\\lor", C[570] || CT.C570, "\\wedge", C[569] || CT.C569, "\\vee", C[570] || CT.C570, "\\langle", C[573] || CT.C573, "\\lvert", C[1235] || CT.C1235, "\\rangle", C[578] || CT.C578, "\\rvert", C[1236] || CT.C1236, "\\approx", C[583] || CT.C583, "\\cong", C[584] || CT.C584, "\\ge", C[585] || CT.C585, "\\geq", C[585] || CT.C585, "\\gets", C[593] || CT.C593, "\\gt", C[581] || CT.C581, "\\in", C[586] || CT.C586, "\\subset", C[587] || CT.C587, "\\supset", C[588] || CT.C588, "\\subseteq", C[589] || CT.C589, "\\supseteq", C[590] || CT.C590, "\\nsubseteq", C[591] || CT.C591, "\\nsupseteq", C[592] || CT.C592, "\\models", C[1237] || CT.C1237, "\\leftarrow", C[593] || CT.C593, "\\le", C[594] || CT.C594, "\\leq", C[594] || CT.C594, "\\lt", C[580] || CT.C580, "\\rightarrow", C[595] || CT.C595, "\\to", C[595] || CT.C595, "\\ngeq", C[596] || CT.C596, "\\nleq", C[597] || CT.C597, "\\ ", C[1206] || CT.C1206, "~", C[1205] || CT.C1205, "\\space", C[1206] || CT.C1206, "\\nobreakspace", C[1205] || CT.C1205, "\\barwedge", C[600] || CT.C600, "\\veebar", C[601] || CT.C601, "\\odot", C[602] || CT.C602, "\\oplus", C[603] || CT.C603, "\\otimes", C[604] || CT.C604, "\\partial", C[605] || CT.C605, "\\oslash", C[606] || CT.C606, "\\circledcirc", C[607] || CT.C607, "\\boxdot", C[608] || CT.C608, "\\lbrack", C[572] || CT.C572, "\\rbrack", C[575] || CT.C575, "\\lparen", C[571] || CT.C571, "\\rparen", C[574] || CT.C574, "\\lfloor", C[609] || CT.C609, "\\rfloor", C[610] || CT.C610, "\\lceil", C[611] || CT.C611, "\\rceil", C[612] || CT.C612, "\\vert", C[1238] || CT.C1238, "\\uparrow", C[614] || CT.C614, "\\Uparrow", C[615] || CT.C615, "\\downarrow", C[616] || CT.C616, "\\Downarrow", C[617] || CT.C617, "\\updownarrow", C[618] || CT.C618, "\\Updownarrow", C[619] || CT.C619, "\\mathellipsis", C[620] || CT.C620, "\\ldots", C[620] || CT.C620, "\\@cdots", C[621] || CT.C621, "\\ddots", C[622] || CT.C622, "\\imath", C[623] || CT.C623, "\\jmath", C[624] || CT.C624, "\\degree", C[625] || CT.C625, "\\pounds", C[626] || CT.C626, "\\mathsterling", C[626] || CT.C626, "\\perp", C[1240] || CT.C1240, "\\bot", C[1241] || CT.C1241, "\\parallel", C[1242] || CT.C1242, "\\shortparallel", C[1243] || CT.C1243, "\\lVert", C[1244] || CT.C1244, "\\rVert", C[1245] || CT.C1245, "\\|", C[1246] || CT.C1246, "\\Vert", C[1246] || CT.C1246, "\\#", C[1247] || CT.C1247, "\\&", C[1248] || CT.C1248, "\\And", C[1249] || CT.C1249, "\\dagger", C[1250] || CT.C1250, "\\dag", C[1251] || CT.C1251, "\\ddagger", C[1252] || CT.C1252, "\\ddag", C[1253] || CT.C1253, "\\bigcirc", C[1254] || CT.C1254, "\\bullet", C[1255] || CT.C1255, "\\amalg", C[1256] || CT.C1256, "\\ntriangleleft", C[1257] || CT.C1257, "\\ntriangleright", C[1258] || CT.C1258, "\\trianglelefteq", C[1259] || CT.C1259, "\\unlhd", C[1260] || CT.C1260, "\\trianglerighteq", C[1261] || CT.C1261, "\\unrhd", C[1262] || CT.C1262, "\\bigtriangleup", C[1263] || CT.C1263, "\\vartriangle", C[1264] || CT.C1264, "\\triangle", C[1265] || CT.C1265, "\\bigtriangledown", C[1266] || CT.C1266, "\\triangledown", C[1267] || CT.C1267, "\\lozenge", C[1268] || CT.C1268, "\\Diamond", C[1268] || CT.C1268, "\\circledS", C[1269] || CT.C1269, "\\circledR", C[1270] || CT.C1270, "\\nexists", C[1271] || CT.C1271, "\\mho", C[1272] || CT.C1272, "\\backprime", C[1273] || CT.C1273, "\\blacktriangle", C[1274] || CT.C1274, "\\blacktriangledown", C[1275] || CT.C1275, "\\blacksquare", C[1276] || CT.C1276, "\\blacklozenge", C[1277] || CT.C1277, "\\bigstar", C[1278] || CT.C1278, "\\diagup", C[1279] || CT.C1279, "\\diagdown", C[1280] || CT.C1280, "\\square", C[1281] || CT.C1281, "\\Box", C[1281] || CT.C1281, "\\varkappa", C[1282] || CT.C1282, "\\lessdot", C[1283] || CT.C1283, "\\lhd", C[1284] || CT.C1284, "\\vartriangleleft", C[1285] || CT.C1285, "\\gtrdot", C[1286] || CT.C1286, "\\vartriangleright", C[1287] || CT.C1287, "\\rhd", C[1288] || CT.C1288, "\\blacktriangleleft", C[1289] || CT.C1289, "\\backepsilon", C[1290] || CT.C1290, "\\blacktriangleright", C[1291] || CT.C1291, "\\setminus", C[1292] || CT.C1292, "\\smallsetminus", C[1293] || CT.C1293, "\\$", C[1294] || CT.C1294, "\\%", C[1295] || CT.C1295, "\\_", C[1296] || CT.C1296, "\\prime", C[1297] || CT.C1297, "\\top", C[1298] || CT.C1298, "\\emptyset", C[1299] || CT.C1299, "\\varnothing", C[1300] || CT.C1300, "\\circ", C[1301] || CT.C1301, "\\surd", C[1302] || CT.C1302, "\\not", C[1303] || CT.C1303, "\\diamond", C[1304] || CT.C1304, "\\star", C[1305] || CT.C1305, "\\triangleleft", C[1306] || CT.C1306, "\\triangleright", C[1307] || CT.C1307, "\\{", C[1308] || CT.C1308, "\\lbrace", C[1308] || CT.C1308, "\\}", C[1309] || CT.C1309, "\\rbrace", C[1309] || CT.C1309, "\\backslash", C[1310] || CT.C1310, "\\coprod", C[1311] || CT.C1311, "\\bigvee", C[1312] || CT.C1312, "\\bigwedge", C[1313] || CT.C1313, "\\biguplus", C[1314] || CT.C1314, "\\bigcap", C[1315] || CT.C1315, "\\bigcup", C[1316] || CT.C1316, "\\int", C[1317] || CT.C1317, "\\intop", C[1317] || CT.C1317, "\\smallint", C[1317] || CT.C1317, "\\iint", C[1318] || CT.C1318, "\\iiint", C[1319] || CT.C1319, "\\prod", C[1320] || CT.C1320, "\\sum", C[1321] || CT.C1321, "\\bigotimes", C[1322] || CT.C1322, "\\bigoplus", C[1323] || CT.C1323, "\\bigodot", C[1324] || CT.C1324, "\\oint", C[1325] || CT.C1325, "\\oiint", C[1326] || CT.C1326, "\\oiiint", C[1327] || CT.C1327, "\\bigsqcup", C[1328] || CT.C1328, "\\varvdots", C[1329] || CT.C1329, "\\acute", C[1330] || CT.C1330, "\\grave", C[1331] || CT.C1331, "\\ddot", C[1332] || CT.C1332, "\\tilde", C[1333] || CT.C1333, "\\bar", C[1334] || CT.C1334, "\\breve", C[1335] || CT.C1335, "\\check", C[1336] || CT.C1336, "\\hat", C[1337] || CT.C1337, "\\vec", C[1338] || CT.C1338, "\\dot", C[1339] || CT.C1339, "\\mathring", C[1340] || CT.C1340, "\\maltese", C[1341] || CT.C1341, "≙", C[240] || CT.C240, "≚", C[241] || CT.C241, "≛", C[242] || CT.C242, "≝", C[243] || CT.C243, "≞", C[244] || CT.C244, "≟", C[245] || CT.C245, "\\neq", C[246] || CT.C246, "\\notin", C[247] || CT.C247, "\\notni", C[248] || CT.C248, "≠", C[246] || CT.C246, "∉", C[247] || CT.C247, "∌", C[248] || CT.C248, "\\colon", C[249] || CT.C249, "\\dblcolon", C[250] || CT.C250, "\\coloneqq", C[251] || CT.C251, "\\eqqcolon", C[252] || CT.C252, "\\eqcolon", C[253] || CT.C253, "\\llbracket", C[254] || CT.C254, "\\rrbracket", C[255] || CT.C255, "\\lBrace", C[256] || CT.C256, "\\rBrace", C[257] || CT.C257]);
    },
    get C1343() {
      return C[1343] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "§"
      });
    },
    get C1344() {
      return C[1344] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "¶"
      });
    },
    get C1345() {
      return C[1345] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ß"
      });
    },
    get C1346() {
      return C[1346] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "æ"
      });
    },
    get C1347() {
      return C[1347] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "œ"
      });
    },
    get C1348() {
      return C[1348] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ø"
      });
    },
    get C1349() {
      return C[1349] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Æ"
      });
    },
    get C1350() {
      return C[1350] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Œ"
      });
    },
    get C1351() {
      return C[1351] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "Ø"
      });
    },
    get C1352() {
      return C[1352] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "'"
      });
    },
    get C1353() {
      return C[1353] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "–"
      });
    },
    get C1354() {
      return C[1354] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "—"
      });
    },
    get C1355() {
      return C[1355] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "‘"
      });
    },
    get C1356() {
      return C[1356] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "’"
      });
    },
    get C1357() {
      return C[1357] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "“"
      });
    },
    get C1358() {
      return C[1358] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "”"
      });
    },
    get C1359() {
      return C[1359] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "ˆ"
      });
    },
    get C1360() {
      return C[1360] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "˜"
      });
    },
    get C1361() {
      return C[1361] = dart.const({
        __proto__: symbols.TexSymbolConfig.prototype,
        [S.TexSymbolConfig_font]: null,
        [S.TexSymbolConfig_type]: null,
        [S.TexSymbolConfig_variantForm]: false,
        [S.TexSymbolConfig_symbol]: "˝"
      });
    },
    get C1342() {
      return C[1342] = dart.constMap(T$.StringL(), T$.TexSymbolConfigL(), ["0", C[268] || CT.C268, "1", C[269] || CT.C269, "2", C[270] || CT.C270, "3", C[271] || CT.C271, "4", C[272] || CT.C272, "5", C[273] || CT.C273, "6", C[274] || CT.C274, "7", C[275] || CT.C275, "8", C[276] || CT.C276, "9", C[277] || CT.C277, "§", C[1343] || CT.C1343, "¶", C[1344] || CT.C1344, "¥", C[394] || CT.C394, "…", C[620] || CT.C620, "ı", C[623] || CT.C623, "ȷ", C[624] || CT.C624, "ß", C[1345] || CT.C1345, "æ", C[1346] || CT.C1346, "œ", C[1347] || CT.C1347, "ø", C[1348] || CT.C1348, "Æ", C[1349] || CT.C1349, "Œ", C[1350] || CT.C1350, "Ø", C[1351] || CT.C1351, "`", C[502] || CT.C502, "'", C[1352] || CT.C1352, "°", C[625] || CT.C625, "£", C[626] || CT.C626, " ", C[1206] || CT.C1206, "!", C[577] || CT.C577, "@", C[628] || CT.C628, "*", C[560] || CT.C560, "(", C[571] || CT.C571, ")", C[574] || CT.C574, "-", C[562] || CT.C562, "=", C[579] || CT.C579, "+", C[561] || CT.C561, "[", C[572] || CT.C572, "]", C[575] || CT.C575, "<", C[580] || CT.C580, ">", C[581] || CT.C581, "|", C[613] || CT.C613, "\"", C[630] || CT.C630, ";", C[599] || CT.C599, ":", C[582] || CT.C582, "?", C[576] || CT.C576, "/", C[627] || CT.C627, ".", C[629] || CT.C629, ",", C[598] || CT.C598, "A", C[631] || CT.C631, "B", C[632] || CT.C632, "C", C[633] || CT.C633, "D", C[634] || CT.C634, "E", C[635] || CT.C635, "F", C[636] || CT.C636, "G", C[637] || CT.C637, "H", C[638] || CT.C638, "I", C[639] || CT.C639, "J", C[640] || CT.C640, "K", C[641] || CT.C641, "L", C[642] || CT.C642, "M", C[643] || CT.C643, "N", C[644] || CT.C644, "O", C[645] || CT.C645, "P", C[646] || CT.C646, "Q", C[647] || CT.C647, "R", C[648] || CT.C648, "S", C[649] || CT.C649, "T", C[650] || CT.C650, "U", C[651] || CT.C651, "V", C[652] || CT.C652, "W", C[653] || CT.C653, "X", C[654] || CT.C654, "Y", C[655] || CT.C655, "Z", C[656] || CT.C656, "a", C[657] || CT.C657, "b", C[658] || CT.C658, "c", C[659] || CT.C659, "d", C[660] || CT.C660, "e", C[661] || CT.C661, "f", C[662] || CT.C662, "g", C[663] || CT.C663, "h", C[664] || CT.C664, "i", C[665] || CT.C665, "j", C[666] || CT.C666, "k", C[667] || CT.C667, "l", C[668] || CT.C668, "m", C[669] || CT.C669, "n", C[670] || CT.C670, "o", C[671] || CT.C671, "p", C[672] || CT.C672, "q", C[673] || CT.C673, "r", C[674] || CT.C674, "s", C[675] || CT.C675, "t", C[676] || CT.C676, "u", C[677] || CT.C677, "v", C[678] || CT.C678, "w", C[679] || CT.C679, "x", C[680] || CT.C680, "y", C[681] || CT.C681, "z", C[682] || CT.C682, "ℂ", C[683] || CT.C683, "ℍ", C[684] || CT.C684, "ℕ", C[685] || CT.C685, "ℙ", C[686] || CT.C686, "ℚ", C[687] || CT.C687, "ℝ", C[688] || CT.C688, "ℤ", C[689] || CT.C689, "ℎ", C[690] || CT.C690, "𝐀", C[691] || CT.C691, "𝐴", C[692] || CT.C692, "𝑨", C[693] || CT.C693, "𝔄", C[694] || CT.C694, "𝖠", C[695] || CT.C695, "𝗔", C[696] || CT.C696, "𝘈", C[697] || CT.C697, "𝙰", C[698] || CT.C698, "𝔸", C[699] || CT.C699, "𝒜", C[700] || CT.C700, "𝐁", C[701] || CT.C701, "𝐵", C[702] || CT.C702, "𝑩", C[703] || CT.C703, "𝔅", C[704] || CT.C704, "𝖡", C[705] || CT.C705, "𝗕", C[706] || CT.C706, "𝘉", C[707] || CT.C707, "𝙱", C[708] || CT.C708, "𝔹", C[709] || CT.C709, "𝒝", C[710] || CT.C710, "𝐂", C[711] || CT.C711, "𝐶", C[712] || CT.C712, "𝑪", C[713] || CT.C713, "𝔆", C[714] || CT.C714, "𝖢", C[715] || CT.C715, "𝗖", C[716] || CT.C716, "𝘊", C[717] || CT.C717, "𝙲", C[718] || CT.C718, "𝔺", C[719] || CT.C719, "𝒞", C[720] || CT.C720, "𝐃", C[721] || CT.C721, "𝐷", C[722] || CT.C722, "𝑫", C[723] || CT.C723, "𝔇", C[724] || CT.C724, "𝖣", C[725] || CT.C725, "𝗗", C[726] || CT.C726, "𝘋", C[727] || CT.C727, "𝙳", C[728] || CT.C728, "𝔻", C[729] || CT.C729, "𝒟", C[730] || CT.C730, "𝐄", C[731] || CT.C731, "𝐸", C[732] || CT.C732, "𝑬", C[733] || CT.C733, "𝔈", C[734] || CT.C734, "𝖤", C[735] || CT.C735, "𝗘", C[736] || CT.C736, "𝘌", C[737] || CT.C737, "𝙴", C[738] || CT.C738, "𝔼", C[739] || CT.C739, "𝒠", C[740] || CT.C740, "𝐅", C[741] || CT.C741, "𝐹", C[742] || CT.C742, "𝑭", C[743] || CT.C743, "𝔉", C[744] || CT.C744, "𝖥", C[745] || CT.C745, "𝗙", C[746] || CT.C746, "𝘍", C[747] || CT.C747, "𝙵", C[748] || CT.C748, "𝔽", C[749] || CT.C749, "𝒡", C[750] || CT.C750, "𝐆", C[751] || CT.C751, "𝐺", C[752] || CT.C752, "𝑮", C[753] || CT.C753, "𝔊", C[754] || CT.C754, "𝖦", C[755] || CT.C755, "𝗚", C[756] || CT.C756, "𝘎", C[757] || CT.C757, "𝙶", C[758] || CT.C758, "𝔾", C[759] || CT.C759, "𝒢", C[760] || CT.C760, "𝐇", C[761] || CT.C761, "𝐻", C[762] || CT.C762, "𝑯", C[763] || CT.C763, "𝔋", C[764] || CT.C764, "𝖧", C[765] || CT.C765, "𝗛", C[766] || CT.C766, "𝘏", C[767] || CT.C767, "𝙷", C[768] || CT.C768, "𝔿", C[769] || CT.C769, "𝒣", C[770] || CT.C770, "𝐈", C[771] || CT.C771, "𝐼", C[772] || CT.C772, "𝑰", C[773] || CT.C773, "𝔌", C[774] || CT.C774, "𝖨", C[775] || CT.C775, "𝗜", C[776] || CT.C776, "𝘐", C[777] || CT.C777, "𝙸", C[778] || CT.C778, "𝕀", C[779] || CT.C779, "𝒤", C[780] || CT.C780, "𝐉", C[781] || CT.C781, "𝐽", C[782] || CT.C782, "𝑱", C[783] || CT.C783, "𝔍", C[784] || CT.C784, "𝖩", C[785] || CT.C785, "𝗝", C[786] || CT.C786, "𝘑", C[787] || CT.C787, "𝙹", C[788] || CT.C788, "𝕁", C[789] || CT.C789, "𝒥", C[790] || CT.C790, "𝐊", C[791] || CT.C791, "𝐾", C[792] || CT.C792, "𝑲", C[793] || CT.C793, "𝔎", C[794] || CT.C794, "𝖪", C[795] || CT.C795, "𝗞", C[796] || CT.C796, "𝘒", C[797] || CT.C797, "𝙺", C[798] || CT.C798, "𝕂", C[799] || CT.C799, "𝒦", C[800] || CT.C800, "𝐋", C[801] || CT.C801, "𝐿", C[802] || CT.C802, "𝑳", C[803] || CT.C803, "𝔏", C[804] || CT.C804, "𝖫", C[805] || CT.C805, "𝗟", C[806] || CT.C806, "𝘓", C[807] || CT.C807, "𝙻", C[808] || CT.C808, "𝕃", C[809] || CT.C809, "𝒧", C[810] || CT.C810, "𝐌", C[811] || CT.C811, "𝑀", C[812] || CT.C812, "𝑴", C[813] || CT.C813, "𝔐", C[814] || CT.C814, "𝖬", C[815] || CT.C815, "𝗠", C[816] || CT.C816, "𝘔", C[817] || CT.C817, "𝙼", C[818] || CT.C818, "𝕄", C[819] || CT.C819, "𝒨", C[820] || CT.C820, "𝐍", C[821] || CT.C821, "𝑁", C[822] || CT.C822, "𝑵", C[823] || CT.C823, "𝔑", C[824] || CT.C824, "𝖭", C[825] || CT.C825, "𝗡", C[826] || CT.C826, "𝘕", C[827] || CT.C827, "𝙽", C[828] || CT.C828, "𝕅", C[829] || CT.C829, "𝒩", C[830] || CT.C830, "𝐎", C[831] || CT.C831, "𝑂", C[832] || CT.C832, "𝑶", C[833] || CT.C833, "𝔒", C[834] || CT.C834, "𝖮", C[835] || CT.C835, "𝗢", C[836] || CT.C836, "𝘖", C[837] || CT.C837, "𝙾", C[838] || CT.C838, "𝕆", C[839] || CT.C839, "𝒪", C[840] || CT.C840, "𝐏", C[841] || CT.C841, "𝑃", C[842] || CT.C842, "𝑷", C[843] || CT.C843, "𝔓", C[844] || CT.C844, "𝖯", C[845] || CT.C845, "𝗣", C[846] || CT.C846, "𝘗", C[847] || CT.C847, "𝙿", C[848] || CT.C848, "𝕇", C[849] || CT.C849, "𝒫", C[850] || CT.C850, "𝐐", C[851] || CT.C851, "𝑄", C[852] || CT.C852, "𝑸", C[853] || CT.C853, "𝔔", C[854] || CT.C854, "𝖰", C[855] || CT.C855, "𝗤", C[856] || CT.C856, "𝘘", C[857] || CT.C857, "𝚀", C[858] || CT.C858, "𝕈", C[859] || CT.C859, "𝒬", C[860] || CT.C860, "𝐑", C[861] || CT.C861, "𝑅", C[862] || CT.C862, "𝑹", C[863] || CT.C863, "𝔕", C[864] || CT.C864, "𝖱", C[865] || CT.C865, "𝗥", C[866] || CT.C866, "𝘙", C[867] || CT.C867, "𝚁", C[868] || CT.C868, "𝕉", C[869] || CT.C869, "𝒭", C[870] || CT.C870, "𝐒", C[871] || CT.C871, "𝑆", C[872] || CT.C872, "𝑺", C[873] || CT.C873, "𝔖", C[874] || CT.C874, "𝖲", C[875] || CT.C875, "𝗦", C[876] || CT.C876, "𝘚", C[877] || CT.C877, "𝚂", C[878] || CT.C878, "𝕊", C[879] || CT.C879, "𝒮", C[880] || CT.C880, "𝐓", C[881] || CT.C881, "𝑇", C[882] || CT.C882, "𝑻", C[883] || CT.C883, "𝔗", C[884] || CT.C884, "𝖳", C[885] || CT.C885, "𝗧", C[886] || CT.C886, "𝘛", C[887] || CT.C887, "𝚃", C[888] || CT.C888, "𝕋", C[889] || CT.C889, "𝒯", C[890] || CT.C890, "𝐔", C[891] || CT.C891, "𝑈", C[892] || CT.C892, "𝑼", C[893] || CT.C893, "𝔘", C[894] || CT.C894, "𝖴", C[895] || CT.C895, "𝗨", C[896] || CT.C896, "𝘜", C[897] || CT.C897, "𝚄", C[898] || CT.C898, "𝕌", C[899] || CT.C899, "𝒰", C[900] || CT.C900, "𝐕", C[901] || CT.C901, "𝑉", C[902] || CT.C902, "𝑽", C[903] || CT.C903, "𝔙", C[904] || CT.C904, "𝖵", C[905] || CT.C905, "𝗩", C[906] || CT.C906, "𝘝", C[907] || CT.C907, "𝚅", C[908] || CT.C908, "𝕍", C[909] || CT.C909, "𝒱", C[910] || CT.C910, "𝐖", C[911] || CT.C911, "𝑊", C[912] || CT.C912, "𝑾", C[913] || CT.C913, "𝔚", C[914] || CT.C914, "𝖶", C[915] || CT.C915, "𝗪", C[916] || CT.C916, "𝘞", C[917] || CT.C917, "𝚆", C[918] || CT.C918, "𝕎", C[919] || CT.C919, "𝒲", C[920] || CT.C920, "𝐗", C[921] || CT.C921, "𝑋", C[922] || CT.C922, "𝑿", C[923] || CT.C923, "𝔛", C[924] || CT.C924, "𝖷", C[925] || CT.C925, "𝗫", C[926] || CT.C926, "𝘟", C[927] || CT.C927, "𝚇", C[928] || CT.C928, "𝕏", C[929] || CT.C929, "𝒳", C[930] || CT.C930, "𝐘", C[931] || CT.C931, "𝑌", C[932] || CT.C932, "𝒀", C[933] || CT.C933, "𝔜", C[934] || CT.C934, "𝖸", C[935] || CT.C935, "𝗬", C[936] || CT.C936, "𝘠", C[937] || CT.C937, "𝚈", C[938] || CT.C938, "𝕐", C[939] || CT.C939, "𝒴", C[940] || CT.C940, "𝐙", C[941] || CT.C941, "𝑍", C[942] || CT.C942, "𝒁", C[943] || CT.C943, "𝔝", C[944] || CT.C944, "𝖹", C[945] || CT.C945, "𝗭", C[946] || CT.C946, "𝘡", C[947] || CT.C947, "𝚉", C[948] || CT.C948, "𝕑", C[949] || CT.C949, "𝒵", C[950] || CT.C950, "𝐚", C[951] || CT.C951, "𝑎", C[952] || CT.C952, "𝒂", C[953] || CT.C953, "𝔞", C[954] || CT.C954, "𝖺", C[955] || CT.C955, "𝗮", C[956] || CT.C956, "𝘢", C[957] || CT.C957, "𝚊", C[958] || CT.C958, "𝐛", C[959] || CT.C959, "𝑏", C[960] || CT.C960, "𝒃", C[961] || CT.C961, "𝔟", C[962] || CT.C962, "𝖻", C[963] || CT.C963, "𝗯", C[964] || CT.C964, "𝘣", C[965] || CT.C965, "𝚋", C[966] || CT.C966, "𝐜", C[967] || CT.C967, "𝑐", C[968] || CT.C968, "𝒄", C[969] || CT.C969, "𝔠", C[970] || CT.C970, "𝖼", C[971] || CT.C971, "𝗰", C[972] || CT.C972, "𝘤", C[973] || CT.C973, "𝚌", C[974] || CT.C974, "𝐝", C[975] || CT.C975, "𝑑", C[976] || CT.C976, "𝒅", C[977] || CT.C977, "𝔡", C[978] || CT.C978, "𝖽", C[979] || CT.C979, "𝗱", C[980] || CT.C980, "𝘥", C[981] || CT.C981, "𝚍", C[982] || CT.C982, "𝐞", C[983] || CT.C983, "𝑒", C[984] || CT.C984, "𝒆", C[985] || CT.C985, "𝔢", C[986] || CT.C986, "𝖾", C[987] || CT.C987, "𝗲", C[988] || CT.C988, "𝘦", C[989] || CT.C989, "𝚎", C[990] || CT.C990, "𝐟", C[991] || CT.C991, "𝑓", C[992] || CT.C992, "𝒇", C[993] || CT.C993, "𝔣", C[994] || CT.C994, "𝖿", C[995] || CT.C995, "𝗳", C[996] || CT.C996, "𝘧", C[997] || CT.C997, "𝚏", C[998] || CT.C998, "𝐠", C[999] || CT.C999, "𝑔", C[1000] || CT.C1000, "𝒈", C[1001] || CT.C1001, "𝔤", C[1002] || CT.C1002, "𝗀", C[1003] || CT.C1003, "𝗴", C[1004] || CT.C1004, "𝘨", C[1005] || CT.C1005, "𝚐", C[1006] || CT.C1006, "𝐡", C[1007] || CT.C1007, "𝑕", C[1008] || CT.C1008, "𝒉", C[1009] || CT.C1009, "𝔥", C[1010] || CT.C1010, "𝗁", C[1011] || CT.C1011, "𝗵", C[1012] || CT.C1012, "𝘩", C[1013] || CT.C1013, "𝚑", C[1014] || CT.C1014, "𝐢", C[1015] || CT.C1015, "𝑖", C[1016] || CT.C1016, "𝒊", C[1017] || CT.C1017, "𝔦", C[1018] || CT.C1018, "𝗂", C[1019] || CT.C1019, "𝗶", C[1020] || CT.C1020, "𝘪", C[1021] || CT.C1021, "𝚒", C[1022] || CT.C1022, "𝐣", C[1023] || CT.C1023, "𝑗", C[1024] || CT.C1024, "𝒋", C[1025] || CT.C1025, "𝔧", C[1026] || CT.C1026, "𝗃", C[1027] || CT.C1027, "𝗷", C[1028] || CT.C1028, "𝘫", C[1029] || CT.C1029, "𝚓", C[1030] || CT.C1030, "𝐤", C[1031] || CT.C1031, "𝑘", C[1032] || CT.C1032, "𝒌", C[1033] || CT.C1033, "𝔨", C[1034] || CT.C1034, "𝗄", C[1035] || CT.C1035, "𝗸", C[1036] || CT.C1036, "𝘬", C[1037] || CT.C1037, "𝚔", C[1038] || CT.C1038, "𝐥", C[1039] || CT.C1039, "𝑙", C[1040] || CT.C1040, "𝒍", C[1041] || CT.C1041, "𝔩", C[1042] || CT.C1042, "𝗅", C[1043] || CT.C1043, "𝗹", C[1044] || CT.C1044, "𝘭", C[1045] || CT.C1045, "𝚕", C[1046] || CT.C1046, "𝐦", C[1047] || CT.C1047, "𝑚", C[1048] || CT.C1048, "𝒎", C[1049] || CT.C1049, "𝔪", C[1050] || CT.C1050, "𝗆", C[1051] || CT.C1051, "𝗺", C[1052] || CT.C1052, "𝘮", C[1053] || CT.C1053, "𝚖", C[1054] || CT.C1054, "𝐧", C[1055] || CT.C1055, "𝑛", C[1056] || CT.C1056, "𝒏", C[1057] || CT.C1057, "𝔫", C[1058] || CT.C1058, "𝗇", C[1059] || CT.C1059, "𝗻", C[1060] || CT.C1060, "𝘯", C[1061] || CT.C1061, "𝚗", C[1062] || CT.C1062, "𝐨", C[1063] || CT.C1063, "𝑜", C[1064] || CT.C1064, "𝒐", C[1065] || CT.C1065, "𝔬", C[1066] || CT.C1066, "𝗈", C[1067] || CT.C1067, "𝗼", C[1068] || CT.C1068, "𝘰", C[1069] || CT.C1069, "𝚘", C[1070] || CT.C1070, "𝐩", C[1071] || CT.C1071, "𝑝", C[1072] || CT.C1072, "𝒑", C[1073] || CT.C1073, "𝔭", C[1074] || CT.C1074, "𝗉", C[1075] || CT.C1075, "𝗽", C[1076] || CT.C1076, "𝘱", C[1077] || CT.C1077, "𝚙", C[1078] || CT.C1078, "𝐪", C[1079] || CT.C1079, "𝑞", C[1080] || CT.C1080, "𝒒", C[1081] || CT.C1081, "𝔮", C[1082] || CT.C1082, "𝗊", C[1083] || CT.C1083, "𝗾", C[1084] || CT.C1084, "𝘲", C[1085] || CT.C1085, "𝚚", C[1086] || CT.C1086, "𝐫", C[1087] || CT.C1087, "𝑟", C[1088] || CT.C1088, "𝒓", C[1089] || CT.C1089, "𝔯", C[1090] || CT.C1090, "𝗋", C[1091] || CT.C1091, "𝗿", C[1092] || CT.C1092, "𝘳", C[1093] || CT.C1093, "𝚛", C[1094] || CT.C1094, "𝐬", C[1095] || CT.C1095, "𝑠", C[1096] || CT.C1096, "𝒔", C[1097] || CT.C1097, "𝔰", C[1098] || CT.C1098, "𝗌", C[1099] || CT.C1099, "𝘀", C[1100] || CT.C1100, "𝘴", C[1101] || CT.C1101, "𝚜", C[1102] || CT.C1102, "𝐭", C[1103] || CT.C1103, "𝑡", C[1104] || CT.C1104, "𝒕", C[1105] || CT.C1105, "𝔱", C[1106] || CT.C1106, "𝗍", C[1107] || CT.C1107, "𝘁", C[1108] || CT.C1108, "𝘵", C[1109] || CT.C1109, "𝚝", C[1110] || CT.C1110, "𝐮", C[1111] || CT.C1111, "𝑢", C[1112] || CT.C1112, "𝒖", C[1113] || CT.C1113, "𝔲", C[1114] || CT.C1114, "𝗎", C[1115] || CT.C1115, "𝘂", C[1116] || CT.C1116, "𝘶", C[1117] || CT.C1117, "𝚞", C[1118] || CT.C1118, "𝐯", C[1119] || CT.C1119, "𝑣", C[1120] || CT.C1120, "𝒗", C[1121] || CT.C1121, "𝔳", C[1122] || CT.C1122, "𝗏", C[1123] || CT.C1123, "𝘃", C[1124] || CT.C1124, "𝘷", C[1125] || CT.C1125, "𝚟", C[1126] || CT.C1126, "𝐰", C[1127] || CT.C1127, "𝑤", C[1128] || CT.C1128, "𝒘", C[1129] || CT.C1129, "𝔴", C[1130] || CT.C1130, "𝗐", C[1131] || CT.C1131, "𝘄", C[1132] || CT.C1132, "𝘸", C[1133] || CT.C1133, "𝚠", C[1134] || CT.C1134, "𝐱", C[1135] || CT.C1135, "𝑥", C[1136] || CT.C1136, "𝒙", C[1137] || CT.C1137, "𝔵", C[1138] || CT.C1138, "𝗑", C[1139] || CT.C1139, "𝘅", C[1140] || CT.C1140, "𝘹", C[1141] || CT.C1141, "𝚡", C[1142] || CT.C1142, "𝐲", C[1143] || CT.C1143, "𝑦", C[1144] || CT.C1144, "𝒚", C[1145] || CT.C1145, "𝔶", C[1146] || CT.C1146, "𝗒", C[1147] || CT.C1147, "𝘆", C[1148] || CT.C1148, "𝘺", C[1149] || CT.C1149, "𝚢", C[1150] || CT.C1150, "𝐳", C[1151] || CT.C1151, "𝑧", C[1152] || CT.C1152, "𝒛", C[1153] || CT.C1153, "𝔷", C[1154] || CT.C1154, "𝗓", C[1155] || CT.C1155, "𝘇", C[1156] || CT.C1156, "𝘻", C[1157] || CT.C1157, "𝚣", C[1158] || CT.C1158, "𝕜", C[1159] || CT.C1159, "𝟎", C[1160] || CT.C1160, "𝟢", C[1161] || CT.C1161, "𝟬", C[1162] || CT.C1162, "𝟶", C[1163] || CT.C1163, "𝟏", C[1164] || CT.C1164, "𝟣", C[1165] || CT.C1165, "𝟭", C[1166] || CT.C1166, "𝟷", C[1167] || CT.C1167, "𝟐", C[1168] || CT.C1168, "𝟤", C[1169] || CT.C1169, "𝟮", C[1170] || CT.C1170, "𝟸", C[1171] || CT.C1171, "𝟑", C[1172] || CT.C1172, "𝟥", C[1173] || CT.C1173, "𝟯", C[1174] || CT.C1174, "𝟹", C[1175] || CT.C1175, "𝟒", C[1176] || CT.C1176, "𝟦", C[1177] || CT.C1177, "𝟰", C[1178] || CT.C1178, "𝟺", C[1179] || CT.C1179, "𝟓", C[1180] || CT.C1180, "𝟧", C[1181] || CT.C1181, "𝟱", C[1182] || CT.C1182, "𝟻", C[1183] || CT.C1183, "𝟔", C[1184] || CT.C1184, "𝟨", C[1185] || CT.C1185, "𝟲", C[1186] || CT.C1186, "𝟼", C[1187] || CT.C1187, "𝟕", C[1188] || CT.C1188, "𝟩", C[1189] || CT.C1189, "𝟳", C[1190] || CT.C1190, "𝟽", C[1191] || CT.C1191, "𝟖", C[1192] || CT.C1192, "𝟪", C[1193] || CT.C1193, "𝟴", C[1194] || CT.C1194, "𝟾", C[1195] || CT.C1195, "𝟗", C[1196] || CT.C1196, "𝟫", C[1197] || CT.C1197, "𝟵", C[1198] || CT.C1198, "𝟿", C[1199] || CT.C1199, "Ç", C[1200] || CT.C1200, "Ð", C[1201] || CT.C1201, "Þ", C[1202] || CT.C1202, "ç", C[1203] || CT.C1203, "þ", C[1204] || CT.C1204, "ð", C[393] || CT.C393, "–", C[1353] || CT.C1353, "—", C[1354] || CT.C1354, "‘", C[1355] || CT.C1355, "’", C[1356] || CT.C1356, "“", C[1357] || CT.C1357, "”", C[1358] || CT.C1358, " ", C[1205] || CT.C1205, "\\S", C[1343] || CT.C1343, "\\P", C[1344] || CT.C1344, "\\yen", C[394] || CT.C394, "\\ ", C[1206] || CT.C1206, "~", C[1205] || CT.C1205, "\\space", C[1206] || CT.C1206, "\\nobreakspace", C[1205] || CT.C1205, "\\lbrack", C[572] || CT.C572, "\\rbrack", C[575] || CT.C575, "\\textless", C[580] || CT.C580, "\\textgreater", C[581] || CT.C581, "\\textbar", C[613] || CT.C613, "\\textellipsis", C[620] || CT.C620, "\\ldots", C[620] || CT.C620, "\\i", C[623] || CT.C623, "\\j", C[624] || CT.C624, "\\ss", C[1345] || CT.C1345, "\\ae", C[1346] || CT.C1346, "\\oe", C[1347] || CT.C1347, "\\o", C[1348] || CT.C1348, "\\AE", C[1349] || CT.C1349, "\\OE", C[1350] || CT.C1350, "\\O", C[1351] || CT.C1351, "--", C[1353] || CT.C1353, "\\textendash", C[1353] || CT.C1353, "---", C[1354] || CT.C1354, "\\textemdash", C[1354] || CT.C1354, "\\textquoteleft", C[1355] || CT.C1355, "\\textquoteright", C[1356] || CT.C1356, "``", C[1357] || CT.C1357, "\\textquotedblleft", C[1357] || CT.C1357, "''", C[1358] || CT.C1358, "\\textquotedblright", C[1358] || CT.C1358, "\\degree", C[625] || CT.C625, "\\textdegree", C[625] || CT.C625, "\\pounds", C[626] || CT.C626, "\\textsterling", C[626] || CT.C626, "\\textbardbl", C[1242] || CT.C1242, "\\#", C[1247] || CT.C1247, "\\&", C[1248] || CT.C1248, "\\textdagger", C[1250] || CT.C1250, "\\dag", C[1250] || CT.C1250, "\\textdaggerdbl", C[1252] || CT.C1252, "\\ddag", C[1252] || CT.C1252, "\\textcircled", C[1254] || CT.C1254, "\\circledR", C[1270] || CT.C1270, "\\$", C[1294] || CT.C1294, "\\textdollar", C[1294] || CT.C1294, "\\%", C[1295] || CT.C1295, "\\_", C[1296] || CT.C1296, "\\textunderscore", C[1296] || CT.C1296, "\\{", C[1308] || CT.C1308, "\\textbraceleft", C[1308] || CT.C1308, "\\}", C[1309] || CT.C1309, "\\textbraceright", C[1309] || CT.C1309, "\\textbackslash", C[1310] || CT.C1310, "\\'", C[1330] || CT.C1330, "\\`", C[1331] || CT.C1331, "\\\"", C[1332] || CT.C1332, "\\textasciitilde", C[1333] || CT.C1333, "\\=", C[1334] || CT.C1334, "\\u", C[1335] || CT.C1335, "\\v", C[1336] || CT.C1336, "\\textasciicircum", C[1337] || CT.C1337, "\\.", C[1339] || CT.C1339, "\\r", C[1340] || CT.C1340, "\\maltese", C[1341] || CT.C1341, "\\checkmark", C[395] || CT.C395, "\\^", C[1359] || CT.C1359, "\\~", C[1360] || CT.C1360, "\\H", C[1361] || CT.C1361]);
    },
    get C266() {
      return C[266] = dart.constMap(T$.ModeL(), T$.MapLOfStringL$TexSymbolConfigL(), [C[124] || CT.C124, C[267] || CT.C267, C[128] || CT.C128, C[1342] || CT.C1342]);
    },
    get C1362() {
      return C[1362] = dart.constSet(T$.StringL(), ["Ç", "Ð", "Þ", "ç", "þ"]);
    },
    get C1363() {
      return C[1363] = dart.constMap(T$.StringL(), T$.StringL(), ["–", "--", "—", "---", "“", "``", "”", "''"]);
    },
    get C1364() {
      return C[1364] = dart.constSet(T$.StringL(), ["\\relax", "^", "_", "\\limits", "\\nolimits"]);
    },
    get C1365() {
      return C[1365] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Typewriter"
      });
    },
    get C1366() {
      return C[1366] = dart.constSet(T$.StringL(), ["]", "}", "\\endgroup", "$", "\\)", "\\cr"]);
    },
    get C1367() {
      return C[1367] = dart.constSet(T$.StringL(), ["}", "\\endgroup", "\\end", "\\right", "&"]);
    },
    get C1368() {
      return C[1368] = dart.constMap(T$.StringL(), T$.StringL(), ["[", "]", "{", "}", "\\begingroup", "\\endgroup"]);
    },
    get C1369() {
      return C[1369] = dart.const({
        __proto__: matrix.MatrixSeparatorStyle.prototype,
        [S._name$10]: "MatrixSeparatorStyle.solid",
        index: 0
      });
    },
    get C1370() {
      return C[1370] = dart.const({
        __proto__: matrix.MatrixSeparatorStyle.prototype,
        [S._name$10]: "MatrixSeparatorStyle.dashed",
        index: 1
      });
    },
    get C1371() {
      return C[1371] = dart.const({
        __proto__: matrix.MatrixSeparatorStyle.prototype,
        [S._name$10]: "MatrixSeparatorStyle.none",
        index: 2
      });
    },
    get C1372() {
      return C[1372] = dart.constList([C[1369] || CT.C1369, C[1370] || CT.C1370, C[1371] || CT.C1371], T$.MatrixSeparatorStyleL());
    },
    get C1373() {
      return C[1373] = dart.const({
        __proto__: matrix.MatrixColumnAlign.prototype,
        [S._name$10]: "MatrixColumnAlign.left",
        index: 0
      });
    },
    get C1374() {
      return C[1374] = dart.const({
        __proto__: matrix.MatrixColumnAlign.prototype,
        [S._name$10]: "MatrixColumnAlign.center",
        index: 1
      });
    },
    get C1375() {
      return C[1375] = dart.const({
        __proto__: matrix.MatrixColumnAlign.prototype,
        [S._name$10]: "MatrixColumnAlign.right",
        index: 2
      });
    },
    get C1376() {
      return C[1376] = dart.constList([C[1373] || CT.C1373, C[1374] || CT.C1374, C[1375] || CT.C1375], T$.MatrixColumnAlignL());
    },
    get C1377() {
      return C[1377] = dart.const({
        __proto__: matrix.MatrixRowAlign.prototype,
        [S._name$10]: "MatrixRowAlign.top",
        index: 0
      });
    },
    get C1378() {
      return C[1378] = dart.const({
        __proto__: matrix.MatrixRowAlign.prototype,
        [S._name$10]: "MatrixRowAlign.bottom",
        index: 1
      });
    },
    get C1379() {
      return C[1379] = dart.const({
        __proto__: matrix.MatrixRowAlign.prototype,
        [S._name$10]: "MatrixRowAlign.center",
        index: 2
      });
    },
    get C1380() {
      return C[1380] = dart.const({
        __proto__: matrix.MatrixRowAlign.prototype,
        [S._name$10]: "MatrixRowAlign.baseline",
        index: 3
      });
    },
    get C1381() {
      return C[1381] = dart.constList([C[1377] || CT.C1377, C[1378] || CT.C1378, C[1379] || CT.C1379, C[1380] || CT.C1380], T$.MatrixRowAlignL());
    },
    get C1382() {
      return C[1382] = dart.constList([], T$.MatrixColumnAlignL());
    },
    get C1383() {
      return C[1383] = dart.constList([], T$.MatrixSeparatorStyleL());
    },
    get C1384() {
      return C[1384] = dart.constList([], T$.MeasurementL());
    },
    get C1387() {
      return C[1387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 36,
        [S._Location_line]: 180,
        [S._Location_file]: null
      });
    },
    get C1388() {
      return C[1388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 47,
        [S._Location_line]: 180,
        [S._Location_file]: null
      });
    },
    get C1386() {
      return C[1386] = dart.constList([C[1387] || CT.C1387, C[1388] || CT.C1388], T$._LocationL());
    },
    get C1385() {
      return C[1385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1386] || CT.C1386,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 180,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/matrix.dart"
      });
    },
    get C1391() {
      return C[1391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 11,
        [S._Location_line]: 158,
        [S._Location_file]: null
      });
    },
    get C1392() {
      return C[1392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 177,
        [S._Location_file]: null
      });
    },
    get C1390() {
      return C[1390] = dart.constList([C[1391] || CT.C1391, C[1392] || CT.C1392], T$._LocationL());
    },
    get C1389() {
      return C[1389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1390] || CT.C1390,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 157,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/matrix.dart"
      });
    },
    get C1395() {
      return C[1395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 9,
        [S._Location_line]: 155,
        [S._Location_file]: null
      });
    },
    get C1396() {
      return C[1396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 9,
        [S._Location_line]: 156,
        [S._Location_file]: null
      });
    },
    get C1397() {
      return C[1397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 157,
        [S._Location_file]: null
      });
    },
    get C1394() {
      return C[1394] = dart.constList([C[1395] || CT.C1395, C[1396] || CT.C1396, C[1397] || CT.C1397], T$._LocationL());
    },
    get C1393() {
      return C[1393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1394] || CT.C1394,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 154,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/matrix.dart"
      });
    },
    get C1398() {
      return C[1398] = dart.const({
        __proto__: array.ColSeparationType.prototype,
        [S._name$11]: "ColSeparationType.align",
        index: 0
      });
    },
    get C1399() {
      return C[1399] = dart.const({
        __proto__: array.ColSeparationType.prototype,
        [S._name$11]: "ColSeparationType.alignat",
        index: 1
      });
    },
    get C1400() {
      return C[1400] = dart.const({
        __proto__: array.ColSeparationType.prototype,
        [S._name$11]: "ColSeparationType.small",
        index: 2
      });
    },
    get C1401() {
      return C[1401] = dart.constList([C[1398] || CT.C1398, C[1399] || CT.C1399, C[1400] || CT.C1400], T$.ColSeparationTypeL());
    },
    get C1402() {
      return C[1402] = dart.constMap(T$.StringL(), T$.MatrixColumnAlignL(), ["l", C[1373] || CT.C1373, "c", C[1374] || CT.C1374, "r", C[1375] || CT.C1375]);
    },
    get C1403() {
      return C[1403] = dart.constMap(T$.StringL(), T$.MatrixSeparatorStyleL(), ["|", C[1369] || CT.C1369, ":", C[1370] || CT.C1370]);
    },
    get C1405() {
      return C[1405] = dart.constList(["(", ")"], T$.StringL());
    },
    get C1406() {
      return C[1406] = dart.constList(["[", "]"], T$.StringL());
    },
    get C1407() {
      return C[1407] = dart.constList(["{", "}"], T$.StringL());
    },
    get C1408() {
      return C[1408] = dart.constList(["|", "|"], T$.StringL());
    },
    get C1409() {
      return C[1409] = dart.constList(["∣", "∣"], T$.StringL());
    },
    get C1404() {
      return C[1404] = dart.constMap(T$.StringL(), T$.ListNOfStringL(), ["matrix", null, "pmatrix", C[1405] || CT.C1405, "bmatrix", C[1406] || CT.C1406, "Bmatrix", C[1407] || CT.C1407, "vmatrix", C[1408] || CT.C1408, "Vmatrix", C[1409] || CT.C1409]);
    },
    get C1411() {
      return C[1411] = dart.constList(["array", "darray"], T$.StringL());
    },
    get C1413() {
      return C[1413] = dart.fn(array._arrayHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C1412() {
      return C[1412] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[1413] || CT.C1413,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 1
      });
    },
    get C1414() {
      return C[1414] = dart.constList(["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix"], T$.StringL());
    },
    get C1416() {
      return C[1416] = dart.fn(array._matrixHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C1415() {
      return C[1415] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[1416] || CT.C1416,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 0
      });
    },
    get C1417() {
      return C[1417] = dart.constList(["smallmatrix"], T$.StringL());
    },
    get C1419() {
      return C[1419] = dart.fn(array._smallMatrixHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C1418() {
      return C[1418] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[1419] || CT.C1419,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 0
      });
    },
    get C1420() {
      return C[1420] = dart.constList(["subarray"], T$.StringL());
    },
    get C1422() {
      return C[1422] = dart.fn(array._subArrayHandler, T$.TexParserAndEnvContextToGreenNode());
    },
    get C1421() {
      return C[1421] = dart.const({
        __proto__: define_environment.EnvSpec.prototype,
        [S.EnvSpec_handler]: C[1422] || CT.C1422,
        [S.EnvSpec_numOptionalArgs]: 0,
        [S.EnvSpec_allowedInText]: false,
        [S.EnvSpec_greediness]: 1,
        [S.EnvSpec_numArgs]: 1
      });
    },
    get C1410() {
      return C[1410] = dart.constMap(T$.ListLOfStringL(), T$.EnvSpecL(), [C[1411] || CT.C1411, C[1412] || CT.C1412, C[1414] || CT.C1414, C[1415] || CT.C1415, C[1417] || CT.C1417, C[1418] || CT.C1418, C[1420] || CT.C1420, C[1421] || CT.C1421]);
    },
    get C1425() {
      return C[1425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minHeight",
        [S._Location_column]: 15,
        [S._Location_line]: 40,
        [S._Location_file]: null
      });
    },
    get C1426() {
      return C[1426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 15,
        [S._Location_line]: 42,
        [S._Location_file]: null
      });
    },
    get C1427() {
      return C[1427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 44,
        [S._Location_file]: null
      });
    },
    get C1424() {
      return C[1424] = dart.constList([C[1425] || CT.C1425, C[1426] || CT.C1426, C[1427] || CT.C1427], T$._LocationL());
    },
    get C1423() {
      return C[1423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1424] || CT.C1424,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 39,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/under.dart"
      });
    },
    get C1430() {
      return C[1430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baselineReferenceWidgetIndex",
        [S._Location_column]: 11,
        [S._Location_line]: 35,
        [S._Location_file]: null
      });
    },
    get C1431() {
      return C[1431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 36,
        [S._Location_file]: null
      });
    },
    get C1429() {
      return C[1429] = dart.constList([C[1430] || CT.C1430, C[1431] || CT.C1431], T$._LocationL());
    },
    get C1428() {
      return C[1428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1429] || CT.C1429,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 34,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/under.dart"
      });
    },
    get C1434() {
      return C[1434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 33,
        [S._Location_file]: null
      });
    },
    get C1435() {
      return C[1435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 34,
        [S._Location_file]: null
      });
    },
    get C1433() {
      return C[1433] = dart.constList([C[1434] || CT.C1434, C[1435] || CT.C1435], T$._LocationL());
    },
    get C1432() {
      return C[1432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1433] || CT.C1433,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 32,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/under.dart"
      });
    },
    get C1438() {
      return C[1438] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 44,
        [S._Location_file]: null
      });
    },
    get C1439() {
      return C[1439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 45,
        [S._Location_file]: null
      });
    },
    get C1437() {
      return C[1437] = dart.constList([C[1438] || CT.C1438, C[1439] || CT.C1439], T$._LocationL());
    },
    get C1436() {
      return C[1436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1437] || CT.C1437,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 43,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart"
      });
    },
    get C1442() {
      return C[1442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 17,
        [S._Location_line]: 53,
        [S._Location_file]: null
      });
    },
    get C1443() {
      return C[1443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 17,
        [S._Location_line]: 54,
        [S._Location_file]: null
      });
    },
    get C1444() {
      return C[1444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 55,
        [S._Location_file]: null
      });
    },
    get C1441() {
      return C[1441] = dart.constList([C[1442] || CT.C1442, C[1443] || CT.C1443, C[1444] || CT.C1444], T$._LocationL());
    },
    get C1440() {
      return C[1440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1441] || CT.C1441,
        [S._Location_name]: null,
        [S._Location_column]: 50,
        [S._Location_line]: 52,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart"
      });
    },
    get C1447() {
      return C[1447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 15,
        [S._Location_line]: 52,
        [S._Location_file]: null
      });
    },
    get C1446() {
      return C[1446] = dart.constList([C[1447] || CT.C1447], T$._LocationL());
    },
    get C1445() {
      return C[1445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1446] || CT.C1446,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 51,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart"
      });
    },
    get C1450() {
      return C[1450] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customCrossSize",
        [S._Location_column]: 13,
        [S._Location_line]: 49,
        [S._Location_file]: null
      });
    },
    get C1451() {
      return C[1451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 51,
        [S._Location_file]: null
      });
    },
    get C1449() {
      return C[1449] = dart.constList([C[1450] || CT.C1450, C[1451] || CT.C1451], T$._LocationL());
    },
    get C1448() {
      return C[1448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1449] || CT.C1449,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 47,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart"
      });
    },
    get C1454() {
      return C[1454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 65,
        [S._Location_file]: null
      });
    },
    get C1455() {
      return C[1455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 66,
        [S._Location_file]: null
      });
    },
    get C1453() {
      return C[1453] = dart.constList([C[1454] || CT.C1454, C[1455] || CT.C1455], T$._LocationL());
    },
    get C1452() {
      return C[1452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1453] || CT.C1453,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 64,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart"
      });
    },
    get C1458() {
      return C[1458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baselineReferenceWidgetIndex",
        [S._Location_column]: 9,
        [S._Location_line]: 40,
        [S._Location_file]: null
      });
    },
    get C1459() {
      return C[1459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 41,
        [S._Location_file]: null
      });
    },
    get C1457() {
      return C[1457] = dart.constList([C[1458] || CT.C1458, C[1459] || CT.C1459], T$._LocationL());
    },
    get C1456() {
      return C[1456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1457] || CT.C1457,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 39,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart"
      });
    },
    get C1460() {
      return C[1460] = dart.constMap(T$.StringL(), T$.StringL(), ["←", "xleftarrow", "→", "xrightarrow", "↔", "xleftrightarrow", "⇐", "xLeftarrow", "⇒", "xRightarrow", "⇔", "xLeftrightarrow", "↩", "xhookleftarrow", "↪", "xhookrightarrow", "↦", "xmapsto", "⇁", "xrightharpoondown", "⇀", "xrightharpoonup", "↽", "xleftharpoondown", "↼", "xleftharpoonup", "⇌", "xrightleftharpoons", "⇋", "xleftrightharpoons", "=", "xlongequal", "↞", "xtwoheadleftarrow", "↠", "xtwoheadrightarrow", "⇄", "xrightleftarrows"]);
    },
    get C1463() {
      return C[1463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minHeight",
        [S._Location_column]: 15,
        [S._Location_line]: 57,
        [S._Location_file]: null
      });
    },
    get C1464() {
      return C[1464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 15,
        [S._Location_line]: 58,
        [S._Location_file]: null
      });
    },
    get C1465() {
      return C[1465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 59,
        [S._Location_file]: null
      });
    },
    get C1462() {
      return C[1462] = dart.constList([C[1463] || CT.C1463, C[1464] || CT.C1464, C[1465] || CT.C1465], T$._LocationL());
    },
    get C1461() {
      return C[1461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1462] || CT.C1462,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 56,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1468() {
      return C[1468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 13,
        [S._Location_line]: 55,
        [S._Location_file]: null
      });
    },
    get C1469() {
      return C[1469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 56,
        [S._Location_file]: null
      });
    },
    get C1467() {
      return C[1467] = dart.constList([C[1468] || CT.C1468, C[1469] || CT.C1469], T$._LocationL());
    },
    get C1466() {
      return C[1466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1467] || CT.C1467,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 54,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1472() {
      return C[1472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 15,
        [S._Location_line]: 65,
        [S._Location_file]: null
      });
    },
    get C1471() {
      return C[1471] = dart.constList([C[1472] || CT.C1472], T$._LocationL());
    },
    get C1470() {
      return C[1470] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1471] || CT.C1471,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 64,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1475() {
      return C[1475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 13,
        [S._Location_line]: 63,
        [S._Location_file]: null
      });
    },
    get C1476() {
      return C[1476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 64,
        [S._Location_file]: null
      });
    },
    get C1474() {
      return C[1474] = dart.constList([C[1475] || CT.C1475, C[1476] || CT.C1476], T$._LocationL());
    },
    get C1473() {
      return C[1473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1474] || CT.C1474,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 62,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1479() {
      return C[1479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 74,
        [S._Location_file]: null
      });
    },
    get C1480() {
      return C[1480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 75,
        [S._Location_file]: null
      });
    },
    get C1478() {
      return C[1478] = dart.constList([C[1479] || CT.C1479, C[1480] || CT.C1480], T$._LocationL());
    },
    get C1477() {
      return C[1477] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1478] || CT.C1478,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 73,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1483() {
      return C[1483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 9,
        [S._Location_line]: 48,
        [S._Location_file]: null
      });
    },
    get C1484() {
      return C[1484] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 53,
        [S._Location_file]: null
      });
    },
    get C1482() {
      return C[1482] = dart.constList([C[1483] || CT.C1483, C[1484] || CT.C1484], T$._LocationL());
    },
    get C1481() {
      return C[1481] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1482] || CT.C1482,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 47,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1485() {
      return C[1485] = dart.const({
        __proto__: sqrt._SqrtPos.prototype,
        [S._name$12]: "_SqrtPos.base",
        index: 0
      });
    },
    get C1486() {
      return C[1486] = dart.const({
        __proto__: sqrt._SqrtPos.prototype,
        [S._name$12]: "_SqrtPos.ind",
        index: 1
      });
    },
    get C1487() {
      return C[1487] = dart.const({
        __proto__: sqrt._SqrtPos.prototype,
        [S._name$12]: "_SqrtPos.surd",
        index: 2
      });
    },
    get C1488() {
      return C[1488] = dart.constList([C[1485] || CT.C1485, C[1486] || CT.C1486, C[1487] || CT.C1487], T$._SqrtPosL());
    },
    get C1489() {
      return C[1489] = dart.constMap(T$.StringL(), T$.doubleL(), ["Main-Regular", 1, "Size1-Regular", 1.2, "Size2-Regular", 1.8, "Size3-Regular", 2.4, "Size4-Regular", 3]);
    },
    get C1492() {
      return C[1492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 11,
        [S._Location_line]: 326,
        [S._Location_file]: null
      });
    },
    get C1493() {
      return C[1493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 327,
        [S._Location_file]: null
      });
    },
    get C1491() {
      return C[1491] = dart.constList([C[1492] || CT.C1492, C[1493] || CT.C1493], T$._LocationL());
    },
    get C1490() {
      return C[1490] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1491] || CT.C1491,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 325,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1496() {
      return C[1496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 9,
        [S._Location_line]: 322,
        [S._Location_file]: null
      });
    },
    get C1497() {
      return C[1497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 325,
        [S._Location_file]: null
      });
    },
    get C1495() {
      return C[1495] = dart.constList([C[1496] || CT.C1496, C[1497] || CT.C1497], T$._LocationL());
    },
    get C1494() {
      return C[1494] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1495] || CT.C1495,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 321,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1500() {
      return C[1500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 11,
        [S._Location_line]: 354,
        [S._Location_file]: null
      });
    },
    get C1501() {
      return C[1501] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 355,
        [S._Location_file]: null
      });
    },
    get C1499() {
      return C[1499] = dart.constList([C[1500] || CT.C1500, C[1501] || CT.C1501], T$._LocationL());
    },
    get C1498() {
      return C[1498] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1499] || CT.C1499,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 353,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1504() {
      return C[1504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 9,
        [S._Location_line]: 350,
        [S._Location_file]: null
      });
    },
    get C1505() {
      return C[1505] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 353,
        [S._Location_file]: null
      });
    },
    get C1503() {
      return C[1503] = dart.constList([C[1504] || CT.C1504, C[1505] || CT.C1505], T$._LocationL());
    },
    get C1502() {
      return C[1502] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1503] || CT.C1503,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 349,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1508() {
      return C[1508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 9,
        [S._Location_line]: 382,
        [S._Location_file]: null
      });
    },
    get C1509() {
      return C[1509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 383,
        [S._Location_file]: null
      });
    },
    get C1507() {
      return C[1507] = dart.constList([C[1508] || CT.C1508, C[1509] || CT.C1509], T$._LocationL());
    },
    get C1506() {
      return C[1506] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1507] || CT.C1507,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 381,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1512() {
      return C[1512] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 7,
        [S._Location_line]: 378,
        [S._Location_file]: null
      });
    },
    get C1513() {
      return C[1513] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 381,
        [S._Location_file]: null
      });
    },
    get C1511() {
      return C[1511] = dart.constList([C[1512] || CT.C1512, C[1513] || CT.C1513], T$._LocationL());
    },
    get C1510() {
      return C[1510] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1511] || CT.C1511,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 377,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart"
      });
    },
    get C1515() {
      return C[1515] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[105] || CT.C105,
        [S.DelimiterConf_font]: C[259] || CT.C259
      });
    },
    get C1517() {
      return C[1517] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Size1"
      });
    },
    get C1516() {
      return C[1516] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[105] || CT.C105,
        [S.DelimiterConf_font]: C[1517] || CT.C1517
      });
    },
    get C1519() {
      return C[1519] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Size2"
      });
    },
    get C1518() {
      return C[1518] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[105] || CT.C105,
        [S.DelimiterConf_font]: C[1519] || CT.C1519
      });
    },
    get C1521() {
      return C[1521] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Size3"
      });
    },
    get C1520() {
      return C[1520] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[105] || CT.C105,
        [S.DelimiterConf_font]: C[1521] || CT.C1521
      });
    },
    get C1523() {
      return C[1523] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Size4"
      });
    },
    get C1522() {
      return C[1522] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[105] || CT.C105,
        [S.DelimiterConf_font]: C[1523] || CT.C1523
      });
    },
    get C1514() {
      return C[1514] = dart.constList([C[1515] || CT.C1515, C[1516] || CT.C1516, C[1518] || CT.C1518, C[1520] || CT.C1520, C[1522] || CT.C1522], T$.DelimiterConfL());
    },
    get C1525() {
      return C[1525] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.pt",
        index: 0
      });
    },
    get C1524() {
      return C[1524] = dart.const({
        __proto__: size$.Measurement.prototype,
        [S.Measurement_unit]: C[1525] || CT.C1525,
        [S.Measurement_value]: 0
      });
    },
    get C1528() {
      return C[1528] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 27,
        [S._Location_line]: 70,
        [S._Location_file]: null
      });
    },
    get C1527() {
      return C[1527] = dart.constList([C[1528] || CT.C1528], T$._LocationL());
    },
    get C1526() {
      return C[1526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1527] || CT.C1527,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 70,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/space.dart"
      });
    },
    get C1531() {
      return C[1531] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 11,
        [S._Location_line]: 85,
        [S._Location_file]: null
      });
    },
    get C1532() {
      return C[1532] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 11,
        [S._Location_line]: 86,
        [S._Location_file]: null
      });
    },
    get C1533() {
      return C[1533] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 87,
        [S._Location_file]: null
      });
    },
    get C1530() {
      return C[1530] = dart.constList([C[1531] || CT.C1531, C[1532] || CT.C1532, C[1533] || CT.C1533], T$._LocationL());
    },
    get C1529() {
      return C[1529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1530] || CT.C1530,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 84,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/space.dart"
      });
    },
    get C1536() {
      return C[1536] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 9,
        [S._Location_line]: 83,
        [S._Location_file]: null
      });
    },
    get C1537() {
      return C[1537] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 84,
        [S._Location_file]: null
      });
    },
    get C1535() {
      return C[1535] = dart.constList([C[1536] || CT.C1536, C[1537] || CT.C1537], T$._LocationL());
    },
    get C1534() {
      return C[1534] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1535] || CT.C1535,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 82,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/space.dart"
      });
    },
    get C1538() {
      return C[1538] = dart.constList([], T$.GreenNodeL());
    },
    get C1539() {
      return C[1539] = dart.constList([], T$.MathOptionsL());
    },
    get C1540() {
      return C[1540] = dart.constList([], T$.intL());
    },
    get C1543() {
      return C[1543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 11,
        [S._Location_line]: 27,
        [S._Location_file]: null
      });
    },
    get C1544() {
      return C[1544] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 28,
        [S._Location_file]: null
      });
    },
    get C1542() {
      return C[1542] = dart.constList([C[1543] || CT.C1543, C[1544] || CT.C1544], T$._LocationL());
    },
    get C1541() {
      return C[1541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1542] || CT.C1542,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 26,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/raise_box.dart"
      });
    },
    get C1547() {
      return C[1547] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "opacity",
        [S._Location_column]: 7,
        [S._Location_line]: 43,
        [S._Location_file]: null
      });
    },
    get C1548() {
      return C[1548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 44,
        [S._Location_file]: null
      });
    },
    get C1546() {
      return C[1546] = dart.constList([C[1547] || CT.C1547, C[1548] || CT.C1548], T$._LocationL());
    },
    get C1545() {
      return C[1545] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1546] || CT.C1546,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 42,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/phantom.dart"
      });
    },
    get C1551() {
      return C[1551] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 7,
        [S._Location_line]: 47,
        [S._Location_file]: null
      });
    },
    get C1552() {
      return C[1552] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 7,
        [S._Location_line]: 48,
        [S._Location_file]: null
      });
    },
    get C1553() {
      return C[1553] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "depth",
        [S._Location_column]: 7,
        [S._Location_line]: 49,
        [S._Location_file]: null
      });
    },
    get C1554() {
      return C[1554] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 50,
        [S._Location_file]: null
      });
    },
    get C1550() {
      return C[1550] = dart.constList([C[1551] || CT.C1551, C[1552] || CT.C1552, C[1553] || CT.C1553, C[1554] || CT.C1554], T$._LocationL());
    },
    get C1549() {
      return C[1549] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1550] || CT.C1550,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 46,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/phantom.dart"
      });
    },
    get C1555() {
      return C[1555] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C1556() {
      return C[1556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[35] || CT.C35,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 65,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1559() {
      return C[1559] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 15,
        [S._Location_line]: 93,
        [S._Location_file]: null
      });
    },
    get C1560() {
      return C[1560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 94,
        [S._Location_file]: null
      });
    },
    get C1558() {
      return C[1558] = dart.constList([C[1559] || CT.C1559, C[1560] || CT.C1560], T$._LocationL());
    },
    get C1557() {
      return C[1557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1558] || CT.C1558,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 92,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1563() {
      return C[1563] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "horizontalAlignment",
        [S._Location_column]: 13,
        [S._Location_line]: 90,
        [S._Location_file]: null
      });
    },
    get C1564() {
      return C[1564] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 13,
        [S._Location_line]: 91,
        [S._Location_file]: null
      });
    },
    get C1565() {
      return C[1565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 92,
        [S._Location_file]: null
      });
    },
    get C1562() {
      return C[1562] = dart.constList([C[1563] || CT.C1563, C[1564] || CT.C1564, C[1565] || CT.C1565], T$._LocationL());
    },
    get C1561() {
      return C[1561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1562] || CT.C1562,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 89,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1568() {
      return C[1568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 84,
        [S._Location_file]: null
      });
    },
    get C1569() {
      return C[1569] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textBaseline",
        [S._Location_column]: 9,
        [S._Location_line]: 85,
        [S._Location_file]: null
      });
    },
    get C1570() {
      return C[1570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 9,
        [S._Location_line]: 86,
        [S._Location_file]: null
      });
    },
    get C1571() {
      return C[1571] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 9,
        [S._Location_line]: 87,
        [S._Location_file]: null
      });
    },
    get C1572() {
      return C[1572] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 88,
        [S._Location_file]: null
      });
    },
    get C1567() {
      return C[1567] = dart.constList([C[1568] || CT.C1568, C[1569] || CT.C1569, C[1570] || CT.C1570, C[1571] || CT.C1571, C[1572] || CT.C1572], T$._LocationL());
    },
    get C1566() {
      return C[1566] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1567] || CT.C1567,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 83,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1575() {
      return C[1575] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isBaseCharacterBox",
        [S._Location_column]: 11,
        [S._Location_line]: 111,
        [S._Location_file]: null
      });
    },
    get C1576() {
      return C[1576] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baseResult",
        [S._Location_column]: 11,
        [S._Location_line]: 112,
        [S._Location_file]: null
      });
    },
    get C1577() {
      return C[1577] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "subResult",
        [S._Location_column]: 11,
        [S._Location_line]: 114,
        [S._Location_file]: null
      });
    },
    get C1578() {
      return C[1578] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "supResult",
        [S._Location_column]: 11,
        [S._Location_line]: 115,
        [S._Location_file]: null
      });
    },
    get C1574() {
      return C[1574] = dart.constList([C[1575] || CT.C1575, C[1576] || CT.C1576, C[1577] || CT.C1577, C[1578] || CT.C1578], T$._LocationL());
    },
    get C1573() {
      return C[1573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1574] || CT.C1574,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 110,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1581() {
      return C[1581] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minDepth",
        [S._Location_column]: 21,
        [S._Location_line]: 132,
        [S._Location_file]: null
      });
    },
    get C1582() {
      return C[1582] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottomPadding",
        [S._Location_column]: 21,
        [S._Location_line]: 134,
        [S._Location_file]: null
      });
    },
    get C1583() {
      return C[1583] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 136,
        [S._Location_file]: null
      });
    },
    get C1580() {
      return C[1580] = dart.constList([C[1581] || CT.C1581, C[1582] || CT.C1582, C[1583] || CT.C1583], T$._LocationL());
    },
    get C1579() {
      return C[1579] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1580] || CT.C1580,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 131,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1586() {
      return C[1586] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hShift",
        [S._Location_column]: 19,
        [S._Location_line]: 130,
        [S._Location_file]: null
      });
    },
    get C1587() {
      return C[1587] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 131,
        [S._Location_file]: null
      });
    },
    get C1585() {
      return C[1585] = dart.constList([C[1586] || CT.C1586, C[1587] || CT.C1587], T$._LocationL());
    },
    get C1584() {
      return C[1584] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1585] || CT.C1585,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 129,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1590() {
      return C[1590] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minHeight",
        [S._Location_column]: 21,
        [S._Location_line]: 144,
        [S._Location_file]: null
      });
    },
    get C1591() {
      return C[1591] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 21,
        [S._Location_line]: 146,
        [S._Location_file]: null
      });
    },
    get C1592() {
      return C[1592] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 148,
        [S._Location_file]: null
      });
    },
    get C1589() {
      return C[1589] = dart.constList([C[1590] || CT.C1590, C[1591] || CT.C1591, C[1592] || CT.C1592], T$._LocationL());
    },
    get C1588() {
      return C[1588] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1589] || CT.C1589,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1595() {
      return C[1595] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hShift",
        [S._Location_column]: 19,
        [S._Location_line]: 142,
        [S._Location_file]: null
      });
    },
    get C1596() {
      return C[1596] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 19,
        [S._Location_line]: 143,
        [S._Location_file]: null
      });
    },
    get C1594() {
      return C[1594] = dart.constList([C[1595] || CT.C1595, C[1596] || CT.C1596], T$._LocationL());
    },
    get C1593() {
      return C[1593] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1594] || CT.C1594,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 141,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1599() {
      return C[1599] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baselineReferenceWidgetIndex",
        [S._Location_column]: 13,
        [S._Location_line]: 126,
        [S._Location_file]: null
      });
    },
    get C1600() {
      return C[1600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 13,
        [S._Location_line]: 127,
        [S._Location_file]: null
      });
    },
    get C1598() {
      return C[1598] = dart.constList([C[1599] || CT.C1599, C[1600] || CT.C1600], T$._LocationL());
    },
    get C1597() {
      return C[1597] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1598] || CT.C1598,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 125,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1603() {
      return C[1603] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 11,
        [S._Location_line]: 121,
        [S._Location_file]: null
      });
    },
    get C1604() {
      return C[1604] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 125,
        [S._Location_file]: null
      });
    },
    get C1602() {
      return C[1602] = dart.constList([C[1603] || CT.C1603, C[1604] || CT.C1604], T$._LocationL());
    },
    get C1601() {
      return C[1601] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1602] || CT.C1602,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1607() {
      return C[1607] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 159,
        [S._Location_file]: null
      });
    },
    get C1608() {
      return C[1608] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 11,
        [S._Location_line]: 160,
        [S._Location_file]: null
      });
    },
    get C1606() {
      return C[1606] = dart.constList([C[1607] || CT.C1607, C[1608] || CT.C1608], T$._LocationL());
    },
    get C1605() {
      return C[1605] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1606] || CT.C1606,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 158,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1611() {
      return C[1611] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 165,
        [S._Location_file]: null
      });
    },
    get C1612() {
      return C[1612] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 11,
        [S._Location_line]: 166,
        [S._Location_file]: null
      });
    },
    get C1610() {
      return C[1610] = dart.constList([C[1611] || CT.C1611, C[1612] || CT.C1612], T$._LocationL());
    },
    get C1609() {
      return C[1609] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1610] || CT.C1610,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 164,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1615() {
      return C[1615] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 157,
        [S._Location_file]: null
      });
    },
    get C1614() {
      return C[1614] = dart.constList([C[1615] || CT.C1615], T$._LocationL());
    },
    get C1613() {
      return C[1613] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1614] || CT.C1614,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 156,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart"
      });
    },
    get C1616() {
      return C[1616] = dart.constSet(T$.StringL(), ["∏", "∐", "∑", "⋀", "⋁", "⋂", "⋃", "⨀", "⨁", "⨂", "⨄", "⨆"]);
    },
    get C1617() {
      return C[1617] = dart.constMap(T$.StringL(), T$.StringL(), ["∯", "∬", "∰", "∭"]);
    },
    get C1618() {
      return C[1618] = dart.const({
        __proto__: multiscripts._ScriptPos.prototype,
        [S._name$13]: "_ScriptPos.base",
        index: 0
      });
    },
    get C1619() {
      return C[1619] = dart.const({
        __proto__: multiscripts._ScriptPos.prototype,
        [S._name$13]: "_ScriptPos.sub",
        index: 1
      });
    },
    get C1620() {
      return C[1620] = dart.const({
        __proto__: multiscripts._ScriptPos.prototype,
        [S._name$13]: "_ScriptPos.sup",
        index: 2
      });
    },
    get C1621() {
      return C[1621] = dart.const({
        __proto__: multiscripts._ScriptPos.prototype,
        [S._name$13]: "_ScriptPos.presub",
        index: 3
      });
    },
    get C1622() {
      return C[1622] = dart.const({
        __proto__: multiscripts._ScriptPos.prototype,
        [S._name$13]: "_ScriptPos.presup",
        index: 4
      });
    },
    get C1623() {
      return C[1623] = dart.constList([C[1618] || CT.C1618, C[1619] || CT.C1619, C[1620] || CT.C1620, C[1621] || CT.C1621, C[1622] || CT.C1622], T$._ScriptPosL());
    },
    get C1626() {
      return C[1626] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 13,
        [S._Location_line]: 67,
        [S._Location_file]: null
      });
    },
    get C1627() {
      return C[1627] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 68,
        [S._Location_file]: null
      });
    },
    get C1625() {
      return C[1625] = dart.constList([C[1626] || CT.C1626, C[1627] || CT.C1627], T$._LocationL());
    },
    get C1624() {
      return C[1624] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1625] || CT.C1625,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 66,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart"
      });
    },
    get C1630() {
      return C[1630] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 72,
        [S._Location_file]: null
      });
    },
    get C1631() {
      return C[1631] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 73,
        [S._Location_file]: null
      });
    },
    get C1629() {
      return C[1629] = dart.constList([C[1630] || CT.C1630, C[1631] || CT.C1631], T$._LocationL());
    },
    get C1628() {
      return C[1628] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1629] || CT.C1629,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 71,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart"
      });
    },
    get C1634() {
      return C[1634] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 77,
        [S._Location_file]: null
      });
    },
    get C1635() {
      return C[1635] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 78,
        [S._Location_file]: null
      });
    },
    get C1633() {
      return C[1633] = dart.constList([C[1634] || CT.C1634, C[1635] || CT.C1635], T$._LocationL());
    },
    get C1632() {
      return C[1632] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1633] || CT.C1633,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 76,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart"
      });
    },
    get C1638() {
      return C[1638] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 82,
        [S._Location_file]: null
      });
    },
    get C1639() {
      return C[1639] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 83,
        [S._Location_file]: null
      });
    },
    get C1637() {
      return C[1637] = dart.constList([C[1638] || CT.C1638, C[1639] || CT.C1639], T$._LocationL());
    },
    get C1636() {
      return C[1636] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1637] || CT.C1637,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 81,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart"
      });
    },
    get C1642() {
      return C[1642] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 87,
        [S._Location_file]: null
      });
    },
    get C1643() {
      return C[1643] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 88,
        [S._Location_file]: null
      });
    },
    get C1641() {
      return C[1641] = dart.constList([C[1642] || CT.C1642, C[1643] || CT.C1643], T$._LocationL());
    },
    get C1640() {
      return C[1640] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1641] || CT.C1641,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 86,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart"
      });
    },
    get C1646() {
      return C[1646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 9,
        [S._Location_line]: 55,
        [S._Location_file]: null
      });
    },
    get C1647() {
      return C[1647] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 65,
        [S._Location_file]: null
      });
    },
    get C1645() {
      return C[1645] = dart.constList([C[1646] || CT.C1646, C[1647] || CT.C1647], T$._LocationL());
    },
    get C1644() {
      return C[1644] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1645] || CT.C1645,
        [S._Location_name]: null,
        [S._Location_column]: 41,
        [S._Location_line]: 54,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart"
      });
    },
    get C1650() {
      return C[1650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "alignPostscripts",
        [S._Location_column]: 11,
        [S._Location_line]: 50,
        [S._Location_file]: null
      });
    },
    get C1651() {
      return C[1651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "isBaseCharacterBox",
        [S._Location_column]: 11,
        [S._Location_line]: 51,
        [S._Location_file]: null
      });
    },
    get C1652() {
      return C[1652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baseResult",
        [S._Location_column]: 11,
        [S._Location_line]: 53,
        [S._Location_file]: null
      });
    },
    get C1653() {
      return C[1653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "subResult",
        [S._Location_column]: 11,
        [S._Location_line]: 54,
        [S._Location_file]: null
      });
    },
    get C1654() {
      return C[1654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "supResult",
        [S._Location_column]: 11,
        [S._Location_line]: 55,
        [S._Location_file]: null
      });
    },
    get C1655() {
      return C[1655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "presubResult",
        [S._Location_column]: 11,
        [S._Location_line]: 56,
        [S._Location_file]: null
      });
    },
    get C1656() {
      return C[1656] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "presupResult",
        [S._Location_column]: 11,
        [S._Location_line]: 57,
        [S._Location_file]: null
      });
    },
    get C1649() {
      return C[1649] = dart.constList([C[1650] || CT.C1650, C[1651] || CT.C1651, C[1652] || CT.C1652, C[1653] || CT.C1653, C[1654] || CT.C1654, C[1655] || CT.C1655, C[1656] || CT.C1656], T$._LocationL());
    },
    get C1648() {
      return C[1648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1649] || CT.C1649,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 49,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/multiscripts.dart"
      });
    },
    get C1658() {
      return C[1658] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[107] || CT.C107,
        [S.DelimiterConf_font]: C[259] || CT.C259
      });
    },
    get C1659() {
      return C[1659] = dart.const({
        __proto__: delimiter.DelimiterConf.prototype,
        [S.DelimiterConf_style]: C[106] || CT.C106,
        [S.DelimiterConf_font]: C[259] || CT.C259
      });
    },
    get C1657() {
      return C[1657] = dart.constList([C[1658] || CT.C1658, C[1659] || CT.C1659, C[1515] || CT.C1515, C[1516] || CT.C1516, C[1518] || CT.C1518, C[1520] || CT.C1520, C[1522] || CT.C1522], T$.DelimiterConfL());
    },
    get C1660() {
      return C[1660] = dart.constList([C[1658] || CT.C1658, C[1659] || CT.C1659, C[1515] || CT.C1515], T$.DelimiterConfL());
    },
    get C1661() {
      return C[1661] = dart.constList([], T$.StringN());
    },
    get C1664() {
      return C[1664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 13,
        [S._Location_line]: 65,
        [S._Location_file]: null
      });
    },
    get C1663() {
      return C[1663] = dart.constList([C[1664] || CT.C1664], T$._LocationL());
    },
    get C1662() {
      return C[1662] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1663] || CT.C1663,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 64,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1667() {
      return C[1667] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customCrossSize",
        [S._Location_column]: 11,
        [S._Location_line]: 53,
        [S._Location_file]: null
      });
    },
    get C1668() {
      return C[1668] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 11,
        [S._Location_line]: 59,
        [S._Location_file]: null
      });
    },
    get C1669() {
      return C[1669] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 64,
        [S._Location_file]: null
      });
    },
    get C1666() {
      return C[1666] = dart.constList([C[1667] || CT.C1667, C[1668] || CT.C1668, C[1669] || CT.C1669], T$._LocationL());
    },
    get C1665() {
      return C[1665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1666] || CT.C1666,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 52,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1672() {
      return C[1672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 11,
        [S._Location_line]: 79,
        [S._Location_file]: null
      });
    },
    get C1673() {
      return C[1673] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 84,
        [S._Location_file]: null
      });
    },
    get C1671() {
      return C[1671] = dart.constList([C[1672] || CT.C1672, C[1673] || CT.C1673], T$._LocationL());
    },
    get C1670() {
      return C[1670] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1671] || CT.C1671,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 78,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1676() {
      return C[1676] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 91,
        [S._Location_file]: null
      });
    },
    get C1675() {
      return C[1675] = dart.constList([C[1676] || CT.C1676], T$._LocationL());
    },
    get C1674() {
      return C[1674] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1675] || CT.C1675,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 90,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1679() {
      return C[1679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 9,
        [S._Location_line]: 180,
        [S._Location_file]: null
      });
    },
    get C1680() {
      return C[1680] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 9,
        [S._Location_line]: 181,
        [S._Location_file]: null
      });
    },
    get C1678() {
      return C[1678] = dart.constList([C[1679] || CT.C1679, C[1680] || CT.C1680], T$._LocationL());
    },
    get C1677() {
      return C[1677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1678] || CT.C1678,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 179,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1683() {
      return C[1683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 7,
        [S._Location_line]: 177,
        [S._Location_file]: null
      });
    },
    get C1684() {
      return C[1684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 7,
        [S._Location_line]: 178,
        [S._Location_file]: null
      });
    },
    get C1685() {
      return C[1685] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 179,
        [S._Location_file]: null
      });
    },
    get C1682() {
      return C[1682] = dart.constList([C[1683] || CT.C1683, C[1684] || CT.C1684, C[1685] || CT.C1685], T$._LocationL());
    },
    get C1681() {
      return C[1681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1682] || CT.C1682,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 176,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1688() {
      return C[1688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 7,
        [S._Location_line]: 210,
        [S._Location_file]: null
      });
    },
    get C1689() {
      return C[1689] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 7,
        [S._Location_line]: 211,
        [S._Location_file]: null
      });
    },
    get C1690() {
      return C[1690] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 212,
        [S._Location_file]: null
      });
    },
    get C1687() {
      return C[1687] = dart.constList([C[1688] || CT.C1688, C[1689] || CT.C1689, C[1690] || CT.C1690], T$._LocationL());
    },
    get C1686() {
      return C[1686] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1687] || CT.C1687,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 209,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1693() {
      return C[1693] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 7,
        [S._Location_line]: 257,
        [S._Location_file]: null
      });
    },
    get C1694() {
      return C[1694] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 7,
        [S._Location_line]: 258,
        [S._Location_file]: null
      });
    },
    get C1695() {
      return C[1695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 7,
        [S._Location_line]: 259,
        [S._Location_file]: null
      });
    },
    get C1696() {
      return C[1696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 260,
        [S._Location_file]: null
      });
    },
    get C1692() {
      return C[1692] = dart.constList([C[1693] || CT.C1693, C[1694] || CT.C1694, C[1695] || CT.C1695, C[1696] || CT.C1696], T$._LocationL());
    },
    get C1691() {
      return C[1691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1692] || CT.C1692,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 256,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1699() {
      return C[1699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 5,
        [S._Location_line]: 254,
        [S._Location_file]: null
      });
    },
    get C1700() {
      return C[1700] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 5,
        [S._Location_line]: 255,
        [S._Location_file]: null
      });
    },
    get C1701() {
      return C[1701] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 5,
        [S._Location_line]: 256,
        [S._Location_file]: null
      });
    },
    get C1698() {
      return C[1698] = dart.constList([C[1699] || CT.C1699, C[1700] || CT.C1700, C[1701] || CT.C1701], T$._LocationL());
    },
    get C1697() {
      return C[1697] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1698] || CT.C1698,
        [S._Location_name]: null,
        [S._Location_column]: 10,
        [S._Location_line]: 253,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart"
      });
    },
    get C1702() {
      return C[1702] = dart.const({
        __proto__: size$.Measurement.prototype,
        [S.Measurement_unit]: C[1525] || CT.C1525,
        [S.Measurement_value]: 5
      });
    },
    get C1703() {
      return C[1703] = dart.constSet(T$.StringL(), ["(", ")", "[", "]", "{", "}", "⌊", "⌋", "⌈", "⌉", "√"]);
    },
    get C1704() {
      return C[1704] = dart.constSet(T$.StringL(), ["↑", "↓", "↕", "⇑", "⇓", "⇕", "|", "‖", "∣", "∥", "⟮", "⟯", "⎰", "⎱"]);
    },
    get C1705() {
      return C[1705] = dart.constSet(T$.StringL(), ["⟨", "⟩", "/"]);
    },
    get C1707() {
      return C[1707] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "⏐",
        [S.repeat]: "⏐",
        [S.middle$1]: null,
        [S.top]: "↑"
      });
    },
    get C1708() {
      return C[1708] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "↓",
        [S.repeat]: "⏐",
        [S.middle$1]: null,
        [S.top]: "⏐"
      });
    },
    get C1709() {
      return C[1709] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "↓",
        [S.repeat]: "⏐",
        [S.middle$1]: null,
        [S.top]: "↑"
      });
    },
    get C1710() {
      return C[1710] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "‖",
        [S.repeat]: "‖",
        [S.middle$1]: null,
        [S.top]: "⇑"
      });
    },
    get C1711() {
      return C[1711] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "⇓",
        [S.repeat]: "‖",
        [S.middle$1]: null,
        [S.top]: "‖"
      });
    },
    get C1712() {
      return C[1712] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "⇓",
        [S.repeat]: "‖",
        [S.middle$1]: null,
        [S.top]: "⇑"
      });
    },
    get C1713() {
      return C[1713] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "∣",
        [S.repeat]: "∣",
        [S.middle$1]: null,
        [S.top]: "∣"
      });
    },
    get C1714() {
      return C[1714] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "‖",
        [S.repeat]: "‖",
        [S.middle$1]: null,
        [S.top]: "‖"
      });
    },
    get C1715() {
      return C[1715] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1517] || CT.C1517,
        [S.bottom]: "∥",
        [S.repeat]: "∥",
        [S.middle$1]: null,
        [S.top]: "∥"
      });
    },
    get C1716() {
      return C[1716] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎝",
        [S.repeat]: "⎜",
        [S.middle$1]: null,
        [S.top]: "⎛"
      });
    },
    get C1717() {
      return C[1717] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎠",
        [S.repeat]: "⎟",
        [S.middle$1]: null,
        [S.top]: "⎞"
      });
    },
    get C1718() {
      return C[1718] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎣",
        [S.repeat]: "⎢",
        [S.middle$1]: null,
        [S.top]: "⎡"
      });
    },
    get C1719() {
      return C[1719] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎦",
        [S.repeat]: "⎥",
        [S.middle$1]: null,
        [S.top]: "⎤"
      });
    },
    get C1720() {
      return C[1720] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎩",
        [S.repeat]: "⎪",
        [S.middle$1]: "⎨",
        [S.top]: "⎧"
      });
    },
    get C1721() {
      return C[1721] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎭",
        [S.repeat]: "⎪",
        [S.middle$1]: "⎬",
        [S.top]: "⎫"
      });
    },
    get C1722() {
      return C[1722] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎣",
        [S.repeat]: "⎢",
        [S.middle$1]: null,
        [S.top]: "⎢"
      });
    },
    get C1723() {
      return C[1723] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎦",
        [S.repeat]: "⎥",
        [S.middle$1]: null,
        [S.top]: "⎥"
      });
    },
    get C1724() {
      return C[1724] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎢",
        [S.repeat]: "⎢",
        [S.middle$1]: null,
        [S.top]: "⎡"
      });
    },
    get C1725() {
      return C[1725] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎥",
        [S.repeat]: "⎥",
        [S.middle$1]: null,
        [S.top]: "⎤"
      });
    },
    get C1726() {
      return C[1726] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎩",
        [S.repeat]: "⎪",
        [S.middle$1]: null,
        [S.top]: "⎧"
      });
    },
    get C1727() {
      return C[1727] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎭",
        [S.repeat]: "⎪",
        [S.middle$1]: null,
        [S.top]: "⎫"
      });
    },
    get C1728() {
      return C[1728] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎭",
        [S.repeat]: "⎪",
        [S.middle$1]: null,
        [S.top]: "⎧"
      });
    },
    get C1729() {
      return C[1729] = dart.const({
        __proto__: left_right.StackDelimiterConf.prototype,
        [S.font$2]: C[1523] || CT.C1523,
        [S.bottom]: "⎩",
        [S.repeat]: "⎪",
        [S.middle$1]: null,
        [S.top]: "⎫"
      });
    },
    get C1706() {
      return C[1706] = dart.constMap(T$.StringL(), T$.StackDelimiterConfL(), ["↑", C[1707] || CT.C1707, "↓", C[1708] || CT.C1708, "↕", C[1709] || CT.C1709, "⇑", C[1710] || CT.C1710, "⇓", C[1711] || CT.C1711, "⇕", C[1712] || CT.C1712, "|", C[1713] || CT.C1713, "‖", C[1714] || CT.C1714, "∣", C[1713] || CT.C1713, "∥", C[1715] || CT.C1715, "(", C[1716] || CT.C1716, ")", C[1717] || CT.C1717, "[", C[1718] || CT.C1718, "]", C[1719] || CT.C1719, "{", C[1720] || CT.C1720, "}", C[1721] || CT.C1721, "⌊", C[1722] || CT.C1722, "⌋", C[1723] || CT.C1723, "⌈", C[1724] || CT.C1724, "⌉", C[1725] || CT.C1725, "⟮", C[1726] || CT.C1726, "⟯", C[1727] || CT.C1727, "⎰", C[1728] || CT.C1728, "⎱", C[1729] || CT.C1729]);
    },
    get C1731() {
      return C[1731] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.mu",
        index: 14
      });
    },
    get C1730() {
      return C[1730] = dart.const({
        __proto__: size$.Measurement.prototype,
        [S.Measurement_unit]: C[1731] || CT.C1731,
        [S.Measurement_value]: 3
      });
    },
    get C1732() {
      return C[1732] = dart.const({
        __proto__: size$.Measurement.prototype,
        [S.Measurement_unit]: C[1731] || CT.C1731,
        [S.Measurement_value]: 4
      });
    },
    get C1733() {
      return C[1733] = dart.const({
        __proto__: size$.Measurement.prototype,
        [S.Measurement_unit]: C[1731] || CT.C1731,
        [S.Measurement_value]: 5
      });
    },
    get C1736() {
      return C[1736] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.inner",
        index: 7
      });
    },
    get C1735() {
      return C[1735] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[185] || CT.C185, C[1730] || CT.C1730, C[183] || CT.C183, C[1732] || CT.C1732, C[179] || CT.C179, C[1733] || CT.C1733, C[1736] || CT.C1736, C[1730] || CT.C1730]);
    },
    get C1737() {
      return C[1737] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[1239] || CT.C1239, C[1730] || CT.C1730, C[185] || CT.C185, C[1730] || CT.C1730, C[179] || CT.C179, C[1733] || CT.C1733, C[1736] || CT.C1736, C[1730] || CT.C1730]);
    },
    get C1738() {
      return C[1738] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[1239] || CT.C1239, C[1732] || CT.C1732, C[185] || CT.C185, C[1732] || CT.C1732, C[184] || CT.C184, C[1732] || CT.C1732, C[1736] || CT.C1736, C[1732] || CT.C1732]);
    },
    get C1739() {
      return C[1739] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[1239] || CT.C1239, C[1733] || CT.C1733, C[185] || CT.C185, C[1733] || CT.C1733, C[184] || CT.C184, C[1733] || CT.C1733, C[1736] || CT.C1736, C[1733] || CT.C1733]);
    },
    get C1740() {
      return C[1740] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), []);
    },
    get C1741() {
      return C[1741] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[1239] || CT.C1239, C[1730] || CT.C1730, C[185] || CT.C185, C[1730] || CT.C1730, C[179] || CT.C179, C[1733] || CT.C1733, C[184] || CT.C184, C[1730] || CT.C1730, C[180] || CT.C180, C[1730] || CT.C1730, C[181] || CT.C181, C[1730] || CT.C1730, C[1736] || CT.C1736, C[1730] || CT.C1730]);
    },
    get C1742() {
      return C[1742] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[1239] || CT.C1239, C[1730] || CT.C1730, C[185] || CT.C185, C[1730] || CT.C1730, C[183] || CT.C183, C[1732] || CT.C1732, C[179] || CT.C179, C[1733] || CT.C1733, C[184] || CT.C184, C[1730] || CT.C1730, C[181] || CT.C181, C[1730] || CT.C1730, C[1736] || CT.C1736, C[1730] || CT.C1730]);
    },
    get C1743() {
      return C[1743] = dart.const({
        __proto__: syntax_tree.AtomType.prototype,
        [S._name$9]: "AtomType.spacing",
        index: 8
      });
    },
    get C1734() {
      return C[1734] = dart.constMap(T$.AtomTypeL(), T$.MapLOfAtomTypeL$MeasurementL(), [C[1239] || CT.C1239, C[1735] || CT.C1735, C[185] || CT.C185, C[1737] || CT.C1737, C[183] || CT.C183, C[1738] || CT.C1738, C[179] || CT.C179, C[1739] || CT.C1739, C[184] || CT.C184, C[1740] || CT.C1740, C[180] || CT.C180, C[1735] || CT.C1735, C[181] || CT.C181, C[1741] || CT.C1741, C[1736] || CT.C1736, C[1742] || CT.C1742, C[1743] || CT.C1743, C[1740] || CT.C1740]);
    },
    get C1745() {
      return C[1745] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[185] || CT.C185, C[1730] || CT.C1730]);
    },
    get C1746() {
      return C[1746] = dart.constMap(T$.AtomTypeL(), T$.MeasurementL(), [C[1239] || CT.C1239, C[1730] || CT.C1730, C[185] || CT.C185, C[1730] || CT.C1730]);
    },
    get C1744() {
      return C[1744] = dart.constMap(T$.AtomTypeL(), T$.MapLOfAtomTypeL$MeasurementL(), [C[1239] || CT.C1239, C[1745] || CT.C1745, C[185] || CT.C185, C[1746] || CT.C1746, C[183] || CT.C183, C[1740] || CT.C1740, C[179] || CT.C179, C[1740] || CT.C1740, C[184] || CT.C184, C[1740] || CT.C1740, C[180] || CT.C180, C[1745] || CT.C1745, C[181] || CT.C181, C[1740] || CT.C1740, C[1736] || CT.C1736, C[1745] || CT.C1745, C[1743] || CT.C1743, C[1740] || CT.C1740]);
    },
    get C1749() {
      return C[1749] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 13,
        [S._Location_line]: 28,
        [S._Location_file]: null
      });
    },
    get C1750() {
      return C[1750] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 31,
        [S._Location_file]: null
      });
    },
    get C1748() {
      return C[1748] = dart.constList([C[1749] || CT.C1749, C[1750] || CT.C1750], T$._LocationL());
    },
    get C1747() {
      return C[1747] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1748] || CT.C1748,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 27,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/function.dart"
      });
    },
    get C1753() {
      return C[1753] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 13,
        [S._Location_line]: 34,
        [S._Location_file]: null
      });
    },
    get C1754() {
      return C[1754] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 35,
        [S._Location_file]: null
      });
    },
    get C1752() {
      return C[1752] = dart.constList([C[1753] || CT.C1753, C[1754] || CT.C1754], T$._LocationL());
    },
    get C1751() {
      return C[1751] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1752] || CT.C1752,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 33,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/function.dart"
      });
    },
    get C1757() {
      return C[1757] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 22,
        [S._Location_line]: 26,
        [S._Location_file]: null
      });
    },
    get C1756() {
      return C[1756] = dart.constList([C[1757] || CT.C1757], T$._LocationL());
    },
    get C1755() {
      return C[1755] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1756] || CT.C1756,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 26,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/function.dart"
      });
    },
    get C1760() {
      return C[1760] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 51,
        [S._Location_file]: null
      });
    },
    get C1761() {
      return C[1761] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 52,
        [S._Location_file]: null
      });
    },
    get C1759() {
      return C[1759] = dart.constList([C[1760] || CT.C1760, C[1761] || CT.C1761], T$._LocationL());
    },
    get C1758() {
      return C[1758] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1759] || CT.C1759,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 50,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/frac.dart"
      });
    },
    get C1764() {
      return C[1764] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 15,
        [S._Location_line]: 55,
        [S._Location_file]: null
      });
    },
    get C1765() {
      return C[1765] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 56,
        [S._Location_file]: null
      });
    },
    get C1763() {
      return C[1763] = dart.constList([C[1764] || CT.C1764, C[1765] || CT.C1765], T$._LocationL());
    },
    get C1762() {
      return C[1762] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1763] || CT.C1763,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 54,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/frac.dart"
      });
    },
    get C1768() {
      return C[1768] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 11,
        [S._Location_line]: 45,
        [S._Location_file]: null
      });
    },
    get C1769() {
      return C[1769] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 49,
        [S._Location_file]: null
      });
    },
    get C1767() {
      return C[1767] = dart.constList([C[1768] || CT.C1768, C[1769] || CT.C1769], T$._LocationL());
    },
    get C1766() {
      return C[1766] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1767] || CT.C1767,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 44,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/frac.dart"
      });
    },
    get C1770() {
      return C[1770] = dart.const({
        __proto__: frac$._FracPos.prototype,
        [S._name$14]: "_FracPos.numer",
        index: 0
      });
    },
    get C1771() {
      return C[1771] = dart.const({
        __proto__: frac$._FracPos.prototype,
        [S._name$14]: "_FracPos.denom",
        index: 1
      });
    },
    get C1772() {
      return C[1772] = dart.constList([C[1770] || CT.C1770, C[1771] || CT.C1771], T$._FracPosL());
    },
    get C1773() {
      return C[1773] = dart.constList([], T$.StringL());
    },
    get C1776() {
      return C[1776] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 13,
        [S._Location_line]: 73,
        [S._Location_file]: null
      });
    },
    get C1777() {
      return C[1777] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 77,
        [S._Location_file]: null
      });
    },
    get C1775() {
      return C[1775] = dart.constList([C[1776] || CT.C1776, C[1777] || CT.C1777], T$._LocationL());
    },
    get C1774() {
      return C[1774] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1775] || CT.C1775,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 72,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1780() {
      return C[1780] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "decoration",
        [S._Location_column]: 11,
        [S._Location_line]: 61,
        [S._Location_file]: null
      });
    },
    get C1781() {
      return C[1781] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 72,
        [S._Location_file]: null
      });
    },
    get C1779() {
      return C[1779] = dart.constList([C[1780] || CT.C1780, C[1781] || CT.C1781], T$._LocationL());
    },
    get C1778() {
      return C[1778] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1779] || CT.C1779,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 59,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1784() {
      return C[1784] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "size",
        [S._Location_column]: 17,
        [S._Location_line]: 88,
        [S._Location_file]: null
      });
    },
    get C1785() {
      return C[1785] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "painter",
        [S._Location_column]: 17,
        [S._Location_line]: 89,
        [S._Location_file]: null
      });
    },
    get C1783() {
      return C[1783] = dart.constList([C[1784] || CT.C1784, C[1785] || CT.C1785], T$._LocationL());
    },
    get C1782() {
      return C[1782] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1783] || CT.C1783,
        [S._Location_name]: null,
        [S._Location_column]: 50,
        [S._Location_line]: 87,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1788() {
      return C[1788] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 15,
        [S._Location_line]: 87,
        [S._Location_file]: null
      });
    },
    get C1787() {
      return C[1787] = dart.constList([C[1788] || CT.C1788], T$._LocationL());
    },
    get C1786() {
      return C[1786] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1787] || CT.C1787,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 86,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1791() {
      return C[1791] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "left",
        [S._Location_column]: 13,
        [S._Location_line]: 82,
        [S._Location_file]: null
      });
    },
    get C1792() {
      return C[1792] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "right",
        [S._Location_column]: 13,
        [S._Location_line]: 83,
        [S._Location_file]: null
      });
    },
    get C1793() {
      return C[1793] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 13,
        [S._Location_line]: 84,
        [S._Location_file]: null
      });
    },
    get C1794() {
      return C[1794] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottom",
        [S._Location_column]: 13,
        [S._Location_line]: 85,
        [S._Location_file]: null
      });
    },
    get C1795() {
      return C[1795] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 86,
        [S._Location_file]: null
      });
    },
    get C1790() {
      return C[1790] = dart.constList([C[1791] || CT.C1791, C[1792] || CT.C1792, C[1793] || CT.C1793, C[1794] || CT.C1794, C[1795] || CT.C1795], T$._LocationL());
    },
    get C1789() {
      return C[1789] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1790] || CT.C1790,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 81,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1798() {
      return C[1798] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "size",
        [S._Location_column]: 17,
        [S._Location_line]: 108,
        [S._Location_file]: null
      });
    },
    get C1799() {
      return C[1799] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "painter",
        [S._Location_column]: 17,
        [S._Location_line]: 109,
        [S._Location_file]: null
      });
    },
    get C1797() {
      return C[1797] = dart.constList([C[1798] || CT.C1798, C[1799] || CT.C1799], T$._LocationL());
    },
    get C1796() {
      return C[1796] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1797] || CT.C1797,
        [S._Location_name]: null,
        [S._Location_column]: 50,
        [S._Location_line]: 107,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1802() {
      return C[1802] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 15,
        [S._Location_line]: 107,
        [S._Location_file]: null
      });
    },
    get C1801() {
      return C[1801] = dart.constList([C[1802] || CT.C1802], T$._LocationL());
    },
    get C1800() {
      return C[1800] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1801] || CT.C1801,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 106,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1805() {
      return C[1805] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "left",
        [S._Location_column]: 13,
        [S._Location_line]: 102,
        [S._Location_file]: null
      });
    },
    get C1806() {
      return C[1806] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "right",
        [S._Location_column]: 13,
        [S._Location_line]: 103,
        [S._Location_file]: null
      });
    },
    get C1807() {
      return C[1807] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "top",
        [S._Location_column]: 13,
        [S._Location_line]: 104,
        [S._Location_file]: null
      });
    },
    get C1808() {
      return C[1808] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottom",
        [S._Location_column]: 13,
        [S._Location_line]: 105,
        [S._Location_file]: null
      });
    },
    get C1809() {
      return C[1809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 106,
        [S._Location_file]: null
      });
    },
    get C1804() {
      return C[1804] = dart.constList([C[1805] || CT.C1805, C[1806] || CT.C1806, C[1807] || CT.C1807, C[1808] || CT.C1808, C[1809] || CT.C1809], T$._LocationL());
    },
    get C1803() {
      return C[1803] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1804] || CT.C1804,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 101,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1812() {
      return C[1812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 58,
        [S._Location_file]: null
      });
    },
    get C1811() {
      return C[1811] = dart.constList([C[1812] || CT.C1812], T$._LocationL());
    },
    get C1810() {
      return C[1810] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1811] || CT.C1811,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 57,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1815() {
      return C[1815] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "id",
        [S._Location_column]: 13,
        [S._Location_line]: 132,
        [S._Location_file]: null
      });
    },
    get C1816() {
      return C[1816] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 133,
        [S._Location_file]: null
      });
    },
    get C1814() {
      return C[1814] = dart.constList([C[1815] || CT.C1815, C[1816] || CT.C1816], T$._LocationL());
    },
    get C1813() {
      return C[1813] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1814] || CT.C1814,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 131,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1819() {
      return C[1819] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "delegate",
        [S._Location_column]: 9,
        [S._Location_line]: 124,
        [S._Location_file]: null
      });
    },
    get C1820() {
      return C[1820] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 130,
        [S._Location_file]: null
      });
    },
    get C1818() {
      return C[1818] = dart.constList([C[1819] || CT.C1819, C[1820] || CT.C1820], T$._LocationL());
    },
    get C1817() {
      return C[1817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1818] || CT.C1818,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 123,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart"
      });
    },
    get C1823() {
      return C[1823] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 13,
        [S._Location_line]: 38,
        [S._Location_file]: null
      });
    },
    get C1824() {
      return C[1824] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 41,
        [S._Location_file]: null
      });
    },
    get C1822() {
      return C[1822] = dart.constList([C[1823] || CT.C1823, C[1824] || CT.C1824], T$._LocationL());
    },
    get C1821() {
      return C[1821] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1822] || CT.C1822,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 37,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1827() {
      return C[1827] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 23,
        [S._Location_line]: 54,
        [S._Location_file]: null
      });
    },
    get C1828() {
      return C[1828] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 23,
        [S._Location_line]: 55,
        [S._Location_file]: null
      });
    },
    get C1829() {
      return C[1829] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 23,
        [S._Location_line]: 56,
        [S._Location_file]: null
      });
    },
    get C1826() {
      return C[1826] = dart.constList([C[1827] || CT.C1827, C[1828] || CT.C1828, C[1829] || CT.C1829], T$._LocationL());
    },
    get C1825() {
      return C[1825] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1826] || CT.C1826,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 53,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1832() {
      return C[1832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 21,
        [S._Location_line]: 52,
        [S._Location_file]: null
      });
    },
    get C1833() {
      return C[1833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 21,
        [S._Location_line]: 53,
        [S._Location_file]: null
      });
    },
    get C1831() {
      return C[1831] = dart.constList([C[1832] || CT.C1832, C[1833] || CT.C1833], T$._LocationL());
    },
    get C1830() {
      return C[1830] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1831] || CT.C1831,
        [S._Location_name]: null,
        [S._Location_column]: 26,
        [S._Location_line]: 51,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1834() {
      return C[1834] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[35] || CT.C35,
        [S._Location_name]: null,
        [S._Location_column]: 28,
        [S._Location_line]: 63,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1837() {
      return C[1837] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 15,
        [S._Location_line]: 46,
        [S._Location_file]: null
      });
    },
    get C1836() {
      return C[1836] = dart.constList([C[1837] || CT.C1837], T$._LocationL());
    },
    get C1835() {
      return C[1835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1836] || CT.C1836,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 45,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1840() {
      return C[1840] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customCrossSize",
        [S._Location_column]: 13,
        [S._Location_line]: 44,
        [S._Location_file]: null
      });
    },
    get C1841() {
      return C[1841] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 45,
        [S._Location_file]: null
      });
    },
    get C1839() {
      return C[1839] = dart.constList([C[1840] || CT.C1840, C[1841] || CT.C1841], T$._LocationL());
    },
    get C1838() {
      return C[1838] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1839] || CT.C1839,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 43,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1844() {
      return C[1844] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baselineReferenceWidgetIndex",
        [S._Location_column]: 9,
        [S._Location_line]: 35,
        [S._Location_file]: null
      });
    },
    get C1845() {
      return C[1845] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 36,
        [S._Location_file]: null
      });
    },
    get C1843() {
      return C[1843] = dart.constList([C[1844] || CT.C1844, C[1845] || CT.C1845], T$._LocationL());
    },
    get C1842() {
      return C[1842] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1843] || CT.C1843,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 34,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart"
      });
    },
    get C1847() {
      return C[1847] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[265] || CT.C265,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Main"
      });
    },
    get C1848() {
      return C[1848] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[140] || CT.C140,
        [S.FontOptions_fontFamily]: "Main"
      });
    },
    get C1851() {
      return C[1851] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[140] || CT.C140,
        [S.FontOptions_fontFamily]: "Math"
      });
    },
    get C1850() {
      return C[1850] = dart.constList([C[1851] || CT.C1851], T$.FontOptionsL());
    },
    get C1849() {
      return C[1849] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[1850] || CT.C1850,
        [S.FontOptions_fontShape]: C[265] || CT.C265,
        [S.FontOptions_fontWeight]: C[140] || CT.C140,
        [S.FontOptions_fontFamily]: "Math"
      });
    },
    get C1852() {
      return C[1852] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Caligraphic"
      });
    },
    get C1853() {
      return C[1853] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Fraktur"
      });
    },
    get C1854() {
      return C[1854] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "Script"
      });
    },
    get C1855() {
      return C[1855] = dart.const({
        __proto__: options$.FontOptions.prototype,
        [S.FontOptions_fallback]: C[260] || CT.C260,
        [S.FontOptions_fontShape]: C[261] || CT.C261,
        [S.FontOptions_fontWeight]: C[262] || CT.C262,
        [S.FontOptions_fontFamily]: "SansSerif"
      });
    },
    get C1846() {
      return C[1846] = dart.constMap(T$.StringL(), T$.FontOptionsL(), ["\\mathit", C[1847] || CT.C1847, "\\mathrm", C[259] || CT.C259, "\\mathbf", C[1848] || CT.C1848, "\\boldsymbol", C[1849] || CT.C1849, "\\mathbb", C[263] || CT.C263, "\\mathcal", C[1852] || CT.C1852, "\\mathfrak", C[1853] || CT.C1853, "\\mathtt", C[1365] || CT.C1365, "\\mathscr", C[1854] || CT.C1854, "\\mathsf", C[1855] || CT.C1855]);
    },
    get C1857() {
      return C[1857] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: null,
        [S.PartialFontOptions_fontWeight]: null,
        [S.PartialFontOptions_fontFamily]: "Main"
      });
    },
    get C1858() {
      return C[1858] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: null,
        [S.PartialFontOptions_fontWeight]: null,
        [S.PartialFontOptions_fontFamily]: "SansSerif"
      });
    },
    get C1859() {
      return C[1859] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: null,
        [S.PartialFontOptions_fontWeight]: null,
        [S.PartialFontOptions_fontFamily]: "Typewriter"
      });
    },
    get C1860() {
      return C[1860] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: null,
        [S.PartialFontOptions_fontWeight]: C[140] || CT.C140,
        [S.PartialFontOptions_fontFamily]: null
      });
    },
    get C1861() {
      return C[1861] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: null,
        [S.PartialFontOptions_fontWeight]: C[262] || CT.C262,
        [S.PartialFontOptions_fontFamily]: null
      });
    },
    get C1862() {
      return C[1862] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: C[265] || CT.C265,
        [S.PartialFontOptions_fontWeight]: null,
        [S.PartialFontOptions_fontFamily]: null
      });
    },
    get C1863() {
      return C[1863] = dart.const({
        __proto__: options$.PartialFontOptions.prototype,
        [S.PartialFontOptions_fontShape]: C[261] || CT.C261,
        [S.PartialFontOptions_fontWeight]: null,
        [S.PartialFontOptions_fontFamily]: null
      });
    },
    get C1856() {
      return C[1856] = dart.constMap(T$.StringL(), T$.PartialFontOptionsL(), ["\\textrm", C[1857] || CT.C1857, "\\textsf", C[1858] || CT.C1858, "\\texttt", C[1859] || CT.C1859, "\\textnormal", C[1857] || CT.C1857, "\\textbf", C[1860] || CT.C1860, "\\textmd", C[1861] || CT.C1861, "\\textit", C[1862] || CT.C1862, "\\textup", C[1863] || CT.C1863]);
    },
    get C1866() {
      return C[1866] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 11,
        [S._Location_line]: 92,
        [S._Location_file]: null
      });
    },
    get C1867() {
      return C[1867] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 93,
        [S._Location_file]: null
      });
    },
    get C1865() {
      return C[1865] = dart.constList([C[1866] || CT.C1866, C[1867] || CT.C1867], T$._LocationL());
    },
    get C1864() {
      return C[1864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1865] || CT.C1865,
        [S._Location_name]: null,
        [S._Location_column]: 17,
        [S._Location_line]: 91,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/symbol.dart"
      });
    },
    get C1871() {
      return C[1871] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "data",
        [S._Location_column]: 27,
        [S._Location_line]: 410,
        [S._Location_file]: null
      });
    },
    get C1870() {
      return C[1870] = dart.constList([C[1871] || CT.C1871], T$._LocationL());
    },
    get C1869() {
      return C[1869] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1870] || CT.C1870,
        [S._Location_name]: null,
        [S._Location_column]: 23,
        [S._Location_line]: 410,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart"
      });
    },
    get C1868() {
      return C[1868] = dart.const({
        __proto__: text.Text.prototype,
        [S$.Widget__location]: C[1869] || CT.C1869,
        [S$.Widget_key]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "This widget should not appear. It means one of FlutterMath's AST nodes forgot to handle the case for TransparentNodes"
      });
    },
    get C1874() {
      return C[1874] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minDepth",
        [S._Location_column]: 15,
        [S._Location_line]: 43,
        [S._Location_file]: null
      });
    },
    get C1875() {
      return C[1875] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "bottomPadding",
        [S._Location_column]: 15,
        [S._Location_line]: 45,
        [S._Location_file]: null
      });
    },
    get C1876() {
      return C[1876] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 47,
        [S._Location_file]: null
      });
    },
    get C1873() {
      return C[1873] = dart.constList([C[1874] || CT.C1874, C[1875] || CT.C1875, C[1876] || CT.C1876], T$._LocationL());
    },
    get C1872() {
      return C[1872] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1873] || CT.C1873,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 42,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/over.dart"
      });
    },
    get C1879() {
      return C[1879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baselineReferenceWidgetIndex",
        [S._Location_column]: 11,
        [S._Location_line]: 39,
        [S._Location_file]: null
      });
    },
    get C1880() {
      return C[1880] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 11,
        [S._Location_line]: 40,
        [S._Location_file]: null
      });
    },
    get C1878() {
      return C[1878] = dart.constList([C[1879] || CT.C1879, C[1880] || CT.C1880], T$._LocationL());
    },
    get C1877() {
      return C[1877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1878] || CT.C1878,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 38,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/over.dart"
      });
    },
    get C1883() {
      return C[1883] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 9,
        [S._Location_line]: 37,
        [S._Location_file]: null
      });
    },
    get C1884() {
      return C[1884] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 38,
        [S._Location_file]: null
      });
    },
    get C1882() {
      return C[1882] = dart.constList([C[1883] || CT.C1883, C[1884] || CT.C1884], T$._LocationL());
    },
    get C1881() {
      return C[1881] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1882] || CT.C1882,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 36,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/over.dart"
      });
    },
    get C1887() {
      return C[1887] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 38,
        [S._Location_file]: null
      });
    },
    get C1888() {
      return C[1888] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "horizontalAlignment",
        [S._Location_column]: 11,
        [S._Location_line]: 39,
        [S._Location_file]: null
      });
    },
    get C1889() {
      return C[1889] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 40,
        [S._Location_file]: null
      });
    },
    get C1886() {
      return C[1886] = dart.constList([C[1887] || CT.C1887, C[1888] || CT.C1888, C[1889] || CT.C1889], T$._LocationL());
    },
    get C1885() {
      return C[1885] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1886] || CT.C1886,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 37,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart"
      });
    },
    get C1892() {
      return C[1892] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 7,
        [S._Location_line]: 32,
        [S._Location_file]: null
      });
    },
    get C1893() {
      return C[1893] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textBaseline",
        [S._Location_column]: 7,
        [S._Location_line]: 33,
        [S._Location_file]: null
      });
    },
    get C1894() {
      return C[1894] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 7,
        [S._Location_line]: 34,
        [S._Location_file]: null
      });
    },
    get C1895() {
      return C[1895] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisSize",
        [S._Location_column]: 7,
        [S._Location_line]: 35,
        [S._Location_file]: null
      });
    },
    get C1896() {
      return C[1896] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 36,
        [S._Location_file]: null
      });
    },
    get C1891() {
      return C[1891] = dart.constList([C[1892] || CT.C1892, C[1893] || CT.C1893, C[1894] || CT.C1894, C[1895] || CT.C1895, C[1896] || CT.C1896], T$._LocationL());
    },
    get C1890() {
      return C[1890] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1891] || CT.C1891,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 31,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart"
      });
    },
    get C1899() {
      return C[1899] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 11,
        [S._Location_line]: 63,
        [S._Location_file]: null
      });
    },
    get C1900() {
      return C[1900] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 11,
        [S._Location_line]: 64,
        [S._Location_file]: null
      });
    },
    get C1901() {
      return C[1901] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 65,
        [S._Location_file]: null
      });
    },
    get C1898() {
      return C[1898] = dart.constList([C[1899] || CT.C1899, C[1900] || CT.C1900, C[1901] || CT.C1901], T$._LocationL());
    },
    get C1897() {
      return C[1897] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1898] || CT.C1898,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 62,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart"
      });
    },
    get C1904() {
      return C[1904] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 11,
        [S._Location_line]: 70,
        [S._Location_file]: null
      });
    },
    get C1905() {
      return C[1905] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 11,
        [S._Location_line]: 71,
        [S._Location_file]: null
      });
    },
    get C1903() {
      return C[1903] = dart.constList([C[1904] || CT.C1904, C[1905] || CT.C1905, C[1781] || CT.C1781], T$._LocationL());
    },
    get C1902() {
      return C[1902] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1903] || CT.C1903,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 69,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart"
      });
    },
    get C1908() {
      return C[1908] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 80,
        [S._Location_file]: null
      });
    },
    get C1909() {
      return C[1909] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "trailingMargin",
        [S._Location_column]: 11,
        [S._Location_line]: 81,
        [S._Location_file]: null
      });
    },
    get C1907() {
      return C[1907] = dart.constList([C[1908] || CT.C1908, C[1909] || CT.C1909], T$._LocationL());
    },
    get C1906() {
      return C[1906] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1907] || CT.C1907,
        [S._Location_name]: null,
        [S._Location_column]: 9,
        [S._Location_line]: 79,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart"
      });
    },
    get C1912() {
      return C[1912] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 78,
        [S._Location_file]: null
      });
    },
    get C1911() {
      return C[1911] = dart.constList([C[1912] || CT.C1912], T$._LocationL());
    },
    get C1910() {
      return C[1910] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[1911] || CT.C1911,
        [S._Location_name]: null,
        [S._Location_column]: 13,
        [S._Location_line]: 77,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart"
      });
    },
    get C1914() {
      return C[1914] = dart.constList(["̸", "←"], T$.StringL());
    },
    get C1915() {
      return C[1915] = dart.constList(["̸", "→"], T$.StringL());
    },
    get C1916() {
      return C[1916] = dart.constList(["̸", "↔"], T$.StringL());
    },
    get C1917() {
      return C[1917] = dart.constList(["̸", "⇐"], T$.StringL());
    },
    get C1918() {
      return C[1918] = dart.constList(["̸", "⇒"], T$.StringL());
    },
    get C1919() {
      return C[1919] = dart.constList(["̸", "⇔"], T$.StringL());
    },
    get C1920() {
      return C[1920] = dart.constList(["̸", "∈"], T$.StringL());
    },
    get C1921() {
      return C[1921] = dart.constList(["̸", "∋"], T$.StringL());
    },
    get C1922() {
      return C[1922] = dart.constList(["̸", "∣"], T$.StringL());
    },
    get C1923() {
      return C[1923] = dart.constList(["̸", "∥"], T$.StringL());
    },
    get C1924() {
      return C[1924] = dart.constList(["̸", "∼"], T$.StringL());
    },
    get C1925() {
      return C[1925] = dart.constList(["̸", "≃"], T$.StringL());
    },
    get C1926() {
      return C[1926] = dart.constList(["̸", "≅"], T$.StringL());
    },
    get C1927() {
      return C[1927] = dart.constList(["̸", "≈"], T$.StringL());
    },
    get C1928() {
      return C[1928] = dart.constList(["̸", "≍"], T$.StringL());
    },
    get C1929() {
      return C[1929] = dart.constList(["̸", "="], T$.StringL());
    },
    get C1930() {
      return C[1930] = dart.constList(["̸", "≡"], T$.StringL());
    },
    get C1931() {
      return C[1931] = dart.constList(["̸", "<"], T$.StringL());
    },
    get C1932() {
      return C[1932] = dart.constList(["̸", ">"], T$.StringL());
    },
    get C1933() {
      return C[1933] = dart.constList(["̸", "≤"], T$.StringL());
    },
    get C1934() {
      return C[1934] = dart.constList(["̸", "≥"], T$.StringL());
    },
    get C1935() {
      return C[1935] = dart.constList(["̸", "≲"], T$.StringL());
    },
    get C1936() {
      return C[1936] = dart.constList(["̸", "≳"], T$.StringL());
    },
    get C1937() {
      return C[1937] = dart.constList(["̸", "≶"], T$.StringL());
    },
    get C1938() {
      return C[1938] = dart.constList(["̸", "≷"], T$.StringL());
    },
    get C1939() {
      return C[1939] = dart.constList(["̸", "≺"], T$.StringL());
    },
    get C1940() {
      return C[1940] = dart.constList(["̸", "≻"], T$.StringL());
    },
    get C1941() {
      return C[1941] = dart.constList(["̸", "⊂"], T$.StringL());
    },
    get C1942() {
      return C[1942] = dart.constList(["̸", "⊃"], T$.StringL());
    },
    get C1943() {
      return C[1943] = dart.constList(["̸", "⊆"], T$.StringL());
    },
    get C1944() {
      return C[1944] = dart.constList(["̸", "⊇"], T$.StringL());
    },
    get C1945() {
      return C[1945] = dart.constList(["̸", "⊢"], T$.StringL());
    },
    get C1946() {
      return C[1946] = dart.constList(["̸", "⊨"], T$.StringL());
    },
    get C1947() {
      return C[1947] = dart.constList(["̸", "⊩"], T$.StringL());
    },
    get C1948() {
      return C[1948] = dart.constList(["̸", "⊫"], T$.StringL());
    },
    get C1949() {
      return C[1949] = dart.constList(["̸", "≼"], T$.StringL());
    },
    get C1950() {
      return C[1950] = dart.constList(["̸", "≽"], T$.StringL());
    },
    get C1951() {
      return C[1951] = dart.constList(["̸", "⊑"], T$.StringL());
    },
    get C1952() {
      return C[1952] = dart.constList(["̸", "⊒"], T$.StringL());
    },
    get C1953() {
      return C[1953] = dart.constList(["̸", "⊲"], T$.StringL());
    },
    get C1954() {
      return C[1954] = dart.constList(["̸", "⊳"], T$.StringL());
    },
    get C1955() {
      return C[1955] = dart.constList(["̸", "⊴"], T$.StringL());
    },
    get C1956() {
      return C[1956] = dart.constList(["̸", "⊵"], T$.StringL());
    },
    get C1957() {
      return C[1957] = dart.constList(["̸", "∃"], T$.StringL());
    },
    get C1913() {
      return C[1913] = dart.constMap(T$.StringL(), T$.ListLOfStringL(), ["↚", C[1914] || CT.C1914, "↛", C[1915] || CT.C1915, "↮", C[1916] || CT.C1916, "⇍", C[1917] || CT.C1917, "⇏", C[1918] || CT.C1918, "⇎", C[1919] || CT.C1919, "∉", C[1920] || CT.C1920, "∌", C[1921] || CT.C1921, "∤", C[1922] || CT.C1922, "∦", C[1923] || CT.C1923, "≁", C[1924] || CT.C1924, "≄", C[1925] || CT.C1925, "≇", C[1926] || CT.C1926, "≉", C[1927] || CT.C1927, "≭", C[1928] || CT.C1928, "≠", C[1929] || CT.C1929, "≢", C[1930] || CT.C1930, "≮", C[1931] || CT.C1931, "≯", C[1932] || CT.C1932, "≰", C[1933] || CT.C1933, "≱", C[1934] || CT.C1934, "≴", C[1935] || CT.C1935, "≵", C[1936] || CT.C1936, "≸", C[1937] || CT.C1937, "≹", C[1938] || CT.C1938, "⊀", C[1939] || CT.C1939, "⊁", C[1940] || CT.C1940, "⊄", C[1941] || CT.C1941, "⊅", C[1942] || CT.C1942, "⊈", C[1943] || CT.C1943, "⊉", C[1944] || CT.C1944, "⊬", C[1945] || CT.C1945, "⊭", C[1946] || CT.C1946, "⊮", C[1947] || CT.C1947, "⊯", C[1948] || CT.C1948, "⋠", C[1949] || CT.C1949, "⋡", C[1950] || CT.C1950, "⋢", C[1951] || CT.C1951, "⋣", C[1952] || CT.C1952, "⋪", C[1953] || CT.C1953, "⋫", C[1954] || CT.C1954, "⋬", C[1955] || CT.C1955, "⋭", C[1956] || CT.C1956, "∄", C[1957] || CT.C1957]);
    },
    get C1959() {
      return C[1959] = dart.constList([":", ":"], T$.StringL());
    },
    get C1960() {
      return C[1960] = dart.constList([":", "="], T$.StringL());
    },
    get C1961() {
      return C[1961] = dart.constList(["=", ":"], T$.StringL());
    },
    get C1962() {
      return C[1962] = dart.constList(["-", ":"], T$.StringL());
    },
    get C1963() {
      return C[1963] = dart.constList(["[", "["], T$.StringL());
    },
    get C1964() {
      return C[1964] = dart.constList(["]", "]"], T$.StringL());
    },
    get C1965() {
      return C[1965] = dart.constList(["{", "["], T$.StringL());
    },
    get C1966() {
      return C[1966] = dart.constList(["]", "}"], T$.StringL());
    },
    get C1958() {
      return C[1958] = dart.constMap(T$.StringL(), T$.ListLOfStringL(), ["∷", C[1959] || CT.C1959, "≔", C[1960] || CT.C1960, "≕", C[1961] || CT.C1961, "∹", C[1962] || CT.C1962, "⟦", C[1963] || CT.C1963, "⟧", C[1964] || CT.C1964, "⦃", C[1965] || CT.C1965, "⦄", C[1966] || CT.C1966]);
    },
    get C1969() {
      return C[1969] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C1968() {
      return C[1968] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1969] || CT.C1969
      });
    },
    get C1971() {
      return C[1971] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C1970() {
      return C[1970] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1971] || CT.C1971
      });
    },
    get C1974() {
      return C[1974] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: null
      });
    },
    get C1973() {
      return C[1973] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C1972() {
      return C[1972] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1973] || CT.C1973,
        [S$.text$1]: null,
        [S$.math$1]: C[1971] || CT.C1971
      });
    },
    get C1975() {
      return C[1975] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1969] || CT.C1969
      });
    },
    get C1978() {
      return C[1978] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: null
      });
    },
    get C1977() {
      return C[1977] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1978] || CT.C1978
      });
    },
    get C1976() {
      return C[1976] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1977] || CT.C1977,
        [S$.text$1]: null,
        [S$.math$1]: C[1969] || CT.C1969
      });
    },
    get C1980() {
      return C[1980] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[180] || CT.C180,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C1979() {
      return C[1979] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1980] || CT.C1980
      });
    },
    get C1982() {
      return C[1982] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[184] || CT.C184,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C1981() {
      return C[1981] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1982] || CT.C1982
      });
    },
    get C1984() {
      return C[1984] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[183] || CT.C183,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C1983() {
      return C[1983] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1984] || CT.C1984
      });
    },
    get C1987() {
      return C[1987] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C1986() {
      return C[1986] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1987] || CT.C1987
      });
    },
    get C1985() {
      return C[1985] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1986] || CT.C1986,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C1990() {
      return C[1990] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C1989() {
      return C[1989] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1990] || CT.C1990
      });
    },
    get C1988() {
      return C[1988] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1989] || CT.C1989,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C1993() {
      return C[1993] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C1992() {
      return C[1992] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1993] || CT.C1993
      });
    },
    get C1991() {
      return C[1991] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1992] || CT.C1992,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C1996() {
      return C[1996] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C1995() {
      return C[1995] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1996] || CT.C1996
      });
    },
    get C1994() {
      return C[1994] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1995] || CT.C1995,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C1999() {
      return C[1999] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C1998() {
      return C[1998] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[1999] || CT.C1999
      });
    },
    get C1997() {
      return C[1997] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1998] || CT.C1998,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2002() {
      return C[2002] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2001() {
      return C[2001] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2002] || CT.C2002
      });
    },
    get C2000() {
      return C[2000] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2001] || CT.C2001,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2005() {
      return C[2005] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2004() {
      return C[2004] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2005] || CT.C2005
      });
    },
    get C2003() {
      return C[2003] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2004] || CT.C2004,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2008() {
      return C[2008] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2007() {
      return C[2007] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2008] || CT.C2008
      });
    },
    get C2006() {
      return C[2006] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2007] || CT.C2007,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2011() {
      return C[2011] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2010() {
      return C[2010] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2011] || CT.C2011
      });
    },
    get C2009() {
      return C[2009] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2010] || CT.C2010,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2014() {
      return C[2014] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2013() {
      return C[2013] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2014] || CT.C2014
      });
    },
    get C2012() {
      return C[2012] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2013] || CT.C2013,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2015() {
      return C[2015] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1978] || CT.C1978
      });
    },
    get C2016() {
      return C[2016] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1978] || CT.C1978,
        [S$.math$1]: C[1978] || CT.C1978
      });
    },
    get C2018() {
      return C[2018] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[184] || CT.C184,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: null
      });
    },
    get C2017() {
      return C[2017] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2018] || CT.C2018
      });
    },
    get C2020() {
      return C[2020] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[180] || CT.C180,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: null
      });
    },
    get C2019() {
      return C[2019] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2020] || CT.C2020
      });
    },
    get C2021() {
      return C[2021] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1970] || CT.C1970,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2023() {
      return C[2023] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[183] || CT.C183,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: null
      });
    },
    get C2022() {
      return C[2022] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2023] || CT.C2023
      });
    },
    get C2025() {
      return C[2025] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "‘"
      });
    },
    get C2024() {
      return C[2024] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2025] || CT.C2025,
        [S$.math$1]: C[2025] || CT.C2025
      });
    },
    get C2027() {
      return C[2027] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "A"
      });
    },
    get C2026() {
      return C[2026] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2027] || CT.C2027
      });
    },
    get C2029() {
      return C[2029] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "B"
      });
    },
    get C2028() {
      return C[2028] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2029] || CT.C2029
      });
    },
    get C2031() {
      return C[2031] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "E"
      });
    },
    get C2030() {
      return C[2030] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2031] || CT.C2031
      });
    },
    get C2033() {
      return C[2033] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "Z"
      });
    },
    get C2032() {
      return C[2032] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2033] || CT.C2033
      });
    },
    get C2035() {
      return C[2035] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "H"
      });
    },
    get C2034() {
      return C[2034] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2035] || CT.C2035
      });
    },
    get C2037() {
      return C[2037] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "I"
      });
    },
    get C2036() {
      return C[2036] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2037] || CT.C2037
      });
    },
    get C2039() {
      return C[2039] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "K"
      });
    },
    get C2038() {
      return C[2038] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2039] || CT.C2039
      });
    },
    get C2041() {
      return C[2041] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "M"
      });
    },
    get C2040() {
      return C[2040] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2041] || CT.C2041
      });
    },
    get C2043() {
      return C[2043] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "N"
      });
    },
    get C2042() {
      return C[2042] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2043] || CT.C2043
      });
    },
    get C2045() {
      return C[2045] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "O"
      });
    },
    get C2044() {
      return C[2044] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2045] || CT.C2045
      });
    },
    get C2047() {
      return C[2047] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "P"
      });
    },
    get C2046() {
      return C[2046] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2047] || CT.C2047
      });
    },
    get C2049() {
      return C[2049] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "T"
      });
    },
    get C2048() {
      return C[2048] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2049] || CT.C2049
      });
    },
    get C2051() {
      return C[2051] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "X"
      });
    },
    get C2050() {
      return C[2050] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2051] || CT.C2051
      });
    },
    get C2053() {
      return C[2053] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: null
      });
    },
    get C2052() {
      return C[2052] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2053] || CT.C2053
      });
    },
    get C2055() {
      return C[2055] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[183] || CT.C183,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "∗"
      });
    },
    get C2054() {
      return C[2054] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2055] || CT.C2055
      });
    },
    get C2056() {
      return C[2056] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1984] || CT.C1984
      });
    },
    get C2058() {
      return C[2058] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[183] || CT.C183,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "−"
      });
    },
    get C2057() {
      return C[2057] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2058] || CT.C2058
      });
    },
    get C2059() {
      return C[2059] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2022] || CT.C2022,
        [S$.text$1]: null,
        [S$.math$1]: C[1984] || CT.C1984
      });
    },
    get C2060() {
      return C[2060] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1982] || CT.C1982
      });
    },
    get C2061() {
      return C[2061] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1980] || CT.C1980
      });
    },
    get C2062() {
      return C[2062] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1971] || CT.C1971
      });
    },
    get C2065() {
      return C[2065] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2064() {
      return C[2064] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2065] || CT.C2065
      });
    },
    get C2063() {
      return C[2063] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2064] || CT.C2064,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2068() {
      return C[2068] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2067() {
      return C[2067] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2068] || CT.C2068
      });
    },
    get C2066() {
      return C[2066] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2067] || CT.C2067,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2071() {
      return C[2071] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2070() {
      return C[2070] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2071] || CT.C2071
      });
    },
    get C2069() {
      return C[2069] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2070] || CT.C2070,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2074() {
      return C[2074] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: ""
      });
    },
    get C2073() {
      return C[2073] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2074] || CT.C2074
      });
    },
    get C2072() {
      return C[2072] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[2073] || CT.C2073,
        [S$.text$1]: null,
        [S$.math$1]: C[1974] || CT.C1974
      });
    },
    get C2076() {
      return C[2076] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[181] || CT.C181,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C2075() {
      return C[2075] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2076] || CT.C2076
      });
    },
    get C2078() {
      return C[2078] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "∣"
      });
    },
    get C2077() {
      return C[2077] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2078] || CT.C2078
      });
    },
    get C2080() {
      return C[2080] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1736] || CT.C1736,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C2079() {
      return C[2079] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2080] || CT.C2080,
        [S$.math$1]: C[2080] || CT.C2080
      });
    },
    get C2081() {
      return C[2081] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2080] || CT.C2080
      });
    },
    get C2083() {
      return C[2083] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[1847] || CT.C1847,
        [S$.replaceChar]: null
      });
    },
    get C2082() {
      return C[2082] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2083] || CT.C2083
      });
    },
    get C2084() {
      return C[2084] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2083] || CT.C2083,
        [S$.math$1]: C[2083] || CT.C2083
      });
    },
    get C2085() {
      return C[2085] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2053] || CT.C2053
      });
    },
    get C2087() {
      return C[2087] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "C"
      });
    },
    get C2086() {
      return C[2086] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2087] || CT.C2087,
        [S$.math$1]: C[2087] || CT.C2087
      });
    },
    get C2089() {
      return C[2089] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "H"
      });
    },
    get C2088() {
      return C[2088] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2089] || CT.C2089,
        [S$.math$1]: C[2089] || CT.C2089
      });
    },
    get C2091() {
      return C[2091] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "N"
      });
    },
    get C2090() {
      return C[2090] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2091] || CT.C2091,
        [S$.math$1]: C[2091] || CT.C2091
      });
    },
    get C2093() {
      return C[2093] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "P"
      });
    },
    get C2092() {
      return C[2092] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2093] || CT.C2093,
        [S$.math$1]: C[2093] || CT.C2093
      });
    },
    get C2095() {
      return C[2095] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "Q"
      });
    },
    get C2094() {
      return C[2094] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2095] || CT.C2095,
        [S$.math$1]: C[2095] || CT.C2095
      });
    },
    get C2097() {
      return C[2097] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "R"
      });
    },
    get C2096() {
      return C[2096] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2097] || CT.C2097,
        [S$.math$1]: C[2097] || CT.C2097
      });
    },
    get C2099() {
      return C[2099] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "Z"
      });
    },
    get C2098() {
      return C[2098] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2099] || CT.C2099,
        [S$.math$1]: C[2099] || CT.C2099
      });
    },
    get C2101() {
      return C[2101] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "h"
      });
    },
    get C2100() {
      return C[2100] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2101] || CT.C2101,
        [S$.math$1]: C[2101] || CT.C2101
      });
    },
    get C2103() {
      return C[2103] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "A"
      });
    },
    get C2102() {
      return C[2102] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2027] || CT.C2027,
        [S$.math$1]: C[2103] || CT.C2103
      });
    },
    get C2105() {
      return C[2105] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "B"
      });
    },
    get C2104() {
      return C[2104] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2029] || CT.C2029,
        [S$.math$1]: C[2105] || CT.C2105
      });
    },
    get C2107() {
      return C[2107] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "C"
      });
    },
    get C2108() {
      return C[2108] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "C"
      });
    },
    get C2106() {
      return C[2106] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2107] || CT.C2107,
        [S$.math$1]: C[2108] || CT.C2108
      });
    },
    get C2110() {
      return C[2110] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "D"
      });
    },
    get C2111() {
      return C[2111] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "D"
      });
    },
    get C2109() {
      return C[2109] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2110] || CT.C2110,
        [S$.math$1]: C[2111] || CT.C2111
      });
    },
    get C2113() {
      return C[2113] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "E"
      });
    },
    get C2112() {
      return C[2112] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2031] || CT.C2031,
        [S$.math$1]: C[2113] || CT.C2113
      });
    },
    get C2115() {
      return C[2115] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "F"
      });
    },
    get C2116() {
      return C[2116] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "F"
      });
    },
    get C2114() {
      return C[2114] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2115] || CT.C2115,
        [S$.math$1]: C[2116] || CT.C2116
      });
    },
    get C2118() {
      return C[2118] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "G"
      });
    },
    get C2119() {
      return C[2119] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "G"
      });
    },
    get C2117() {
      return C[2117] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2118] || CT.C2118,
        [S$.math$1]: C[2119] || CT.C2119
      });
    },
    get C2121() {
      return C[2121] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "H"
      });
    },
    get C2120() {
      return C[2120] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2035] || CT.C2035,
        [S$.math$1]: C[2121] || CT.C2121
      });
    },
    get C2123() {
      return C[2123] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "I"
      });
    },
    get C2122() {
      return C[2122] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2037] || CT.C2037,
        [S$.math$1]: C[2123] || CT.C2123
      });
    },
    get C2125() {
      return C[2125] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "J"
      });
    },
    get C2126() {
      return C[2126] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "J"
      });
    },
    get C2124() {
      return C[2124] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2125] || CT.C2125,
        [S$.math$1]: C[2126] || CT.C2126
      });
    },
    get C2128() {
      return C[2128] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "K"
      });
    },
    get C2127() {
      return C[2127] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2039] || CT.C2039,
        [S$.math$1]: C[2128] || CT.C2128
      });
    },
    get C2130() {
      return C[2130] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "L"
      });
    },
    get C2131() {
      return C[2131] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "L"
      });
    },
    get C2129() {
      return C[2129] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2130] || CT.C2130,
        [S$.math$1]: C[2131] || CT.C2131
      });
    },
    get C2133() {
      return C[2133] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "M"
      });
    },
    get C2132() {
      return C[2132] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2041] || CT.C2041,
        [S$.math$1]: C[2133] || CT.C2133
      });
    },
    get C2135() {
      return C[2135] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "N"
      });
    },
    get C2134() {
      return C[2134] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2043] || CT.C2043,
        [S$.math$1]: C[2135] || CT.C2135
      });
    },
    get C2137() {
      return C[2137] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "O"
      });
    },
    get C2136() {
      return C[2136] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2045] || CT.C2045,
        [S$.math$1]: C[2137] || CT.C2137
      });
    },
    get C2139() {
      return C[2139] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "P"
      });
    },
    get C2138() {
      return C[2138] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2047] || CT.C2047,
        [S$.math$1]: C[2139] || CT.C2139
      });
    },
    get C2141() {
      return C[2141] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "Q"
      });
    },
    get C2142() {
      return C[2142] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "Q"
      });
    },
    get C2140() {
      return C[2140] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2141] || CT.C2141,
        [S$.math$1]: C[2142] || CT.C2142
      });
    },
    get C2144() {
      return C[2144] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "R"
      });
    },
    get C2145() {
      return C[2145] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "R"
      });
    },
    get C2143() {
      return C[2143] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2144] || CT.C2144,
        [S$.math$1]: C[2145] || CT.C2145
      });
    },
    get C2147() {
      return C[2147] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "S"
      });
    },
    get C2148() {
      return C[2148] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "S"
      });
    },
    get C2146() {
      return C[2146] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2147] || CT.C2147,
        [S$.math$1]: C[2148] || CT.C2148
      });
    },
    get C2150() {
      return C[2150] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "T"
      });
    },
    get C2149() {
      return C[2149] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2049] || CT.C2049,
        [S$.math$1]: C[2150] || CT.C2150
      });
    },
    get C2152() {
      return C[2152] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "U"
      });
    },
    get C2153() {
      return C[2153] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "U"
      });
    },
    get C2151() {
      return C[2151] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2152] || CT.C2152,
        [S$.math$1]: C[2153] || CT.C2153
      });
    },
    get C2155() {
      return C[2155] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "V"
      });
    },
    get C2156() {
      return C[2156] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "V"
      });
    },
    get C2154() {
      return C[2154] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2155] || CT.C2155,
        [S$.math$1]: C[2156] || CT.C2156
      });
    },
    get C2158() {
      return C[2158] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "W"
      });
    },
    get C2159() {
      return C[2159] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "W"
      });
    },
    get C2157() {
      return C[2157] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2158] || CT.C2158,
        [S$.math$1]: C[2159] || CT.C2159
      });
    },
    get C2161() {
      return C[2161] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "X"
      });
    },
    get C2160() {
      return C[2160] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2051] || CT.C2051,
        [S$.math$1]: C[2161] || CT.C2161
      });
    },
    get C2163() {
      return C[2163] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "Y"
      });
    },
    get C2164() {
      return C[2164] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "Y"
      });
    },
    get C2162() {
      return C[2162] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2163] || CT.C2163,
        [S$.math$1]: C[2164] || CT.C2164
      });
    },
    get C2166() {
      return C[2166] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "Z"
      });
    },
    get C2165() {
      return C[2165] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2033] || CT.C2033,
        [S$.math$1]: C[2166] || CT.C2166
      });
    },
    get C2168() {
      return C[2168] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "a"
      });
    },
    get C2169() {
      return C[2169] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "a"
      });
    },
    get C2167() {
      return C[2167] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2168] || CT.C2168,
        [S$.math$1]: C[2169] || CT.C2169
      });
    },
    get C2171() {
      return C[2171] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "b"
      });
    },
    get C2172() {
      return C[2172] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "b"
      });
    },
    get C2170() {
      return C[2170] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2171] || CT.C2171,
        [S$.math$1]: C[2172] || CT.C2172
      });
    },
    get C2174() {
      return C[2174] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "c"
      });
    },
    get C2175() {
      return C[2175] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "c"
      });
    },
    get C2173() {
      return C[2173] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2174] || CT.C2174,
        [S$.math$1]: C[2175] || CT.C2175
      });
    },
    get C2177() {
      return C[2177] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "d"
      });
    },
    get C2178() {
      return C[2178] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "d"
      });
    },
    get C2176() {
      return C[2176] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2177] || CT.C2177,
        [S$.math$1]: C[2178] || CT.C2178
      });
    },
    get C2180() {
      return C[2180] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "e"
      });
    },
    get C2181() {
      return C[2181] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "e"
      });
    },
    get C2179() {
      return C[2179] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2180] || CT.C2180,
        [S$.math$1]: C[2181] || CT.C2181
      });
    },
    get C2183() {
      return C[2183] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "f"
      });
    },
    get C2184() {
      return C[2184] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "f"
      });
    },
    get C2182() {
      return C[2182] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2183] || CT.C2183,
        [S$.math$1]: C[2184] || CT.C2184
      });
    },
    get C2186() {
      return C[2186] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "g"
      });
    },
    get C2187() {
      return C[2187] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "g"
      });
    },
    get C2185() {
      return C[2185] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2186] || CT.C2186,
        [S$.math$1]: C[2187] || CT.C2187
      });
    },
    get C2189() {
      return C[2189] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "h"
      });
    },
    get C2188() {
      return C[2188] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2189] || CT.C2189,
        [S$.math$1]: C[2101] || CT.C2101
      });
    },
    get C2191() {
      return C[2191] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "i"
      });
    },
    get C2192() {
      return C[2192] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "i"
      });
    },
    get C2190() {
      return C[2190] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2191] || CT.C2191,
        [S$.math$1]: C[2192] || CT.C2192
      });
    },
    get C2194() {
      return C[2194] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "j"
      });
    },
    get C2195() {
      return C[2195] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "j"
      });
    },
    get C2193() {
      return C[2193] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2194] || CT.C2194,
        [S$.math$1]: C[2195] || CT.C2195
      });
    },
    get C2197() {
      return C[2197] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "k"
      });
    },
    get C2198() {
      return C[2198] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "k"
      });
    },
    get C2196() {
      return C[2196] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2197] || CT.C2197,
        [S$.math$1]: C[2198] || CT.C2198
      });
    },
    get C2200() {
      return C[2200] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "l"
      });
    },
    get C2201() {
      return C[2201] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "l"
      });
    },
    get C2199() {
      return C[2199] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2200] || CT.C2200,
        [S$.math$1]: C[2201] || CT.C2201
      });
    },
    get C2203() {
      return C[2203] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "m"
      });
    },
    get C2204() {
      return C[2204] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "m"
      });
    },
    get C2202() {
      return C[2202] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2203] || CT.C2203,
        [S$.math$1]: C[2204] || CT.C2204
      });
    },
    get C2206() {
      return C[2206] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "n"
      });
    },
    get C2207() {
      return C[2207] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "n"
      });
    },
    get C2205() {
      return C[2205] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2206] || CT.C2206,
        [S$.math$1]: C[2207] || CT.C2207
      });
    },
    get C2209() {
      return C[2209] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "o"
      });
    },
    get C2210() {
      return C[2210] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "o"
      });
    },
    get C2208() {
      return C[2208] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2209] || CT.C2209,
        [S$.math$1]: C[2210] || CT.C2210
      });
    },
    get C2212() {
      return C[2212] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "p"
      });
    },
    get C2213() {
      return C[2213] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "p"
      });
    },
    get C2211() {
      return C[2211] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2212] || CT.C2212,
        [S$.math$1]: C[2213] || CT.C2213
      });
    },
    get C2215() {
      return C[2215] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "q"
      });
    },
    get C2216() {
      return C[2216] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "q"
      });
    },
    get C2214() {
      return C[2214] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2215] || CT.C2215,
        [S$.math$1]: C[2216] || CT.C2216
      });
    },
    get C2218() {
      return C[2218] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "r"
      });
    },
    get C2219() {
      return C[2219] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "r"
      });
    },
    get C2217() {
      return C[2217] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2218] || CT.C2218,
        [S$.math$1]: C[2219] || CT.C2219
      });
    },
    get C2221() {
      return C[2221] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "s"
      });
    },
    get C2222() {
      return C[2222] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "s"
      });
    },
    get C2220() {
      return C[2220] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2221] || CT.C2221,
        [S$.math$1]: C[2222] || CT.C2222
      });
    },
    get C2224() {
      return C[2224] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "t"
      });
    },
    get C2225() {
      return C[2225] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "t"
      });
    },
    get C2223() {
      return C[2223] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2224] || CT.C2224,
        [S$.math$1]: C[2225] || CT.C2225
      });
    },
    get C2227() {
      return C[2227] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "u"
      });
    },
    get C2228() {
      return C[2228] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "u"
      });
    },
    get C2226() {
      return C[2226] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2227] || CT.C2227,
        [S$.math$1]: C[2228] || CT.C2228
      });
    },
    get C2230() {
      return C[2230] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "v"
      });
    },
    get C2231() {
      return C[2231] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "v"
      });
    },
    get C2229() {
      return C[2229] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2230] || CT.C2230,
        [S$.math$1]: C[2231] || CT.C2231
      });
    },
    get C2233() {
      return C[2233] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "w"
      });
    },
    get C2234() {
      return C[2234] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "w"
      });
    },
    get C2232() {
      return C[2232] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2233] || CT.C2233,
        [S$.math$1]: C[2234] || CT.C2234
      });
    },
    get C2236() {
      return C[2236] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "x"
      });
    },
    get C2237() {
      return C[2237] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "x"
      });
    },
    get C2235() {
      return C[2235] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2236] || CT.C2236,
        [S$.math$1]: C[2237] || CT.C2237
      });
    },
    get C2239() {
      return C[2239] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "y"
      });
    },
    get C2240() {
      return C[2240] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "y"
      });
    },
    get C2238() {
      return C[2238] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2239] || CT.C2239,
        [S$.math$1]: C[2240] || CT.C2240
      });
    },
    get C2242() {
      return C[2242] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "z"
      });
    },
    get C2243() {
      return C[2243] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "z"
      });
    },
    get C2241() {
      return C[2241] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2242] || CT.C2242,
        [S$.math$1]: C[2243] || CT.C2243
      });
    },
    get C2245() {
      return C[2245] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "0"
      });
    },
    get C2246() {
      return C[2246] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "0"
      });
    },
    get C2244() {
      return C[2244] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2245] || CT.C2245,
        [S$.math$1]: C[2246] || CT.C2246
      });
    },
    get C2248() {
      return C[2248] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "1"
      });
    },
    get C2249() {
      return C[2249] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "1"
      });
    },
    get C2247() {
      return C[2247] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2248] || CT.C2248,
        [S$.math$1]: C[2249] || CT.C2249
      });
    },
    get C2251() {
      return C[2251] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "2"
      });
    },
    get C2252() {
      return C[2252] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "2"
      });
    },
    get C2250() {
      return C[2250] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2251] || CT.C2251,
        [S$.math$1]: C[2252] || CT.C2252
      });
    },
    get C2254() {
      return C[2254] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "3"
      });
    },
    get C2255() {
      return C[2255] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "3"
      });
    },
    get C2253() {
      return C[2253] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2254] || CT.C2254,
        [S$.math$1]: C[2255] || CT.C2255
      });
    },
    get C2257() {
      return C[2257] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "4"
      });
    },
    get C2258() {
      return C[2258] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "4"
      });
    },
    get C2256() {
      return C[2256] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2257] || CT.C2257,
        [S$.math$1]: C[2258] || CT.C2258
      });
    },
    get C2260() {
      return C[2260] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "5"
      });
    },
    get C2261() {
      return C[2261] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "5"
      });
    },
    get C2259() {
      return C[2259] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2260] || CT.C2260,
        [S$.math$1]: C[2261] || CT.C2261
      });
    },
    get C2263() {
      return C[2263] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "6"
      });
    },
    get C2264() {
      return C[2264] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "6"
      });
    },
    get C2262() {
      return C[2262] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2263] || CT.C2263,
        [S$.math$1]: C[2264] || CT.C2264
      });
    },
    get C2266() {
      return C[2266] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "7"
      });
    },
    get C2267() {
      return C[2267] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "7"
      });
    },
    get C2265() {
      return C[2265] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2266] || CT.C2266,
        [S$.math$1]: C[2267] || CT.C2267
      });
    },
    get C2269() {
      return C[2269] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "8"
      });
    },
    get C2270() {
      return C[2270] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "8"
      });
    },
    get C2268() {
      return C[2268] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2269] || CT.C2269,
        [S$.math$1]: C[2270] || CT.C2270
      });
    },
    get C2272() {
      return C[2272] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "9"
      });
    },
    get C2273() {
      return C[2273] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[264] || CT.C264,
        [S$.replaceChar]: "9"
      });
    },
    get C2271() {
      return C[2271] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2272] || CT.C2272,
        [S$.math$1]: C[2273] || CT.C2273
      });
    },
    get C2275() {
      return C[2275] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1743] || CT.C1743,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C2274() {
      return C[2274] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2275] || CT.C2275,
        [S$.math$1]: C[2275] || CT.C2275
      });
    },
    get C2277() {
      return C[2277] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1743] || CT.C1743,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: " "
      });
    },
    get C2276() {
      return C[2276] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2277] || CT.C2277,
        [S$.math$1]: C[2277] || CT.C2277
      });
    },
    get C2278() {
      return C[2278] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: null
      });
    },
    get C2280() {
      return C[2280] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[1239] || CT.C1239,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: "’"
      });
    },
    get C2279() {
      return C[2279] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2280] || CT.C2280,
        [S$.math$1]: null
      });
    },
    get C2282() {
      return C[2282] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[184] || CT.C184,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "┌"
      });
    },
    get C2281() {
      return C[2281] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2282] || CT.C2282
      });
    },
    get C2284() {
      return C[2284] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[180] || CT.C180,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "┐"
      });
    },
    get C2283() {
      return C[2283] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2284] || CT.C2284
      });
    },
    get C2286() {
      return C[2286] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[184] || CT.C184,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "└"
      });
    },
    get C2285() {
      return C[2285] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2286] || CT.C2286
      });
    },
    get C2288() {
      return C[2288] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[180] || CT.C180,
        [S$.defaultFont]: C[263] || CT.C263,
        [S$.replaceChar]: "┘"
      });
    },
    get C2287() {
      return C[2287] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2288] || CT.C2288
      });
    },
    get C2289() {
      return C[2289] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1973] || CT.C1973,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[1971] || CT.C1971
      });
    },
    get C2291() {
      return C[2291] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: null,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: null
      });
    },
    get C2290() {
      return C[2290] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2291] || CT.C2291,
        [S$.math$1]: C[1984] || CT.C1984
      });
    },
    get C2292() {
      return C[2292] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1973] || CT.C1973,
        [S$.text$1]: null,
        [S$.math$1]: C[1984] || CT.C1984
      });
    },
    get C2293() {
      return C[2293] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1977] || CT.C1977,
        [S$.text$1]: null,
        [S$.math$1]: C[1984] || CT.C1984
      });
    },
    get C2294() {
      return C[2294] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: C[1973] || CT.C1973,
        [S$.text$1]: null,
        [S$.math$1]: C[2023] || CT.C2023
      });
    },
    get C2296() {
      return C[2296] = dart.const({
        __proto__: symbols$.RenderConfig.prototype,
        [S$.defaultType]: C[179] || CT.C179,
        [S$.defaultFont]: C[259] || CT.C259,
        [S$.replaceChar]: ""
      });
    },
    get C2295() {
      return C[2295] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2296] || CT.C2296
      });
    },
    get C2297() {
      return C[2297] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: null,
        [S$.math$1]: C[2291] || CT.C2291
      });
    },
    get C2298() {
      return C[2298] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2291] || CT.C2291,
        [S$.math$1]: C[2291] || CT.C2291
      });
    },
    get C2299() {
      return C[2299] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[1969] || CT.C1969,
        [S$.math$1]: C[2291] || CT.C2291
      });
    },
    get C2300() {
      return C[2300] = dart.const({
        __proto__: symbols$.SymbolRenderConfig.prototype,
        [S$.variantForm$3]: null,
        [S$.text$1]: C[2291] || CT.C2291,
        [S$.math$1]: null
      });
    },
    get C1967() {
      return C[1967] = dart.constMap(T$.StringL(), T$.SymbolRenderConfigL(), ["0", C[1968] || CT.C1968, "1", C[1968] || CT.C1968, "2", C[1968] || CT.C1968, "3", C[1968] || CT.C1968, "4", C[1968] || CT.C1968, "5", C[1968] || CT.C1968, "6", C[1968] || CT.C1968, "7", C[1968] || CT.C1968, "8", C[1968] || CT.C1968, "9", C[1968] || CT.C1968, "≡", C[1970] || CT.C1970, "≺", C[1970] || CT.C1970, "≻", C[1970] || CT.C1970, "∼", C[1972] || CT.C1972, "⪯", C[1970] || CT.C1970, "⪰", C[1970] || CT.C1970, "≃", C[1970] || CT.C1970, "∣", C[1972] || CT.C1972, "≪", C[1970] || CT.C1970, "≫", C[1970] || CT.C1970, "≍", C[1970] || CT.C1970, "⋈", C[1970] || CT.C1970, "⌣", C[1972] || CT.C1972, "⊑", C[1970] || CT.C1970, "⊒", C[1970] || CT.C1970, "≐", C[1970] || CT.C1970, "⌢", C[1972] || CT.C1972, "∋", C[1970] || CT.C1970, "∝", C[1972] || CT.C1972, "⊢", C[1970] || CT.C1970, "⊣", C[1970] || CT.C1970, "ℵ", C[1975] || CT.C1975, "∀", C[1975] || CT.C1975, "ℏ", C[1976] || CT.C1976, "∃", C[1975] || CT.C1975, "∇", C[1975] || CT.C1975, "♭", C[1975] || CT.C1975, "ℓ", C[1975] || CT.C1975, "♮", C[1975] || CT.C1975, "♣", C[1975] || CT.C1975, "℘", C[1975] || CT.C1975, "♯", C[1975] || CT.C1975, "♢", C[1975] || CT.C1975, "ℜ", C[1975] || CT.C1975, "♡", C[1975] || CT.C1975, "ℑ", C[1975] || CT.C1975, "♠", C[1975] || CT.C1975, "⎱", C[1979] || CT.C1979, "⎰", C[1981] || CT.C1981, "⟯", C[1979] || CT.C1979, "⟮", C[1981] || CT.C1981, "∓", C[1983] || CT.C1983, "⊖", C[1983] || CT.C1983, "⊎", C[1983] || CT.C1983, "⊓", C[1983] || CT.C1983, "⊔", C[1983] || CT.C1983, "≀", C[1983] || CT.C1983, "⟵", C[1970] || CT.C1970, "⇐", C[1970] || CT.C1970, "⟸", C[1970] || CT.C1970, "⟶", C[1970] || CT.C1970, "⇒", C[1970] || CT.C1970, "⟹", C[1970] || CT.C1970, "↔", C[1970] || CT.C1970, "⟷", C[1970] || CT.C1970, "⇔", C[1970] || CT.C1970, "⟺", C[1970] || CT.C1970, "↦", C[1970] || CT.C1970, "⟼", C[1970] || CT.C1970, "↗", C[1970] || CT.C1970, "↩", C[1970] || CT.C1970, "↪", C[1970] || CT.C1970, "↘", C[1970] || CT.C1970, "↼", C[1970] || CT.C1970, "⇀", C[1970] || CT.C1970, "↙", C[1970] || CT.C1970, "↽", C[1970] || CT.C1970, "⇁", C[1970] || CT.C1970, "↖", C[1970] || CT.C1970, "⇌", C[1970] || CT.C1970, "≮", C[1973] || CT.C1973, "⪇", C[1985] || CT.C1985, "≨", C[1988] || CT.C1988, "⋦", C[1973] || CT.C1973, "⪉", C[1973] || CT.C1973, "⊀", C[1973] || CT.C1973, "⋠", C[1973] || CT.C1973, "⋨", C[1973] || CT.C1973, "⪹", C[1973] || CT.C1973, "≁", C[1973] || CT.C1973, "∤", C[1991] || CT.C1991, "⊬", C[1973] || CT.C1973, "⊭", C[1973] || CT.C1973, "⋬", C[1973] || CT.C1973, "⊊", C[1994] || CT.C1994, "⫋", C[1997] || CT.C1997, "≯", C[1973] || CT.C1973, "⪈", C[2000] || CT.C2000, "≩", C[2003] || CT.C2003, "⋧", C[1973] || CT.C1973, "⪊", C[1973] || CT.C1973, "⊁", C[1973] || CT.C1973, "⋡", C[1973] || CT.C1973, "⋩", C[1973] || CT.C1973, "⪺", C[1973] || CT.C1973, "≆", C[1973] || CT.C1973, "∦", C[2006] || CT.C2006, "⊯", C[1973] || CT.C1973, "⋭", C[1973] || CT.C1973, "⊋", C[2009] || CT.C2009, "⫌", C[2012] || CT.C2012, "⊮", C[1973] || CT.C1973, "⪵", C[1973] || CT.C1973, "⪶", C[1973] || CT.C1973, "↚", C[1973] || CT.C1973, "↛", C[1973] || CT.C1973, "⇍", C[1973] || CT.C1973, "⇏", C[1973] || CT.C1973, "↮", C[1973] || CT.C1973, "⇎", C[1973] || CT.C1973, "∡", C[1977] || CT.C1977, "Ⅎ", C[1977] || CT.C1977, "⅁", C[1977] || CT.C1977, "∢", C[1977] || CT.C1977, "∁", C[1977] || CT.C1977, "ð", C[2015] || CT.C2015, "¥", C[2016] || CT.C2016, "✓", C[2016] || CT.C2016, "ℶ", C[1977] || CT.C1977, "ℸ", C[1977] || CT.C1977, "ℷ", C[1977] || CT.C1977, "ϝ", C[1977] || CT.C1977, "┌", C[2017] || CT.C2017, "┐", C[2019] || CT.C2019, "└", C[2017] || CT.C2017, "┘", C[2019] || CT.C2019, "≦", C[1973] || CT.C1973, "⩽", C[1973] || CT.C1973, "⪕", C[1973] || CT.C1973, "≲", C[1973] || CT.C1973, "⪅", C[1973] || CT.C1973, "≊", C[1973] || CT.C1973, "⋘", C[1973] || CT.C1973, "≶", C[1973] || CT.C1973, "⋚", C[1973] || CT.C1973, "⪋", C[1973] || CT.C1973, "≓", C[1973] || CT.C1973, "≒", C[1973] || CT.C1973, "∽", C[1973] || CT.C1973, "⋍", C[1973] || CT.C1973, "⫅", C[1973] || CT.C1973, "⋐", C[1973] || CT.C1973, "⊏", C[1973] || CT.C1973, "≼", C[1973] || CT.C1973, "⋞", C[1973] || CT.C1973, "≾", C[1973] || CT.C1973, "⪷", C[1973] || CT.C1973, "⊨", C[2021] || CT.C2021, "⊪", C[1973] || CT.C1973, "≏", C[1973] || CT.C1973, "≎", C[1973] || CT.C1973, "≧", C[1973] || CT.C1973, "⩾", C[1973] || CT.C1973, "⪖", C[1973] || CT.C1973, "≳", C[1973] || CT.C1973, "⪆", C[1973] || CT.C1973, "⋙", C[1973] || CT.C1973, "≷", C[1973] || CT.C1973, "⋛", C[1973] || CT.C1973, "⪌", C[1973] || CT.C1973, "≖", C[1973] || CT.C1973, "≗", C[1973] || CT.C1973, "≜", C[1973] || CT.C1973, "⫆", C[1973] || CT.C1973, "⋑", C[1973] || CT.C1973, "⊐", C[1973] || CT.C1973, "≽", C[1973] || CT.C1973, "⋟", C[1973] || CT.C1973, "≿", C[1973] || CT.C1973, "⪸", C[1973] || CT.C1973, "⊩", C[1973] || CT.C1973, "≬", C[1973] || CT.C1973, "⋔", C[1973] || CT.C1973, "∴", C[1973] || CT.C1973, "∵", C[1973] || CT.C1973, "≂", C[1973] || CT.C1973, "≑", C[1973] || CT.C1973, "∔", C[2022] || CT.C2022, "⋒", C[2022] || CT.C2022, "⋓", C[2022] || CT.C2022, "⩞", C[2022] || CT.C2022, "⊟", C[2022] || CT.C2022, "⊞", C[2022] || CT.C2022, "⋇", C[2022] || CT.C2022, "⋉", C[2022] || CT.C2022, "⋊", C[2022] || CT.C2022, "⋋", C[2022] || CT.C2022, "⋌", C[2022] || CT.C2022, "⋏", C[2022] || CT.C2022, "⋎", C[2022] || CT.C2022, "⊝", C[2022] || CT.C2022, "⊛", C[2022] || CT.C2022, "⊺", C[2022] || CT.C2022, "⊠", C[2022] || CT.C2022, "⇢", C[1973] || CT.C1973, "⇠", C[1973] || CT.C1973, "⇇", C[1973] || CT.C1973, "⇆", C[1973] || CT.C1973, "⇚", C[1973] || CT.C1973, "↞", C[1973] || CT.C1973, "↢", C[1973] || CT.C1973, "↫", C[1973] || CT.C1973, "⇋", C[1973] || CT.C1973, "↶", C[1973] || CT.C1973, "↺", C[1973] || CT.C1973, "↰", C[1973] || CT.C1973, "⇈", C[1973] || CT.C1973, "↿", C[1973] || CT.C1973, "⇃", C[1973] || CT.C1973, "⊸", C[1973] || CT.C1973, "↭", C[1973] || CT.C1973, "⇉", C[1973] || CT.C1973, "⇄", C[1973] || CT.C1973, "↠", C[1973] || CT.C1973, "↣", C[1973] || CT.C1973, "↬", C[1973] || CT.C1973, "↷", C[1973] || CT.C1973, "↻", C[1973] || CT.C1973, "↱", C[1973] || CT.C1973, "⇊", C[1973] || CT.C1973, "↾", C[1973] || CT.C1973, "⇂", C[1973] || CT.C1973, "⇝", C[1973] || CT.C1973, "⇛", C[1973] || CT.C1973, "`", C[2024] || CT.C2024, "∠", C[1975] || CT.C1975, "∞", C[1975] || CT.C1975, "Γ", C[1975] || CT.C1975, "Δ", C[1975] || CT.C1975, "Θ", C[1975] || CT.C1975, "Λ", C[1975] || CT.C1975, "Ξ", C[1975] || CT.C1975, "Π", C[1975] || CT.C1975, "Σ", C[1975] || CT.C1975, "Υ", C[1975] || CT.C1975, "Φ", C[1975] || CT.C1975, "Ψ", C[1975] || CT.C1975, "Ω", C[1975] || CT.C1975, "Α", C[2026] || CT.C2026, "Β", C[2028] || CT.C2028, "Ε", C[2030] || CT.C2030, "Ζ", C[2032] || CT.C2032, "Η", C[2034] || CT.C2034, "Ι", C[2036] || CT.C2036, "Κ", C[2038] || CT.C2038, "Μ", C[2040] || CT.C2040, "Ν", C[2042] || CT.C2042, "Ο", C[2044] || CT.C2044, "Ρ", C[2046] || CT.C2046, "Τ", C[2048] || CT.C2048, "Χ", C[2050] || CT.C2050, "¬", C[1975] || CT.C1975, "α", C[2052] || CT.C2052, "β", C[2052] || CT.C2052, "γ", C[2052] || CT.C2052, "δ", C[2052] || CT.C2052, "ϵ", C[2052] || CT.C2052, "ζ", C[2052] || CT.C2052, "η", C[2052] || CT.C2052, "θ", C[2052] || CT.C2052, "ι", C[2052] || CT.C2052, "κ", C[2052] || CT.C2052, "λ", C[2052] || CT.C2052, "μ", C[2052] || CT.C2052, "ν", C[2052] || CT.C2052, "ξ", C[2052] || CT.C2052, "ο", C[2052] || CT.C2052, "π", C[2052] || CT.C2052, "ρ", C[2052] || CT.C2052, "σ", C[2052] || CT.C2052, "τ", C[2052] || CT.C2052, "υ", C[2052] || CT.C2052, "ϕ", C[2052] || CT.C2052, "χ", C[2052] || CT.C2052, "ψ", C[2052] || CT.C2052, "ω", C[2052] || CT.C2052, "ε", C[2052] || CT.C2052, "ϑ", C[2052] || CT.C2052, "ϖ", C[2052] || CT.C2052, "ϱ", C[2052] || CT.C2052, "ς", C[2052] || CT.C2052, "φ", C[2052] || CT.C2052, "*", C[2054] || CT.C2054, "+", C[2056] || CT.C2056, "-", C[2057] || CT.C2057, "⋅", C[2059] || CT.C2059, "÷", C[1983] || CT.C1983, "±", C[1983] || CT.C1983, "×", C[1983] || CT.C1983, "∩", C[1983] || CT.C1983, "∪", C[1983] || CT.C1983, "∧", C[1983] || CT.C1983, "∨", C[1983] || CT.C1983, "(", C[2060] || CT.C2060, "[", C[2060] || CT.C2060, "⟨", C[1981] || CT.C1981, ")", C[2061] || CT.C2061, "]", C[2061] || CT.C2061, "?", C[2061] || CT.C2061, "!", C[2061] || CT.C2061, "⟩", C[1979] || CT.C1979, "=", C[2062] || CT.C2062, "<", C[2062] || CT.C2062, ">", C[2062] || CT.C2062, ":", C[2062] || CT.C2062, "≈", C[1972] || CT.C1972, "≅", C[1970] || CT.C1970, "≥", C[1970] || CT.C1970, "∈", C[1970] || CT.C1970, "⊂", C[1970] || CT.C1970, "⊃", C[1970] || CT.C1970, "⊆", C[1970] || CT.C1970, "⊇", C[1970] || CT.C1970, "⊈", C[2063] || CT.C2063, "⊉", C[2066] || CT.C2066, "←", C[1970] || CT.C1970, "≤", C[1970] || CT.C1970, "→", C[1970] || CT.C1970, "≱", C[2069] || CT.C2069, "≰", C[2072] || CT.C2072, ",", C[2075] || CT.C2075, ";", C[2075] || CT.C2075, "⊼", C[2022] || CT.C2022, "⊻", C[2022] || CT.C2022, "⊙", C[1983] || CT.C1983, "⊕", C[1983] || CT.C1983, "⊗", C[1983] || CT.C1983, "∂", C[1975] || CT.C1975, "⊘", C[1983] || CT.C1983, "⊚", C[2022] || CT.C2022, "⊡", C[2022] || CT.C2022, "⌊", C[1981] || CT.C1981, "⌋", C[1979] || CT.C1979, "⌈", C[1981] || CT.C1981, "⌉", C[1979] || CT.C1979, "|", C[2077] || CT.C2077, "↑", C[1970] || CT.C1970, "⇑", C[1970] || CT.C1970, "↓", C[1970] || CT.C1970, "⇓", C[1970] || CT.C1970, "↕", C[1970] || CT.C1970, "⇕", C[1970] || CT.C1970, "…", C[2079] || CT.C2079, "⋯", C[2081] || CT.C2081, "⋱", C[2081] || CT.C2081, "ı", C[2082] || CT.C2082, "ȷ", C[2082] || CT.C2082, "°", C[1968] || CT.C1968, "£", C[2084] || CT.C2084, "/", C[1968] || CT.C1968, "@", C[1968] || CT.C1968, ".", C[1968] || CT.C1968, "\"", C[1968] || CT.C1968, "A", C[2085] || CT.C2085, "B", C[2085] || CT.C2085, "C", C[2085] || CT.C2085, "D", C[2085] || CT.C2085, "E", C[2085] || CT.C2085, "F", C[2085] || CT.C2085, "G", C[2085] || CT.C2085, "H", C[2085] || CT.C2085, "I", C[2085] || CT.C2085, "J", C[2085] || CT.C2085, "K", C[2085] || CT.C2085, "L", C[2085] || CT.C2085, "M", C[2085] || CT.C2085, "N", C[2085] || CT.C2085, "O", C[2085] || CT.C2085, "P", C[2085] || CT.C2085, "Q", C[2085] || CT.C2085, "R", C[2085] || CT.C2085, "S", C[2085] || CT.C2085, "T", C[2085] || CT.C2085, "U", C[2085] || CT.C2085, "V", C[2085] || CT.C2085, "W", C[2085] || CT.C2085, "X", C[2085] || CT.C2085, "Y", C[2085] || CT.C2085, "Z", C[2085] || CT.C2085, "a", C[2085] || CT.C2085, "b", C[2085] || CT.C2085, "c", C[2085] || CT.C2085, "d", C[2085] || CT.C2085, "e", C[2085] || CT.C2085, "f", C[2085] || CT.C2085, "g", C[2085] || CT.C2085, "h", C[2085] || CT.C2085, "i", C[2085] || CT.C2085, "j", C[2085] || CT.C2085, "k", C[2085] || CT.C2085, "l", C[2085] || CT.C2085, "m", C[2085] || CT.C2085, "n", C[2085] || CT.C2085, "o", C[2085] || CT.C2085, "p", C[2085] || CT.C2085, "q", C[2085] || CT.C2085, "r", C[2085] || CT.C2085, "s", C[2085] || CT.C2085, "t", C[2085] || CT.C2085, "u", C[2085] || CT.C2085, "v", C[2085] || CT.C2085, "w", C[2085] || CT.C2085, "x", C[2085] || CT.C2085, "y", C[2085] || CT.C2085, "z", C[2085] || CT.C2085, "ℂ", C[2086] || CT.C2086, "ℍ", C[2088] || CT.C2088, "ℕ", C[2090] || CT.C2090, "ℙ", C[2092] || CT.C2092, "ℚ", C[2094] || CT.C2094, "ℝ", C[2096] || CT.C2096, "ℤ", C[2098] || CT.C2098, "ℎ", C[2100] || CT.C2100, "𝐀", C[2102] || CT.C2102, "𝐴", C[2102] || CT.C2102, "𝑨", C[2102] || CT.C2102, "𝔄", C[2102] || CT.C2102, "𝖠", C[2102] || CT.C2102, "𝗔", C[2102] || CT.C2102, "𝘈", C[2102] || CT.C2102, "𝙰", C[2102] || CT.C2102, "𝔸", C[2102] || CT.C2102, "𝒜", C[2102] || CT.C2102, "𝐁", C[2104] || CT.C2104, "𝐵", C[2104] || CT.C2104, "𝑩", C[2104] || CT.C2104, "𝔅", C[2104] || CT.C2104, "𝖡", C[2104] || CT.C2104, "𝗕", C[2104] || CT.C2104, "𝘉", C[2104] || CT.C2104, "𝙱", C[2104] || CT.C2104, "𝔹", C[2104] || CT.C2104, "𝒝", C[2104] || CT.C2104, "𝐂", C[2106] || CT.C2106, "𝐶", C[2106] || CT.C2106, "𝑪", C[2106] || CT.C2106, "𝔆", C[2106] || CT.C2106, "𝖢", C[2106] || CT.C2106, "𝗖", C[2106] || CT.C2106, "𝘊", C[2106] || CT.C2106, "𝙲", C[2106] || CT.C2106, "𝔺", C[2106] || CT.C2106, "𝒞", C[2106] || CT.C2106, "𝐃", C[2109] || CT.C2109, "𝐷", C[2109] || CT.C2109, "𝑫", C[2109] || CT.C2109, "𝔇", C[2109] || CT.C2109, "𝖣", C[2109] || CT.C2109, "𝗗", C[2109] || CT.C2109, "𝘋", C[2109] || CT.C2109, "𝙳", C[2109] || CT.C2109, "𝔻", C[2109] || CT.C2109, "𝒟", C[2109] || CT.C2109, "𝐄", C[2112] || CT.C2112, "𝐸", C[2112] || CT.C2112, "𝑬", C[2112] || CT.C2112, "𝔈", C[2112] || CT.C2112, "𝖤", C[2112] || CT.C2112, "𝗘", C[2112] || CT.C2112, "𝘌", C[2112] || CT.C2112, "𝙴", C[2112] || CT.C2112, "𝔼", C[2112] || CT.C2112, "𝒠", C[2112] || CT.C2112, "𝐅", C[2114] || CT.C2114, "𝐹", C[2114] || CT.C2114, "𝑭", C[2114] || CT.C2114, "𝔉", C[2114] || CT.C2114, "𝖥", C[2114] || CT.C2114, "𝗙", C[2114] || CT.C2114, "𝘍", C[2114] || CT.C2114, "𝙵", C[2114] || CT.C2114, "𝔽", C[2114] || CT.C2114, "𝒡", C[2114] || CT.C2114, "𝐆", C[2117] || CT.C2117, "𝐺", C[2117] || CT.C2117, "𝑮", C[2117] || CT.C2117, "𝔊", C[2117] || CT.C2117, "𝖦", C[2117] || CT.C2117, "𝗚", C[2117] || CT.C2117, "𝘎", C[2117] || CT.C2117, "𝙶", C[2117] || CT.C2117, "𝔾", C[2117] || CT.C2117, "𝒢", C[2117] || CT.C2117, "𝐇", C[2120] || CT.C2120, "𝐻", C[2120] || CT.C2120, "𝑯", C[2120] || CT.C2120, "𝔋", C[2120] || CT.C2120, "𝖧", C[2120] || CT.C2120, "𝗛", C[2120] || CT.C2120, "𝘏", C[2120] || CT.C2120, "𝙷", C[2120] || CT.C2120, "𝔿", C[2120] || CT.C2120, "𝒣", C[2120] || CT.C2120, "𝐈", C[2122] || CT.C2122, "𝐼", C[2122] || CT.C2122, "𝑰", C[2122] || CT.C2122, "𝔌", C[2122] || CT.C2122, "𝖨", C[2122] || CT.C2122, "𝗜", C[2122] || CT.C2122, "𝘐", C[2122] || CT.C2122, "𝙸", C[2122] || CT.C2122, "𝕀", C[2122] || CT.C2122, "𝒤", C[2122] || CT.C2122, "𝐉", C[2124] || CT.C2124, "𝐽", C[2124] || CT.C2124, "𝑱", C[2124] || CT.C2124, "𝔍", C[2124] || CT.C2124, "𝖩", C[2124] || CT.C2124, "𝗝", C[2124] || CT.C2124, "𝘑", C[2124] || CT.C2124, "𝙹", C[2124] || CT.C2124, "𝕁", C[2124] || CT.C2124, "𝒥", C[2124] || CT.C2124, "𝐊", C[2127] || CT.C2127, "𝐾", C[2127] || CT.C2127, "𝑲", C[2127] || CT.C2127, "𝔎", C[2127] || CT.C2127, "𝖪", C[2127] || CT.C2127, "𝗞", C[2127] || CT.C2127, "𝘒", C[2127] || CT.C2127, "𝙺", C[2127] || CT.C2127, "𝕂", C[2127] || CT.C2127, "𝒦", C[2127] || CT.C2127, "𝐋", C[2129] || CT.C2129, "𝐿", C[2129] || CT.C2129, "𝑳", C[2129] || CT.C2129, "𝔏", C[2129] || CT.C2129, "𝖫", C[2129] || CT.C2129, "𝗟", C[2129] || CT.C2129, "𝘓", C[2129] || CT.C2129, "𝙻", C[2129] || CT.C2129, "𝕃", C[2129] || CT.C2129, "𝒧", C[2129] || CT.C2129, "𝐌", C[2132] || CT.C2132, "𝑀", C[2132] || CT.C2132, "𝑴", C[2132] || CT.C2132, "𝔐", C[2132] || CT.C2132, "𝖬", C[2132] || CT.C2132, "𝗠", C[2132] || CT.C2132, "𝘔", C[2132] || CT.C2132, "𝙼", C[2132] || CT.C2132, "𝕄", C[2132] || CT.C2132, "𝒨", C[2132] || CT.C2132, "𝐍", C[2134] || CT.C2134, "𝑁", C[2134] || CT.C2134, "𝑵", C[2134] || CT.C2134, "𝔑", C[2134] || CT.C2134, "𝖭", C[2134] || CT.C2134, "𝗡", C[2134] || CT.C2134, "𝘕", C[2134] || CT.C2134, "𝙽", C[2134] || CT.C2134, "𝕅", C[2134] || CT.C2134, "𝒩", C[2134] || CT.C2134, "𝐎", C[2136] || CT.C2136, "𝑂", C[2136] || CT.C2136, "𝑶", C[2136] || CT.C2136, "𝔒", C[2136] || CT.C2136, "𝖮", C[2136] || CT.C2136, "𝗢", C[2136] || CT.C2136, "𝘖", C[2136] || CT.C2136, "𝙾", C[2136] || CT.C2136, "𝕆", C[2136] || CT.C2136, "𝒪", C[2136] || CT.C2136, "𝐏", C[2138] || CT.C2138, "𝑃", C[2138] || CT.C2138, "𝑷", C[2138] || CT.C2138, "𝔓", C[2138] || CT.C2138, "𝖯", C[2138] || CT.C2138, "𝗣", C[2138] || CT.C2138, "𝘗", C[2138] || CT.C2138, "𝙿", C[2138] || CT.C2138, "𝕇", C[2138] || CT.C2138, "𝒫", C[2138] || CT.C2138, "𝐐", C[2140] || CT.C2140, "𝑄", C[2140] || CT.C2140, "𝑸", C[2140] || CT.C2140, "𝔔", C[2140] || CT.C2140, "𝖰", C[2140] || CT.C2140, "𝗤", C[2140] || CT.C2140, "𝘘", C[2140] || CT.C2140, "𝚀", C[2140] || CT.C2140, "𝕈", C[2140] || CT.C2140, "𝒬", C[2140] || CT.C2140, "𝐑", C[2143] || CT.C2143, "𝑅", C[2143] || CT.C2143, "𝑹", C[2143] || CT.C2143, "𝔕", C[2143] || CT.C2143, "𝖱", C[2143] || CT.C2143, "𝗥", C[2143] || CT.C2143, "𝘙", C[2143] || CT.C2143, "𝚁", C[2143] || CT.C2143, "𝕉", C[2143] || CT.C2143, "𝒭", C[2143] || CT.C2143, "𝐒", C[2146] || CT.C2146, "𝑆", C[2146] || CT.C2146, "𝑺", C[2146] || CT.C2146, "𝔖", C[2146] || CT.C2146, "𝖲", C[2146] || CT.C2146, "𝗦", C[2146] || CT.C2146, "𝘚", C[2146] || CT.C2146, "𝚂", C[2146] || CT.C2146, "𝕊", C[2146] || CT.C2146, "𝒮", C[2146] || CT.C2146, "𝐓", C[2149] || CT.C2149, "𝑇", C[2149] || CT.C2149, "𝑻", C[2149] || CT.C2149, "𝔗", C[2149] || CT.C2149, "𝖳", C[2149] || CT.C2149, "𝗧", C[2149] || CT.C2149, "𝘛", C[2149] || CT.C2149, "𝚃", C[2149] || CT.C2149, "𝕋", C[2149] || CT.C2149, "𝒯", C[2149] || CT.C2149, "𝐔", C[2151] || CT.C2151, "𝑈", C[2151] || CT.C2151, "𝑼", C[2151] || CT.C2151, "𝔘", C[2151] || CT.C2151, "𝖴", C[2151] || CT.C2151, "𝗨", C[2151] || CT.C2151, "𝘜", C[2151] || CT.C2151, "𝚄", C[2151] || CT.C2151, "𝕌", C[2151] || CT.C2151, "𝒰", C[2151] || CT.C2151, "𝐕", C[2154] || CT.C2154, "𝑉", C[2154] || CT.C2154, "𝑽", C[2154] || CT.C2154, "𝔙", C[2154] || CT.C2154, "𝖵", C[2154] || CT.C2154, "𝗩", C[2154] || CT.C2154, "𝘝", C[2154] || CT.C2154, "𝚅", C[2154] || CT.C2154, "𝕍", C[2154] || CT.C2154, "𝒱", C[2154] || CT.C2154, "𝐖", C[2157] || CT.C2157, "𝑊", C[2157] || CT.C2157, "𝑾", C[2157] || CT.C2157, "𝔚", C[2157] || CT.C2157, "𝖶", C[2157] || CT.C2157, "𝗪", C[2157] || CT.C2157, "𝘞", C[2157] || CT.C2157, "𝚆", C[2157] || CT.C2157, "𝕎", C[2157] || CT.C2157, "𝒲", C[2157] || CT.C2157, "𝐗", C[2160] || CT.C2160, "𝑋", C[2160] || CT.C2160, "𝑿", C[2160] || CT.C2160, "𝔛", C[2160] || CT.C2160, "𝖷", C[2160] || CT.C2160, "𝗫", C[2160] || CT.C2160, "𝘟", C[2160] || CT.C2160, "𝚇", C[2160] || CT.C2160, "𝕏", C[2160] || CT.C2160, "𝒳", C[2160] || CT.C2160, "𝐘", C[2162] || CT.C2162, "𝑌", C[2162] || CT.C2162, "𝒀", C[2162] || CT.C2162, "𝔜", C[2162] || CT.C2162, "𝖸", C[2162] || CT.C2162, "𝗬", C[2162] || CT.C2162, "𝘠", C[2162] || CT.C2162, "𝚈", C[2162] || CT.C2162, "𝕐", C[2162] || CT.C2162, "𝒴", C[2162] || CT.C2162, "𝐙", C[2165] || CT.C2165, "𝑍", C[2165] || CT.C2165, "𝒁", C[2165] || CT.C2165, "𝔝", C[2165] || CT.C2165, "𝖹", C[2165] || CT.C2165, "𝗭", C[2165] || CT.C2165, "𝘡", C[2165] || CT.C2165, "𝚉", C[2165] || CT.C2165, "𝕑", C[2165] || CT.C2165, "𝒵", C[2165] || CT.C2165, "𝐚", C[2167] || CT.C2167, "𝑎", C[2167] || CT.C2167, "𝒂", C[2167] || CT.C2167, "𝔞", C[2167] || CT.C2167, "𝖺", C[2167] || CT.C2167, "𝗮", C[2167] || CT.C2167, "𝘢", C[2167] || CT.C2167, "𝚊", C[2167] || CT.C2167, "𝐛", C[2170] || CT.C2170, "𝑏", C[2170] || CT.C2170, "𝒃", C[2170] || CT.C2170, "𝔟", C[2170] || CT.C2170, "𝖻", C[2170] || CT.C2170, "𝗯", C[2170] || CT.C2170, "𝘣", C[2170] || CT.C2170, "𝚋", C[2170] || CT.C2170, "𝐜", C[2173] || CT.C2173, "𝑐", C[2173] || CT.C2173, "𝒄", C[2173] || CT.C2173, "𝔠", C[2173] || CT.C2173, "𝖼", C[2173] || CT.C2173, "𝗰", C[2173] || CT.C2173, "𝘤", C[2173] || CT.C2173, "𝚌", C[2173] || CT.C2173, "𝐝", C[2176] || CT.C2176, "𝑑", C[2176] || CT.C2176, "𝒅", C[2176] || CT.C2176, "𝔡", C[2176] || CT.C2176, "𝖽", C[2176] || CT.C2176, "𝗱", C[2176] || CT.C2176, "𝘥", C[2176] || CT.C2176, "𝚍", C[2176] || CT.C2176, "𝐞", C[2179] || CT.C2179, "𝑒", C[2179] || CT.C2179, "𝒆", C[2179] || CT.C2179, "𝔢", C[2179] || CT.C2179, "𝖾", C[2179] || CT.C2179, "𝗲", C[2179] || CT.C2179, "𝘦", C[2179] || CT.C2179, "𝚎", C[2179] || CT.C2179, "𝐟", C[2182] || CT.C2182, "𝑓", C[2182] || CT.C2182, "𝒇", C[2182] || CT.C2182, "𝔣", C[2182] || CT.C2182, "𝖿", C[2182] || CT.C2182, "𝗳", C[2182] || CT.C2182, "𝘧", C[2182] || CT.C2182, "𝚏", C[2182] || CT.C2182, "𝐠", C[2185] || CT.C2185, "𝑔", C[2185] || CT.C2185, "𝒈", C[2185] || CT.C2185, "𝔤", C[2185] || CT.C2185, "𝗀", C[2185] || CT.C2185, "𝗴", C[2185] || CT.C2185, "𝘨", C[2185] || CT.C2185, "𝚐", C[2185] || CT.C2185, "𝐡", C[2188] || CT.C2188, "𝑕", C[2188] || CT.C2188, "𝒉", C[2188] || CT.C2188, "𝔥", C[2188] || CT.C2188, "𝗁", C[2188] || CT.C2188, "𝗵", C[2188] || CT.C2188, "𝘩", C[2188] || CT.C2188, "𝚑", C[2188] || CT.C2188, "𝐢", C[2190] || CT.C2190, "𝑖", C[2190] || CT.C2190, "𝒊", C[2190] || CT.C2190, "𝔦", C[2190] || CT.C2190, "𝗂", C[2190] || CT.C2190, "𝗶", C[2190] || CT.C2190, "𝘪", C[2190] || CT.C2190, "𝚒", C[2190] || CT.C2190, "𝐣", C[2193] || CT.C2193, "𝑗", C[2193] || CT.C2193, "𝒋", C[2193] || CT.C2193, "𝔧", C[2193] || CT.C2193, "𝗃", C[2193] || CT.C2193, "𝗷", C[2193] || CT.C2193, "𝘫", C[2193] || CT.C2193, "𝚓", C[2193] || CT.C2193, "𝐤", C[2196] || CT.C2196, "𝑘", C[2196] || CT.C2196, "𝒌", C[2196] || CT.C2196, "𝔨", C[2196] || CT.C2196, "𝗄", C[2196] || CT.C2196, "𝗸", C[2196] || CT.C2196, "𝘬", C[2196] || CT.C2196, "𝚔", C[2196] || CT.C2196, "𝐥", C[2199] || CT.C2199, "𝑙", C[2199] || CT.C2199, "𝒍", C[2199] || CT.C2199, "𝔩", C[2199] || CT.C2199, "𝗅", C[2199] || CT.C2199, "𝗹", C[2199] || CT.C2199, "𝘭", C[2199] || CT.C2199, "𝚕", C[2199] || CT.C2199, "𝐦", C[2202] || CT.C2202, "𝑚", C[2202] || CT.C2202, "𝒎", C[2202] || CT.C2202, "𝔪", C[2202] || CT.C2202, "𝗆", C[2202] || CT.C2202, "𝗺", C[2202] || CT.C2202, "𝘮", C[2202] || CT.C2202, "𝚖", C[2202] || CT.C2202, "𝐧", C[2205] || CT.C2205, "𝑛", C[2205] || CT.C2205, "𝒏", C[2205] || CT.C2205, "𝔫", C[2205] || CT.C2205, "𝗇", C[2205] || CT.C2205, "𝗻", C[2205] || CT.C2205, "𝘯", C[2205] || CT.C2205, "𝚗", C[2205] || CT.C2205, "𝐨", C[2208] || CT.C2208, "𝑜", C[2208] || CT.C2208, "𝒐", C[2208] || CT.C2208, "𝔬", C[2208] || CT.C2208, "𝗈", C[2208] || CT.C2208, "𝗼", C[2208] || CT.C2208, "𝘰", C[2208] || CT.C2208, "𝚘", C[2208] || CT.C2208, "𝐩", C[2211] || CT.C2211, "𝑝", C[2211] || CT.C2211, "𝒑", C[2211] || CT.C2211, "𝔭", C[2211] || CT.C2211, "𝗉", C[2211] || CT.C2211, "𝗽", C[2211] || CT.C2211, "𝘱", C[2211] || CT.C2211, "𝚙", C[2211] || CT.C2211, "𝐪", C[2214] || CT.C2214, "𝑞", C[2214] || CT.C2214, "𝒒", C[2214] || CT.C2214, "𝔮", C[2214] || CT.C2214, "𝗊", C[2214] || CT.C2214, "𝗾", C[2214] || CT.C2214, "𝘲", C[2214] || CT.C2214, "𝚚", C[2214] || CT.C2214, "𝐫", C[2217] || CT.C2217, "𝑟", C[2217] || CT.C2217, "𝒓", C[2217] || CT.C2217, "𝔯", C[2217] || CT.C2217, "𝗋", C[2217] || CT.C2217, "𝗿", C[2217] || CT.C2217, "𝘳", C[2217] || CT.C2217, "𝚛", C[2217] || CT.C2217, "𝐬", C[2220] || CT.C2220, "𝑠", C[2220] || CT.C2220, "𝒔", C[2220] || CT.C2220, "𝔰", C[2220] || CT.C2220, "𝗌", C[2220] || CT.C2220, "𝘀", C[2220] || CT.C2220, "𝘴", C[2220] || CT.C2220, "𝚜", C[2220] || CT.C2220, "𝐭", C[2223] || CT.C2223, "𝑡", C[2223] || CT.C2223, "𝒕", C[2223] || CT.C2223, "𝔱", C[2223] || CT.C2223, "𝗍", C[2223] || CT.C2223, "𝘁", C[2223] || CT.C2223, "𝘵", C[2223] || CT.C2223, "𝚝", C[2223] || CT.C2223, "𝐮", C[2226] || CT.C2226, "𝑢", C[2226] || CT.C2226, "𝒖", C[2226] || CT.C2226, "𝔲", C[2226] || CT.C2226, "𝗎", C[2226] || CT.C2226, "𝘂", C[2226] || CT.C2226, "𝘶", C[2226] || CT.C2226, "𝚞", C[2226] || CT.C2226, "𝐯", C[2229] || CT.C2229, "𝑣", C[2229] || CT.C2229, "𝒗", C[2229] || CT.C2229, "𝔳", C[2229] || CT.C2229, "𝗏", C[2229] || CT.C2229, "𝘃", C[2229] || CT.C2229, "𝘷", C[2229] || CT.C2229, "𝚟", C[2229] || CT.C2229, "𝐰", C[2232] || CT.C2232, "𝑤", C[2232] || CT.C2232, "𝒘", C[2232] || CT.C2232, "𝔴", C[2232] || CT.C2232, "𝗐", C[2232] || CT.C2232, "𝘄", C[2232] || CT.C2232, "𝘸", C[2232] || CT.C2232, "𝚠", C[2232] || CT.C2232, "𝐱", C[2235] || CT.C2235, "𝑥", C[2235] || CT.C2235, "𝒙", C[2235] || CT.C2235, "𝔵", C[2235] || CT.C2235, "𝗑", C[2235] || CT.C2235, "𝘅", C[2235] || CT.C2235, "𝘹", C[2235] || CT.C2235, "𝚡", C[2235] || CT.C2235, "𝐲", C[2238] || CT.C2238, "𝑦", C[2238] || CT.C2238, "𝒚", C[2238] || CT.C2238, "𝔶", C[2238] || CT.C2238, "𝗒", C[2238] || CT.C2238, "𝘆", C[2238] || CT.C2238, "𝘺", C[2238] || CT.C2238, "𝚢", C[2238] || CT.C2238, "𝐳", C[2241] || CT.C2241, "𝑧", C[2241] || CT.C2241, "𝒛", C[2241] || CT.C2241, "𝔷", C[2241] || CT.C2241, "𝗓", C[2241] || CT.C2241, "𝘇", C[2241] || CT.C2241, "𝘻", C[2241] || CT.C2241, "𝚣", C[2241] || CT.C2241, "𝕜", C[2196] || CT.C2196, "𝟎", C[2244] || CT.C2244, "𝟢", C[2244] || CT.C2244, "𝟬", C[2244] || CT.C2244, "𝟶", C[2244] || CT.C2244, "𝟏", C[2247] || CT.C2247, "𝟣", C[2247] || CT.C2247, "𝟭", C[2247] || CT.C2247, "𝟷", C[2247] || CT.C2247, "𝟐", C[2250] || CT.C2250, "𝟤", C[2250] || CT.C2250, "𝟮", C[2250] || CT.C2250, "𝟸", C[2250] || CT.C2250, "𝟑", C[2253] || CT.C2253, "𝟥", C[2253] || CT.C2253, "𝟯", C[2253] || CT.C2253, "𝟹", C[2253] || CT.C2253, "𝟒", C[2256] || CT.C2256, "𝟦", C[2256] || CT.C2256, "𝟰", C[2256] || CT.C2256, "𝟺", C[2256] || CT.C2256, "𝟓", C[2259] || CT.C2259, "𝟧", C[2259] || CT.C2259, "𝟱", C[2259] || CT.C2259, "𝟻", C[2259] || CT.C2259, "𝟔", C[2262] || CT.C2262, "𝟨", C[2262] || CT.C2262, "𝟲", C[2262] || CT.C2262, "𝟼", C[2262] || CT.C2262, "𝟕", C[2265] || CT.C2265, "𝟩", C[2265] || CT.C2265, "𝟳", C[2265] || CT.C2265, "𝟽", C[2265] || CT.C2265, "𝟖", C[2268] || CT.C2268, "𝟪", C[2268] || CT.C2268, "𝟴", C[2268] || CT.C2268, "𝟾", C[2268] || CT.C2268, "𝟗", C[2271] || CT.C2271, "𝟫", C[2271] || CT.C2271, "𝟵", C[2271] || CT.C2271, "𝟿", C[2271] || CT.C2271, "Ç", C[2085] || CT.C2085, "Ð", C[2085] || CT.C2085, "Þ", C[2085] || CT.C2085, "ç", C[2085] || CT.C2085, "þ", C[2085] || CT.C2085, " ", C[2274] || CT.C2274, " ", C[2276] || CT.C2276, "§", C[2278] || CT.C2278, "¶", C[2278] || CT.C2278, "ß", C[2278] || CT.C2278, "æ", C[2278] || CT.C2278, "œ", C[2278] || CT.C2278, "ø", C[2278] || CT.C2278, "Æ", C[2278] || CT.C2278, "Œ", C[2278] || CT.C2278, "Ø", C[2278] || CT.C2278, "'", C[2279] || CT.C2279, "–", C[2278] || CT.C2278, "—", C[2278] || CT.C2278, "‘", C[2278] || CT.C2278, "’", C[2278] || CT.C2278, "“", C[2278] || CT.C2278, "”", C[2278] || CT.C2278, "⌜", C[2281] || CT.C2281, "⌝", C[2283] || CT.C2283, "⌞", C[2285] || CT.C2285, "⌟", C[2287] || CT.C2287, "⊥", C[1970] || CT.C1970, "∥", C[2289] || CT.C2289, "#", C[1968] || CT.C1968, "&", C[1968] || CT.C1968, "†", C[2056] || CT.C2056, "‡", C[2056] || CT.C2056, "◯", C[2290] || CT.C2290, "∙", C[1983] || CT.C1983, "⨿", C[1983] || CT.C1983, "⋪", C[1973] || CT.C1973, "⋫", C[1973] || CT.C1973, "⊴", C[1973] || CT.C1973, "⊵", C[1973] || CT.C1973, "△", C[2292] || CT.C2292, "▽", C[2293] || CT.C2293, "◊", C[1977] || CT.C1977, "Ⓢ", C[1977] || CT.C1977, "®", C[2016] || CT.C2016, "∄", C[1977] || CT.C1977, "℧", C[1977] || CT.C1977, "‵", C[1977] || CT.C1977, "▲", C[1977] || CT.C1977, "▼", C[1977] || CT.C1977, "■", C[1977] || CT.C1977, "⧫", C[1977] || CT.C1977, "★", C[1977] || CT.C1977, "╱", C[1977] || CT.C1977, "╲", C[1977] || CT.C1977, "□", C[1977] || CT.C1977, "ϰ", C[1977] || CT.C1977, "⋖", C[2022] || CT.C2022, "⊲", C[2294] || CT.C2294, "⋗", C[2022] || CT.C2022, "⊳", C[1973] || CT.C1973, "◀", C[1973] || CT.C1973, "∍", C[1973] || CT.C1973, "▶", C[1973] || CT.C1973, "∖", C[2059] || CT.C2059, "$", C[1968] || CT.C1968, "%", C[1968] || CT.C1968, "_", C[1968] || CT.C1968, "′", C[1975] || CT.C1975, "⊤", C[1975] || CT.C1975, "∅", C[1976] || CT.C1976, "∘", C[1983] || CT.C1983, "√", C[1975] || CT.C1975, "̸", C[2295] || CT.C2295, "⋄", C[1983] || CT.C1983, "⋆", C[1983] || CT.C1983, "◃", C[1983] || CT.C1983, "▹", C[1983] || CT.C1983, "{", C[2060] || CT.C2060, "}", C[2061] || CT.C2061, "\\", C[1968] || CT.C1968, "∐", C[2297] || CT.C2297, "⋁", C[2297] || CT.C2297, "⋀", C[2297] || CT.C2297, "⨄", C[2297] || CT.C2297, "⋂", C[2297] || CT.C2297, "⋃", C[2297] || CT.C2297, "∫", C[2297] || CT.C2297, "∬", C[2297] || CT.C2297, "∭", C[2297] || CT.C2297, "∏", C[2297] || CT.C2297, "∑", C[2297] || CT.C2297, "⨂", C[2297] || CT.C2297, "⨁", C[2297] || CT.C2297, "⨀", C[2297] || CT.C2297, "∮", C[2297] || CT.C2297, "∯", C[2297] || CT.C2297, "∰", C[2297] || CT.C2297, "⨆", C[2297] || CT.C2297, "⋮", C[1975] || CT.C1975, "ˊ", C[2298] || CT.C2298, "ˋ", C[2298] || CT.C2298, "¨", C[2298] || CT.C2298, "~", C[2299] || CT.C2299, "ˉ", C[2298] || CT.C2298, "˘", C[2298] || CT.C2298, "ˇ", C[2298] || CT.C2298, "^", C[2299] || CT.C2299, "⃗", C[2297] || CT.C2297, "˙", C[2298] || CT.C2298, "˚", C[2298] || CT.C2298, "✠", C[2016] || CT.C2016, "ˆ", C[2300] || CT.C2300, "˜", C[2300] || CT.C2300, "˝", C[2300] || CT.C2300]);
    },
    get C2303() {
      return C[2303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 15,
        [S._Location_line]: 74,
        [S._Location_file]: null
      });
    },
    get C2304() {
      return C[2304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textBaseline",
        [S._Location_column]: 15,
        [S._Location_line]: 75,
        [S._Location_file]: null
      });
    },
    get C2305() {
      return C[2305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 15,
        [S._Location_line]: 76,
        [S._Location_file]: null
      });
    },
    get C2302() {
      return C[2302] = dart.constList([C[2303] || CT.C2303, C[2304] || CT.C2304, C[2305] || CT.C2305], T$._LocationL());
    },
    get C2301() {
      return C[2301] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2302] || CT.C2302,
        [S._Location_name]: null,
        [S._Location_column]: 21,
        [S._Location_line]: 73,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_symbol.dart"
      });
    },
    get C2308() {
      return C[2308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "text",
        [S._Location_column]: 7,
        [S._Location_line]: 138,
        [S._Location_file]: null
      });
    },
    get C2309() {
      return C[2309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "softWrap",
        [S._Location_column]: 7,
        [S._Location_line]: 148,
        [S._Location_file]: null
      });
    },
    get C2310() {
      return C[2310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "overflow",
        [S._Location_column]: 7,
        [S._Location_line]: 149,
        [S._Location_file]: null
      });
    },
    get C2307() {
      return C[2307] = dart.constList([C[2308] || CT.C2308, C[2309] || CT.C2309, C[2310] || CT.C2310], T$._LocationL());
    },
    get C2306() {
      return C[2306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2307] || CT.C2307,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 137,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_symbol.dart"
      });
    },
    get C2313() {
      return C[2313] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 5,
        [S._Location_line]: 135,
        [S._Location_file]: null
      });
    },
    get C2314() {
      return C[2314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "depth",
        [S._Location_column]: 5,
        [S._Location_line]: 136,
        [S._Location_file]: null
      });
    },
    get C2315() {
      return C[2315] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 5,
        [S._Location_line]: 137,
        [S._Location_file]: null
      });
    },
    get C2312() {
      return C[2312] = dart.constList([C[2313] || CT.C2313, C[2314] || CT.C2314, C[2315] || CT.C2315], T$._LocationL());
    },
    get C2311() {
      return C[2311] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2312] || CT.C2312,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 134,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_symbol.dart"
      });
    },
    get C2318() {
      return C[2318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 7,
        [S._Location_line]: 155,
        [S._Location_file]: null
      });
    },
    get C2319() {
      return C[2319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 156,
        [S._Location_file]: null
      });
    },
    get C2317() {
      return C[2317] = dart.constList([C[2318] || CT.C2318, C[2319] || CT.C2319], T$._LocationL());
    },
    get C2316() {
      return C[2316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2317] || CT.C2317,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 154,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_symbol.dart"
      });
    },
    get C2320() {
      return C[2320] = dart.constSet(T$.StringL(), ["widehat", "widecheck", "widetilde", "utilde"]);
    },
    get C2321() {
      return C[2321] = dart.constList([1, 1, 2, 2, 3, 3], T$.intL());
    },
    get C2322() {
      return C[2322] = dart.constList([0, 1062, 2364, 2364, 2364], T$.doubleL());
    },
    get C2323() {
      return C[2323] = dart.constList([0, 239, 300, 360, 420], T$.doubleL());
    },
    get C2324() {
      return C[2324] = dart.constList([0, 0.24, 0.3, 0.3, 0.36, 0.42], T$.doubleL());
    },
    get C2325() {
      return C[2325] = dart.constList([0, 600, 1033, 2339, 2340], T$.doubleL());
    },
    get C2326() {
      return C[2326] = dart.constList([0, 260, 286, 306, 312], T$.doubleL());
    },
    get C2327() {
      return C[2327] = dart.constList([0, 0.26, 0.286, 0.3, 0.306, 0.34], T$.doubleL());
    },
    get C2329() {
      return C[2329] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S$.Alignment_y]: -1,
        [S$.Alignment_x]: -1
      });
    },
    get C2330() {
      return C[2330] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S$.Alignment_y]: -1,
        [S$.Alignment_x]: 1
      });
    },
    get C2328() {
      return C[2328] = dart.constList([C[2329] || CT.C2329, C[2330] || CT.C2330], T$.AlignmentL());
    },
    get C2332() {
      return C[2332] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S$.Alignment_y]: -1,
        [S$.Alignment_x]: 0
      });
    },
    get C2331() {
      return C[2331] = dart.constList([C[2329] || CT.C2329, C[2332] || CT.C2332, C[2330] || CT.C2330], T$.AlignmentL());
    },
    get C2335() {
      return C[2335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "crossAxisAlignment",
        [S._Location_column]: 7,
        [S._Location_line]: 170,
        [S._Location_file]: null
      });
    },
    get C2336() {
      return C[2336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "mainAxisAlignment",
        [S._Location_column]: 7,
        [S._Location_line]: 171,
        [S._Location_file]: null
      });
    },
    get C2337() {
      return C[2337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 7,
        [S._Location_line]: 172,
        [S._Location_file]: null
      });
    },
    get C2334() {
      return C[2334] = dart.constList([C[2335] || CT.C2335, C[2336] || CT.C2336, C[2337] || CT.C2337], T$._LocationL());
    },
    get C2333() {
      return C[2333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2334] || CT.C2334,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 169,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/svg/stretchy.dart"
      });
    },
    get C2340() {
      return C[2340] = dart.constList(["rightarrow"], T$.StringL());
    },
    get C2339() {
      return C[2339] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2340] || CT.C2340
      });
    },
    get C2342() {
      return C[2342] = dart.constList(["leftarrow"], T$.StringL());
    },
    get C2341() {
      return C[2341] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2342] || CT.C2342
      });
    },
    get C2343() {
      return C[2343] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 1.469,
        [S$.paths]: C[2340] || CT.C2340
      });
    },
    get C2344() {
      return C[2344] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 1.469,
        [S$.paths]: C[2342] || CT.C2342
      });
    },
    get C2346() {
      return C[2346] = dart.constList(["doublerightarrow"], T$.StringL());
    },
    get C2345() {
      return C[2345] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 560,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2346] || CT.C2346
      });
    },
    get C2347() {
      return C[2347] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 560,
        [S$.minWidth]: 1.526,
        [S$.paths]: C[2346] || CT.C2346
      });
    },
    get C2349() {
      return C[2349] = dart.constList(["doubleleftarrow"], T$.StringL());
    },
    get C2348() {
      return C[2348] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 560,
        [S$.minWidth]: 1.526,
        [S$.paths]: C[2349] || CT.C2349
      });
    },
    get C2351() {
      return C[2351] = dart.constList(["leftharpoon"], T$.StringL());
    },
    get C2350() {
      return C[2350] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2351] || CT.C2351
      });
    },
    get C2353() {
      return C[2353] = dart.constList(["leftharpoondown"], T$.StringL());
    },
    get C2352() {
      return C[2352] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2353] || CT.C2353
      });
    },
    get C2355() {
      return C[2355] = dart.constList(["rightharpoon"], T$.StringL());
    },
    get C2354() {
      return C[2354] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2355] || CT.C2355
      });
    },
    get C2357() {
      return C[2357] = dart.constList(["rightharpoondown"], T$.StringL());
    },
    get C2356() {
      return C[2356] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2357] || CT.C2357
      });
    },
    get C2359() {
      return C[2359] = dart.constList(["longequal"], T$.StringL());
    },
    get C2358() {
      return C[2358] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 334,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2359] || CT.C2359
      });
    },
    get C2361() {
      return C[2361] = dart.constList(["twoheadleftarrow"], T$.StringL());
    },
    get C2360() {
      return C[2360] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2329] || CT.C2329,
        [S$.viewBoxHeight]: 334,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2361] || CT.C2361
      });
    },
    get C2363() {
      return C[2363] = dart.constList(["twoheadrightarrow"], T$.StringL());
    },
    get C2362() {
      return C[2362] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: C[2330] || CT.C2330,
        [S$.viewBoxHeight]: 334,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2363] || CT.C2363
      });
    },
    get C2365() {
      return C[2365] = dart.constList(["leftarrow", "rightarrow"], T$.StringL());
    },
    get C2364() {
      return C[2364] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2365] || CT.C2365
      });
    },
    get C2367() {
      return C[2367] = dart.constList(["leftbrace", "midbrace", "rightbrace"], T$.StringL());
    },
    get C2366() {
      return C[2366] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 548,
        [S$.minWidth]: 1.6,
        [S$.paths]: C[2367] || CT.C2367
      });
    },
    get C2369() {
      return C[2369] = dart.constList(["leftbraceunder", "midbraceunder", "rightbraceunder"], T$.StringL());
    },
    get C2368() {
      return C[2368] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 548,
        [S$.minWidth]: 1.6,
        [S$.paths]: C[2369] || CT.C2369
      });
    },
    get C2370() {
      return C[2370] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2365] || CT.C2365
      });
    },
    get C2372() {
      return C[2372] = dart.constList(["doubleleftarrow", "doublerightarrow"], T$.StringL());
    },
    get C2371() {
      return C[2371] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 560,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2372] || CT.C2372
      });
    },
    get C2374() {
      return C[2374] = dart.constList(["leftharpoondownplus", "rightharpoonplus"], T$.StringL());
    },
    get C2373() {
      return C[2373] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 716,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2374] || CT.C2374
      });
    },
    get C2376() {
      return C[2376] = dart.constList(["leftharpoonplus", "rightharpoondownplus"], T$.StringL());
    },
    get C2375() {
      return C[2375] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 716,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2376] || CT.C2376
      });
    },
    get C2378() {
      return C[2378] = dart.constList(["leftarrow", "righthook"], T$.StringL());
    },
    get C2377() {
      return C[2377] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 1.08,
        [S$.paths]: C[2378] || CT.C2378
      });
    },
    get C2380() {
      return C[2380] = dart.constList(["lefthook", "rightarrow"], T$.StringL());
    },
    get C2379() {
      return C[2379] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 1.08,
        [S$.paths]: C[2380] || CT.C2380
      });
    },
    get C2382() {
      return C[2382] = dart.constList(["leftlinesegment", "rightlinesegment"], T$.StringL());
    },
    get C2381() {
      return C[2381] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2382] || CT.C2382
      });
    },
    get C2384() {
      return C[2384] = dart.constList(["leftgroup", "rightgroup"], T$.StringL());
    },
    get C2383() {
      return C[2383] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 342,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2384] || CT.C2384
      });
    },
    get C2386() {
      return C[2386] = dart.constList(["leftgroupunder", "rightgroupunder"], T$.StringL());
    },
    get C2385() {
      return C[2385] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 342,
        [S$.minWidth]: 0.888,
        [S$.paths]: C[2386] || CT.C2386
      });
    },
    get C2388() {
      return C[2388] = dart.constList(["leftmapsto", "rightarrow"], T$.StringL());
    },
    get C2387() {
      return C[2387] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 522,
        [S$.minWidth]: 1.5,
        [S$.paths]: C[2388] || CT.C2388
      });
    },
    get C2390() {
      return C[2390] = dart.constList(["leftToFrom", "rightToFrom"], T$.StringL());
    },
    get C2389() {
      return C[2389] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 528,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2390] || CT.C2390
      });
    },
    get C2392() {
      return C[2392] = dart.constList(["baraboveleftarrow", "rightarrowabovebar"], T$.StringL());
    },
    get C2391() {
      return C[2391] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 901,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2392] || CT.C2392
      });
    },
    get C2394() {
      return C[2394] = dart.constList(["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], T$.StringL());
    },
    get C2393() {
      return C[2393] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 716,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2394] || CT.C2394
      });
    },
    get C2396() {
      return C[2396] = dart.constList(["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], T$.StringL());
    },
    get C2395() {
      return C[2395] = dart.const({
        __proto__: stretchy._KatexImagesData.prototype,
        [S$.align]: null,
        [S$.viewBoxHeight]: 716,
        [S$.minWidth]: 1.75,
        [S$.paths]: C[2396] || CT.C2396
      });
    },
    get C2338() {
      return C[2338] = dart.constMap(T$.StringL(), T$._KatexImagesDataL(), ["overrightarrow", C[2339] || CT.C2339, "overleftarrow", C[2341] || CT.C2341, "underrightarrow", C[2339] || CT.C2339, "underleftarrow", C[2341] || CT.C2341, "xrightarrow", C[2343] || CT.C2343, "xleftarrow", C[2344] || CT.C2344, "Overrightarrow", C[2345] || CT.C2345, "xRightarrow", C[2347] || CT.C2347, "xLeftarrow", C[2348] || CT.C2348, "overleftharpoon", C[2350] || CT.C2350, "xleftharpoonup", C[2350] || CT.C2350, "xleftharpoondown", C[2352] || CT.C2352, "overrightharpoon", C[2354] || CT.C2354, "xrightharpoonup", C[2354] || CT.C2354, "xrightharpoondown", C[2356] || CT.C2356, "xlongequal", C[2358] || CT.C2358, "xtwoheadleftarrow", C[2360] || CT.C2360, "xtwoheadrightarrow", C[2362] || CT.C2362, "overleftrightarrow", C[2364] || CT.C2364, "overbrace", C[2366] || CT.C2366, "underbrace", C[2368] || CT.C2368, "underleftrightarrow", C[2364] || CT.C2364, "xleftrightarrow", C[2370] || CT.C2370, "xLeftrightarrow", C[2371] || CT.C2371, "xrightleftharpoons", C[2373] || CT.C2373, "xleftrightharpoons", C[2375] || CT.C2375, "xhookleftarrow", C[2377] || CT.C2377, "xhookrightarrow", C[2379] || CT.C2379, "overlinesegment", C[2381] || CT.C2381, "underlinesegment", C[2381] || CT.C2381, "overgroup", C[2383] || CT.C2383, "undergroup", C[2385] || CT.C2385, "xmapsto", C[2387] || CT.C2387, "xtofrom", C[2389] || CT.C2389, "xrightleftarrows", C[2391] || CT.C2391, "xrightequilibrium", C[2393] || CT.C2393, "xleftequilibrium", C[2395] || CT.C2395]);
    },
    get C2397() {
      return C[2397] = dart.constMap(T$.StringL(), T$.StringL(), ["widehat", "^", "widecheck", "ˇ", "widetilde", "~", "utilde", "~", "overleftarrow", "←", "underleftarrow", "←", "xleftarrow", "←", "overrightarrow", "→", "underrightarrow", "→", "xrightarrow", "→", "underbrace", "⏟", "overbrace", "⏞", "overgroup", "⏠", "undergroup", "⏡", "overleftrightarrow", "↔", "underleftrightarrow", "↔", "xleftrightarrow", "↔", "Overrightarrow", "⇒", "xRightarrow", "⇒", "overleftharpoon", "↼", "xleftharpoonup", "↼", "overrightharpoon", "⇀", "xrightharpoonup", "⇀", "xLeftarrow", "⇐", "xLeftrightarrow", "⇔", "xhookleftarrow", "↩", "xhookrightarrow", "↪", "xmapsto", "↦", "xrightharpoondown", "⇁", "xleftharpoondown", "↽", "xrightleftharpoons", "⇌", "xleftrightharpoons", "⇋", "xtwoheadleftarrow", "↞", "xtwoheadrightarrow", "↠", "xlongequal", "=", "xtofrom", "⇄", "xrightleftarrows", "⇄", "xrightequilibrium", "⇌", "xleftequilibrium", "⇋"]);
    },
    get C2400() {
      return C[2400] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 7,
        [S._Location_line]: 37,
        [S._Location_file]: null
      });
    },
    get C2401() {
      return C[2401] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 38,
        [S._Location_file]: null
      });
    },
    get C2399() {
      return C[2399] = dart.constList([C[2400] || CT.C2400, C[2401] || CT.C2401], T$._LocationL());
    },
    get C2398() {
      return C[2398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2399] || CT.C2399,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 36,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/svg/static.dart"
      });
    },
    get C2403() {
      return C[2403] = dart.constList([0.471, 0.714], T$.doubleL());
    },
    get C2404() {
      return C[2404] = dart.constList([0.957, 0.499], T$.doubleL());
    },
    get C2405() {
      return C[2405] = dart.constList([1.472, 0.659], T$.doubleL());
    },
    get C2406() {
      return C[2406] = dart.constList([1.304, 0.499], T$.doubleL());
    },
    get C2407() {
      return C[2407] = dart.constList([1.98, 0.659], T$.doubleL());
    },
    get C2402() {
      return C[2402] = dart.constMap(T$.StringL(), T$.ListLOfdoubleL(), ["vec", C[2403] || CT.C2403, "oiintSize1", C[2404] || CT.C2404, "oiintSize2", C[2405] || CT.C2405, "oiiintSize1", C[2406] || CT.C2406, "oiiintSize2", C[2407] || CT.C2407]);
    },
    get C2408() {
      return C[2408] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [S$._name$15]: "CrossAxisAlignment.center",
        index: 2
      });
    },
    get C2409() {
      return C[2409] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [S$._name$15]: "CrossAxisAlignment.start",
        index: 0
      });
    },
    get C2410() {
      return C[2410] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [S$._name$15]: "CrossAxisAlignment.stretch",
        index: 3
      });
    },
    get C2411() {
      return C[2411] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [S$._name$15]: "CrossAxisAlignment.baseline",
        index: 4
      });
    },
    get C2412() {
      return C[2412] = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [S$._name$15]: "CrossAxisAlignment.end",
        index: 1
      });
    },
    get C2413() {
      return C[2413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[35] || CT.C35,
        [S._Location_name]: null,
        [S._Location_column]: 32,
        [S._Location_line]: 68,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2416() {
      return C[2416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "relativePos",
        [S._Location_column]: 13,
        [S._Location_line]: 88,
        [S._Location_file]: null
      });
    },
    get C2417() {
      return C[2417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "offset",
        [S._Location_column]: 13,
        [S._Location_line]: 90,
        [S._Location_file]: null
      });
    },
    get C2418() {
      return C[2418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 91,
        [S._Location_file]: null
      });
    },
    get C2415() {
      return C[2415] = dart.constList([C[2416] || CT.C2416, C[2417] || CT.C2417, C[2418] || CT.C2418], T$._LocationL());
    },
    get C2414() {
      return C[2414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2415] || CT.C2415,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 86,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2421() {
      return C[2421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "depth",
        [S._Location_column]: 11,
        [S._Location_line]: 84,
        [S._Location_file]: null
      });
    },
    get C2422() {
      return C[2422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 11,
        [S._Location_line]: 85,
        [S._Location_file]: null
      });
    },
    get C2423() {
      return C[2423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 86,
        [S._Location_file]: null
      });
    },
    get C2420() {
      return C[2420] = dart.constList([C[2421] || CT.C2421, C[2422] || CT.C2422, C[2423] || CT.C2423], T$._LocationL());
    },
    get C2419() {
      return C[2419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2420] || CT.C2420,
        [S._Location_name]: null,
        [S._Location_column]: 44,
        [S._Location_line]: 83,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2426() {
      return C[2426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 9,
        [S._Location_line]: 83,
        [S._Location_file]: null
      });
    },
    get C2425() {
      return C[2425] = dart.constList([C[2426] || CT.C2426], T$._LocationL());
    },
    get C2424() {
      return C[2424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2425] || CT.C2425,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 82,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2429() {
      return C[2429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "width",
        [S._Location_column]: 17,
        [S._Location_line]: 107,
        [S._Location_file]: null
      });
    },
    get C2430() {
      return C[2430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "height",
        [S._Location_column]: 17,
        [S._Location_line]: 108,
        [S._Location_file]: null
      });
    },
    get C2431() {
      return C[2431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "color",
        [S._Location_column]: 17,
        [S._Location_line]: 109,
        [S._Location_file]: null
      });
    },
    get C2428() {
      return C[2428] = dart.constList([C[2429] || CT.C2429, C[2430] || CT.C2430, C[2431] || CT.C2431], T$._LocationL());
    },
    get C2427() {
      return C[2427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2428] || CT.C2428,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 106,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2434() {
      return C[2434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 15,
        [S._Location_line]: 105,
        [S._Location_file]: null
      });
    },
    get C2435() {
      return C[2435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 15,
        [S._Location_line]: 106,
        [S._Location_file]: null
      });
    },
    get C2433() {
      return C[2433] = dart.constList([C[2434] || CT.C2434, C[2435] || CT.C2435], T$._LocationL());
    },
    get C2432() {
      return C[2432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2433] || CT.C2433,
        [S._Location_name]: null,
        [S._Location_column]: 20,
        [S._Location_line]: 104,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2436() {
      return C[2436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[35] || CT.C35,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 116,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2439() {
      return C[2439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "padding",
        [S._Location_column]: 17,
        [S._Location_line]: 126,
        [S._Location_file]: null
      });
    },
    get C2440() {
      return C[2440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 17,
        [S._Location_line]: 127,
        [S._Location_file]: null
      });
    },
    get C2438() {
      return C[2438] = dart.constList([C[2439] || CT.C2439, C[2440] || CT.C2440], T$._LocationL());
    },
    get C2437() {
      return C[2437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2438] || CT.C2438,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 125,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2443() {
      return C[2443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "builder",
        [S._Location_column]: 9,
        [S._Location_line]: 98,
        [S._Location_file]: null
      });
    },
    get C2442() {
      return C[2442] = dart.constList([C[2443] || CT.C2443], T$._LocationL());
    },
    get C2441() {
      return C[2441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2442] || CT.C2442,
        [S._Location_name]: null,
        [S._Location_column]: 22,
        [S._Location_line]: 97,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2446() {
      return C[2446] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "customCrossSize",
        [S._Location_column]: 13,
        [S._Location_line]: 144,
        [S._Location_file]: null
      });
    },
    get C2447() {
      return C[2447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "hShift",
        [S._Location_column]: 13,
        [S._Location_line]: 146,
        [S._Location_file]: null
      });
    },
    get C2448() {
      return C[2448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 147,
        [S._Location_file]: null
      });
    },
    get C2445() {
      return C[2445] = dart.constList([C[2446] || CT.C2446, C[2447] || CT.C2447, C[2448] || CT.C2448], T$._LocationL());
    },
    get C2444() {
      return C[2444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2445] || CT.C2445,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2451() {
      return C[2451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "minHeight",
        [S._Location_column]: 13,
        [S._Location_line]: 151,
        [S._Location_file]: null
      });
    },
    get C2452() {
      return C[2452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "topPadding",
        [S._Location_column]: 13,
        [S._Location_line]: 152,
        [S._Location_file]: null
      });
    },
    get C2453() {
      return C[2453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 153,
        [S._Location_file]: null
      });
    },
    get C2450() {
      return C[2450] = dart.constList([C[2451] || CT.C2451, C[2452] || CT.C2452, C[2453] || CT.C2453], T$._LocationL());
    },
    get C2449() {
      return C[2449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2450] || CT.C2450,
        [S._Location_name]: null,
        [S._Location_column]: 11,
        [S._Location_line]: 150,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2456() {
      return C[2456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "baselineReferenceWidgetIndex",
        [S._Location_column]: 9,
        [S._Location_line]: 141,
        [S._Location_file]: null
      });
    },
    get C2457() {
      return C[2457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "children",
        [S._Location_column]: 9,
        [S._Location_line]: 142,
        [S._Location_file]: null
      });
    },
    get C2455() {
      return C[2455] = dart.constList([C[2456] || CT.C2456, C[2457] || CT.C2457], T$._LocationL());
    },
    get C2454() {
      return C[2454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2455] || CT.C2455,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 140,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart"
      });
    },
    get C2459() {
      return C[2459] = dart.constList(["updiagonalstrike"], T$.StringL());
    },
    get C2460() {
      return C[2460] = dart.constList(["downdiagonalstrike"], T$.StringL());
    },
    get C2461() {
      return C[2461] = dart.constList(["updiagonalstrike, downdiagonalstrike"], T$.StringL());
    },
    get C2462() {
      return C[2462] = dart.constList(["horizontalstrike"], T$.StringL());
    },
    get C2458() {
      return C[2458] = dart.constMap(T$.StringL(), T$.ListLOfStringL(), ["\\cancel", C[2459] || CT.C2459, "\\bcancel", C[2460] || CT.C2460, "\\xcancel", C[2461] || CT.C2461, "\\sout", C[2462] || CT.C2462]);
    },
    get C2463() {
      return C[2463] = dart.constMap(T$.StringL(), T$.AtomTypeL(), ["\\mathop", C[185] || CT.C185, "\\mathord", C[1239] || CT.C1239, "\\mathbin", C[183] || CT.C183, "\\mathrel", C[179] || CT.C179, "\\mathopen", C[184] || CT.C184, "\\mathclose", C[180] || CT.C180, "\\mathpunct", C[181] || CT.C181, "\\mathinner", C[1736] || CT.C1736]);
    },
    get C2465() {
      return C[2465] = dart.constList(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overleftharpoon", "\\overrightharpoon", "\\overline"], T$.StringL());
    },
    get C2467() {
      return C[2467] = dart.fn(katex_base._accentHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2466() {
      return C[2466] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2467] || CT.C2467,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2468() {
      return C[2468] = dart.constList(["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", "\\\"", "\\r", "\\H", "\\v"], T$.StringL());
    },
    get C2470() {
      return C[2470] = dart.fn(katex_base._textAccentHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2469() {
      return C[2469] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2470] || CT.C2470,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: false,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2471() {
      return C[2471] = dart.constList(["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\utilde", "\\underline"], T$.StringL());
    },
    get C2473() {
      return C[2473] = dart.fn(katex_base._accentUnderHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2472() {
      return C[2472] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2473] || CT.C2473,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2474() {
      return C[2474] = dart.constList(["\\xleftarrow", "\\xrightarrow", "\\xLeftarrow", "\\xRightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xrightharpoondown", "\\xrightharpoonup", "\\xleftharpoondown", "\\xleftharpoonup", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xlongequal", "\\xtwoheadrightarrow", "\\xtwoheadleftarrow", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium"], T$.StringL());
    },
    get C2476() {
      return C[2476] = dart.fn(katex_base._arrowHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2475() {
      return C[2475] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2476] || CT.C2476,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 1,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2477() {
      return C[2477] = dart.constList(["\\hline", "\\hdashline"], T$.StringL());
    },
    get C2479() {
      return C[2479] = dart.fn(katex_base._throwExceptionHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2478() {
      return C[2478] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2479] || CT.C2479,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2480() {
      return C[2480] = dart.constList(["\\nobreak", "\\allowbreak"], T$.StringL());
    },
    get C2482() {
      return C[2482] = dart.fn(katex_base._breakHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2481() {
      return C[2481] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2482] || CT.C2482,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2483() {
      return C[2483] = dart.constList(["\\@char"], T$.StringL());
    },
    get C2485() {
      return C[2485] = dart.fn(katex_base._charHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2484() {
      return C[2484] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2485] || CT.C2485,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2486() {
      return C[2486] = dart.constList(["\\textcolor"], T$.StringL());
    },
    get C2488() {
      return C[2488] = dart.fn(katex_base._textcolorHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2487() {
      return C[2487] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2488] || CT.C2488,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 3,
        [S.FunctionSpec_numArgs]: 2
      });
    },
    get C2489() {
      return C[2489] = dart.constList(["\\color"], T$.StringL());
    },
    get C2491() {
      return C[2491] = dart.fn(katex_base._colorHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2490() {
      return C[2490] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2491] || CT.C2491,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 3,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2492() {
      return C[2492] = dart.constList(["\\cr", "\\newline"], T$.StringL());
    },
    get C2494() {
      return C[2494] = dart.fn(katex_base._crHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2493() {
      return C[2493] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2494] || CT.C2494,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 1,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2495() {
      return C[2495] = dart.constList(["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"], T$.StringL());
    },
    get C2497() {
      return C[2497] = dart.fn(katex_base._delimSizeHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2496() {
      return C[2496] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2497] || CT.C2497,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2498() {
      return C[2498] = dart.constList(["\\right"], T$.StringL());
    },
    get C2500() {
      return C[2500] = dart.fn(katex_base._rightHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2499() {
      return C[2499] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2500] || CT.C2500,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2501() {
      return C[2501] = dart.constList(["\\left"], T$.StringL());
    },
    get C2503() {
      return C[2503] = dart.fn(katex_base._leftHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2502() {
      return C[2502] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2503] || CT.C2503,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2504() {
      return C[2504] = dart.constList(["\\middle"], T$.StringL());
    },
    get C2506() {
      return C[2506] = dart.fn(katex_base._middleHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2505() {
      return C[2505] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2506] || CT.C2506,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2507() {
      return C[2507] = dart.constList(["\\colorbox"], T$.StringL());
    },
    get C2509() {
      return C[2509] = dart.fn(katex_base._colorboxHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2508() {
      return C[2508] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2509] || CT.C2509,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 3,
        [S.FunctionSpec_numArgs]: 2
      });
    },
    get C2510() {
      return C[2510] = dart.constList(["\\fcolorbox"], T$.StringL());
    },
    get C2512() {
      return C[2512] = dart.fn(katex_base._fcolorboxHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2511() {
      return C[2511] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2512] || CT.C2512,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 3,
        [S.FunctionSpec_numArgs]: 3
      });
    },
    get C2513() {
      return C[2513] = dart.constList(["\\fbox"], T$.StringL());
    },
    get C2515() {
      return C[2515] = dart.fn(katex_base._fboxHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2514() {
      return C[2514] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2515] || CT.C2515,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2516() {
      return C[2516] = dart.constList(["\\cancel", "\\bcancel", "\\xcancel", "\\sout"], T$.StringL());
    },
    get C2518() {
      return C[2518] = dart.fn(katex_base._cancelHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2517() {
      return C[2517] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2518] || CT.C2518,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2519() {
      return C[2519] = dart.constList(["\\begin", "\\end"], T$.StringL());
    },
    get C2521() {
      return C[2521] = dart.fn(katex_base._enviromentHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2520() {
      return C[2520] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2521] || CT.C2521,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2522() {
      return C[2522] = dart.constList(["\\mathrm", "\\mathit", "\\mathbf", "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", "\\Bbb", "\\bold", "\\frak"], T$.StringL());
    },
    get C2524() {
      return C[2524] = dart.fn(katex_base._fontHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2523() {
      return C[2523] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2524] || CT.C2524,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 2,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2525() {
      return C[2525] = dart.constList(["\\boldsymbol", "\\bm"], T$.StringL());
    },
    get C2527() {
      return C[2527] = dart.fn(katex_base._boldSymbolHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2526() {
      return C[2526] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2527] || CT.C2527,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 2,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2528() {
      return C[2528] = dart.constList(["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"], T$.StringL());
    },
    get C2530() {
      return C[2530] = dart.fn(katex_base._textFontHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2529() {
      return C[2529] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2530] || CT.C2530,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2531() {
      return C[2531] = dart.constList(["\\cfrac", "\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac", "\\\\bracefrac", "\\\\brackfrac"], T$.StringL());
    },
    get C2533() {
      return C[2533] = dart.fn(katex_base._fracHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2532() {
      return C[2532] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2533] || CT.C2533,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 2,
        [S.FunctionSpec_numArgs]: 2
      });
    },
    get C2534() {
      return C[2534] = dart.constList(["\\over", "\\choose", "\\atop", "\\brace", "\\brack"], T$.StringL());
    },
    get C2536() {
      return C[2536] = dart.fn(katex_base._overHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2535() {
      return C[2535] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2536] || CT.C2536,
        [S.FunctionSpec_infix]: true,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2537() {
      return C[2537] = dart.constList(["\\genfrac"], T$.StringL());
    },
    get C2539() {
      return C[2539] = dart.fn(katex_base._genfracHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2538() {
      return C[2538] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2539] || CT.C2539,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 6,
        [S.FunctionSpec_numArgs]: 6
      });
    },
    get C2540() {
      return C[2540] = dart.constList(["\\above"], T$.StringL());
    },
    get C2542() {
      return C[2542] = dart.fn(katex_base._aboveHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2541() {
      return C[2541] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2542] || CT.C2542,
        [S.FunctionSpec_infix]: true,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2543() {
      return C[2543] = dart.constList(["\\\\abovefrac"], T$.StringL());
    },
    get C2545() {
      return C[2545] = dart.fn(katex_base._aboveFracHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2544() {
      return C[2544] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2545] || CT.C2545,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 3
      });
    },
    get C2546() {
      return C[2546] = dart.constList(["\\overbrace", "\\underbrace"], T$.StringL());
    },
    get C2548() {
      return C[2548] = dart.fn(katex_base._horizBraceHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2547() {
      return C[2547] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2548] || CT.C2548,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2549() {
      return C[2549] = dart.constList(["\\kern", "\\mkern", "\\hskip", "\\mskip"], T$.StringL());
    },
    get C2551() {
      return C[2551] = dart.fn(katex_base._kernHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2550() {
      return C[2550] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2551] || CT.C2551,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2552() {
      return C[2552] = dart.constList(["\\(", "$"], T$.StringL());
    },
    get C2554() {
      return C[2554] = dart.fn(katex_base._mathLeftHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2553() {
      return C[2553] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2554] || CT.C2554,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: false,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2555() {
      return C[2555] = dart.constList(["\\)", "\\]"], T$.StringL());
    },
    get C2557() {
      return C[2557] = dart.fn(katex_base._mathRightHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2556() {
      return C[2556] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2557] || CT.C2557,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: false,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2558() {
      return C[2558] = dart.constList(["\\mathop", "\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"], T$.StringL());
    },
    get C2560() {
      return C[2560] = dart.fn(katex_base._mclassHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2559() {
      return C[2559] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2560] || CT.C2560,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2561() {
      return C[2561] = dart.constList(["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "∏", "∐", "∑", "⋀", "⋁", "⋂", "⋃", "⨀", "⨁", "⨂", "⨄", "⨆"], T$.StringL());
    },
    get C2563() {
      return C[2563] = dart.fn(katex_base._bigOpHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2562() {
      return C[2562] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2563] || CT.C2563,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2564() {
      return C[2564] = dart.constList(["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"], T$.StringL());
    },
    get C2566() {
      return C[2566] = dart.fn(katex_base._mathFunctionHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2565() {
      return C[2565] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2566] || CT.C2566,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2567() {
      return C[2567] = dart.constList(["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"], T$.StringL());
    },
    get C2569() {
      return C[2569] = dart.fn(katex_base._mathLimitsHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2568() {
      return C[2568] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2569] || CT.C2569,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2570() {
      return C[2570] = dart.constList(["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "∫", "∬", "∭", "∮", "∯", "∰"], T$.StringL());
    },
    get C2572() {
      return C[2572] = dart.fn(katex_base._integralHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2571() {
      return C[2571] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2572] || CT.C2572,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2573() {
      return C[2573] = dart.constList(["\\operatorname", "\\operatorname*"], T$.StringL());
    },
    get C2575() {
      return C[2575] = dart.fn(katex_base._operatorNameHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2574() {
      return C[2574] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2575] || CT.C2575,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2576() {
      return C[2576] = dart.constList(["\\phantom", "\\hphantom", "\\vphantom"], T$.StringL());
    },
    get C2578() {
      return C[2578] = dart.fn(katex_base._phantomHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2577() {
      return C[2577] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2578] || CT.C2578,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2579() {
      return C[2579] = dart.constList(["\\raisebox"], T$.StringL());
    },
    get C2581() {
      return C[2581] = dart.fn(katex_base._raiseBoxHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2580() {
      return C[2580] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2581] || CT.C2581,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 2
      });
    },
    get C2582() {
      return C[2582] = dart.constList(["\\rule"], T$.StringL());
    },
    get C2584() {
      return C[2584] = dart.fn(katex_base._ruleHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2583() {
      return C[2583] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2584] || CT.C2584,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 1,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 2
      });
    },
    get C2585() {
      return C[2585] = dart.constList(["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"], T$.StringL());
    },
    get C2587() {
      return C[2587] = dart.fn(katex_base._sizingHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2586() {
      return C[2586] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2587] || CT.C2587,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2588() {
      return C[2588] = dart.constList(["\\sqrt"], T$.StringL());
    },
    get C2590() {
      return C[2590] = dart.fn(katex_base._sqrtHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2589() {
      return C[2589] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2590] || CT.C2590,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 1,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2591() {
      return C[2591] = dart.constList(["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"], T$.StringL());
    },
    get C2593() {
      return C[2593] = dart.fn(katex_base._stylingHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2592() {
      return C[2592] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2593] || CT.C2593,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 0
      });
    },
    get C2594() {
      return C[2594] = dart.constList(["\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textbf", "\\textmd", "\\textit", "\\textup"], T$.StringL());
    },
    get C2596() {
      return C[2596] = dart.fn(katex_base._textHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2595() {
      return C[2595] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2596] || CT.C2596,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: true,
        [S.FunctionSpec_greediness]: 2,
        [S.FunctionSpec_numArgs]: 1
      });
    },
    get C2597() {
      return C[2597] = dart.constList(["\\stackrel", "\\overset", "\\underset"], T$.StringL());
    },
    get C2599() {
      return C[2599] = dart.fn(katex_base._underOverHandler, T$.TexParserAndFunctionContextToGreenNode());
    },
    get C2598() {
      return C[2598] = dart.const({
        __proto__: T$.FunctionSpecOfGreenNodeL().prototype,
        [S.FunctionSpec_argModes]: null,
        [S.FunctionSpec_handler]: C[2599] || CT.C2599,
        [S.FunctionSpec_infix]: false,
        [S.FunctionSpec_numOptionalArgs]: 0,
        [S.FunctionSpec_allowedInMath]: true,
        [S.FunctionSpec_allowedInText]: false,
        [S.FunctionSpec_greediness]: 1,
        [S.FunctionSpec_numArgs]: 2
      });
    },
    get C2464() {
      return C[2464] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2465] || CT.C2465, C[2466] || CT.C2466, C[2468] || CT.C2468, C[2469] || CT.C2469, C[2471] || CT.C2471, C[2472] || CT.C2472, C[2474] || CT.C2474, C[2475] || CT.C2475, C[2477] || CT.C2477, C[2478] || CT.C2478, C[2480] || CT.C2480, C[2481] || CT.C2481, C[2483] || CT.C2483, C[2484] || CT.C2484, C[2486] || CT.C2486, C[2487] || CT.C2487, C[2489] || CT.C2489, C[2490] || CT.C2490, C[2492] || CT.C2492, C[2493] || CT.C2493, C[2495] || CT.C2495, C[2496] || CT.C2496, C[2498] || CT.C2498, C[2499] || CT.C2499, C[2501] || CT.C2501, C[2502] || CT.C2502, C[2504] || CT.C2504, C[2505] || CT.C2505, C[2507] || CT.C2507, C[2508] || CT.C2508, C[2510] || CT.C2510, C[2511] || CT.C2511, C[2513] || CT.C2513, C[2514] || CT.C2514, C[2516] || CT.C2516, C[2517] || CT.C2517, C[2519] || CT.C2519, C[2520] || CT.C2520, C[2522] || CT.C2522, C[2523] || CT.C2523, C[2525] || CT.C2525, C[2526] || CT.C2526, C[2528] || CT.C2528, C[2529] || CT.C2529, C[2531] || CT.C2531, C[2532] || CT.C2532, C[2534] || CT.C2534, C[2535] || CT.C2535, C[2537] || CT.C2537, C[2538] || CT.C2538, C[2540] || CT.C2540, C[2541] || CT.C2541, C[2543] || CT.C2543, C[2544] || CT.C2544, C[2546] || CT.C2546, C[2547] || CT.C2547, C[2549] || CT.C2549, C[2550] || CT.C2550, C[2552] || CT.C2552, C[2553] || CT.C2553, C[2555] || CT.C2555, C[2556] || CT.C2556, C[2558] || CT.C2558, C[2559] || CT.C2559, C[2561] || CT.C2561, C[2562] || CT.C2562, C[2564] || CT.C2564, C[2565] || CT.C2565, C[2567] || CT.C2567, C[2568] || CT.C2568, C[2570] || CT.C2570, C[2571] || CT.C2571, C[2573] || CT.C2573, C[2574] || CT.C2574, C[2576] || CT.C2576, C[2577] || CT.C2577, C[2579] || CT.C2579, C[2580] || CT.C2580, C[2582] || CT.C2582, C[2583] || CT.C2583, C[2585] || CT.C2585, C[2586] || CT.C2586, C[2588] || CT.C2588, C[2589] || CT.C2589, C[2591] || CT.C2591, C[2592] || CT.C2592, C[2594] || CT.C2594, C[2595] || CT.C2595, C[2597] || CT.C2597, C[2598] || CT.C2598]);
    },
    get C2600() {
      return C[2600] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2465] || CT.C2465, C[2466] || CT.C2466, C[2468] || CT.C2468, C[2469] || CT.C2469]);
    },
    get C2601() {
      return C[2601] = dart.constSet(T$.StringL(), ["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring"]);
    },
    get C2602() {
      return C[2602] = dart.constSet(T$.StringL(), ["\\widehat", "\\widetilde", "\\widecheck"]);
    },
    get C2603() {
      return C[2603] = dart.constMap(T$.StringL(), T$.StringL(), ["\\acute", "´", "\\grave", "`", "\\ddot", "¨", "\\tilde", "~", "\\bar", "¯", "\\breve", "˘", "\\check", "ˇ", "\\hat", "^", "\\vec", "→", "\\dot", "˙", "\\mathring", "˚", "\\widecheck", "ˇ", "\\widehat", "^", "\\widetilde", "~", "\\overrightarrow", "→", "\\overleftarrow", "←", "\\Overrightarrow", "⇒", "\\overleftrightarrow", "↔", "\\overleftharpoon", "↼", "\\overrightharpoon", "⇀", "\\'", "´", "\\`", "`", "\\^", "^", "\\~", "~", "\\=", "¯", "\\u", "˘", "\\.", "˙", "\\\"", "¨", "\\r", "˚", "\\H", "˝", "\\v", "ˇ", "\\overline", "¯"]);
    },
    get C2604() {
      return C[2604] = dart.constMap(T$.StringL(), T$.StringL(), ["\\`", "̀", "\\\"", "̈", "\\~", "̃", "\\=", "̄", "\\'", "́", "\\u", "̆", "\\v", "̌", "\\^", "̂", "\\.", "̇", "\\r", "̊", "\\H", "̋"]);
    },
    get C2605() {
      return C[2605] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2471] || CT.C2471, C[2472] || CT.C2472]);
    },
    get C2606() {
      return C[2606] = dart.constMap(T$.StringL(), T$.StringL(), ["\\underleftarrow", "←", "\\underrightarrow", "→", "\\underleftrightarrow", "↔", "\\undergroup", "⏠", "\\utilde", "~", "\\underline", "¯"]);
    },
    get C2607() {
      return C[2607] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2477] || CT.C2477, C[2478] || CT.C2478]);
    },
    get C2608() {
      return C[2608] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2474] || CT.C2474, C[2475] || CT.C2475]);
    },
    get C2609() {
      return C[2609] = dart.constMap(T$.StringL(), T$.StringL(), ["\\xleftarrow", "←", "\\xrightarrow", "→", "\\xleftrightarrow", "↔", "\\xLeftarrow", "⇐", "\\xRightarrow", "⇒", "\\xLeftrightarrow", "⇔", "\\xhookleftarrow", "↩", "\\xhookrightarrow", "↪", "\\xmapsto", "↦", "\\xrightharpoondown", "⇁", "\\xrightharpoonup", "⇀", "\\xleftharpoondown", "↽", "\\xleftharpoonup", "↼", "\\xrightleftharpoons", "⇌", "\\xleftrightharpoons", "⇋", "\\xlongequal", "=", "\\xtwoheadleftarrow", "↞", "\\xtwoheadrightarrow", "↠", "\\xtofrom", "⇄", "\\xrightleftarrows", "⇄", "\\xrightequilibrium", "⇌", "\\xleftequilibrium", "⇋"]);
    },
    get C2610() {
      return C[2610] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2480] || CT.C2480, C[2481] || CT.C2481]);
    },
    get C2611() {
      return C[2611] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2483] || CT.C2483, C[2484] || CT.C2484]);
    },
    get C2612() {
      return C[2612] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2486] || CT.C2486, C[2487] || CT.C2487, C[2489] || CT.C2489, C[2490] || CT.C2490]);
    },
    get C2613() {
      return C[2613] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2492] || CT.C2492, C[2493] || CT.C2493]);
    },
    get C2614() {
      return C[2614] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2495] || CT.C2495, C[2496] || CT.C2496, C[2498] || CT.C2498, C[2499] || CT.C2499, C[2501] || CT.C2501, C[2502] || CT.C2502, C[2504] || CT.C2504, C[2505] || CT.C2505]);
    },
    get C2615() {
      return C[2615] = dart.constMap(T$.StringL(), T$.AtomTypeL(), ["\\bigl", C[184] || CT.C184, "\\Bigl", C[184] || CT.C184, "\\biggl", C[184] || CT.C184, "\\Biggl", C[184] || CT.C184, "\\bigr", C[180] || CT.C180, "\\Bigr", C[180] || CT.C180, "\\biggr", C[180] || CT.C180, "\\Biggr", C[180] || CT.C180, "\\bigm", C[179] || CT.C179, "\\Bigm", C[179] || CT.C179, "\\biggm", C[179] || CT.C179, "\\Biggm", C[179] || CT.C179, "\\big", C[1239] || CT.C1239, "\\Big", C[1239] || CT.C1239, "\\bigg", C[1239] || CT.C1239, "\\Bigg", C[1239] || CT.C1239]);
    },
    get C2616() {
      return C[2616] = dart.constMap(T$.StringL(), T$.intL(), ["\\bigl", 1, "\\Bigl", 2, "\\biggl", 3, "\\Biggl", 4, "\\bigr", 1, "\\Bigr", 2, "\\biggr", 3, "\\Biggr", 4, "\\bigm", 1, "\\Bigm", 2, "\\biggm", 3, "\\Biggm", 4, "\\big", 1, "\\Big", 2, "\\bigg", 3, "\\Bigg", 4]);
    },
    get C2617() {
      return C[2617] = dart.constList(["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "<", ">", "\\langle", "⟨", "\\rangle", "⟩", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."], T$.StringL());
    },
    get C2618() {
      return C[2618] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2507] || CT.C2507, C[2508] || CT.C2508, C[2510] || CT.C2510, C[2511] || CT.C2511, C[2513] || CT.C2513, C[2514] || CT.C2514, C[2516] || CT.C2516, C[2517] || CT.C2517]);
    },
    get C2619() {
      return C[2619] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2519] || CT.C2519, C[2520] || CT.C2520]);
    },
    get C2620() {
      return C[2620] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2522] || CT.C2522, C[2523] || CT.C2523, C[2525] || CT.C2525, C[2526] || CT.C2526, C[2528] || CT.C2528, C[2529] || CT.C2529]);
    },
    get C2621() {
      return C[2621] = dart.constMap(T$.StringL(), T$.StringL(), ["\\Bbb", "\\mathbb", "\\bold", "\\mathbf", "\\frak", "\\mathfrak", "\\bm", "\\boldsymbol"]);
    },
    get C2622() {
      return C[2622] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2531] || CT.C2531, C[2532] || CT.C2532, C[2534] || CT.C2534, C[2535] || CT.C2535, C[2537] || CT.C2537, C[2538] || CT.C2538, C[2540] || CT.C2540, C[2541] || CT.C2541, C[2543] || CT.C2543, C[2544] || CT.C2544]);
    },
    get C2623() {
      return C[2623] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2546] || CT.C2546, C[2547] || CT.C2547]);
    },
    get C2624() {
      return C[2624] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2549] || CT.C2549, C[2550] || CT.C2550]);
    },
    get C2625() {
      return C[2625] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2552] || CT.C2552, C[2553] || CT.C2553, C[2555] || CT.C2555, C[2556] || CT.C2556]);
    },
    get C2626() {
      return C[2626] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2558] || CT.C2558, C[2559] || CT.C2559]);
    },
    get C2627() {
      return C[2627] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2561] || CT.C2561, C[2562] || CT.C2562, C[2564] || CT.C2564, C[2565] || CT.C2565, C[2567] || CT.C2567, C[2568] || CT.C2568, C[2570] || CT.C2570, C[2571] || CT.C2571]);
    },
    get C2628() {
      return C[2628] = dart.constMap(T$.StringL(), T$.StringL(), ["∏", "\\prod", "∐", "\\coprod", "∑", "\\sum", "⋀", "\\bigwedge", "⋁", "\\bigvee", "⋂", "\\bigcap", "⋃", "\\bigcup", "⨀", "\\bigodot", "⨁", "\\bigoplus", "⨂", "\\bigotimes", "⨄", "\\biguplus", "⨆", "\\bigsqcup"]);
    },
    get C2629() {
      return C[2629] = dart.constMap(T$.StringL(), T$.StringL(), ["∫", "\\int", "∬", "\\iint", "∭", "\\iiint", "∮", "\\oint", "∯", "\\oiint", "∰", "\\oiiint"]);
    },
    get C2630() {
      return C[2630] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2573] || CT.C2573, C[2574] || CT.C2574]);
    },
    get C2631() {
      return C[2631] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2576] || CT.C2576, C[2577] || CT.C2577]);
    },
    get C2632() {
      return C[2632] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2579] || CT.C2579, C[2580] || CT.C2580]);
    },
    get C2633() {
      return C[2633] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2582] || CT.C2582, C[2583] || CT.C2583]);
    },
    get C2634() {
      return C[2634] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2585] || CT.C2585, C[2586] || CT.C2586]);
    },
    get C2635() {
      return C[2635] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2588] || CT.C2588, C[2589] || CT.C2589]);
    },
    get C2636() {
      return C[2636] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2591] || CT.C2591, C[2592] || CT.C2592]);
    },
    get C2637() {
      return C[2637] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2594] || CT.C2594, C[2595] || CT.C2595]);
    },
    get C2638() {
      return C[2638] = dart.constMap(T$.ListLOfStringL(), T$.FunctionSpecLOfGreenNodeL(), [C[2597] || CT.C2597, C[2598] || CT.C2598]);
    },
    get C2639() {
      return C[2639] = dart.constMap(T$.StringL(), T$.intL(), ["0", 0, "1", 1, "2", 2, "3", 3, "4", 4, "5", 5, "6", 6, "7", 7, "8", 8, "9", 9, "a", 10, "A", 10, "b", 11, "B", 11, "c", 12, "C", 12, "d", 13, "D", 13, "e", 14, "E", 14, "f", 15, "F", 15]);
    },
    get C2640() {
      return C[2640] = dart.constMap(T$.StringL(), T$.StringL(), [",", "\\dotsc", "\\not", "\\dotsb", "+", "\\dotsb", "=", "\\dotsb", "<", "\\dotsb", ">", "\\dotsb", "-", "\\dotsb", "*", "\\dotsb", ":", "\\dotsb", "\\DOTSB", "\\dotsb", "\\coprod", "\\dotsb", "\\bigvee", "\\dotsb", "\\bigwedge", "\\dotsb", "\\biguplus", "\\dotsb", "\\bigcap", "\\dotsb", "\\bigcup", "\\dotsb", "\\prod", "\\dotsb", "\\sum", "\\dotsb", "\\bigotimes", "\\dotsb", "\\bigoplus", "\\dotsb", "\\bigodot", "\\dotsb", "\\bigsqcup", "\\dotsb", "\\And", "\\dotsb", "\\longrightarrow", "\\dotsb", "\\Longrightarrow", "\\dotsb", "\\longleftarrow", "\\dotsb", "\\Longleftarrow", "\\dotsb", "\\longleftrightarrow", "\\dotsb", "\\Longleftrightarrow", "\\dotsb", "\\mapsto", "\\dotsb", "\\longmapsto", "\\dotsb", "\\hookrightarrow", "\\dotsb", "\\doteq", "\\dotsb", "\\mathbin", "\\dotsb", "\\mathrel", "\\dotsb", "\\relbar", "\\dotsb", "\\Relbar", "\\dotsb", "\\xrightarrow", "\\dotsb", "\\xleftarrow", "\\dotsb", "\\DOTSI", "\\dotsi", "\\int", "\\dotsi", "\\oint", "\\dotsi", "\\iint", "\\dotsi", "\\iiint", "\\dotsi", "\\iiiint", "\\dotsi", "\\idotsint", "\\dotsi", "\\DOTSX", "\\dotsx"]);
    },
    get C2641() {
      return C[2641] = dart.const({
        __proto__: settings.Strict.prototype,
        [S._name$6]: "Strict.function",
        index: 3
      });
    },
    get C2642() {
      return C[2642] = dart.constList([C[122] || CT.C122, C[121] || CT.C121, C[123] || CT.C123, C[2641] || CT.C2641], T$.StrictL());
    },
    get C2643() {
      return C[2643] = dart.fn(selectable.SelectableMath.defaultOnErrorFallback, T$.FlutterMathExceptionToWidget());
    },
    get C2644() {
      return C[2644] = dart.const({
        __proto__: editable_text.ToolbarOptions.prototype,
        [S$.ToolbarOptions_selectAll]: true,
        [S$.ToolbarOptions_paste]: false,
        [S$.ToolbarOptions_cut]: false,
        [S$.ToolbarOptions_copy]: true
      });
    },
    get C2645() {
      return C[2645] = dart.const({
        __proto__: ui.Radius.prototype,
        [S$.Radius_y]: 2,
        [S$.Radius_x]: 2
      });
    },
    get C2648() {
      return C[2648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "ast",
        [S._Location_column]: 9,
        [S._Location_line]: 313,
        [S._Location_file]: null
      });
    },
    get C2649() {
      return C[2649] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "autofocus",
        [S._Location_column]: 9,
        [S._Location_line]: 314,
        [S._Location_file]: null
      });
    },
    get C2650() {
      return C[2650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorColor",
        [S._Location_column]: 9,
        [S._Location_line]: 315,
        [S._Location_file]: null
      });
    },
    get C2651() {
      return C[2651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorOffset",
        [S._Location_column]: 9,
        [S._Location_line]: 316,
        [S._Location_file]: null
      });
    },
    get C2652() {
      return C[2652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorOpacityAnimates",
        [S._Location_column]: 9,
        [S._Location_line]: 317,
        [S._Location_file]: null
      });
    },
    get C2653() {
      return C[2653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorRadius",
        [S._Location_column]: 9,
        [S._Location_line]: 318,
        [S._Location_file]: null
      });
    },
    get C2654() {
      return C[2654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorWidth",
        [S._Location_column]: 9,
        [S._Location_line]: 319,
        [S._Location_file]: null
      });
    },
    get C2655() {
      return C[2655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursorHeight",
        [S._Location_column]: 9,
        [S._Location_line]: 320,
        [S._Location_file]: null
      });
    },
    get C2656() {
      return C[2656] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "dragStartBehavior",
        [S._Location_column]: 9,
        [S._Location_line]: 321,
        [S._Location_file]: null
      });
    },
    get C2657() {
      return C[2657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "enableInteractiveSelection",
        [S._Location_column]: 9,
        [S._Location_line]: 322,
        [S._Location_file]: null
      });
    },
    get C2658() {
      return C[2658] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "focusNode",
        [S._Location_column]: 9,
        [S._Location_line]: 323,
        [S._Location_file]: null
      });
    },
    get C2659() {
      return C[2659] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "forcePressEnabled",
        [S._Location_column]: 9,
        [S._Location_line]: 324,
        [S._Location_file]: null
      });
    },
    get C2660() {
      return C[2660] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "options",
        [S._Location_column]: 9,
        [S._Location_line]: 325,
        [S._Location_file]: null
      });
    },
    get C2661() {
      return C[2661] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "paintCursorAboveText",
        [S._Location_column]: 9,
        [S._Location_line]: 326,
        [S._Location_file]: null
      });
    },
    get C2662() {
      return C[2662] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "selectionColor",
        [S._Location_column]: 9,
        [S._Location_line]: 327,
        [S._Location_file]: null
      });
    },
    get C2663() {
      return C[2663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "showCursor",
        [S._Location_column]: 9,
        [S._Location_line]: 328,
        [S._Location_file]: null
      });
    },
    get C2664() {
      return C[2664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "textSelectionControls",
        [S._Location_column]: 9,
        [S._Location_line]: 329,
        [S._Location_file]: null
      });
    },
    get C2665() {
      return C[2665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "toolbarOptions",
        [S._Location_column]: 9,
        [S._Location_line]: 330,
        [S._Location_file]: null
      });
    },
    get C2647() {
      return C[2647] = dart.constList([C[2648] || CT.C2648, C[2649] || CT.C2649, C[2650] || CT.C2650, C[2651] || CT.C2651, C[2652] || CT.C2652, C[2653] || CT.C2653, C[2654] || CT.C2654, C[2655] || CT.C2655, C[2656] || CT.C2656, C[2657] || CT.C2657, C[2658] || CT.C2658, C[2659] || CT.C2659, C[2660] || CT.C2660, C[2661] || CT.C2661, C[2662] || CT.C2662, C[2663] || CT.C2663, C[2664] || CT.C2664, C[2665] || CT.C2665], T$._LocationL());
    },
    get C2646() {
      return C[2646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2647] || CT.C2647,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 312,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2668() {
      return C[2668] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 7,
        [S._Location_line]: 312,
        [S._Location_file]: null
      });
    },
    get C2667() {
      return C[2667] = dart.constList([C[2668] || CT.C2668], T$._LocationL());
    },
    get C2666() {
      return C[2666] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2667] || CT.C2667,
        [S._Location_name]: null,
        [S._Location_column]: 12,
        [S._Location_line]: 311,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2671() {
      return C[2671] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 30,
        [S._Location_line]: 503,
        [S._Location_file]: null
      });
    },
    get C2670() {
      return C[2670] = dart.constList([C[2671] || CT.C2671], T$._LocationL());
    },
    get C2669() {
      return C[2669] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2670] || CT.C2670,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 503,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2674() {
      return C[2674] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 44,
        [S._Location_line]: 504,
        [S._Location_file]: null
      });
    },
    get C2673() {
      return C[2673] = dart.constList([C[2674] || CT.C2674], T$._LocationL());
    },
    get C2672() {
      return C[2672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2673] || CT.C2673,
        [S._Location_name]: null,
        [S._Location_column]: 38,
        [S._Location_line]: 504,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2677() {
      return C[2677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "create",
        [S._Location_column]: 17,
        [S._Location_line]: 506,
        [S._Location_file]: null
      });
    },
    get C2678() {
      return C[2678] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "update",
        [S._Location_column]: 17,
        [S._Location_line]: 507,
        [S._Location_file]: null
      });
    },
    get C2676() {
      return C[2676] = dart.constList([C[2677] || CT.C2677, C[2678] || CT.C2678], T$._LocationL());
    },
    get C2675() {
      return C[2675] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2676] || CT.C2676,
        [S._Location_name]: null,
        [S._Location_column]: 15,
        [S._Location_line]: 505,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2681() {
      return C[2681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 17,
        [S._Location_line]: 510,
        [S._Location_file]: null
      });
    },
    get C2680() {
      return C[2680] = dart.constList([C[2681] || CT.C2681], T$._LocationL());
    },
    get C2679() {
      return C[2679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2680] || CT.C2680,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 509,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2684() {
      return C[2684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 17,
        [S._Location_line]: 521,
        [S._Location_file]: null
      });
    },
    get C2683() {
      return C[2683] = dart.constList([C[2684] || CT.C2684], T$._LocationL());
    },
    get C2682() {
      return C[2682] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2683] || CT.C2683,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 520,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2687() {
      return C[2687] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "value",
        [S._Location_column]: 30,
        [S._Location_line]: 525,
        [S._Location_file]: null
      });
    },
    get C2686() {
      return C[2686] = dart.constList([C[2687] || CT.C2687], T$._LocationL());
    },
    get C2685() {
      return C[2685] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2686] || CT.C2686,
        [S._Location_name]: null,
        [S._Location_column]: 24,
        [S._Location_line]: 525,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2690() {
      return C[2690] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "providers",
        [S._Location_column]: 13,
        [S._Location_line]: 502,
        [S._Location_file]: null
      });
    },
    get C2691() {
      return C[2691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 13,
        [S._Location_line]: 527,
        [S._Location_file]: null
      });
    },
    get C2689() {
      return C[2689] = dart.constList([C[2690] || CT.C2690, C[2691] || CT.C2691], T$._LocationL());
    },
    get C2688() {
      return C[2688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2689] || CT.C2689,
        [S._Location_name]: null,
        [S._Location_column]: 18,
        [S._Location_line]: 501,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2694() {
      return C[2694] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "link",
        [S._Location_column]: 11,
        [S._Location_line]: 500,
        [S._Location_file]: null
      });
    },
    get C2695() {
      return C[2695] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 11,
        [S._Location_line]: 501,
        [S._Location_file]: null
      });
    },
    get C2693() {
      return C[2693] = dart.constList([C[2694] || CT.C2694, C[2695] || CT.C2695], T$._LocationL());
    },
    get C2692() {
      return C[2692] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2693] || CT.C2693,
        [S._Location_name]: null,
        [S._Location_column]: 16,
        [S._Location_line]: 499,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2698() {
      return C[2698] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "cursor",
        [S._Location_column]: 9,
        [S._Location_line]: 498,
        [S._Location_file]: null
      });
    },
    get C2699() {
      return C[2699] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: null,
        [S._Location_name]: "child",
        [S._Location_column]: 9,
        [S._Location_line]: 499,
        [S._Location_file]: null
      });
    },
    get C2697() {
      return C[2697] = dart.constList([C[2698] || CT.C2698, C[2699] || CT.C2699], T$._LocationL());
    },
    get C2696() {
      return C[2696] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_parameterLocations]: C[2697] || CT.C2697,
        [S._Location_name]: null,
        [S._Location_column]: 14,
        [S._Location_line]: 497,
        [S._Location_file]: "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart"
      });
    },
    get C2700() {
      return C[2700] = dart.const({
        __proto__: ui.TextBaseline.prototype,
        [S._name$2]: "TextBaseline.alphabetic",
        index: 0
      });
    },
    get C2701() {
      return C[2701] = dart.constList([], T$.WidgetL());
    },
    get C2702() {
      return C[2702] = dart.fn(line_editable.emptyPaintFunction, T$.PaintingContextAndOffsetTovoid());
    },
    get C2703() {
      return C[2703] = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [S$.BoxConstraints_maxHeight]: 1 / 0,
        [S$.BoxConstraints_minHeight]: 0,
        [S$.BoxConstraints_maxWidth]: 1 / 0,
        [S$.BoxConstraints_minWidth]: 0
      });
    },
    get C2705() {
      return C[2705] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.cssEm",
        index: 16
      });
    },
    get C2704() {
      return C[2704] = dart.const({
        __proto__: size$.Measurement.prototype,
        [S.Measurement_unit]: C[2705] || CT.C2705,
        [S.Measurement_value]: 0.12
      });
    },
    get C2706() {
      return C[2706] = dart.constList([], T$.BuildResultN());
    },
    get C2707() {
      return C[2707] = dart.constList([C[1239] || CT.C1239, C[185] || CT.C185, C[183] || CT.C183, C[179] || CT.C179, C[184] || CT.C184, C[180] || CT.C180, C[181] || CT.C181, C[1736] || CT.C1736, C[1743] || CT.C1743], T$.AtomTypeL());
    },
    get C2710() {
      return C[2710] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2711() {
      return C[2711] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2712() {
      return C[2712] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2713() {
      return C[2713] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2714() {
      return C[2714] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2715() {
      return C[2715] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0.16667
      });
    },
    get C2716() {
      return C[2716] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2717() {
      return C[2717] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0.16667
      });
    },
    get C2718() {
      return C[2718] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2719() {
      return C[2719] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2720() {
      return C[2720] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.025,
        [S.CharacterMetrics_height]: 0.675,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2721() {
      return C[2721] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.15559
      });
    },
    get C2722() {
      return C[2722] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54028,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2723() {
      return C[2723] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 2.33334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.825,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2724() {
      return C[2724] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 2.33334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.9,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2725() {
      return C[2725] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58167,
        [S.CharacterMetrics_depth]: 0.08167
      });
    },
    get C2726() {
      return C[2726] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04028,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2727() {
      return C[2727] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.275,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2728() {
      return C[2728] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2729() {
      return C[2729] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2730() {
      return C[2730] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.46402,
        [S.CharacterMetrics_depth]: -0.03598
      });
    },
    get C2731() {
      return C[2731] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.36687,
        [S.CharacterMetrics_depth]: -0.13313
      });
    },
    get C2732() {
      return C[2732] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52239,
        [S.CharacterMetrics_depth]: 0.01354
      });
    },
    get C2733() {
      return C[2733] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.11111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52239,
        [S.CharacterMetrics_depth]: 0.01354
      });
    },
    get C2734() {
      return C[2734] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2735() {
      return C[2735] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.37788,
        [S.CharacterMetrics_depth]: -0.13313
      });
    },
    get C2736() {
      return C[2736] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2737() {
      return C[2737] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2738() {
      return C[2738] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58198,
        [S.CharacterMetrics_depth]: 0.08198
      });
    },
    get C2739() {
      return C[2739] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2740() {
      return C[2740] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.675,
        [S.CharacterMetrics_depth]: 0.1808
      });
    },
    get C2741() {
      return C[2741] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2742() {
      return C[2742] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63667,
        [S.CharacterMetrics_depth]: 0.13667
      });
    },
    get C2743() {
      return C[2743] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.37788,
        [S.CharacterMetrics_depth]: -0.13313
      });
    },
    get C2744() {
      return C[2744] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.437,
        [S.CharacterMetrics_depth]: -0.064
      });
    },
    get C2745() {
      return C[2745] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.825,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2746() {
      return C[2746] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.42917,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2747() {
      return C[2747] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.08198
      });
    },
    get C2748() {
      return C[2748] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2749() {
      return C[2749] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2750() {
      return C[2750] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52239,
        [S.CharacterMetrics_depth]: 0.03517
      });
    },
    get C2751() {
      return C[2751] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.22222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58167,
        [S.CharacterMetrics_depth]: 0.08167
      });
    },
    get C2752() {
      return C[2752] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74111,
        [S.CharacterMetrics_depth]: 0.25142
      });
    },
    get C2753() {
      return C[2753] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58167,
        [S.CharacterMetrics_depth]: 0.08167
      });
    },
    get C2754() {
      return C[2754] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74111,
        [S.CharacterMetrics_depth]: 0.25142
      });
    },
    get C2755() {
      return C[2755] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2756() {
      return C[2756] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.36687,
        [S.CharacterMetrics_depth]: -0.13313
      });
    },
    get C2757() {
      return C[2757] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.37788,
        [S.CharacterMetrics_depth]: -0.13313
      });
    },
    get C2758() {
      return C[2758] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.46375,
        [S.CharacterMetrics_depth]: -0.03625
      });
    },
    get C2759() {
      return C[2759] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.79383,
        [S.CharacterMetrics_depth]: 0.30274
      });
    },
    get C2760() {
      return C[2760] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.48312,
        [S.CharacterMetrics_depth]: -0.01688
      });
    },
    get C2761() {
      return C[2761] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0.06062
      });
    },
    get C2762() {
      return C[2762] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.72958,
        [S.CharacterMetrics_depth]: 0.22958
      });
    },
    get C2763() {
      return C[2763] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.91667,
        [S.CharacterMetrics_depth]: 0.08198
      });
    },
    get C2764() {
      return C[2764] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75583,
        [S.CharacterMetrics_depth]: 0.25583
      });
    },
    get C2765() {
      return C[2765] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75726,
        [S.CharacterMetrics_depth]: 0.25142
      });
    },
    get C2766() {
      return C[2766] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75583,
        [S.CharacterMetrics_depth]: 0.25583
      });
    },
    get C2767() {
      return C[2767] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.70576,
        [S.CharacterMetrics_depth]: 0.20576
      });
    },
    get C2768() {
      return C[2768] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.675,
        [S.CharacterMetrics_depth]: 0.1808
      });
    },
    get C2769() {
      return C[2769] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63667,
        [S.CharacterMetrics_depth]: 0.13667
      });
    },
    get C2770() {
      return C[2770] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63597,
        [S.CharacterMetrics_depth]: 0.13597
      });
    },
    get C2771() {
      return C[2771] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0.03517
      });
    },
    get C2772() {
      return C[2772] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.675,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2773() {
      return C[2773] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2774() {
      return C[2774] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2775() {
      return C[2775] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.11111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2776() {
      return C[2776] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2777() {
      return C[2777] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2778() {
      return C[2778] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2779() {
      return C[2779] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.46402,
        [S.CharacterMetrics_depth]: -0.03598
      });
    },
    get C2780() {
      return C[2780] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76042,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2781() {
      return C[2781] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2782() {
      return C[2782] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.5391,
        [S.CharacterMetrics_depth]: 0.0391
      });
    },
    get C2783() {
      return C[2783] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.33334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0.03517
      });
    },
    get C2784() {
      return C[2784] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.88569,
        [S.CharacterMetrics_depth]: 0.38569
      });
    },
    get C2785() {
      return C[2785] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74111,
        [S.CharacterMetrics_depth]: 0.23222
      });
    },
    get C2786() {
      return C[2786] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2787() {
      return C[2787] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.90222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.15559
      });
    },
    get C2788() {
      return C[2788] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.37788,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2789() {
      return C[2789] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68889,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2790() {
      return C[2790] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74111,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2791() {
      return C[2791] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54986,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2792() {
      return C[2792] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.11111
      });
    },
    get C2793() {
      return C[2793] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2794() {
      return C[2794] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69224,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2795() {
      return C[2795] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75583,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2796() {
      return C[2796] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75726,
        [S.CharacterMetrics_depth]: 0.26167
      });
    },
    get C2797() {
      return C[2797] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.98256,
        [S.CharacterMetrics_depth]: 0.48256
      });
    },
    get C2798() {
      return C[2798] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.79383,
        [S.CharacterMetrics_depth]: 0.28481
      });
    },
    get C2799() {
      return C[2799] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.91951,
        [S.CharacterMetrics_depth]: 0.41951
      });
    },
    get C2709() {
      return C[2709] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [65, C[2710] || CT.C2710, 66, C[2711] || CT.C2711, 67, C[2710] || CT.C2710, 68, C[2710] || CT.C2710, 69, C[2711] || CT.C2711, 70, C[2712] || CT.C2712, 71, C[2713] || CT.C2713, 72, C[2713] || CT.C2713, 73, C[2714] || CT.C2714, 74, C[2715] || CT.C2715, 75, C[2713] || CT.C2713, 76, C[2711] || CT.C2711, 77, C[2716] || CT.C2716, 78, C[2710] || CT.C2710, 79, C[2717] || CT.C2717, 80, C[2712] || CT.C2712, 81, C[2717] || CT.C2717, 82, C[2710] || CT.C2710, 83, C[2718] || CT.C2718, 84, C[2711] || CT.C2711, 85, C[2710] || CT.C2710, 86, C[2710] || CT.C2710, 87, C[2719] || CT.C2719, 88, C[2710] || CT.C2710, 89, C[2710] || CT.C2710, 90, C[2711] || CT.C2711, 107, C[2718] || CT.C2718, 165, C[2720] || CT.C2720, 174, C[2721] || CT.C2721, 240, C[2718] || CT.C2718, 295, C[2722] || CT.C2722, 710, C[2723] || CT.C2723, 732, C[2724] || CT.C2724, 770, C[2723] || CT.C2723, 771, C[2724] || CT.C2724, 989, C[2725] || CT.C2725, 1008, C[2726] || CT.C2726, 8245, C[2727] || CT.C2727, 8463, C[2722] || CT.C2722, 8487, C[2710] || CT.C2710, 8498, C[2718] || CT.C2718, 8502, C[2711] || CT.C2711, 8503, C[2728] || CT.C2728, 8504, C[2711] || CT.C2711, 8513, C[2729] || CT.C2729, 8592, C[2730] || CT.C2730, 8594, C[2730] || CT.C2730, 8602, C[2731] || CT.C2731, 8603, C[2731] || CT.C2731, 8606, C[2732] || CT.C2732, 8608, C[2732] || CT.C2732, 8610, C[2733] || CT.C2733, 8611, C[2733] || CT.C2733, 8619, C[2734] || CT.C2734, 8620, C[2734] || CT.C2734, 8621, C[2735] || CT.C2735, 8622, C[2731] || CT.C2731, 8624, C[2736] || CT.C2736, 8625, C[2736] || CT.C2736, 8630, C[2737] || CT.C2737, 8631, C[2737] || CT.C2737, 8634, C[2738] || CT.C2738, 8635, C[2738] || CT.C2738, 8638, C[2739] || CT.C2739, 8639, C[2739] || CT.C2739, 8642, C[2739] || CT.C2739, 8643, C[2739] || CT.C2739, 8644, C[2740] || CT.C2740, 8646, C[2740] || CT.C2740, 8647, C[2740] || CT.C2740, 8648, C[2741] || CT.C2741, 8649, C[2740] || CT.C2740, 8650, C[2741] || CT.C2741, 8651, C[2732] || CT.C2732, 8652, C[2732] || CT.C2732, 8653, C[2731] || CT.C2731, 8654, C[2731] || CT.C2731, 8655, C[2731] || CT.C2731, 8666, C[2742] || CT.C2742, 8667, C[2742] || CT.C2742, 8669, C[2743] || CT.C2743, 8672, C[2744] || CT.C2744, 8674, C[2744] || CT.C2744, 8705, C[2745] || CT.C2745, 8708, C[2718] || CT.C2718, 8709, C[2725] || CT.C2725, 8717, C[2746] || CT.C2746, 8722, C[2730] || CT.C2730, 8724, C[2747] || CT.C2747, 8726, C[2725] || CT.C2725, 8733, C[2748] || CT.C2748, 8736, C[2749] || CT.C2749, 8737, C[2749] || CT.C2749, 8738, C[2750] || CT.C2750, 8739, C[2751] || CT.C2751, 8740, C[2752] || CT.C2752, 8741, C[2753] || CT.C2753, 8742, C[2754] || CT.C2754, 8756, C[2755] || CT.C2755, 8757, C[2755] || CT.C2755, 8764, C[2756] || CT.C2756, 8765, C[2757] || CT.C2757, 8769, C[2756] || CT.C2756, 8770, C[2758] || CT.C2758, 8774, C[2759] || CT.C2759, 8776, C[2760] || CT.C2760, 8778, C[2725] || CT.C2725, 8782, C[2761] || CT.C2761, 8783, C[2761] || CT.C2761, 8785, C[2738] || CT.C2738, 8786, C[2738] || CT.C2738, 8787, C[2738] || CT.C2738, 8790, C[2748] || CT.C2748, 8791, C[2762] || CT.C2762, 8796, C[2763] || CT.C2763, 8806, C[2764] || CT.C2764, 8807, C[2764] || CT.C2764, 8808, C[2765] || CT.C2765, 8809, C[2765] || CT.C2765, 8812, C[2766] || CT.C2766, 8814, C[2767] || CT.C2767, 8815, C[2767] || CT.C2767, 8816, C[2759] || CT.C2759, 8817, C[2759] || CT.C2759, 8818, C[2762] || CT.C2762, 8819, C[2762] || CT.C2762, 8822, C[2768] || CT.C2768, 8823, C[2768] || CT.C2768, 8828, C[2769] || CT.C2769, 8829, C[2769] || CT.C2769, 8830, C[2762] || CT.C2762, 8831, C[2762] || CT.C2762, 8832, C[2767] || CT.C2767, 8833, C[2767] || CT.C2767, 8840, C[2759] || CT.C2759, 8841, C[2759] || CT.C2759, 8842, C[2770] || CT.C2770, 8843, C[2770] || CT.C2770, 8847, C[2771] || CT.C2771, 8848, C[2771] || CT.C2771, 8858, C[2738] || CT.C2738, 8859, C[2738] || CT.C2738, 8861, C[2738] || CT.C2738, 8862, C[2772] || CT.C2772, 8863, C[2772] || CT.C2772, 8864, C[2772] || CT.C2772, 8865, C[2772] || CT.C2772, 8872, C[2773] || CT.C2773, 8873, C[2749] || CT.C2749, 8874, C[2774] || CT.C2774, 8876, C[2712] || CT.C2712, 8877, C[2712] || CT.C2712, 8878, C[2710] || CT.C2710, 8879, C[2710] || CT.C2710, 8882, C[2771] || CT.C2771, 8883, C[2771] || CT.C2771, 8884, C[2769] || CT.C2769, 8885, C[2769] || CT.C2769, 8888, C[2775] || CT.C2775, 8890, C[2776] || CT.C2776, 8891, C[2777] || CT.C2777, 8892, C[2777] || CT.C2777, 8901, C[2778] || CT.C2778, 8903, C[2725] || CT.C2725, 8905, C[2725] || CT.C2725, 8906, C[2725] || CT.C2725, 8907, C[2748] || CT.C2748, 8908, C[2748] || CT.C2748, 8909, C[2779] || CT.C2779, 8910, C[2780] || CT.C2780, 8911, C[2780] || CT.C2780, 8912, C[2771] || CT.C2771, 8913, C[2771] || CT.C2771, 8914, C[2781] || CT.C2781, 8915, C[2781] || CT.C2781, 8916, C[2755] || CT.C2755, 8918, C[2782] || CT.C2782, 8919, C[2782] || CT.C2782, 8920, C[2783] || CT.C2783, 8921, C[2783] || CT.C2783, 8922, C[2784] || CT.C2784, 8923, C[2784] || CT.C2784, 8926, C[2769] || CT.C2769, 8927, C[2769] || CT.C2769, 8928, C[2759] || CT.C2759, 8929, C[2759] || CT.C2759, 8934, C[2785] || CT.C2785, 8935, C[2785] || CT.C2785, 8936, C[2785] || CT.C2785, 8937, C[2785] || CT.C2785, 8938, C[2767] || CT.C2767, 8939, C[2767] || CT.C2767, 8940, C[2759] || CT.C2759, 8941, C[2759] || CT.C2759, 8994, C[2786] || CT.C2786, 8995, C[2786] || CT.C2786, 9416, C[2787] || CT.C2787, 9484, C[2736] || CT.C2736, 9488, C[2736] || CT.C2736, 9492, C[2788] || CT.C2788, 9496, C[2788] || CT.C2788, 9585, C[2789] || CT.C2789, 9586, C[2790] || CT.C2790, 9632, C[2772] || CT.C2772, 9633, C[2772] || CT.C2772, 9650, C[2791] || CT.C2791, 9651, C[2791] || CT.C2791, 9654, C[2771] || CT.C2771, 9660, C[2791] || CT.C2791, 9661, C[2791] || CT.C2791, 9664, C[2771] || CT.C2771, 9674, C[2792] || CT.C2792, 9733, C[2793] || CT.C2793, 10003, C[2794] || CT.C2794, 10016, C[2794] || CT.C2794, 10731, C[2792] || CT.C2792, 10846, C[2795] || CT.C2795, 10877, C[2769] || CT.C2769, 10878, C[2769] || CT.C2769, 10885, C[2764] || CT.C2764, 10886, C[2764] || CT.C2764, 10887, C[2770] || CT.C2770, 10888, C[2770] || CT.C2770, 10889, C[2796] || CT.C2796, 10890, C[2796] || CT.C2796, 10891, C[2797] || CT.C2797, 10892, C[2797] || CT.C2797, 10901, C[2769] || CT.C2769, 10902, C[2769] || CT.C2769, 10933, C[2765] || CT.C2765, 10934, C[2765] || CT.C2765, 10935, C[2796] || CT.C2796, 10936, C[2796] || CT.C2796, 10937, C[2796] || CT.C2796, 10938, C[2796] || CT.C2796, 10949, C[2764] || CT.C2764, 10950, C[2764] || CT.C2764, 10955, C[2798] || CT.C2798, 10956, C[2798] || CT.C2798, 57350, C[2751] || CT.C2751, 57351, C[2753] || CT.C2753, 57352, C[2725] || CT.C2725, 57353, C[2726] || CT.C2726, 57356, C[2765] || CT.C2765, 57357, C[2765] || CT.C2765, 57358, C[2799] || CT.C2799, 57359, C[2759] || CT.C2759, 57360, C[2759] || CT.C2759, 57361, C[2799] || CT.C2799, 57366, C[2765] || CT.C2765, 57367, C[2765] || CT.C2765, 57368, C[2765] || CT.C2765, 57369, C[2765] || CT.C2765, 57370, C[2770] || CT.C2770, 57371, C[2770] || CT.C2770]);
    },
    get C2801() {
      return C[2801] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2802() {
      return C[2802] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2803() {
      return C[2803] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.64444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2804() {
      return C[2804] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79847,
        [S.CharacterMetrics_skew]: 0.19445,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2805() {
      return C[2805] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65681,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0.03041,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2806() {
      return C[2806] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52653,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0.05834,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2807() {
      return C[2807] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77139,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2808() {
      return C[2808] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.08944,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2809() {
      return C[2809] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71875,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.09931,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2810() {
      return C[2810] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59487,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.0593,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C2811() {
      return C[2811] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.84452,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.00965,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2812() {
      return C[2812] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54452,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07382,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2813() {
      return C[2813] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67778,
        [S.CharacterMetrics_skew]: 0.16667,
        [S.CharacterMetrics_italic]: 0.18472,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C2814() {
      return C[2814] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76195,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.01445,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2815() {
      return C[2815] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68972,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2816() {
      return C[2816] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.2009,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2817() {
      return C[2817] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82049,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.14736,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2818() {
      return C[2818] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79611,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2819() {
      return C[2819] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69556,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.08222,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2820() {
      return C[2820] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81667,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C2821() {
      return C[2821] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8475,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2822() {
      return C[2822] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60556,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0.075,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2823() {
      return C[2823] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54464,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.25417,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2824() {
      return C[2824] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62583,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.09931,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2825() {
      return C[2825] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08222,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2826() {
      return C[2826] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.98778,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.08222,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2827() {
      return C[2827] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7133,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0.14643,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2828() {
      return C[2828] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66834,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.08222,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C2829() {
      return C[2829] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72473,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0.07944,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2800() {
      return C[2800] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [48, C[2801] || CT.C2801, 49, C[2801] || CT.C2801, 50, C[2801] || CT.C2801, 51, C[2802] || CT.C2802, 52, C[2802] || CT.C2802, 53, C[2802] || CT.C2802, 54, C[2803] || CT.C2803, 55, C[2802] || CT.C2802, 56, C[2803] || CT.C2803, 57, C[2802] || CT.C2802, 65, C[2804] || CT.C2804, 66, C[2805] || CT.C2805, 67, C[2806] || CT.C2806, 68, C[2807] || CT.C2807, 69, C[2808] || CT.C2808, 70, C[2809] || CT.C2809, 71, C[2810] || CT.C2810, 72, C[2811] || CT.C2811, 73, C[2812] || CT.C2812, 74, C[2813] || CT.C2813, 75, C[2814] || CT.C2814, 76, C[2815] || CT.C2815, 77, C[2816] || CT.C2816, 78, C[2817] || CT.C2817, 79, C[2818] || CT.C2818, 80, C[2819] || CT.C2819, 81, C[2820] || CT.C2820, 82, C[2821] || CT.C2821, 83, C[2822] || CT.C2822, 84, C[2823] || CT.C2823, 85, C[2824] || CT.C2824, 86, C[2825] || CT.C2825, 87, C[2826] || CT.C2826, 88, C[2827] || CT.C2827, 89, C[2828] || CT.C2828, 90, C[2829] || CT.C2829]);
    },
    get C2831() {
      return C[2831] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.29574,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2832() {
      return C[2832] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.21471,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2833() {
      return C[2833] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73786,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2834() {
      return C[2834] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.21201,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2835() {
      return C[2835] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38865,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74947,
        [S.CharacterMetrics_depth]: 0.24982
      });
    },
    get C2836() {
      return C[2836] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27764,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62119,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2837() {
      return C[2837] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75623,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58283,
        [S.CharacterMetrics_depth]: 0.08319
      });
    },
    get C2838() {
      return C[2838] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27764,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.10803,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2839() {
      return C[2839] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50181,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74947,
        [S.CharacterMetrics_depth]: 0.24982
      });
    },
    get C2840() {
      return C[2840] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50181,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2841() {
      return C[2841] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50181,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2842() {
      return C[2842] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50181,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2843() {
      return C[2843] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.21606,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2844() {
      return C[2844] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.21606,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.12604
      });
    },
    get C2845() {
      return C[2845] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75623,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.36866,
        [S.CharacterMetrics_depth]: -0.13099
      });
    },
    get C2846() {
      return C[2846] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36245,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2847() {
      return C[2847] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7176,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2848() {
      return C[2848] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88397,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2849() {
      return C[2849] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61254,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2850() {
      return C[2850] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83158,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2851() {
      return C[2851] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2852() {
      return C[2852] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61119,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.12604
      });
    },
    get C2853() {
      return C[2853] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.78539,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2854() {
      return C[2854] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7203,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.06302
      });
    },
    get C2855() {
      return C[2855] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55448,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2856() {
      return C[2856] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55231,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.12604
      });
    },
    get C2857() {
      return C[2857] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66845,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2858() {
      return C[2858] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66602,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2859() {
      return C[2859] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.04953,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2860() {
      return C[2860] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83212,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2861() {
      return C[2861] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82699,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2862() {
      return C[2862] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82753,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2863() {
      return C[2863] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82699,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.03781
      });
    },
    get C2864() {
      return C[2864] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82807,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2865() {
      return C[2865] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82861,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2866() {
      return C[2866] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66899,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2867() {
      return C[2867] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64576,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2868() {
      return C[2868] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83131,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2869() {
      return C[2869] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.04602,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2870() {
      return C[2870] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71922,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2871() {
      return C[2871] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83293,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2872() {
      return C[2872] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60201,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.12604
      });
    },
    get C2873() {
      return C[2873] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27764,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.74947,
        [S.CharacterMetrics_depth]: 0.24982
      });
    },
    get C2874() {
      return C[2874] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49965,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2875() {
      return C[2875] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50046,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2876() {
      return C[2876] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51315,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2877() {
      return C[2877] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38946,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2878() {
      return C[2878] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49857,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62119,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2879() {
      return C[2879] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.40053,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2880() {
      return C[2880] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.32626,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2881() {
      return C[2881] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5037,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2882() {
      return C[2882] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52126,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2883() {
      return C[2883] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27899,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2884() {
      return C[2884] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.28088,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2885() {
      return C[2885] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38946,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2886() {
      return C[2886] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27953,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2887() {
      return C[2887] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76676,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2888() {
      return C[2888] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2889() {
      return C[2889] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48885,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2890() {
      return C[2890] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50046,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52396,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2891() {
      return C[2891] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48912,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2892() {
      return C[2892] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38919,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2893() {
      return C[2893] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44266,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2894() {
      return C[2894] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33301,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62119,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2895() {
      return C[2895] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5172,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2896() {
      return C[2896] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5118,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52396,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2897() {
      return C[2897] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77351,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52396,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2898() {
      return C[2898] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38865,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2899() {
      return C[2899] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49884,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2900() {
      return C[2900] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.39054,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2901() {
      return C[2901] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49749,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62119,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2902() {
      return C[2902] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.4983,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62119,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2903() {
      return C[2903] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33328,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2904() {
      return C[2904] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.32923,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2905() {
      return C[2905] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50343,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0.18906
      });
    },
    get C2906() {
      return C[2906] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33301,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69141,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2907() {
      return C[2907] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33409,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62119,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2908() {
      return C[2908] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50073,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47534,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2830() {
      return C[2830] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[2831] || CT.C2831, 34, C[2832] || CT.C2832, 38, C[2833] || CT.C2833, 39, C[2834] || CT.C2834, 40, C[2835] || CT.C2835, 41, C[2835] || CT.C2835, 42, C[2836] || CT.C2836, 43, C[2837] || CT.C2837, 44, C[2838] || CT.C2838, 45, C[2837] || CT.C2837, 46, C[2838] || CT.C2838, 47, C[2839] || CT.C2839, 48, C[2840] || CT.C2840, 49, C[2840] || CT.C2840, 50, C[2840] || CT.C2840, 51, C[2841] || CT.C2841, 52, C[2841] || CT.C2841, 53, C[2841] || CT.C2841, 54, C[2842] || CT.C2842, 55, C[2841] || CT.C2841, 56, C[2842] || CT.C2842, 57, C[2841] || CT.C2841, 58, C[2843] || CT.C2843, 59, C[2844] || CT.C2844, 61, C[2845] || CT.C2845, 63, C[2846] || CT.C2846, 65, C[2847] || CT.C2847, 66, C[2848] || CT.C2848, 67, C[2849] || CT.C2849, 68, C[2850] || CT.C2850, 69, C[2851] || CT.C2851, 70, C[2852] || CT.C2852, 71, C[2853] || CT.C2853, 72, C[2854] || CT.C2854, 73, C[2855] || CT.C2855, 74, C[2856] || CT.C2856, 75, C[2857] || CT.C2857, 76, C[2858] || CT.C2858, 77, C[2859] || CT.C2859, 78, C[2860] || CT.C2860, 79, C[2861] || CT.C2861, 80, C[2862] || CT.C2862, 81, C[2863] || CT.C2863, 82, C[2864] || CT.C2864, 83, C[2865] || CT.C2865, 84, C[2866] || CT.C2866, 85, C[2867] || CT.C2867, 86, C[2868] || CT.C2868, 87, C[2869] || CT.C2869, 88, C[2870] || CT.C2870, 89, C[2871] || CT.C2871, 90, C[2872] || CT.C2872, 91, C[2873] || CT.C2873, 93, C[2873] || CT.C2873, 94, C[2874] || CT.C2874, 97, C[2875] || CT.C2875, 98, C[2876] || CT.C2876, 99, C[2877] || CT.C2877, 100, C[2878] || CT.C2878, 101, C[2879] || CT.C2879, 102, C[2880] || CT.C2880, 103, C[2881] || CT.C2881, 104, C[2882] || CT.C2882, 105, C[2883] || CT.C2883, 106, C[2884] || CT.C2884, 107, C[2885] || CT.C2885, 108, C[2886] || CT.C2886, 109, C[2887] || CT.C2887, 110, C[2888] || CT.C2888, 111, C[2889] || CT.C2889, 112, C[2890] || CT.C2890, 113, C[2891] || CT.C2891, 114, C[2892] || CT.C2892, 115, C[2893] || CT.C2893, 116, C[2894] || CT.C2894, 117, C[2895] || CT.C2895, 118, C[2896] || CT.C2896, 119, C[2897] || CT.C2897, 120, C[2898] || CT.C2898, 121, C[2899] || CT.C2899, 122, C[2900] || CT.C2900, 8216, C[2832] || CT.C2832, 8217, C[2832] || CT.C2832, 58112, C[2901] || CT.C2901, 58113, C[2902] || CT.C2902, 58114, C[2903] || CT.C2903, 58115, C[2904] || CT.C2904, 58116, C[2905] || CT.C2905, 58117, C[2906] || CT.C2906, 58118, C[2907] || CT.C2907, 58119, C[2908] || CT.C2908]);
    },
    get C2910() {
      return C[2910] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2911() {
      return C[2911] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2912() {
      return C[2912] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.95833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2913() {
      return C[2913] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C2914() {
      return C[2914] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.95833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C2915() {
      return C[2915] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2916() {
      return C[2916] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2917() {
      return C[2917] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C2918() {
      return C[2918] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2919() {
      return C[2919] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63333,
        [S.CharacterMetrics_depth]: 0.13333
      });
    },
    get C2920() {
      return C[2920] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.15556,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2921() {
      return C[2921] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2922() {
      return C[2922] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.15556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2923() {
      return C[2923] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C2924() {
      return C[2924] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.64444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2925() {
      return C[2925] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2926() {
      return C[2926] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2927() {
      return C[2927] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58556,
        [S.CharacterMetrics_depth]: 0.08556
      });
    },
    get C2928() {
      return C[2928] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.39111,
        [S.CharacterMetrics_depth]: -0.10889
      });
    },
    get C2929() {
      return C[2929] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54305,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2930() {
      return C[2930] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2931() {
      return C[2931] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81805,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2932() {
      return C[2932] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2933() {
      return C[2933] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88194,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2934() {
      return C[2934] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2935() {
      return C[2935] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2936() {
      return C[2936] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.90416,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2937() {
      return C[2937] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.9,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2938() {
      return C[2938] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.43611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2939() {
      return C[2939] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2940() {
      return C[2940] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.90138,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2941() {
      return C[2941] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69166,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2942() {
      return C[2942] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.09166,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2943() {
      return C[2943] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86388,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2944() {
      return C[2944] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.78611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2945() {
      return C[2945] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86388,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2946() {
      return C[2946] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8625,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2947() {
      return C[2947] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2948() {
      return C[2948] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2949() {
      return C[2949] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88472,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2950() {
      return C[2950] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01597,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2951() {
      return C[2951] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.18888,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01597,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2952() {
      return C[2952] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02875,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2953() {
      return C[2953] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2954() {
      return C[2954] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C2955() {
      return C[2955] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2956() {
      return C[2956] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.13444,
        [S.CharacterMetrics_depth]: 0.31
      });
    },
    get C2957() {
      return C[2957] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55902,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2958() {
      return C[2958] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2959() {
      return C[2959] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2960() {
      return C[2960] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52708,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2961() {
      return C[2961] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35139,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10903,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2962() {
      return C[2962] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01597,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2963() {
      return C[2963] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35139,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2964() {
      return C[2964] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2965() {
      return C[2965] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.95833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2966() {
      return C[2966] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2967() {
      return C[2967] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2968() {
      return C[2968] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2969() {
      return C[2969] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2970() {
      return C[2970] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2971() {
      return C[2971] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.45361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2972() {
      return C[2972] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63492,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2973() {
      return C[2973] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01597,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2974() {
      return C[2974] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01597,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2975() {
      return C[2975] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2976() {
      return C[2976] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01597,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2977() {
      return C[2977] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.34444,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C2978() {
      return C[2978] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2979() {
      return C[2979] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2980() {
      return C[2980] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.17014
      });
    },
    get C2981() {
      return C[2981] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.04166,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2982() {
      return C[2982] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.73472,
        [S.CharacterMetrics_depth]: 0.04861
      });
    },
    get C2983() {
      return C[2983] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2984() {
      return C[2984] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2985() {
      return C[2985] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.54167,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C2986() {
      return C[2986] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.16944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2987() {
      return C[2987] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2988() {
      return C[2988] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35139,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2989() {
      return C[2989] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63194,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2990() {
      return C[2990] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.59611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2991() {
      return C[2991] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.95833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2992() {
      return C[2992] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2993() {
      return C[2993] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2994() {
      return C[2994] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2995() {
      return C[2995] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2996() {
      return C[2996] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2997() {
      return C[2997] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2998() {
      return C[2998] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.34444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.55556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C2999() {
      return C[2999] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15486,
        [S.CharacterMetrics_height]: 0.72444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3000() {
      return C[3000] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66759,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3001() {
      return C[3001] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3002() {
      return C[3002] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3003() {
      return C[3003] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74027,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3004() {
      return C[3004] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3005() {
      return C[3005] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.39111,
        [S.CharacterMetrics_depth]: -0.10889
      });
    },
    get C3006() {
      return C[3006] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3007() {
      return C[3007] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3008() {
      return C[3008] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3009() {
      return C[3009] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3010() {
      return C[3010] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62847,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06389,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3011() {
      return C[3011] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58556,
        [S.CharacterMetrics_depth]: 0.08556
      });
    },
    get C3012() {
      return C[3012] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47222,
        [S.CharacterMetrics_depth]: -0.02778
      });
    },
    get C3013() {
      return C[3013] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.575,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47361,
        [S.CharacterMetrics_depth]: -0.02639
      });
    },
    get C3014() {
      return C[3014] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.95833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.82,
        [S.CharacterMetrics_depth]: 0.18
      });
    },
    get C3015() {
      return C[3015] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3016() {
      return C[3016] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.55556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3017() {
      return C[3017] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12778,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3018() {
      return C[3018] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3019() {
      return C[3019] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.50222,
        [S.CharacterMetrics_depth]: 0.00222
      });
    },
    get C3020() {
      return C[3020] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52444,
        [S.CharacterMetrics_depth]: 0.02444
      });
    },
    get C3021() {
      return C[3021] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69667,
        [S.CharacterMetrics_depth]: 0.19667
      });
    },
    get C3022() {
      return C[3022] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58556,
        [S.CharacterMetrics_depth]: 0.08556
      });
    },
    get C3023() {
      return C[3023] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.47361,
        [S.CharacterMetrics_depth]: -0.02639
      });
    },
    get C3024() {
      return C[3024] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3025() {
      return C[3025] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.36111,
        [S.CharacterMetrics_depth]: -0.13889
      });
    },
    get C3026() {
      return C[3026] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.02222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3027() {
      return C[3027] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.12963
      });
    },
    get C3028() {
      return C[3028] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3029() {
      return C[3029] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3030() {
      return C[3030] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C2909() {
      return C[2909] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[2910] || CT.C2910, 34, C[2911] || CT.C2911, 35, C[2912] || CT.C2912, 36, C[2913] || CT.C2913, 37, C[2914] || CT.C2914, 38, C[2915] || CT.C2915, 39, C[2916] || CT.C2916, 40, C[2917] || CT.C2917, 41, C[2917] || CT.C2917, 42, C[2918] || CT.C2918, 43, C[2919] || CT.C2919, 44, C[2920] || CT.C2920, 45, C[2921] || CT.C2921, 46, C[2922] || CT.C2922, 47, C[2923] || CT.C2923, 48, C[2924] || CT.C2924, 49, C[2924] || CT.C2924, 50, C[2924] || CT.C2924, 51, C[2924] || CT.C2924, 52, C[2924] || CT.C2924, 53, C[2924] || CT.C2924, 54, C[2924] || CT.C2924, 55, C[2924] || CT.C2924, 56, C[2924] || CT.C2924, 57, C[2924] || CT.C2924, 58, C[2925] || CT.C2925, 59, C[2926] || CT.C2926, 60, C[2927] || CT.C2927, 61, C[2928] || CT.C2928, 62, C[2927] || CT.C2927, 63, C[2929] || CT.C2929, 64, C[2915] || CT.C2915, 65, C[2930] || CT.C2930, 66, C[2931] || CT.C2931, 67, C[2932] || CT.C2932, 68, C[2933] || CT.C2933, 69, C[2934] || CT.C2934, 70, C[2935] || CT.C2935, 71, C[2936] || CT.C2936, 72, C[2937] || CT.C2937, 73, C[2938] || CT.C2938, 74, C[2939] || CT.C2939, 75, C[2940] || CT.C2940, 76, C[2941] || CT.C2941, 77, C[2942] || CT.C2942, 78, C[2937] || CT.C2937, 79, C[2943] || CT.C2943, 80, C[2944] || CT.C2944, 81, C[2945] || CT.C2945, 82, C[2946] || CT.C2946, 83, C[2947] || CT.C2947, 84, C[2948] || CT.C2948, 85, C[2949] || CT.C2949, 86, C[2950] || CT.C2950, 87, C[2951] || CT.C2951, 88, C[2930] || CT.C2930, 89, C[2952] || CT.C2952, 90, C[2953] || CT.C2953, 91, C[2954] || CT.C2954, 92, C[2923] || CT.C2923, 93, C[2954] || CT.C2954, 94, C[2955] || CT.C2955, 95, C[2956] || CT.C2956, 97, C[2957] || CT.C2957, 98, C[2958] || CT.C2958, 99, C[2959] || CT.C2959, 100, C[2958] || CT.C2958, 101, C[2960] || CT.C2960, 102, C[2961] || CT.C2961, 103, C[2962] || CT.C2962, 104, C[2958] || CT.C2958, 105, C[2916] || CT.C2916, 106, C[2963] || CT.C2963, 107, C[2964] || CT.C2964, 108, C[2916] || CT.C2916, 109, C[2965] || CT.C2965, 110, C[2966] || CT.C2966, 111, C[2967] || CT.C2967, 112, C[2968] || CT.C2968, 113, C[2969] || CT.C2969, 114, C[2970] || CT.C2970, 115, C[2971] || CT.C2971, 116, C[2972] || CT.C2972, 117, C[2966] || CT.C2966, 118, C[2973] || CT.C2973, 119, C[2974] || CT.C2974, 120, C[2975] || CT.C2975, 121, C[2976] || CT.C2976, 122, C[2959] || CT.C2959, 123, C[2923] || CT.C2923, 124, C[2954] || CT.C2954, 125, C[2923] || CT.C2923, 126, C[2977] || CT.C2977, 168, C[2955] || CT.C2955, 172, C[2978] || CT.C2978, 176, C[2979] || CT.C2979, 177, C[2919] || CT.C2919, 184, C[2980] || CT.C2980, 198, C[2981] || CT.C2981, 215, C[2919] || CT.C2919, 216, C[2982] || CT.C2982, 223, C[2983] || CT.C2983, 230, C[2984] || CT.C2984, 247, C[2919] || CT.C2919, 248, C[2985] || CT.C2985, 305, C[2925] || CT.C2925, 338, C[2986] || CT.C2986, 339, C[2987] || CT.C2987, 567, C[2988] || CT.C2988, 710, C[2955] || CT.C2955, 711, C[2989] || CT.C2989, 713, C[2990] || CT.C2990, 714, C[2955] || CT.C2955, 715, C[2955] || CT.C2955, 728, C[2955] || CT.C2955, 729, C[2916] || CT.C2916, 730, C[2979] || CT.C2979, 732, C[2955] || CT.C2955, 733, C[2955] || CT.C2955, 915, C[2941] || CT.C2941, 916, C[2991] || CT.C2991, 920, C[2992] || CT.C2992, 923, C[2993] || CT.C2993, 926, C[2994] || CT.C2994, 928, C[2937] || CT.C2937, 931, C[2932] || CT.C2932, 933, C[2992] || CT.C2992, 934, C[2932] || CT.C2932, 936, C[2992] || CT.C2992, 937, C[2932] || CT.C2932, 8211, C[2995] || CT.C2995, 8212, C[2996] || CT.C2996, 8216, C[2916] || CT.C2916, 8217, C[2916] || CT.C2916, 8220, C[2911] || CT.C2911, 8221, C[2911] || CT.C2911, 8224, C[2997] || CT.C2997, 8225, C[2997] || CT.C2997, 8242, C[2998] || CT.C2998, 8407, C[2999] || CT.C2999, 8463, C[3000] || CT.C3000, 8465, C[3001] || CT.C3001, 8467, C[3002] || CT.C3002, 8472, C[3003] || CT.C3003, 8476, C[3001] || CT.C3001, 8501, C[3004] || CT.C3004, 8592, C[3005] || CT.C3005, 8593, C[3006] || CT.C3006, 8594, C[3005] || CT.C3005, 8595, C[3006] || CT.C3006, 8596, C[3005] || CT.C3005, 8597, C[2923] || CT.C2923, 8598, C[3007] || CT.C3007, 8599, C[3007] || CT.C3007, 8600, C[3007] || CT.C3007, 8601, C[3007] || CT.C3007, 8636, C[3005] || CT.C3005, 8637, C[3005] || CT.C3005, 8640, C[3005] || CT.C3005, 8641, C[3005] || CT.C3005, 8656, C[3005] || CT.C3005, 8657, C[3008] || CT.C3008, 8658, C[3005] || CT.C3005, 8659, C[3008] || CT.C3008, 8660, C[3005] || CT.C3005, 8661, C[3009] || CT.C3009, 8704, C[2958] || CT.C2958, 8706, C[3010] || CT.C3010, 8707, C[2958] || CT.C2958, 8709, C[2913] || CT.C2913, 8711, C[2991] || CT.C2991, 8712, C[3011] || CT.C3011, 8715, C[3011] || CT.C3011, 8722, C[2919] || CT.C2919, 8723, C[2919] || CT.C2919, 8725, C[2923] || CT.C2923, 8726, C[2923] || CT.C2923, 8727, C[3012] || CT.C3012, 8728, C[3013] || CT.C3013, 8729, C[3013] || CT.C3013, 8730, C[3014] || CT.C3014, 8733, C[2987] || CT.C2987, 8734, C[3015] || CT.C3015, 8736, C[2749] || CT.C2749, 8739, C[2954] || CT.C2954, 8741, C[2923] || CT.C2923, 8743, C[3016] || CT.C3016, 8744, C[3016] || CT.C3016, 8745, C[3016] || CT.C3016, 8746, C[3016] || CT.C3016, 8747, C[3017] || CT.C3017, 8764, C[2928] || CT.C2928, 8768, C[3018] || CT.C3018, 8771, C[3019] || CT.C3019, 8776, C[3020] || CT.C3020, 8781, C[3019] || CT.C3019, 8801, C[3019] || CT.C3019, 8804, C[3021] || CT.C3021, 8805, C[3021] || CT.C3021, 8810, C[3022] || CT.C3022, 8811, C[3022] || CT.C3022, 8826, C[2927] || CT.C2927, 8827, C[2927] || CT.C2927, 8834, C[2927] || CT.C2927, 8835, C[2927] || CT.C2927, 8838, C[3021] || CT.C3021, 8839, C[3021] || CT.C3021, 8846, C[3016] || CT.C3016, 8849, C[3021] || CT.C3021, 8850, C[3021] || CT.C3021, 8851, C[3016] || CT.C3016, 8852, C[3016] || CT.C3016, 8853, C[2919] || CT.C2919, 8854, C[2919] || CT.C2919, 8855, C[2919] || CT.C2919, 8856, C[2919] || CT.C2919, 8857, C[2919] || CT.C2919, 8866, C[3004] || CT.C3004, 8867, C[3004] || CT.C3004, 8868, C[2915] || CT.C2915, 8869, C[2915] || CT.C2915, 8900, C[3013] || CT.C3013, 8901, C[3023] || CT.C3023, 8902, C[3012] || CT.C3012, 8968, C[3024] || CT.C3024, 8969, C[3024] || CT.C3024, 8970, C[3024] || CT.C3024, 8971, C[3024] || CT.C3024, 8994, C[3025] || CT.C3025, 8995, C[3025] || CT.C3025, 9651, C[3026] || CT.C3026, 9657, C[3012] || CT.C3012, 9661, C[3026] || CT.C3026, 9667, C[3012] || CT.C3012, 9711, C[3007] || CT.C3007, 9824, C[3027] || CT.C3027, 9825, C[3027] || CT.C3027, 9826, C[3027] || CT.C3027, 9827, C[3027] || CT.C3027, 9837, C[3028] || CT.C3028, 9838, C[3029] || CT.C3029, 9839, C[3029] || CT.C3029, 10216, C[2917] || CT.C2917, 10217, C[2917] || CT.C2917, 10815, C[2937] || CT.C2937, 10927, C[3021] || CT.C3021, 10928, C[3021] || CT.C3021, 57376, C[3030] || CT.C3030]);
    },
    get C3032() {
      return C[3032] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11417,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3033() {
      return C[3033] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07939,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3034() {
      return C[3034] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06833,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3035() {
      return C[3035] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12861,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3036() {
      return C[3036] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08528,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3037() {
      return C[3037] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12945,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3038() {
      return C[3038] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15806,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3039() {
      return C[3039] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03306,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3040() {
      return C[3040] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14333,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3041() {
      return C[3041] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03306,
        [S.CharacterMetrics_height]: 0.60333,
        [S.CharacterMetrics_depth]: 0.10333
      });
    },
    get C3042() {
      return C[3042] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.14722,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3043() {
      return C[3043] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02611,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3044() {
      return C[3044] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.14722,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3045() {
      return C[3045] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15806,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3046() {
      return C[3046] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13167,
        [S.CharacterMetrics_height]: 0.64444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3047() {
      return C[3047] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13167,
        [S.CharacterMetrics_height]: 0.64444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3048() {
      return C[3048] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06695,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3049() {
      return C[3049] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06695,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3050() {
      return C[3050] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06833,
        [S.CharacterMetrics_height]: 0.39111,
        [S.CharacterMetrics_depth]: -0.10889
      });
    },
    get C3051() {
      return C[3051] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11472,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3052() {
      return C[3052] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09208,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3053() {
      return C[3053] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3054() {
      return C[3054] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0992,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3055() {
      return C[3055] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14208,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3056() {
      return C[3056] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.87555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09062,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3057() {
      return C[3057] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11431,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3058() {
      return C[3058] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12903,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3059() {
      return C[3059] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89527,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07347,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3060() {
      return C[3060] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8961,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.17208,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3061() {
      return C[3061] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47166,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15681,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3062() {
      return C[3062] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.145,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3063() {
      return C[3063] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89499,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14208,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3064() {
      return C[3064] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3065() {
      return C[3065] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.07277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.17208,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3066() {
      return C[3066] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85499,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09062,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3067() {
      return C[3067] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.78721,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0992,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3068() {
      return C[3068] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85499,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09062,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3069() {
      return C[3069] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02559,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3070() {
      return C[3070] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11264,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3071() {
      return C[3071] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7961,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12903,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3072() {
      return C[3072] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88083,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.17208,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3073() {
      return C[3073] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.18625,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3074() {
      return C[3074] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.15999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.18625,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3075() {
      return C[3075] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15681,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3076() {
      return C[3076] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19803,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3077() {
      return C[3077] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70888,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14208,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3078() {
      return C[3078] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1875,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3079() {
      return C[3079] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09972,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3080() {
      return C[3080] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06709,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3081() {
      return C[3081] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09811,
        [S.CharacterMetrics_height]: 0.13444,
        [S.CharacterMetrics_depth]: 0.31
      });
    },
    get C3082() {
      return C[3082] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09426,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3083() {
      return C[3083] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07861,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3084() {
      return C[3084] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05222,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3085() {
      return C[3085] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10861,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3086() {
      return C[3086] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.085,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3087() {
      return C[3087] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.4,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.21778,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3088() {
      return C[3088] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.105,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3089() {
      return C[3089] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09426,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3090() {
      return C[3090] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11387,
        [S.CharacterMetrics_height]: 0.69326,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3091() {
      return C[3091] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1672,
        [S.CharacterMetrics_height]: 0.69326,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3092() {
      return C[3092] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11111,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3093() {
      return C[3093] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.29666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10861,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3094() {
      return C[3094] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09426,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3095() {
      return C[3095] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64999,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09426,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3096() {
      return C[3096] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07861,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3097() {
      return C[3097] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07861,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3098() {
      return C[3098] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11111,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3099() {
      return C[3099] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08167,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3100() {
      return C[3100] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.385,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09639,
        [S.CharacterMetrics_height]: 0.63492,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3101() {
      return C[3101] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09426,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3102() {
      return C[3102] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11111,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3103() {
      return C[3103] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11111,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3104() {
      return C[3104] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12583,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3105() {
      return C[3105] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56166,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.105,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3106() {
      return C[3106] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3107() {
      return C[3107] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11472,
        [S.CharacterMetrics_height]: 0.34444,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3108() {
      return C[3108] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86853,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3109() {
      return C[3109] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11473,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3110() {
      return C[3110] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94888,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3111() {
      return C[3111] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.17014
      });
    },
    get C3112() {
      return C[3112] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.02277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11431,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3113() {
      return C[3113] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09062,
        [S.CharacterMetrics_height]: 0.73472,
        [S.CharacterMetrics_depth]: 0.04861
      });
    },
    get C3114() {
      return C[3114] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.665,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09736,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3115() {
      return C[3115] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.085,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3116() {
      return C[3116] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09458,
        [S.CharacterMetrics_height]: 0.54167,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C3117() {
      return C[3117] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09426,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3118() {
      return C[3118] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14054,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11431,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3119() {
      return C[3119] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.385,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04611,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3120() {
      return C[3120] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08271,
        [S.CharacterMetrics_height]: 0.63194,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3121() {
      return C[3121] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10444,
        [S.CharacterMetrics_height]: 0.59444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3122() {
      return C[3122] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08528,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3123() {
      return C[3123] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3124() {
      return C[3124] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10333,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3125() {
      return C[3125] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12903,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3126() {
      return C[3126] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3127() {
      return C[3127] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09062,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3128() {
      return C[3128] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3129() {
      return C[3129] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15092,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3130() {
      return C[3130] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11431,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3131() {
      return C[3131] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10778,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3132() {
      return C[3132] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05632,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3133() {
      return C[3133] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0992,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3134() {
      return C[3134] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09811,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3135() {
      return C[3135] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.18221,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09811,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3136() {
      return C[3136] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.16772,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3031() {
      return C[3031] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[3032] || CT.C3032, 34, C[3033] || CT.C3033, 35, C[3034] || CT.C3034, 37, C[3035] || CT.C3035, 38, C[3036] || CT.C3036, 39, C[3037] || CT.C3037, 40, C[3038] || CT.C3038, 41, C[3039] || CT.C3039, 42, C[3040] || CT.C3040, 43, C[3041] || CT.C3041, 44, C[3042] || CT.C3042, 45, C[3043] || CT.C3043, 46, C[3044] || CT.C3044, 47, C[3045] || CT.C3045, 48, C[3046] || CT.C3046, 49, C[3046] || CT.C3046, 50, C[3046] || CT.C3046, 51, C[3046] || CT.C3046, 52, C[3047] || CT.C3047, 53, C[3046] || CT.C3046, 54, C[3046] || CT.C3046, 55, C[3047] || CT.C3047, 56, C[3046] || CT.C3046, 57, C[3046] || CT.C3046, 58, C[3048] || CT.C3048, 59, C[3049] || CT.C3049, 61, C[3050] || CT.C3050, 63, C[3051] || CT.C3051, 64, C[3052] || CT.C3052, 65, C[3053] || CT.C3053, 66, C[3054] || CT.C3054, 67, C[3055] || CT.C3055, 68, C[3056] || CT.C3056, 69, C[3057] || CT.C3057, 70, C[3058] || CT.C3058, 71, C[3059] || CT.C3059, 72, C[3060] || CT.C3060, 73, C[3061] || CT.C3061, 74, C[3062] || CT.C3062, 75, C[3063] || CT.C3063, 76, C[3064] || CT.C3064, 77, C[3065] || CT.C3065, 78, C[3060] || CT.C3060, 79, C[3066] || CT.C3066, 80, C[3067] || CT.C3067, 81, C[3068] || CT.C3068, 82, C[3069] || CT.C3069, 83, C[3070] || CT.C3070, 84, C[3071] || CT.C3071, 85, C[3072] || CT.C3072, 86, C[3073] || CT.C3073, 87, C[3074] || CT.C3074, 88, C[3075] || CT.C3075, 89, C[3076] || CT.C3076, 90, C[3077] || CT.C3077, 91, C[3078] || CT.C3078, 93, C[3079] || CT.C3079, 94, C[3080] || CT.C3080, 95, C[3081] || CT.C3081, 97, C[3082] || CT.C3082, 98, C[3083] || CT.C3083, 99, C[3084] || CT.C3084, 100, C[3085] || CT.C3085, 101, C[3086] || CT.C3086, 102, C[3087] || CT.C3087, 103, C[3088] || CT.C3088, 104, C[3089] || CT.C3089, 105, C[3090] || CT.C3090, 106, C[3091] || CT.C3091, 107, C[3092] || CT.C3092, 108, C[3093] || CT.C3093, 109, C[3094] || CT.C3094, 110, C[3095] || CT.C3095, 111, C[3096] || CT.C3096, 112, C[3097] || CT.C3097, 113, C[3088] || CT.C3088, 114, C[3098] || CT.C3098, 115, C[3099] || CT.C3099, 116, C[3100] || CT.C3100, 117, C[3101] || CT.C3101, 118, C[3102] || CT.C3102, 119, C[3103] || CT.C3103, 120, C[3104] || CT.C3104, 121, C[3105] || CT.C3105, 122, C[3106] || CT.C3106, 126, C[3107] || CT.C3107, 163, C[3108] || CT.C3108, 168, C[3109] || CT.C3109, 176, C[3110] || CT.C3110, 184, C[3111] || CT.C3111, 198, C[3112] || CT.C3112, 216, C[3113] || CT.C3113, 223, C[3114] || CT.C3114, 230, C[3115] || CT.C3115, 248, C[3116] || CT.C3116, 305, C[3117] || CT.C3117, 338, C[3118] || CT.C3118, 339, C[3115] || CT.C3115, 567, C[3119] || CT.C3119, 710, C[3080] || CT.C3080, 711, C[3120] || CT.C3120, 713, C[3121] || CT.C3121, 714, C[3122] || CT.C3122, 715, C[3123] || CT.C3123, 728, C[3124] || CT.C3124, 729, C[3037] || CT.C3037, 730, C[3110] || CT.C3110, 732, C[3051] || CT.C3051, 733, C[3051] || CT.C3051, 915, C[3125] || CT.C3125, 916, C[3126] || CT.C3126, 920, C[3127] || CT.C3127, 923, C[3128] || CT.C3128, 926, C[3129] || CT.C3129, 928, C[3060] || CT.C3060, 931, C[3130] || CT.C3130, 933, C[3131] || CT.C3131, 934, C[3132] || CT.C3132, 936, C[3131] || CT.C3131, 937, C[3133] || CT.C3133, 8211, C[3134] || CT.C3134, 8212, C[3135] || CT.C3135, 8216, C[3037] || CT.C3037, 8217, C[3037] || CT.C3037, 8220, C[3136] || CT.C3136, 8221, C[3033] || CT.C3033]);
    },
    get C3138() {
      return C[3138] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12417,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3139() {
      return C[3139] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06961,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3140() {
      return C[3140] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06616,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3141() {
      return C[3141] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13639,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3142() {
      return C[3142] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09694,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3143() {
      return C[3143] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.40889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.16194,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3144() {
      return C[3144] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.40889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03694,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3145() {
      return C[3145] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14917,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3146() {
      return C[3146] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03694,
        [S.CharacterMetrics_height]: 0.56167,
        [S.CharacterMetrics_depth]: 0.05667
      });
    },
    get C3147() {
      return C[3147] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.10556,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3148() {
      return C[3148] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02826,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3149() {
      return C[3149] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.10556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3150() {
      return C[3150] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.16194,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3151() {
      return C[3151] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13556,
        [S.CharacterMetrics_height]: 0.64444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3152() {
      return C[3152] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13556,
        [S.CharacterMetrics_height]: 0.64444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3153() {
      return C[3153] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0582,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3154() {
      return C[3154] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0582,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3155() {
      return C[3155] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06616,
        [S.CharacterMetrics_height]: 0.36687,
        [S.CharacterMetrics_depth]: -0.13313
      });
    },
    get C3156() {
      return C[3156] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1225,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3157() {
      return C[3157] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09597,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3158() {
      return C[3158] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3159() {
      return C[3159] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70389,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10257,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3160() {
      return C[3160] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14528,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3161() {
      return C[3161] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.755,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09403,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3162() {
      return C[3162] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12028,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3163() {
      return C[3163] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13305,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3164() {
      return C[3164] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08722,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3165() {
      return C[3165] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.16389,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3166() {
      return C[3166] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15806,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3167() {
      return C[3167] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14028,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3168() {
      return C[3168] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76888,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14528,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3169() {
      return C[3169] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3170() {
      return C[3170] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.16389,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3171() {
      return C[3171] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09403,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3172() {
      return C[3172] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10257,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3173() {
      return C[3173] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09403,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3174() {
      return C[3174] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72944,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03868,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3175() {
      return C[3175] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11972,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3176() {
      return C[3176] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13305,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3177() {
      return C[3177] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.18361,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3178() {
      return C[3178] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.99888,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.18361,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3179() {
      return C[3179] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15806,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3180() {
      return C[3180] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19383,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3181() {
      return C[3181] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14528,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3182() {
      return C[3182] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1875,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3183() {
      return C[3183] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10528,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3184() {
      return C[3184] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06646,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3185() {
      return C[3185] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09208,
        [S.CharacterMetrics_height]: 0.12056,
        [S.CharacterMetrics_depth]: 0.31
      });
    },
    get C3186() {
      return C[3186] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07671,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3187() {
      return C[3187] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06312,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3188() {
      return C[3188] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05653,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3189() {
      return C[3189] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10333,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3190() {
      return C[3190] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07514,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3191() {
      return C[3191] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.21194,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3192() {
      return C[3192] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08847,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3193() {
      return C[3193] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07671,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3194() {
      return C[3194] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1019,
        [S.CharacterMetrics_height]: 0.65536,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3195() {
      return C[3195] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14467,
        [S.CharacterMetrics_height]: 0.65536,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3196() {
      return C[3196] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10764,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3197() {
      return C[3197] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.25555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10333,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3198() {
      return C[3198] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07671,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3199() {
      return C[3199] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07671,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3200() {
      return C[3200] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06312,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3201() {
      return C[3201] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06312,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3202() {
      return C[3202] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.42166,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10764,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3203() {
      return C[3203] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.40889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08208,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3204() {
      return C[3204] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09486,
        [S.CharacterMetrics_height]: 0.61508,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3205() {
      return C[3205] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07671,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3206() {
      return C[3206] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10764,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3207() {
      return C[3207] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10764,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3208() {
      return C[3208] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46389,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12042,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3209() {
      return C[3209] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08847,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3210() {
      return C[3210] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.40889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12292,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3211() {
      return C[3211] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11585,
        [S.CharacterMetrics_height]: 0.31786,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3212() {
      return C[3212] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76909,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3213() {
      return C[3213] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10474,
        [S.CharacterMetrics_height]: 0.66786,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3214() {
      return C[3214] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83129,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3215() {
      return C[3215] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.17014
      });
    },
    get C3216() {
      return C[3216] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88277,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12028,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3217() {
      return C[3217] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09403,
        [S.CharacterMetrics_height]: 0.73194,
        [S.CharacterMetrics_depth]: 0.04861
      });
    },
    get C3218() {
      return C[3218] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10514,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3219() {
      return C[3219] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07514,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3220() {
      return C[3220] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09194,
        [S.CharacterMetrics_height]: 0.52778,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C3221() {
      return C[3221] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.32246,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3222() {
      return C[3222] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.98499,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12028,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3223() {
      return C[3223] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38403,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3224() {
      return C[3224] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08295,
        [S.CharacterMetrics_height]: 0.62847,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3225() {
      return C[3225] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10333,
        [S.CharacterMetrics_height]: 0.56167,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3226() {
      return C[3226] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09694,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3227() {
      return C[3227] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3228() {
      return C[3228] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10806,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3229() {
      return C[3229] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11752,
        [S.CharacterMetrics_height]: 0.66786,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3230() {
      return C[3230] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11585,
        [S.CharacterMetrics_height]: 0.66786,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3231() {
      return C[3231] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13305,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3232() {
      return C[3232] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81777,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3233() {
      return C[3233] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3234() {
      return C[3234] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15294,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3235() {
      return C[3235] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12028,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3236() {
      return C[3236] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11111,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3237() {
      return C[3237] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05986,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3238() {
      return C[3238] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71555,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10257,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3239() {
      return C[3239] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09208,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3240() {
      return C[3240] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.02222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09208,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3241() {
      return C[3241] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51444,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1685,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3137() {
      return C[3137] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[3138] || CT.C3138, 34, C[3139] || CT.C3139, 35, C[3140] || CT.C3140, 37, C[3141] || CT.C3141, 38, C[3142] || CT.C3142, 39, C[3138] || CT.C3138, 40, C[3143] || CT.C3143, 41, C[3144] || CT.C3144, 42, C[3145] || CT.C3145, 43, C[3146] || CT.C3146, 44, C[3147] || CT.C3147, 45, C[3148] || CT.C3148, 46, C[3149] || CT.C3149, 47, C[3150] || CT.C3150, 48, C[3151] || CT.C3151, 49, C[3151] || CT.C3151, 50, C[3151] || CT.C3151, 51, C[3151] || CT.C3151, 52, C[3152] || CT.C3152, 53, C[3151] || CT.C3151, 54, C[3151] || CT.C3151, 55, C[3152] || CT.C3152, 56, C[3151] || CT.C3151, 57, C[3151] || CT.C3151, 58, C[3153] || CT.C3153, 59, C[3154] || CT.C3154, 61, C[3155] || CT.C3155, 63, C[3156] || CT.C3156, 64, C[3157] || CT.C3157, 65, C[3158] || CT.C3158, 66, C[3159] || CT.C3159, 67, C[3160] || CT.C3160, 68, C[3161] || CT.C3161, 69, C[3162] || CT.C3162, 70, C[3163] || CT.C3163, 71, C[3164] || CT.C3164, 72, C[3165] || CT.C3165, 73, C[3166] || CT.C3166, 74, C[3167] || CT.C3167, 75, C[3168] || CT.C3168, 76, C[3169] || CT.C3169, 77, C[3170] || CT.C3170, 78, C[3165] || CT.C3165, 79, C[3171] || CT.C3171, 80, C[3172] || CT.C3172, 81, C[3173] || CT.C3173, 82, C[3174] || CT.C3174, 83, C[3175] || CT.C3175, 84, C[3176] || CT.C3176, 85, C[3165] || CT.C3165, 86, C[3177] || CT.C3177, 87, C[3178] || CT.C3178, 88, C[3179] || CT.C3179, 89, C[3180] || CT.C3180, 90, C[3181] || CT.C3181, 91, C[3182] || CT.C3182, 93, C[3183] || CT.C3183, 94, C[3184] || CT.C3184, 95, C[3185] || CT.C3185, 97, C[3186] || CT.C3186, 98, C[3187] || CT.C3187, 99, C[3188] || CT.C3188, 100, C[3189] || CT.C3189, 101, C[3190] || CT.C3190, 102, C[3191] || CT.C3191, 103, C[3192] || CT.C3192, 104, C[3193] || CT.C3193, 105, C[3194] || CT.C3194, 106, C[3195] || CT.C3195, 107, C[3196] || CT.C3196, 108, C[3197] || CT.C3197, 109, C[3198] || CT.C3198, 110, C[3199] || CT.C3199, 111, C[3200] || CT.C3200, 112, C[3201] || CT.C3201, 113, C[3192] || CT.C3192, 114, C[3202] || CT.C3202, 115, C[3203] || CT.C3203, 116, C[3204] || CT.C3204, 117, C[3205] || CT.C3205, 118, C[3206] || CT.C3206, 119, C[3207] || CT.C3207, 120, C[3208] || CT.C3208, 121, C[3209] || CT.C3209, 122, C[3210] || CT.C3210, 126, C[3211] || CT.C3211, 163, C[3212] || CT.C3212, 168, C[3213] || CT.C3213, 176, C[3214] || CT.C3214, 184, C[3215] || CT.C3215, 198, C[3216] || CT.C3216, 216, C[3217] || CT.C3217, 223, C[3218] || CT.C3218, 230, C[3219] || CT.C3219, 248, C[3220] || CT.C3220, 305, C[3221] || CT.C3221, 338, C[3222] || CT.C3222, 339, C[3219] || CT.C3219, 567, C[3223] || CT.C3223, 710, C[3184] || CT.C3184, 711, C[3224] || CT.C3224, 713, C[3225] || CT.C3225, 714, C[3226] || CT.C3226, 715, C[3227] || CT.C3227, 728, C[3228] || CT.C3228, 729, C[3229] || CT.C3229, 730, C[3214] || CT.C3214, 732, C[3230] || CT.C3230, 733, C[3156] || CT.C3156, 915, C[3231] || CT.C3231, 916, C[3232] || CT.C3232, 920, C[3171] || CT.C3171, 923, C[3233] || CT.C3233, 926, C[3234] || CT.C3234, 928, C[3165] || CT.C3165, 931, C[3235] || CT.C3235, 933, C[3236] || CT.C3236, 934, C[3237] || CT.C3237, 936, C[3236] || CT.C3236, 937, C[3238] || CT.C3238, 8211, C[3239] || CT.C3239, 8212, C[3240] || CT.C3240, 8216, C[3138] || CT.C3138, 8217, C[3138] || CT.C3138, 8220, C[3241] || CT.C3241, 8221, C[3139] || CT.C3139, 8463, C[2722] || CT.C2722]);
    },
    get C3243() {
      return C[3243] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.25,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3244() {
      return C[3244] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3245() {
      return C[3245] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3246() {
      return C[3246] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3247() {
      return C[3247] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3248() {
      return C[3248] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3249() {
      return C[3249] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3250() {
      return C[3250] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3251() {
      return C[3251] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3252() {
      return C[3252] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58333,
        [S.CharacterMetrics_depth]: 0.08333
      });
    },
    get C3253() {
      return C[3253] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.10556,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3254() {
      return C[3254] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3255() {
      return C[3255] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.10556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3256() {
      return C[3256] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3257() {
      return C[3257] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3258() {
      return C[3258] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3259() {
      return C[3259] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3260() {
      return C[3260] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3261() {
      return C[3261] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3262() {
      return C[3262] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3263() {
      return C[3263] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76389,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3264() {
      return C[3264] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3265() {
      return C[3265] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3266() {
      return C[3266] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.78472,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3267() {
      return C[3267] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3268() {
      return C[3268] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51389,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3269() {
      return C[3269] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3270() {
      return C[3270] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.625,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3271() {
      return C[3271] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.91667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3272() {
      return C[3272] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3273() {
      return C[3273] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3274() {
      return C[3274] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3275() {
      return C[3275] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3276() {
      return C[3276] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.02778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3277() {
      return C[3277] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.025,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3278() {
      return C[3278] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3279() {
      return C[3279] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3280() {
      return C[3280] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.12056,
        [S.CharacterMetrics_depth]: 0.31
      });
    },
    get C3281() {
      return C[3281] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3282() {
      return C[3282] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3283() {
      return C[3283] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07778,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3284() {
      return C[3284] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3285() {
      return C[3285] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.66786,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3286() {
      return C[3286] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.66786,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3287() {
      return C[3287] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3288() {
      return C[3288] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3289() {
      return C[3289] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3290() {
      return C[3290] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3291() {
      return C[3291] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.39167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3292() {
      return C[3292] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.39445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3293() {
      return C[3293] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.61508,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3294() {
      return C[3294] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3295() {
      return C[3295] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3296() {
      return C[3296] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3297() {
      return C[3297] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3298() {
      return C[3298] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.31786,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3299() {
      return C[3299] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3300() {
      return C[3300] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.66786,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3301() {
      return C[3301] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3302() {
      return C[3302] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3303() {
      return C[3303] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3304() {
      return C[3304] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.17014
      });
    },
    get C3305() {
      return C[3305] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.90278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3306() {
      return C[3306] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.73194,
        [S.CharacterMetrics_depth]: 0.04861
      });
    },
    get C3307() {
      return C[3307] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3308() {
      return C[3308] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52778,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C3309() {
      return C[3309] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.01389,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3310() {
      return C[3310] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3311() {
      return C[3311] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3312() {
      return C[3312] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.62847,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3313() {
      return C[3313] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.56778,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3314() {
      return C[3314] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3315() {
      return C[3315] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3316() {
      return C[3316] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3317() {
      return C[3317] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3318() {
      return C[3318] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3319() {
      return C[3319] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.172,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.12,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3320() {
      return C[3320] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.275,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.55556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3321() {
      return C[3321] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15382,
        [S.CharacterMetrics_height]: 0.71444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3322() {
      return C[3322] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3323() {
      return C[3323] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41667,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3324() {
      return C[3324] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63646,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3325() {
      return C[3325] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3326() {
      return C[3326] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3327() {
      return C[3327] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3328() {
      return C[3328] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.511,
        [S.CharacterMetrics_depth]: 0.011
      });
    },
    get C3329() {
      return C[3329] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.126,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.511,
        [S.CharacterMetrics_depth]: 0.011
      });
    },
    get C3330() {
      return C[3330] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.671,
        [S.CharacterMetrics_depth]: 0.011
      });
    },
    get C3331() {
      return C[3331] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3332() {
      return C[3332] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5309,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05556,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3333() {
      return C[3333] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.5391,
        [S.CharacterMetrics_depth]: 0.0391
      });
    },
    get C3334() {
      return C[3334] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.46528,
        [S.CharacterMetrics_depth]: -0.03472
      });
    },
    get C3335() {
      return C[3335] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44445,
        [S.CharacterMetrics_depth]: -0.05555
      });
    },
    get C3336() {
      return C[3336] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.8,
        [S.CharacterMetrics_depth]: 0.2
      });
    },
    get C3337() {
      return C[3337] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.55556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3338() {
      return C[3338] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11111,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3339() {
      return C[3339] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3340() {
      return C[3340] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.589,
        [S.CharacterMetrics_depth]: -0.022
      });
    },
    get C3341() {
      return C[3341] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.67,
        [S.CharacterMetrics_depth]: -0.133
      });
    },
    get C3342() {
      return C[3342] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.5391,
        [S.CharacterMetrics_depth]: 0.0391
      });
    },
    get C3343() {
      return C[3343] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.867,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.249
      });
    },
    get C3344() {
      return C[3344] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44445,
        [S.CharacterMetrics_depth]: -0.05555
      });
    },
    get C3345() {
      return C[3345] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.9,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.505,
        [S.CharacterMetrics_depth]: 0.005
      });
    },
    get C3346() {
      return C[3346] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.9,
        [S.CharacterMetrics_depth]: 0.03
      });
    },
    get C3347() {
      return C[3347] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.172,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.31,
        [S.CharacterMetrics_depth]: -0.19
      });
    },
    get C3348() {
      return C[3348] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.282,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.82,
        [S.CharacterMetrics_depth]: -0.1
      });
    },
    get C3349() {
      return C[3349] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3350() {
      return C[3350] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.35764,
        [S.CharacterMetrics_depth]: -0.14236
      });
    },
    get C3351() {
      return C[3351] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.412,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.744,
        [S.CharacterMetrics_depth]: 0.244
      });
    },
    get C3352() {
      return C[3352] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3353() {
      return C[3353] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.12963
      });
    },
    get C3354() {
      return C[3354] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3355() {
      return C[3355] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3356() {
      return C[3356] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.609,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.511,
        [S.CharacterMetrics_depth]: 0.011
      });
    },
    get C3357() {
      return C[3357] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.638,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.511,
        [S.CharacterMetrics_depth]: 0.011
      });
    },
    get C3358() {
      return C[3358] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.859,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.511,
        [S.CharacterMetrics_depth]: 0.011
      });
    },
    get C3359() {
      return C[3359] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.609,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.525,
        [S.CharacterMetrics_depth]: 0.024
      });
    },
    get C3360() {
      return C[3360] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.638,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.525,
        [S.CharacterMetrics_depth]: 0.024
      });
    },
    get C3361() {
      return C[3361] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.858,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.525,
        [S.CharacterMetrics_depth]: 0.024
      });
    },
    get C3242() {
      return C[3242] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [32, C[3243] || CT.C3243, 33, C[3244] || CT.C3244, 34, C[3245] || CT.C3245, 35, C[3246] || CT.C3246, 36, C[3247] || CT.C3247, 37, C[3248] || CT.C3248, 38, C[3249] || CT.C3249, 39, C[3244] || CT.C3244, 40, C[3250] || CT.C3250, 41, C[3250] || CT.C3250, 42, C[3251] || CT.C3251, 43, C[3252] || CT.C3252, 44, C[3253] || CT.C3253, 45, C[3254] || CT.C3254, 46, C[3255] || CT.C3255, 47, C[3256] || CT.C3256, 48, C[2803] || CT.C2803, 49, C[2803] || CT.C2803, 50, C[2803] || CT.C2803, 51, C[2803] || CT.C2803, 52, C[2803] || CT.C2803, 53, C[2803] || CT.C2803, 54, C[2803] || CT.C2803, 55, C[2803] || CT.C2803, 56, C[2803] || CT.C2803, 57, C[2803] || CT.C2803, 58, C[3257] || CT.C3257, 59, C[3258] || CT.C3258, 60, C[2782] || CT.C2782, 61, C[2756] || CT.C2756, 62, C[2782] || CT.C2782, 63, C[3259] || CT.C3259, 64, C[3249] || CT.C3249, 65, C[3260] || CT.C3260, 66, C[3261] || CT.C3261, 67, C[3262] || CT.C3262, 68, C[3263] || CT.C3263, 69, C[3264] || CT.C3264, 70, C[3265] || CT.C3265, 71, C[3266] || CT.C3266, 72, C[3260] || CT.C3260, 73, C[3267] || CT.C3267, 74, C[3268] || CT.C3268, 75, C[3269] || CT.C3269, 76, C[3270] || CT.C3270, 77, C[3271] || CT.C3271, 78, C[3260] || CT.C3260, 79, C[3269] || CT.C3269, 80, C[3264] || CT.C3264, 81, C[3272] || CT.C3272, 82, C[3273] || CT.C3273, 83, C[3274] || CT.C3274, 84, C[3262] || CT.C3262, 85, C[3260] || CT.C3260, 86, C[3275] || CT.C3275, 87, C[3276] || CT.C3276, 88, C[3260] || CT.C3260, 89, C[3277] || CT.C3277, 90, C[3278] || CT.C3278, 91, C[3279] || CT.C3279, 92, C[3256] || CT.C3256, 93, C[3279] || CT.C3279, 94, C[3245] || CT.C3245, 95, C[3280] || CT.C3280, 97, C[2801] || CT.C2801, 98, C[3281] || CT.C3281, 99, C[3282] || CT.C3282, 100, C[3281] || CT.C3281, 101, C[3282] || CT.C3282, 102, C[3283] || CT.C3283, 103, C[3284] || CT.C3284, 104, C[3281] || CT.C3281, 105, C[3285] || CT.C3285, 106, C[3286] || CT.C3286, 107, C[3287] || CT.C3287, 108, C[3244] || CT.C3244, 109, C[3288] || CT.C3288, 110, C[3289] || CT.C3289, 111, C[2801] || CT.C2801, 112, C[2776] || CT.C2776, 113, C[3290] || CT.C3290, 114, C[3291] || CT.C3291, 115, C[3292] || CT.C3292, 116, C[3293] || CT.C3293, 117, C[3289] || CT.C3289, 118, C[3294] || CT.C3294, 119, C[3295] || CT.C3295, 120, C[3296] || CT.C3296, 121, C[3297] || CT.C3297, 122, C[3282] || CT.C3282, 123, C[3256] || CT.C3256, 124, C[3279] || CT.C3279, 125, C[3256] || CT.C3256, 126, C[3298] || CT.C3298, 160, C[3243] || CT.C3243, 167, C[3299] || CT.C3299, 168, C[3300] || CT.C3300, 172, C[3301] || CT.C3301, 176, C[3302] || CT.C3302, 177, C[3252] || CT.C3252, 182, C[3303] || CT.C3303, 184, C[3304] || CT.C3304, 198, C[3305] || CT.C3305, 215, C[3252] || CT.C3252, 216, C[3306] || CT.C3306, 223, C[3245] || CT.C3245, 230, C[3307] || CT.C3307, 247, C[3252] || CT.C3252, 248, C[3308] || CT.C3308, 305, C[3257] || CT.C3257, 338, C[3309] || CT.C3309, 339, C[3310] || CT.C3310, 567, C[3311] || CT.C3311, 710, C[3245] || CT.C3245, 711, C[3312] || CT.C3312, 713, C[3313] || CT.C3313, 714, C[3245] || CT.C3245, 715, C[3245] || CT.C3245, 728, C[3245] || CT.C3245, 729, C[3285] || CT.C3285, 730, C[3302] || CT.C3302, 732, C[3300] || CT.C3300, 733, C[3245] || CT.C3245, 915, C[3270] || CT.C3270, 916, C[3314] || CT.C3314, 920, C[3269] || CT.C3269, 923, C[3315] || CT.C3315, 926, C[3316] || CT.C3316, 928, C[3260] || CT.C3260, 931, C[3262] || CT.C3262, 933, C[3269] || CT.C3269, 934, C[3262] || CT.C3262, 936, C[3269] || CT.C3269, 937, C[3262] || CT.C3262, 8211, C[3317] || CT.C3317, 8212, C[3318] || CT.C3318, 8216, C[3244] || CT.C3244, 8217, C[3244] || CT.C3244, 8220, C[3245] || CT.C3245, 8221, C[3245] || CT.C3245, 8224, C[3299] || CT.C3299, 8225, C[3299] || CT.C3299, 8230, C[3319] || CT.C3319, 8242, C[3320] || CT.C3320, 8407, C[3321] || CT.C3321, 8463, C[2722] || CT.C2722, 8465, C[3322] || CT.C3322, 8467, C[3323] || CT.C3323, 8472, C[3324] || CT.C3324, 8476, C[3322] || CT.C3322, 8501, C[3325] || CT.C3325, 8592, C[2731] || CT.C2731, 8593, C[3326] || CT.C3326, 8594, C[2731] || CT.C2731, 8595, C[3326] || CT.C3326, 8596, C[2731] || CT.C2731, 8597, C[3256] || CT.C3256, 8598, C[3327] || CT.C3327, 8599, C[3327] || CT.C3327, 8600, C[3327] || CT.C3327, 8601, C[3327] || CT.C3327, 8614, C[3328] || CT.C3328, 8617, C[3329] || CT.C3329, 8618, C[3329] || CT.C3329, 8636, C[2731] || CT.C2731, 8637, C[2731] || CT.C2731, 8640, C[2731] || CT.C2731, 8641, C[2731] || CT.C2731, 8652, C[3330] || CT.C3330, 8656, C[2731] || CT.C2731, 8657, C[3303] || CT.C3303, 8658, C[2731] || CT.C2731, 8659, C[3303] || CT.C3303, 8660, C[2731] || CT.C2731, 8661, C[3331] || CT.C3331, 8704, C[3281] || CT.C3281, 8706, C[3332] || CT.C3332, 8707, C[3281] || CT.C3281, 8709, C[3247] || CT.C3247, 8711, C[3314] || CT.C3314, 8712, C[3333] || CT.C3333, 8715, C[3333] || CT.C3333, 8722, C[3252] || CT.C3252, 8723, C[3252] || CT.C3252, 8725, C[3256] || CT.C3256, 8726, C[3256] || CT.C3256, 8727, C[3334] || CT.C3334, 8728, C[3335] || CT.C3335, 8729, C[3335] || CT.C3335, 8730, C[3336] || CT.C3336, 8733, C[3310] || CT.C3310, 8734, C[2737] || CT.C2737, 8736, C[2749] || CT.C2749, 8739, C[3279] || CT.C3279, 8741, C[3256] || CT.C3256, 8743, C[3337] || CT.C3337, 8744, C[3337] || CT.C3337, 8745, C[3337] || CT.C3337, 8746, C[3337] || CT.C3337, 8747, C[3338] || CT.C3338, 8764, C[2756] || CT.C2756, 8768, C[3339] || CT.C3339, 8771, C[2758] || CT.C2758, 8773, C[3340] || CT.C3340, 8776, C[2760] || CT.C2760, 8781, C[2758] || CT.C2758, 8784, C[3341] || CT.C3341, 8801, C[2758] || CT.C2758, 8804, C[2770] || CT.C2770, 8805, C[2770] || CT.C2770, 8810, C[3342] || CT.C3342, 8811, C[3342] || CT.C3342, 8826, C[2782] || CT.C2782, 8827, C[2782] || CT.C2782, 8834, C[2782] || CT.C2782, 8835, C[2782] || CT.C2782, 8838, C[2770] || CT.C2770, 8839, C[2770] || CT.C2770, 8846, C[3337] || CT.C3337, 8849, C[2770] || CT.C2770, 8850, C[2770] || CT.C2770, 8851, C[3337] || CT.C3337, 8852, C[3337] || CT.C3337, 8853, C[3252] || CT.C3252, 8854, C[3252] || CT.C3252, 8855, C[3252] || CT.C3252, 8856, C[3252] || CT.C3252, 8857, C[3252] || CT.C3252, 8866, C[3325] || CT.C3325, 8867, C[3325] || CT.C3325, 8868, C[3249] || CT.C3249, 8869, C[3249] || CT.C3249, 8872, C[3343] || CT.C3343, 8900, C[3335] || CT.C3335, 8901, C[3344] || CT.C3344, 8902, C[3334] || CT.C3334, 8904, C[3345] || CT.C3345, 8942, C[3346] || CT.C3346, 8943, C[3347] || CT.C3347, 8945, C[3348] || CT.C3348, 8968, C[3349] || CT.C3349, 8969, C[3349] || CT.C3349, 8970, C[3349] || CT.C3349, 8971, C[3349] || CT.C3349, 8994, C[3350] || CT.C3350, 8995, C[3350] || CT.C3350, 9136, C[3351] || CT.C3351, 9137, C[3351] || CT.C3351, 9651, C[3352] || CT.C3352, 9657, C[3334] || CT.C3334, 9661, C[3352] || CT.C3352, 9667, C[3334] || CT.C3334, 9711, C[3327] || CT.C3327, 9824, C[3353] || CT.C3353, 9825, C[3353] || CT.C3353, 9826, C[3353] || CT.C3353, 9827, C[3353] || CT.C3353, 9837, C[3354] || CT.C3354, 9838, C[3355] || CT.C3355, 9839, C[3355] || CT.C3355, 10216, C[3250] || CT.C3250, 10217, C[3250] || CT.C3250, 10222, C[3351] || CT.C3351, 10223, C[3351] || CT.C3351, 10229, C[3356] || CT.C3356, 10230, C[3357] || CT.C3357, 10231, C[3358] || CT.C3358, 10232, C[3359] || CT.C3359, 10233, C[3360] || CT.C3360, 10234, C[3361] || CT.C3361, 10236, C[3357] || CT.C3357, 10815, C[3260] || CT.C3260, 10927, C[2770] || CT.C2770, 10928, C[2770] || CT.C2770, 57376, C[3030] || CT.C3030]);
    },
    get C3363() {
      return C[3363] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8664,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04835,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3364() {
      return C[3364] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06979,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3365() {
      return C[3365] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.93812,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3366() {
      return C[3366] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81007,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05451,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3367() {
      return C[3367] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15972,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3368() {
      return C[3368] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88673,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3369() {
      return C[3369] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.98229,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08229,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3370() {
      return C[3370] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07778,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3371() {
      return C[3371] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63125,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10069,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3372() {
      return C[3372] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.97118,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06979,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3373() {
      return C[3373] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.14201,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11424,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3374() {
      return C[3374] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.95034,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11424,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3375() {
      return C[3375] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3376() {
      return C[3376] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72309,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15972,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3377() {
      return C[3377] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86861,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3378() {
      return C[3378] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.87235,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.00421,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3379() {
      return C[3379] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69271,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05382,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3380() {
      return C[3380] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63663,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15972,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3381() {
      return C[3381] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80027,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11424,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3382() {
      return C[3382] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.25555,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3383() {
      return C[3383] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.09305,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15972,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3384() {
      return C[3384] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07778,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3385() {
      return C[3385] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67458,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.25555,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3386() {
      return C[3386] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77257,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06979,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3387() {
      return C[3387] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63287,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3388() {
      return C[3388] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52083,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3389() {
      return C[3389] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51342,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3390() {
      return C[3390] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60972,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3391() {
      return C[3391] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3392() {
      return C[3392] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56806,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11042,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3393() {
      return C[3393] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5449,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3394() {
      return C[3394] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.4048,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69326,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3395() {
      return C[3395] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47083,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0622,
        [S.CharacterMetrics_height]: 0.69326,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3396() {
      return C[3396] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6037,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01852,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3397() {
      return C[3397] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.34815,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0088,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3398() {
      return C[3398] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.0324,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3399() {
      return C[3399] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71296,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3400() {
      return C[3400] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58472,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3401() {
      return C[3401] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60092,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3402() {
      return C[3402] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54213,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3403() {
      return C[3403] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5287,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3404() {
      return C[3404] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53125,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3405() {
      return C[3405] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41528,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63492,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3406() {
      return C[3406] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68102,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3407() {
      return C[3407] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56666,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3408() {
      return C[3408] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83148,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3409() {
      return C[3409] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65903,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3410() {
      return C[3410] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59028,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3411() {
      return C[3411] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55509,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04213,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3412() {
      return C[3412] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65694,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15972,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3413() {
      return C[3413] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3414() {
      return C[3414] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.84125,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07458,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3415() {
      return C[3415] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88507,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05451,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3416() {
      return C[3416] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67083,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15972,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3417() {
      return C[3417] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71402,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11653,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3418() {
      return C[3418] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8789,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04835,
        [S.CharacterMetrics_height]: 0.68611,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3419() {
      return C[3419] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76064,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3420() {
      return C[3420] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65972,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03403,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3421() {
      return C[3421] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59003,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3422() {
      return C[3422] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03819,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3423() {
      return C[3423] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52882,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3424() {
      return C[3424] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06215,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3425() {
      return C[3425] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3426() {
      return C[3426] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5618,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3427() {
      return C[3427] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41204,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3428() {
      return C[3428] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66759,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3429() {
      return C[3429] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67083,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3430() {
      return C[3430] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70787,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3431() {
      return C[3431] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57685,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06898,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3432() {
      return C[3432] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03021,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3433() {
      return C[3433] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68241,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3434() {
      return C[3434] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6118,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3435() {
      return C[3435] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.42361,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07917,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C3436() {
      return C[3436] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68588,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3437() {
      return C[3437] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52083,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13472,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3438() {
      return C[3438] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63055,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3439() {
      return C[3439] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3440() {
      return C[3440] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71805,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3441() {
      return C[3441] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75833,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3442() {
      return C[3442] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71782,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03704,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3443() {
      return C[3443] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69155,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3444() {
      return C[3444] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7125,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3445() {
      return C[3445] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.975,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03194,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3446() {
      return C[3446] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3362() {
      return C[3362] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [65, C[2930] || CT.C2930, 66, C[3363] || CT.C3363, 67, C[3364] || CT.C3364, 68, C[3365] || CT.C3365, 69, C[3366] || CT.C3366, 70, C[3367] || CT.C3367, 71, C[3368] || CT.C3368, 72, C[3369] || CT.C3369, 73, C[3370] || CT.C3370, 74, C[3371] || CT.C3371, 75, C[3372] || CT.C3372, 76, C[2934] || CT.C2934, 77, C[3373] || CT.C3373, 78, C[3374] || CT.C3374, 79, C[3375] || CT.C3375, 80, C[3376] || CT.C3376, 81, C[3377] || CT.C3377, 82, C[3378] || CT.C3378, 83, C[3379] || CT.C3379, 84, C[3380] || CT.C3380, 85, C[3381] || CT.C3381, 86, C[3382] || CT.C3382, 87, C[3383] || CT.C3383, 88, C[3384] || CT.C3384, 89, C[3385] || CT.C3385, 90, C[3386] || CT.C3386, 97, C[3387] || CT.C3387, 98, C[3388] || CT.C3388, 99, C[3389] || CT.C3389, 100, C[3390] || CT.C3390, 101, C[3391] || CT.C3391, 102, C[3392] || CT.C3392, 103, C[3393] || CT.C3393, 104, C[3000] || CT.C3000, 105, C[3394] || CT.C3394, 106, C[3395] || CT.C3395, 107, C[3396] || CT.C3396, 108, C[3397] || CT.C3397, 109, C[3398] || CT.C3398, 110, C[3399] || CT.C3399, 111, C[3400] || CT.C3400, 112, C[3401] || CT.C3401, 113, C[3402] || CT.C3402, 114, C[3403] || CT.C3403, 115, C[3404] || CT.C3404, 116, C[3405] || CT.C3405, 117, C[3406] || CT.C3406, 118, C[3407] || CT.C3407, 119, C[3408] || CT.C3408, 120, C[3409] || CT.C3409, 121, C[3410] || CT.C3410, 122, C[3411] || CT.C3411, 915, C[3412] || CT.C3412, 916, C[2991] || CT.C2991, 920, C[3413] || CT.C3413, 923, C[2993] || CT.C2993, 926, C[3414] || CT.C3414, 928, C[3369] || CT.C3369, 931, C[3415] || CT.C3415, 933, C[3416] || CT.C3416, 934, C[2994] || CT.C2994, 936, C[3417] || CT.C3417, 937, C[3418] || CT.C3418, 945, C[3419] || CT.C3419, 946, C[3420] || CT.C3420, 947, C[3421] || CT.C3421, 948, C[3422] || CT.C3422, 949, C[3423] || CT.C3423, 950, C[3424] || CT.C3424, 951, C[3425] || CT.C3425, 952, C[3426] || CT.C3426, 953, C[3427] || CT.C3427, 954, C[3428] || CT.C3428, 955, C[3429] || CT.C3429, 956, C[3430] || CT.C3430, 957, C[3431] || CT.C3431, 958, C[3432] || CT.C3432, 959, C[3400] || CT.C3400, 960, C[3433] || CT.C3433, 961, C[3434] || CT.C3434, 962, C[3435] || CT.C3435, 963, C[3436] || CT.C3436, 964, C[3437] || CT.C3437, 965, C[3438] || CT.C3438, 966, C[3439] || CT.C3439, 967, C[3440] || CT.C3440, 968, C[3441] || CT.C3441, 969, C[3442] || CT.C3442, 977, C[3443] || CT.C3443, 981, C[3444] || CT.C3444, 982, C[3445] || CT.C3445, 1009, C[3434] || CT.C3434, 1013, C[3446] || CT.C3446]);
    },
    get C3448() {
      return C[3448] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0.13889,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3449() {
      return C[3449] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75851,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05017,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3450() {
      return C[3450] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71472,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.07153,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3451() {
      return C[3451] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82792,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3452() {
      return C[3452] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7382,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05764,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3453() {
      return C[3453] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64306,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3454() {
      return C[3454] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.78625,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3455() {
      return C[3455] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83125,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.08125,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3456() {
      return C[3456] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.43958,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.07847,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3457() {
      return C[3457] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55451,
        [S.CharacterMetrics_skew]: 0.16667,
        [S.CharacterMetrics_italic]: 0.09618,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3458() {
      return C[3458] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.84931,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.07153,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3459() {
      return C[3459] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68056,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3460() {
      return C[3460] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.97014,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.10903,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3461() {
      return C[3461] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80347,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.10903,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3462() {
      return C[3462] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76278,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3463() {
      return C[3463] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64201,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3464() {
      return C[3464] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79056,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3465() {
      return C[3465] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75929,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.00773,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3466() {
      return C[3466] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6132,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05764,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3467() {
      return C[3467] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58438,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3468() {
      return C[3468] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68278,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.10903,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3469() {
      return C[3469] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.22222,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3470() {
      return C[3470] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3471() {
      return C[3471] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82847,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.07847,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3472() {
      return C[3472] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.22222,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3473() {
      return C[3473] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68264,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.07153,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3474() {
      return C[3474] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52859,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3475() {
      return C[3475] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.42917,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3476() {
      return C[3476] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.43276,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3477() {
      return C[3477] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52049,
        [S.CharacterMetrics_skew]: 0.16667,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3478() {
      return C[3478] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46563,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3479() {
      return C[3479] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48959,
        [S.CharacterMetrics_skew]: 0.16667,
        [S.CharacterMetrics_italic]: 0.10764,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3480() {
      return C[3480] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47697,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3481() {
      return C[3481] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57616,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3482() {
      return C[3482] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.34451,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.65952,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3483() {
      return C[3483] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41181,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05724,
        [S.CharacterMetrics_height]: 0.65952,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3484() {
      return C[3484] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5206,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03148,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3485() {
      return C[3485] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.29838,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.01968,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3486() {
      return C[3486] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.87801,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3487() {
      return C[3487] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60023,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3488() {
      return C[3488] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48472,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3489() {
      return C[3489] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.50313,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3490() {
      return C[3490] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44641,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3491() {
      return C[3491] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.45116,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3492() {
      return C[3492] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46875,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3493() {
      return C[3493] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36111,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.61508,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3494() {
      return C[3494] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57246,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3495() {
      return C[3495] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48472,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3496() {
      return C[3496] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.71592,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.02691,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3497() {
      return C[3497] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57153,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3498() {
      return C[3498] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49028,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3499() {
      return C[3499] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46505,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.04398,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3500() {
      return C[3500] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61528,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3501() {
      return C[3501] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0.16667,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3502() {
      return C[3502] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69445,
        [S.CharacterMetrics_skew]: 0.16667,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3503() {
      return C[3503] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74236,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.07569,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3504() {
      return C[3504] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77986,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05764,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3505() {
      return C[3505] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58333,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.13889,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3506() {
      return C[3506] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3507() {
      return C[3507] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61222,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.11,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3508() {
      return C[3508] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.7724,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05017,
        [S.CharacterMetrics_height]: 0.68333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3509() {
      return C[3509] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6397,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.0037,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3510() {
      return C[3510] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56563,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.05278,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3511() {
      return C[3511] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51773,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05556,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3512() {
      return C[3512] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44444,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.03785,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3513() {
      return C[3513] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46632,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3514() {
      return C[3514] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.4375,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.07378,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3515() {
      return C[3515] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49653,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3516() {
      return C[3516] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46944,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3517() {
      return C[3517] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.35394,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3518() {
      return C[3518] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57616,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3519() {
      return C[3519] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3520() {
      return C[3520] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60255,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3521() {
      return C[3521] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.49398,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.06366,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3522() {
      return C[3522] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.4375,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.04601,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3523() {
      return C[3523] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57003,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3524() {
      return C[3524] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51702,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3525() {
      return C[3525] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36285,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0.07986,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.09722
      });
    },
    get C3526() {
      return C[3526] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57141,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3527() {
      return C[3527] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.43715,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.1132,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3528() {
      return C[3528] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54028,
        [S.CharacterMetrics_skew]: 0.02778,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3529() {
      return C[3529] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65417,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3530() {
      return C[3530] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62569,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3531() {
      return C[3531] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.65139,
        [S.CharacterMetrics_skew]: 0.11111,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3532() {
      return C[3532] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62245,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03588,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3533() {
      return C[3533] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59144,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3534() {
      return C[3534] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59583,
        [S.CharacterMetrics_skew]: 0.08334,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3535() {
      return C[3535] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.82813,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3536() {
      return C[3536] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.4059,
        [S.CharacterMetrics_skew]: 0.05556,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3447() {
      return C[3447] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [65, C[3448] || CT.C3448, 66, C[3449] || CT.C3449, 67, C[3450] || CT.C3450, 68, C[3451] || CT.C3451, 69, C[3452] || CT.C3452, 70, C[3453] || CT.C3453, 71, C[3454] || CT.C3454, 72, C[3455] || CT.C3455, 73, C[3456] || CT.C3456, 74, C[3457] || CT.C3457, 75, C[3458] || CT.C3458, 76, C[3459] || CT.C3459, 77, C[3460] || CT.C3460, 78, C[3461] || CT.C3461, 79, C[3462] || CT.C3462, 80, C[3463] || CT.C3463, 81, C[3464] || CT.C3464, 82, C[3465] || CT.C3465, 83, C[3466] || CT.C3466, 84, C[3467] || CT.C3467, 85, C[3468] || CT.C3468, 86, C[3469] || CT.C3469, 87, C[3470] || CT.C3470, 88, C[3471] || CT.C3471, 89, C[3472] || CT.C3472, 90, C[3473] || CT.C3473, 97, C[3474] || CT.C3474, 98, C[3475] || CT.C3475, 99, C[3476] || CT.C3476, 100, C[3477] || CT.C3477, 101, C[3478] || CT.C3478, 102, C[3479] || CT.C3479, 103, C[3480] || CT.C3480, 104, C[3481] || CT.C3481, 105, C[3482] || CT.C3482, 106, C[3483] || CT.C3483, 107, C[3484] || CT.C3484, 108, C[3485] || CT.C3485, 109, C[3486] || CT.C3486, 110, C[3487] || CT.C3487, 111, C[3488] || CT.C3488, 112, C[3489] || CT.C3489, 113, C[3490] || CT.C3490, 114, C[3491] || CT.C3491, 115, C[3492] || CT.C3492, 116, C[3493] || CT.C3493, 117, C[3494] || CT.C3494, 118, C[3495] || CT.C3495, 119, C[3496] || CT.C3496, 120, C[3497] || CT.C3497, 121, C[3498] || CT.C3498, 122, C[3499] || CT.C3499, 915, C[3500] || CT.C3500, 916, C[3501] || CT.C3501, 920, C[3462] || CT.C3462, 923, C[3502] || CT.C3502, 926, C[3503] || CT.C3503, 928, C[3455] || CT.C3455, 931, C[3504] || CT.C3504, 933, C[3505] || CT.C3505, 934, C[3506] || CT.C3506, 936, C[3507] || CT.C3507, 937, C[3508] || CT.C3508, 945, C[3509] || CT.C3509, 946, C[3510] || CT.C3510, 947, C[3511] || CT.C3511, 948, C[3512] || CT.C3512, 949, C[3513] || CT.C3513, 950, C[3514] || CT.C3514, 951, C[3515] || CT.C3515, 952, C[3516] || CT.C3516, 953, C[3517] || CT.C3517, 954, C[3518] || CT.C3518, 955, C[3519] || CT.C3519, 956, C[3520] || CT.C3520, 957, C[3521] || CT.C3521, 958, C[3522] || CT.C3522, 959, C[3488] || CT.C3488, 960, C[3523] || CT.C3523, 961, C[3524] || CT.C3524, 962, C[3525] || CT.C3525, 963, C[3526] || CT.C3526, 964, C[3527] || CT.C3527, 965, C[3528] || CT.C3528, 966, C[3529] || CT.C3529, 967, C[3530] || CT.C3530, 968, C[3531] || CT.C3531, 969, C[3532] || CT.C3532, 977, C[3533] || CT.C3533, 981, C[3534] || CT.C3534, 982, C[3535] || CT.C3535, 1009, C[3524] || CT.C3524, 1013, C[3536] || CT.C3536]);
    },
    get C3538() {
      return C[3538] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3539() {
      return C[3539] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3540() {
      return C[3540] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.91667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3541() {
      return C[3541] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3542() {
      return C[3542] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.02912,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3543() {
      return C[3543] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3544() {
      return C[3544] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3545() {
      return C[3545] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.42778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3546() {
      return C[3546] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3547() {
      return C[3547] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.61667,
        [S.CharacterMetrics_depth]: 0.11667
      });
    },
    get C3548() {
      return C[3548] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.13056,
        [S.CharacterMetrics_depth]: 0.10556
      });
    },
    get C3549() {
      return C[3549] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3550() {
      return C[3550] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.13056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3551() {
      return C[3551] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3552() {
      return C[3552] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3553() {
      return C[3553] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3554() {
      return C[3554] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0.10556
      });
    },
    get C3555() {
      return C[3555] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.40625,
        [S.CharacterMetrics_depth]: -0.09375
      });
    },
    get C3556() {
      return C[3556] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51945,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3557() {
      return C[3557] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3558() {
      return C[3558] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70278,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3559() {
      return C[3559] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3560() {
      return C[3560] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3561() {
      return C[3561] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3562() {
      return C[3562] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.76389,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3563() {
      return C[3563] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3564() {
      return C[3564] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.97778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3565() {
      return C[3565] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.10556
      });
    },
    get C3566() {
      return C[3566] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3567() {
      return C[3567] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.03889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3568() {
      return C[3568] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0275,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3569() {
      return C[3569] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.67223,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3570() {
      return C[3570] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.34306,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3571() {
      return C[3571] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03056,
        [S.CharacterMetrics_height]: 0.10833,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3572() {
      return C[3572] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3573() {
      return C[3573] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3574() {
      return C[3574] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3575() {
      return C[3575] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3576() {
      return C[3576] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07639,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3577() {
      return C[3577] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3578() {
      return C[3578] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.25556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3579() {
      return C[3579] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.28611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3580() {
      return C[3580] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.53056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3581() {
      return C[3581] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3582() {
      return C[3582] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3583() {
      return C[3583] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3584() {
      return C[3584] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3585() {
      return C[3585] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.37222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3586() {
      return C[3586] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.42167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3587() {
      return C[3587] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.40417,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.58929,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3588() {
      return C[3588] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3589() {
      return C[3589] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3590() {
      return C[3590] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3591() {
      return C[3591] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01528,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3592() {
      return C[3592] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47639,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3593() {
      return C[3593] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.34444,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3594() {
      return C[3594] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.17014
      });
    },
    get C3595() {
      return C[3595] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.25556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3596() {
      return C[3596] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.28611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3597() {
      return C[3597] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63542,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3598() {
      return C[3598] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63778,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3599() {
      return C[3599] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.91667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3600() {
      return C[3600] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3601() {
      return C[3601] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03056,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3602() {
      return C[3602] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.10001,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03056,
        [S.CharacterMetrics_height]: 0.45833,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3537() {
      return C[3537] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[3538] || CT.C3538, 34, C[3539] || CT.C3539, 35, C[3540] || CT.C3540, 36, C[3541] || CT.C3541, 37, C[3542] || CT.C3542, 38, C[3543] || CT.C3543, 39, C[3544] || CT.C3544, 40, C[3545] || CT.C3545, 41, C[3545] || CT.C3545, 42, C[3546] || CT.C3546, 43, C[3547] || CT.C3547, 44, C[3548] || CT.C3548, 45, C[3549] || CT.C3549, 46, C[3550] || CT.C3550, 47, C[3551] || CT.C3551, 48, C[3552] || CT.C3552, 49, C[3552] || CT.C3552, 50, C[3552] || CT.C3552, 51, C[3552] || CT.C3552, 52, C[3552] || CT.C3552, 53, C[3552] || CT.C3552, 54, C[3552] || CT.C3552, 55, C[3552] || CT.C3552, 56, C[3552] || CT.C3552, 57, C[3552] || CT.C3552, 58, C[3553] || CT.C3553, 59, C[3554] || CT.C3554, 61, C[3555] || CT.C3555, 63, C[3556] || CT.C3556, 64, C[3557] || CT.C3557, 65, C[3557] || CT.C3557, 66, C[3557] || CT.C3557, 67, C[3558] || CT.C3558, 68, C[3559] || CT.C3559, 69, C[3560] || CT.C3560, 70, C[3325] || CT.C3325, 71, C[3557] || CT.C3557, 72, C[3559] || CT.C3559, 73, C[3561] || CT.C3561, 74, C[3556] || CT.C3556, 75, C[3562] || CT.C3562, 76, C[3563] || CT.C3563, 77, C[3564] || CT.C3564, 78, C[3559] || CT.C3559, 79, C[3559] || CT.C3559, 80, C[3558] || CT.C3558, 81, C[3565] || CT.C3565, 82, C[3558] || CT.C3558, 83, C[3325] || CT.C3325, 84, C[3557] || CT.C3557, 85, C[3562] || CT.C3562, 86, C[3566] || CT.C3566, 87, C[3567] || CT.C3567, 88, C[3557] || CT.C3557, 89, C[3568] || CT.C3568, 90, C[3569] || CT.C3569, 91, C[3570] || CT.C3570, 93, C[3570] || CT.C3570, 94, C[3552] || CT.C3552, 95, C[3571] || CT.C3571, 97, C[3572] || CT.C3572, 98, C[3573] || CT.C3573, 99, C[3574] || CT.C3574, 100, C[3573] || CT.C3573, 101, C[3575] || CT.C3575, 102, C[3576] || CT.C3576, 103, C[3577] || CT.C3577, 104, C[3573] || CT.C3573, 105, C[3578] || CT.C3578, 106, C[3579] || CT.C3579, 107, C[3580] || CT.C3580, 108, C[3578] || CT.C3578, 109, C[3581] || CT.C3581, 110, C[3582] || CT.C3582, 111, C[3583] || CT.C3583, 112, C[3584] || CT.C3584, 113, C[3584] || CT.C3584, 114, C[3585] || CT.C3585, 115, C[3586] || CT.C3586, 116, C[3587] || CT.C3587, 117, C[3582] || CT.C3582, 118, C[3588] || CT.C3588, 119, C[3589] || CT.C3589, 120, C[3590] || CT.C3590, 121, C[3591] || CT.C3591, 122, C[3592] || CT.C3592, 126, C[3593] || CT.C3593, 168, C[3552] || CT.C3552, 176, C[3557] || CT.C3557, 180, C[3552] || CT.C3552, 184, C[3594] || CT.C3594, 305, C[3595] || CT.C3595, 567, C[3596] || CT.C3596, 710, C[3552] || CT.C3552, 711, C[3597] || CT.C3597, 713, C[3598] || CT.C3598, 728, C[3552] || CT.C3552, 729, C[3544] || CT.C3544, 730, C[3557] || CT.C3557, 732, C[3552] || CT.C3552, 733, C[3552] || CT.C3552, 915, C[3563] || CT.C3563, 916, C[3599] || CT.C3599, 920, C[3600] || CT.C3600, 923, C[3569] || CT.C3569, 926, C[3557] || CT.C3557, 928, C[3559] || CT.C3559, 931, C[3559] || CT.C3559, 933, C[3600] || CT.C3600, 934, C[3559] || CT.C3559, 936, C[3600] || CT.C3600, 937, C[3559] || CT.C3559, 8211, C[3601] || CT.C3601, 8212, C[3602] || CT.C3602, 8216, C[3544] || CT.C3544, 8217, C[3544] || CT.C3544, 8220, C[3539] || CT.C3539, 8221, C[3539] || CT.C3539]);
    },
    get C3604() {
      return C[3604] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31945,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05733,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3605() {
      return C[3605] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.00316,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3606() {
      return C[3606] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05087,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3607() {
      return C[3607] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11156,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3608() {
      return C[3608] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03126,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.05556
      });
    },
    get C3609() {
      return C[3609] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03058,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3610() {
      return C[3610] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07816,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3611() {
      return C[3611] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13164,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3612() {
      return C[3612] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02536,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3613() {
      return C[3613] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11775,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3614() {
      return C[3614] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02536,
        [S.CharacterMetrics_height]: 0.58333,
        [S.CharacterMetrics_depth]: 0.08333
      });
    },
    get C3615() {
      return C[3615] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.08333,
        [S.CharacterMetrics_depth]: 0.125
      });
    },
    get C3616() {
      return C[3616] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01946,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3617() {
      return C[3617] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.08333,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3618() {
      return C[3618] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13164,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3619() {
      return C[3619] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11156,
        [S.CharacterMetrics_height]: 0.65556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3620() {
      return C[3620] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02502,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3621() {
      return C[3621] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02502,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.125
      });
    },
    get C3622() {
      return C[3622] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.05087,
        [S.CharacterMetrics_height]: 0.37,
        [S.CharacterMetrics_depth]: -0.13
      });
    },
    get C3623() {
      return C[3623] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11809,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3624() {
      return C[3624] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07555,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3625() {
      return C[3625] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3626() {
      return C[3626] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08293,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3627() {
      return C[3627] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11983,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3628() {
      return C[3628] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72223,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07555,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3629() {
      return C[3629] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11983,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3630() {
      return C[3630] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56945,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13372,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3631() {
      return C[3631] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11983,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3632() {
      return C[3632] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08094,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3633() {
      return C[3633] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13372,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3634() {
      return C[3634] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08094,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3635() {
      return C[3635] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11983,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3636() {
      return C[3636] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3637() {
      return C[3637] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08094,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3638() {
      return C[3638] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07555,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3639() {
      return C[3639] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08293,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3640() {
      return C[3640] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07555,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.125
      });
    },
    get C3641() {
      return C[3641] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64584,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08293,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3642() {
      return C[3642] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09205,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3643() {
      return C[3643] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13372,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3644() {
      return C[3644] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08094,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3645() {
      return C[3645] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1615,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3646() {
      return C[3646] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1615,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3647() {
      return C[3647] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13372,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3648() {
      return C[3648] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.17261,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3649() {
      return C[3649] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11983,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3650() {
      return C[3650] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.28889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15942,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3651() {
      return C[3651] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.28889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08719,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3652() {
      return C[3652] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0799,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3653() {
      return C[3653] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08616,
        [S.CharacterMetrics_height]: 0.09444,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3654() {
      return C[3654] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.00981,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3655() {
      return C[3655] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03057,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3656() {
      return C[3656] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08336,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3657() {
      return C[3657] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09483,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3658() {
      return C[3658] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3659() {
      return C[3659] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.21705,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3660() {
      return C[3660] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10836,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3661() {
      return C[3661] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01778,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3662() {
      return C[3662] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.23889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09718,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3663() {
      return C[3663] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.26667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09162,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3664() {
      return C[3664] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08336,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3665() {
      return C[3665] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.23889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09483,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3666() {
      return C[3666] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3667() {
      return C[3667] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3668() {
      return C[3668] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06613,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3669() {
      return C[3669] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3670() {
      return C[3670] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04169,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3671() {
      return C[3671] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.34167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10836,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3672() {
      return C[3672] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.38333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.0778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3673() {
      return C[3673] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07225,
        [S.CharacterMetrics_height]: 0.57143,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3674() {
      return C[3674] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04169,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3675() {
      return C[3675] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10836,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3676() {
      return C[3676] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10836,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3677() {
      return C[3677] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09169,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3678() {
      return C[3678] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.10836,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3679() {
      return C[3679] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.43472,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08752,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3680() {
      return C[3680] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08826,
        [S.CharacterMetrics_height]: 0.32659,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3681() {
      return C[3681] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06385,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3682() {
      return C[3682] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73752,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3683() {
      return C[3683] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.23889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04169,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3684() {
      return C[3684] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.26667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04169,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3685() {
      return C[3685] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08432,
        [S.CharacterMetrics_height]: 0.63194,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3686() {
      return C[3686] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08776,
        [S.CharacterMetrics_height]: 0.60889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3687() {
      return C[3687] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09205,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3688() {
      return C[3688] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09483,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3689() {
      return C[3689] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07774,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3690() {
      return C[3690] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08826,
        [S.CharacterMetrics_height]: 0.67659,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3691() {
      return C[3691] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.54167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13372,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3692() {
      return C[3692] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3693() {
      return C[3693] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.07555,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3694() {
      return C[3694] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.12816,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3695() {
      return C[3695] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.11983,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3696() {
      return C[3696] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09031,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3697() {
      return C[3697] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04603,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3698() {
      return C[3698] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08293,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3699() {
      return C[3699] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08616,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3700() {
      return C[3700] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08616,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3701() {
      return C[3701] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.14205,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3603() {
      return C[3603] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[3604] || CT.C3604, 34, C[3605] || CT.C3605, 35, C[3606] || CT.C3606, 36, C[3607] || CT.C3607, 37, C[3608] || CT.C3608, 38, C[3609] || CT.C3609, 39, C[3610] || CT.C3610, 40, C[3611] || CT.C3611, 41, C[3612] || CT.C3612, 42, C[3613] || CT.C3613, 43, C[3614] || CT.C3614, 44, C[3615] || CT.C3615, 45, C[3616] || CT.C3616, 46, C[3617] || CT.C3617, 47, C[3618] || CT.C3618, 48, C[3619] || CT.C3619, 49, C[3619] || CT.C3619, 50, C[3619] || CT.C3619, 51, C[3619] || CT.C3619, 52, C[3619] || CT.C3619, 53, C[3619] || CT.C3619, 54, C[3619] || CT.C3619, 55, C[3619] || CT.C3619, 56, C[3619] || CT.C3619, 57, C[3619] || CT.C3619, 58, C[3620] || CT.C3620, 59, C[3621] || CT.C3621, 61, C[3622] || CT.C3622, 63, C[3623] || CT.C3623, 64, C[3624] || CT.C3624, 65, C[3625] || CT.C3625, 66, C[3626] || CT.C3626, 67, C[3627] || CT.C3627, 68, C[3628] || CT.C3628, 69, C[3629] || CT.C3629, 70, C[3630] || CT.C3630, 71, C[3631] || CT.C3631, 72, C[3632] || CT.C3632, 73, C[3633] || CT.C3633, 74, C[3634] || CT.C3634, 75, C[3635] || CT.C3635, 76, C[3636] || CT.C3636, 77, C[3637] || CT.C3637, 78, C[3632] || CT.C3632, 79, C[3638] || CT.C3638, 80, C[3639] || CT.C3639, 81, C[3640] || CT.C3640, 82, C[3641] || CT.C3641, 83, C[3642] || CT.C3642, 84, C[3643] || CT.C3643, 85, C[3644] || CT.C3644, 86, C[3645] || CT.C3645, 87, C[3646] || CT.C3646, 88, C[3647] || CT.C3647, 89, C[3648] || CT.C3648, 90, C[3649] || CT.C3649, 91, C[3650] || CT.C3650, 93, C[3651] || CT.C3651, 94, C[3652] || CT.C3652, 95, C[3653] || CT.C3653, 97, C[3654] || CT.C3654, 98, C[3655] || CT.C3655, 99, C[3656] || CT.C3656, 100, C[3657] || CT.C3657, 101, C[3658] || CT.C3658, 102, C[3659] || CT.C3659, 103, C[3660] || CT.C3660, 104, C[3661] || CT.C3661, 105, C[3662] || CT.C3662, 106, C[3663] || CT.C3663, 107, C[3664] || CT.C3664, 108, C[3665] || CT.C3665, 109, C[3666] || CT.C3666, 110, C[3667] || CT.C3667, 111, C[3668] || CT.C3668, 112, C[3669] || CT.C3669, 113, C[3670] || CT.C3670, 114, C[3671] || CT.C3671, 115, C[3672] || CT.C3672, 116, C[3673] || CT.C3673, 117, C[3674] || CT.C3674, 118, C[3675] || CT.C3675, 119, C[3676] || CT.C3676, 120, C[3677] || CT.C3677, 121, C[3678] || CT.C3678, 122, C[3679] || CT.C3679, 126, C[3680] || CT.C3680, 168, C[3681] || CT.C3681, 176, C[3682] || CT.C3682, 184, C[3304] || CT.C3304, 305, C[3683] || CT.C3683, 567, C[3684] || CT.C3684, 710, C[3652] || CT.C3652, 711, C[3685] || CT.C3685, 713, C[3686] || CT.C3686, 714, C[3687] || CT.C3687, 715, C[3245] || CT.C3245, 728, C[3688] || CT.C3688, 729, C[3689] || CT.C3689, 730, C[3682] || CT.C3682, 732, C[3690] || CT.C3690, 733, C[3687] || CT.C3687, 915, C[3691] || CT.C3691, 916, C[3692] || CT.C3692, 920, C[3693] || CT.C3693, 923, C[3325] || CT.C3325, 926, C[3694] || CT.C3694, 928, C[3632] || CT.C3632, 931, C[3695] || CT.C3695, 933, C[3696] || CT.C3696, 934, C[3697] || CT.C3697, 936, C[3696] || CT.C3696, 937, C[3698] || CT.C3698, 8211, C[3699] || CT.C3699, 8212, C[3700] || CT.C3700, 8216, C[3610] || CT.C3610, 8217, C[3610] || CT.C3610, 8220, C[3701] || CT.C3701, 8221, C[3605] || CT.C3605]);
    },
    get C3703() {
      return C[3703] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.31945,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3704() {
      return C[3704] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3705() {
      return C[3705] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3706() {
      return C[3706] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.65556,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3707() {
      return C[3707] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3708() {
      return C[3708] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.125
      });
    },
    get C3709() {
      return C[3709] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.37,
        [S.CharacterMetrics_depth]: -0.13
      });
    },
    get C3710() {
      return C[3710] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.72223,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3711() {
      return C[3711] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56945,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3712() {
      return C[3712] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3713() {
      return C[3713] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.69445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3714() {
      return C[3714] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3715() {
      return C[3715] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3716() {
      return C[3716] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.125
      });
    },
    get C3717() {
      return C[3717] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.64584,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3718() {
      return C[3718] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3719() {
      return C[3719] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.6875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3720() {
      return C[3720] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3721() {
      return C[3721] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3722() {
      return C[3722] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.025,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3723() {
      return C[3723] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.28889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25
      });
    },
    get C3724() {
      return C[3724] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.09444,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3725() {
      return C[3725] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48056,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3726() {
      return C[3726] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3727() {
      return C[3727] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3728() {
      return C[3728] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.30556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06944,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3729() {
      return C[3729] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3730() {
      return C[3730] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.23889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3731() {
      return C[3731] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.26667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3732() {
      return C[3732] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.48889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3733() {
      return C[3733] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.23889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3734() {
      return C[3734] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3735() {
      return C[3735] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3736() {
      return C[3736] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3737() {
      return C[3737] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.51667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3738() {
      return C[3738] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.34167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3739() {
      return C[3739] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.36111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.57143,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3740() {
      return C[3740] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3741() {
      return C[3741] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.68334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3742() {
      return C[3742] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3743() {
      return C[3743] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.46111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.01389,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3744() {
      return C[3744] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.43472,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3745() {
      return C[3745] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.32659,
        [S.CharacterMetrics_depth]: 0.35
      });
    },
    get C3746() {
      return C[3746] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3747() {
      return C[3747] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.23889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3748() {
      return C[3748] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.26667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0.19444
      });
    },
    get C3749() {
      return C[3749] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.63194,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3750() {
      return C[3750] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.60889,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3751() {
      return C[3751] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.67937,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3752() {
      return C[3752] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.67659,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3753() {
      return C[3753] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.5,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3754() {
      return C[3754] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.02778,
        [S.CharacterMetrics_height]: 0.44444,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3702() {
      return C[3702] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [33, C[3703] || CT.C3703, 34, C[3245] || CT.C3245, 35, C[3246] || CT.C3246, 36, C[3247] || CT.C3247, 37, C[3248] || CT.C3248, 38, C[3704] || CT.C3704, 39, C[3244] || CT.C3244, 40, C[3250] || CT.C3250, 41, C[3250] || CT.C3250, 42, C[3251] || CT.C3251, 43, C[3252] || CT.C3252, 44, C[3615] || CT.C3615, 45, C[3705] || CT.C3705, 46, C[3617] || CT.C3617, 47, C[3256] || CT.C3256, 48, C[3706] || CT.C3706, 49, C[3706] || CT.C3706, 50, C[3706] || CT.C3706, 51, C[3706] || CT.C3706, 52, C[3706] || CT.C3706, 53, C[3706] || CT.C3706, 54, C[3706] || CT.C3706, 55, C[3706] || CT.C3706, 56, C[3706] || CT.C3706, 57, C[3706] || CT.C3706, 58, C[3707] || CT.C3707, 59, C[3708] || CT.C3708, 61, C[3709] || CT.C3709, 63, C[3259] || CT.C3259, 64, C[3625] || CT.C3625, 65, C[3625] || CT.C3625, 66, C[3625] || CT.C3625, 67, C[2958] || CT.C2958, 68, C[3710] || CT.C3710, 69, C[2983] || CT.C2983, 70, C[3711] || CT.C3711, 71, C[3625] || CT.C3625, 72, C[3712] || CT.C3712, 73, C[3244] || CT.C3244, 74, C[3259] || CT.C3259, 75, C[3713] || CT.C3713, 76, C[3636] || CT.C3636, 77, C[3714] || CT.C3714, 78, C[3712] || CT.C3712, 79, C[3715] || CT.C3715, 80, C[2958] || CT.C2958, 81, C[3716] || CT.C3716, 82, C[3717] || CT.C3717, 83, C[3281] || CT.C3281, 84, C[3718] || CT.C3718, 85, C[3719] || CT.C3719, 86, C[3720] || CT.C3720, 87, C[3721] || CT.C3721, 88, C[3625] || CT.C3625, 89, C[3722] || CT.C3722, 90, C[3325] || CT.C3325, 91, C[3723] || CT.C3723, 93, C[3723] || CT.C3723, 94, C[3245] || CT.C3245, 95, C[3724] || CT.C3724, 97, C[3725] || CT.C3725, 98, C[3726] || CT.C3726, 99, C[3727] || CT.C3727, 100, C[3726] || CT.C3726, 101, C[3727] || CT.C3727, 102, C[3728] || CT.C3728, 103, C[3729] || CT.C3729, 104, C[3726] || CT.C3726, 105, C[3730] || CT.C3730, 106, C[3731] || CT.C3731, 107, C[3732] || CT.C3732, 108, C[3733] || CT.C3733, 109, C[3734] || CT.C3734, 110, C[3735] || CT.C3735, 111, C[3736] || CT.C3736, 112, C[3737] || CT.C3737, 113, C[3737] || CT.C3737, 114, C[3738] || CT.C3738, 115, C[2921] || CT.C2921, 116, C[3739] || CT.C3739, 117, C[3735] || CT.C3735, 118, C[3740] || CT.C3740, 119, C[3741] || CT.C3741, 120, C[3742] || CT.C3742, 121, C[3743] || CT.C3743, 122, C[3744] || CT.C3744, 126, C[3745] || CT.C3745, 168, C[3746] || CT.C3746, 176, C[3625] || CT.C3625, 184, C[3304] || CT.C3304, 305, C[3747] || CT.C3747, 567, C[3748] || CT.C3748, 710, C[3245] || CT.C3245, 711, C[3749] || CT.C3749, 713, C[3750] || CT.C3750, 714, C[3245] || CT.C3245, 715, C[3245] || CT.C3245, 728, C[3245] || CT.C3245, 729, C[3751] || CT.C3751, 730, C[3625] || CT.C3625, 732, C[3752] || CT.C3752, 733, C[3245] || CT.C3245, 915, C[3636] || CT.C3636, 916, C[3692] || CT.C3692, 920, C[3249] || CT.C3249, 923, C[3325] || CT.C3325, 926, C[3625] || CT.C3625, 928, C[3712] || CT.C3712, 931, C[3322] || CT.C3322, 933, C[3249] || CT.C3249, 934, C[3322] || CT.C3322, 936, C[3249] || CT.C3249, 937, C[3322] || CT.C3322, 8211, C[3753] || CT.C3753, 8212, C[3754] || CT.C3754, 8216, C[3244] || CT.C3244, 8217, C[3244] || CT.C3244, 8220, C[3245] || CT.C3245, 8221, C[3245] || CT.C3245]);
    },
    get C3756() {
      return C[3756] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80253,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.22925,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3757() {
      return C[3757] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.90757,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.04087,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3758() {
      return C[3758] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66619,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.1689,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3759() {
      return C[3759] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77443,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.09371,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3760() {
      return C[3760] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.56162,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.18583,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3761() {
      return C[3761] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.89544,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.13634,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3762() {
      return C[3762] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.60961,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.17322,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3763() {
      return C[3763] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.96919,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.29694,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3764() {
      return C[3764] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80907,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19189,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3765() {
      return C[3765] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.05159,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19189,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0.27778
      });
    },
    get C3766() {
      return C[3766] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.91364,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.31259,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3767() {
      return C[3767] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.87373,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19189,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3768() {
      return C[3768] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.08031,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.15981,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3769() {
      return C[3769] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.9015,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.3525,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3770() {
      return C[3770] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73787,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08078,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3771() {
      return C[3771] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.01262,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.08078,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3772() {
      return C[3772] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88282,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.03305,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3773() {
      return C[3773] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.85,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.06259,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3774() {
      return C[3774] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.86767,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19189,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3775() {
      return C[3775] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.74697,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.29087,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3776() {
      return C[3776] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79996,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.25815,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3777() {
      return C[3777] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.62204,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.27523,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3778() {
      return C[3778] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80532,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.27523,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3779() {
      return C[3779] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.26006,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3780() {
      return C[3780] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.70961,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.2939,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3781() {
      return C[3781] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.8212,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.24037,
        [S.CharacterMetrics_height]: 0.7,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3755() {
      return C[3755] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [65, C[3756] || CT.C3756, 66, C[3757] || CT.C3757, 67, C[3758] || CT.C3758, 68, C[3759] || CT.C3759, 69, C[3760] || CT.C3760, 70, C[3761] || CT.C3761, 71, C[3762] || CT.C3762, 72, C[3763] || CT.C3763, 73, C[3764] || CT.C3764, 74, C[3765] || CT.C3765, 75, C[3766] || CT.C3766, 76, C[3767] || CT.C3767, 77, C[3768] || CT.C3768, 78, C[3769] || CT.C3769, 79, C[3770] || CT.C3770, 80, C[3771] || CT.C3771, 81, C[3772] || CT.C3772, 82, C[3773] || CT.C3773, 83, C[3774] || CT.C3774, 84, C[3775] || CT.C3775, 85, C[3776] || CT.C3776, 86, C[3777] || CT.C3777, 87, C[3778] || CT.C3778, 88, C[3779] || CT.C3779, 89, C[3780] || CT.C3780, 90, C[3781] || CT.C3781]);
    },
    get C3783() {
      return C[3783] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.45834,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.85,
        [S.CharacterMetrics_depth]: 0.35001
      });
    },
    get C3784() {
      return C[3784] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.57778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.85,
        [S.CharacterMetrics_depth]: 0.35001
      });
    },
    get C3785() {
      return C[3785] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.41667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.85,
        [S.CharacterMetrics_depth]: 0.35001
      });
    },
    get C3786() {
      return C[3786] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.85,
        [S.CharacterMetrics_depth]: 0.35001
      });
    },
    get C3787() {
      return C[3787] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.72222,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3788() {
      return C[3788] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.601,
        [S.CharacterMetrics_depth]: -0.00099
      });
    },
    get C3789() {
      return C[3789] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.6,
        [S.CharacterMetrics_depth]: 0.00001
      });
    },
    get C3790() {
      return C[3790] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.77778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.6,
        [S.CharacterMetrics_depth]: 0.00001
      });
    },
    get C3791() {
      return C[3791] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.94445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25001
      });
    },
    get C3792() {
      return C[3792] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.05556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25001
      });
    },
    get C3793() {
      return C[3793] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.85,
        [S.CharacterMetrics_depth]: 0.35001
      });
    },
    get C3794() {
      return C[3794] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.33333,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.606,
        [S.CharacterMetrics_depth]: -0.00599
      });
    },
    get C3795() {
      return C[3795] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.606,
        [S.CharacterMetrics_depth]: -0.00599
      });
    },
    get C3796() {
      return C[3796] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19445,
        [S.CharacterMetrics_height]: 0.805,
        [S.CharacterMetrics_depth]: 0.30612
      });
    },
    get C3797() {
      return C[3797] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.19445,
        [S.CharacterMetrics_height]: 0.805,
        [S.CharacterMetrics_depth]: 0.306
      });
    },
    get C3798() {
      return C[3798] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.83334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25001
      });
    },
    get C3799() {
      return C[3799] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.85,
        [S.CharacterMetrics_depth]: 0.35001
      });
    },
    get C3800() {
      return C[3800] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.601,
        [S.CharacterMetrics_depth]: -0.00099
      });
    },
    get C3801() {
      return C[3801] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.11111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0.25001
      });
    },
    get C3782() {
      return C[3782] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [40, C[3783] || CT.C3783, 41, C[3783] || CT.C3783, 47, C[3784] || CT.C3784, 91, C[3785] || CT.C3785, 92, C[3784] || CT.C3784, 93, C[3785] || CT.C3785, 123, C[3786] || CT.C3786, 125, C[3786] || CT.C3786, 710, C[3787] || CT.C3787, 732, C[3787] || CT.C3787, 770, C[3787] || CT.C3787, 771, C[3787] || CT.C3787, 8214, C[3788] || CT.C3788, 8593, C[3789] || CT.C3789, 8595, C[3789] || CT.C3789, 8657, C[3790] || CT.C3790, 8659, C[3790] || CT.C3790, 8719, C[3791] || CT.C3791, 8720, C[3791] || CT.C3791, 8721, C[3792] || CT.C3792, 8730, C[3793] || CT.C3793, 8739, C[3794] || CT.C3794, 8741, C[3795] || CT.C3795, 8747, C[3796] || CT.C3796, 8748, C[3797] || CT.C3797, 8749, C[3797] || CT.C3797, 8750, C[3796] || CT.C3796, 8896, C[3798] || CT.C3798, 8897, C[3798] || CT.C3798, 8898, C[3798] || CT.C3798, 8899, C[3798] || CT.C3798, 8968, C[3799] || CT.C3799, 8969, C[3799] || CT.C3799, 8970, C[3799] || CT.C3799, 8971, C[3799] || CT.C3799, 9168, C[3800] || CT.C3800, 10216, C[3799] || CT.C3799, 10217, C[3799] || CT.C3799, 10752, C[3801] || CT.C3801, 10753, C[3801] || CT.C3801, 10754, C[3801] || CT.C3801, 10756, C[3798] || CT.C3798, 10758, C[3798] || CT.C3798]);
    },
    get C3803() {
      return C[3803] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.59722,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3804() {
      return C[3804] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.81111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3805() {
      return C[3805] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.47222,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3806() {
      return C[3806] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3807() {
      return C[3807] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3808() {
      return C[3808] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.05,
        [S.CharacterMetrics_depth]: 0.55001
      });
    },
    get C3809() {
      return C[3809] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.05,
        [S.CharacterMetrics_depth]: 0.55001
      });
    },
    get C3810() {
      return C[3810] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3811() {
      return C[3811] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.44445,
        [S.CharacterMetrics_height]: 1.36,
        [S.CharacterMetrics_depth]: 0.86225
      });
    },
    get C3812() {
      return C[3812] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.55556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0.44445,
        [S.CharacterMetrics_height]: 1.36,
        [S.CharacterMetrics_depth]: 0.862
      });
    },
    get C3813() {
      return C[3813] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.11111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.05,
        [S.CharacterMetrics_depth]: 0.55001
      });
    },
    get C3814() {
      return C[3814] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3815() {
      return C[3815] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.61111,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3816() {
      return C[3816] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.51112,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.05,
        [S.CharacterMetrics_depth]: 0.55001
      });
    },
    get C3802() {
      return C[3802] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [40, C[3803] || CT.C3803, 41, C[3803] || CT.C3803, 47, C[3804] || CT.C3804, 91, C[3805] || CT.C3805, 92, C[3804] || CT.C3804, 93, C[3805] || CT.C3805, 123, C[3806] || CT.C3806, 125, C[3806] || CT.C3806, 710, C[3807] || CT.C3807, 732, C[3807] || CT.C3807, 770, C[3807] || CT.C3807, 771, C[3807] || CT.C3807, 8719, C[3808] || CT.C3808, 8720, C[3808] || CT.C3808, 8721, C[3809] || CT.C3809, 8730, C[3810] || CT.C3810, 8747, C[3811] || CT.C3811, 8748, C[3812] || CT.C3812, 8749, C[3812] || CT.C3812, 8750, C[3811] || CT.C3811, 8896, C[3813] || CT.C3813, 8897, C[3813] || CT.C3813, 8898, C[3813] || CT.C3813, 8899, C[3813] || CT.C3813, 8968, C[3814] || CT.C3814, 8969, C[3814] || CT.C3814, 8970, C[3814] || CT.C3814, 8971, C[3814] || CT.C3814, 10216, C[3815] || CT.C3815, 10217, C[3815] || CT.C3815, 10752, C[3816] || CT.C3816, 10753, C[3816] || CT.C3816, 10754, C[3816] || CT.C3816, 10756, C[3813] || CT.C3813, 10758, C[3813] || CT.C3813]);
    },
    get C3818() {
      return C[3818] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.73611,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.45,
        [S.CharacterMetrics_depth]: 0.95003
      });
    },
    get C3819() {
      return C[3819] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.04445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.45,
        [S.CharacterMetrics_depth]: 0.95003
      });
    },
    get C3820() {
      return C[3820] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.52778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.45,
        [S.CharacterMetrics_depth]: 0.95003
      });
    },
    get C3821() {
      return C[3821] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.75,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.45,
        [S.CharacterMetrics_depth]: 0.95003
      });
    },
    get C3822() {
      return C[3822] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.44445,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.75,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3823() {
      return C[3823] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.45,
        [S.CharacterMetrics_depth]: 0.95003
      });
    },
    get C3824() {
      return C[3824] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.45,
        [S.CharacterMetrics_depth]: 0.95003
      });
    },
    get C3817() {
      return C[3817] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [40, C[3818] || CT.C3818, 41, C[3818] || CT.C3818, 47, C[3819] || CT.C3819, 91, C[3820] || CT.C3820, 92, C[3819] || CT.C3819, 93, C[3820] || CT.C3820, 123, C[3821] || CT.C3821, 125, C[3821] || CT.C3821, 710, C[3822] || CT.C3822, 732, C[3822] || CT.C3822, 770, C[3822] || CT.C3822, 771, C[3822] || CT.C3822, 8730, C[3823] || CT.C3823, 8968, C[3824] || CT.C3824, 8969, C[3824] || CT.C3824, 8970, C[3824] || CT.C3824, 8971, C[3824] || CT.C3824, 10216, C[3821] || CT.C3821, 10217, C[3821] || CT.C3821]);
    },
    get C3826() {
      return C[3826] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.79167,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.75,
        [S.CharacterMetrics_depth]: 1.25003
      });
    },
    get C3827() {
      return C[3827] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.27778,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.75,
        [S.CharacterMetrics_depth]: 1.25003
      });
    },
    get C3828() {
      return C[3828] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.58334,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.75,
        [S.CharacterMetrics_depth]: 1.25003
      });
    },
    get C3829() {
      return C[3829] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.80556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.75,
        [S.CharacterMetrics_depth]: 1.25003
      });
    },
    get C3830() {
      return C[3830] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.8889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.825,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3831() {
      return C[3831] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.75,
        [S.CharacterMetrics_depth]: 1.25003
      });
    },
    get C3832() {
      return C[3832] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.63889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.75,
        [S.CharacterMetrics_depth]: 1.25003
      });
    },
    get C3833() {
      return C[3833] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.155,
        [S.CharacterMetrics_depth]: 0.64502
      });
    },
    get C3834() {
      return C[3834] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.875,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.6,
        [S.CharacterMetrics_depth]: 0.00001
      });
    },
    get C3835() {
      return C[3835] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.66667,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.155,
        [S.CharacterMetrics_depth]: 0.64502
      });
    },
    get C3836() {
      return C[3836] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.9,
        [S.CharacterMetrics_depth]: 0.00001
      });
    },
    get C3837() {
      return C[3837] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 1.15,
        [S.CharacterMetrics_depth]: 0.65002
      });
    },
    get C3838() {
      return C[3838] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.90001
      });
    },
    get C3839() {
      return C[3839] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.88889,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.3,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3840() {
      return C[3840] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.05556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.915,
        [S.CharacterMetrics_depth]: 0.88502
      });
    },
    get C3841() {
      return C[3841] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 1.05556,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.605,
        [S.CharacterMetrics_depth]: -0.00499
      });
    },
    get C3842() {
      return C[3842] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.45,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.12,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3825() {
      return C[3825] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [40, C[3826] || CT.C3826, 41, C[3826] || CT.C3826, 47, C[3827] || CT.C3827, 91, C[3828] || CT.C3828, 92, C[3827] || CT.C3827, 93, C[3828] || CT.C3828, 123, C[3829] || CT.C3829, 125, C[3829] || CT.C3829, 710, C[3830] || CT.C3830, 732, C[3830] || CT.C3830, 770, C[3830] || CT.C3830, 771, C[3830] || CT.C3830, 8730, C[3831] || CT.C3831, 8968, C[3832] || CT.C3832, 8969, C[3832] || CT.C3832, 8970, C[3832] || CT.C3832, 8971, C[3832] || CT.C3832, 9115, C[3833] || CT.C3833, 9116, C[3834] || CT.C3834, 9117, C[3833] || CT.C3833, 9118, C[3833] || CT.C3833, 9119, C[3834] || CT.C3834, 9120, C[3833] || CT.C3833, 9121, C[3835] || CT.C3835, 9122, C[3800] || CT.C3800, 9123, C[3835] || CT.C3835, 9124, C[3835] || CT.C3835, 9125, C[3800] || CT.C3800, 9126, C[3835] || CT.C3835, 9127, C[3836] || CT.C3836, 9128, C[3837] || CT.C3837, 9129, C[3838] || CT.C3838, 9130, C[3839] || CT.C3839, 9131, C[3836] || CT.C3836, 9132, C[3837] || CT.C3837, 9133, C[3838] || CT.C3838, 9143, C[3840] || CT.C3840, 10216, C[3829] || CT.C3829, 10217, C[3829] || CT.C3829, 57344, C[3841] || CT.C3841, 57345, C[3841] || CT.C3841, 57680, C[3842] || CT.C3842, 57681, C[3842] || CT.C3842, 57682, C[3842] || CT.C3842, 57683, C[3842] || CT.C3842]);
    },
    get C3844() {
      return C[3844] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3845() {
      return C[3845] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.61111,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3846() {
      return C[3846] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.69444,
        [S.CharacterMetrics_depth]: 0.08333
      });
    },
    get C3847() {
      return C[3847] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.52083,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3848() {
      return C[3848] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.53055,
        [S.CharacterMetrics_depth]: -0.08056
      });
    },
    get C3849() {
      return C[3849] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.125,
        [S.CharacterMetrics_depth]: 0.13889
      });
    },
    get C3850() {
      return C[3850] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.125,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3851() {
      return C[3851] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3852() {
      return C[3852] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.13889
      });
    },
    get C3853() {
      return C[3853] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.55556,
        [S.CharacterMetrics_depth]: -0.05556
      });
    },
    get C3854() {
      return C[3854] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.41562,
        [S.CharacterMetrics_depth]: -0.19549
      });
    },
    get C3855() {
      return C[3855] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.61111,
        [S.CharacterMetrics_depth]: 0.13889
      });
    },
    get C3856() {
      return C[3856] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.09514
      });
    },
    get C3857() {
      return C[3857] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.43056,
        [S.CharacterMetrics_depth]: 0.22222
      });
    },
    get C3858() {
      return C[3858] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.61111,
        [S.CharacterMetrics_depth]: 0.22222
      });
    },
    get C3859() {
      return C[3859] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.55358,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3860() {
      return C[3860] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0,
        [S.CharacterMetrics_depth]: 0.19445
      });
    },
    get C3861() {
      return C[3861] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.56597,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3862() {
      return C[3862] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.56555,
        [S.CharacterMetrics_depth]: 0
      });
    },
    get C3863() {
      return C[3863] = dart.const({
        __proto__: font_metrics$.CharacterMetrics.prototype,
        [S.CharacterMetrics_width]: 0.525,
        [S.CharacterMetrics_skew]: 0,
        [S.CharacterMetrics_italic]: 0,
        [S.CharacterMetrics_height]: 0.21944,
        [S.CharacterMetrics_depth]: 0.11111
      });
    },
    get C3843() {
      return C[3843] = dart.constMap(T$.intL(), T$.CharacterMetricsL(), [32, C[3844] || CT.C3844, 33, C[3845] || CT.C3845, 34, C[3845] || CT.C3845, 35, C[3845] || CT.C3845, 36, C[3846] || CT.C3846, 37, C[3846] || CT.C3846, 38, C[3845] || CT.C3845, 39, C[3845] || CT.C3845, 40, C[3846] || CT.C3846, 41, C[3846] || CT.C3846, 42, C[3847] || CT.C3847, 43, C[3848] || CT.C3848, 44, C[3849] || CT.C3849, 45, C[3848] || CT.C3848, 46, C[3850] || CT.C3850, 47, C[3846] || CT.C3846, 48, C[3845] || CT.C3845, 49, C[3845] || CT.C3845, 50, C[3845] || CT.C3845, 51, C[3845] || CT.C3845, 52, C[3845] || CT.C3845, 53, C[3845] || CT.C3845, 54, C[3845] || CT.C3845, 55, C[3845] || CT.C3845, 56, C[3845] || CT.C3845, 57, C[3845] || CT.C3845, 58, C[3851] || CT.C3851, 59, C[3852] || CT.C3852, 60, C[3853] || CT.C3853, 61, C[3854] || CT.C3854, 62, C[3853] || CT.C3853, 63, C[3845] || CT.C3845, 64, C[3845] || CT.C3845, 65, C[3845] || CT.C3845, 66, C[3845] || CT.C3845, 67, C[3845] || CT.C3845, 68, C[3845] || CT.C3845, 69, C[3845] || CT.C3845, 70, C[3845] || CT.C3845, 71, C[3845] || CT.C3845, 72, C[3845] || CT.C3845, 73, C[3845] || CT.C3845, 74, C[3845] || CT.C3845, 75, C[3845] || CT.C3845, 76, C[3845] || CT.C3845, 77, C[3845] || CT.C3845, 78, C[3845] || CT.C3845, 79, C[3845] || CT.C3845, 80, C[3845] || CT.C3845, 81, C[3855] || CT.C3855, 82, C[3845] || CT.C3845, 83, C[3845] || CT.C3845, 84, C[3845] || CT.C3845, 85, C[3845] || CT.C3845, 86, C[3845] || CT.C3845, 87, C[3845] || CT.C3845, 88, C[3845] || CT.C3845, 89, C[3845] || CT.C3845, 90, C[3845] || CT.C3845, 91, C[3846] || CT.C3846, 92, C[3846] || CT.C3846, 93, C[3846] || CT.C3846, 94, C[3845] || CT.C3845, 95, C[3856] || CT.C3856, 96, C[3845] || CT.C3845, 97, C[3851] || CT.C3851, 98, C[3845] || CT.C3845, 99, C[3851] || CT.C3851, 100, C[3845] || CT.C3845, 101, C[3851] || CT.C3851, 102, C[3845] || CT.C3845, 103, C[3857] || CT.C3857, 104, C[3845] || CT.C3845, 105, C[3845] || CT.C3845, 106, C[3858] || CT.C3858, 107, C[3845] || CT.C3845, 108, C[3845] || CT.C3845, 109, C[3851] || CT.C3851, 110, C[3851] || CT.C3851, 111, C[3851] || CT.C3851, 112, C[3857] || CT.C3857, 113, C[3857] || CT.C3857, 114, C[3851] || CT.C3851, 115, C[3851] || CT.C3851, 116, C[3859] || CT.C3859, 117, C[3851] || CT.C3851, 118, C[3851] || CT.C3851, 119, C[3851] || CT.C3851, 120, C[3851] || CT.C3851, 121, C[3857] || CT.C3857, 122, C[3851] || CT.C3851, 123, C[3846] || CT.C3846, 124, C[3846] || CT.C3846, 125, C[3846] || CT.C3846, 126, C[3845] || CT.C3845, 127, C[3845] || CT.C3845, 160, C[3844] || CT.C3844, 176, C[3845] || CT.C3845, 184, C[3860] || CT.C3860, 305, C[3851] || CT.C3851, 567, C[3857] || CT.C3857, 711, C[3861] || CT.C3861, 713, C[3862] || CT.C3862, 714, C[3845] || CT.C3845, 715, C[3845] || CT.C3845, 728, C[3845] || CT.C3845, 730, C[3845] || CT.C3845, 770, C[3845] || CT.C3845, 771, C[3845] || CT.C3845, 776, C[3845] || CT.C3845, 915, C[3845] || CT.C3845, 916, C[3845] || CT.C3845, 920, C[3845] || CT.C3845, 923, C[3845] || CT.C3845, 926, C[3845] || CT.C3845, 928, C[3845] || CT.C3845, 931, C[3845] || CT.C3845, 933, C[3845] || CT.C3845, 934, C[3845] || CT.C3845, 936, C[3845] || CT.C3845, 937, C[3845] || CT.C3845, 8216, C[3845] || CT.C3845, 8217, C[3845] || CT.C3845, 8242, C[3845] || CT.C3845, 9251, C[3863] || CT.C3863]);
    },
    get C2708() {
      return C[2708] = dart.constMap(T$.StringL(), T$.MapLOfintL$CharacterMetricsL(), ["AMS-Regular", C[2709] || CT.C2709, "Caligraphic-Regular", C[2800] || CT.C2800, "Fraktur-Regular", C[2830] || CT.C2830, "Main-Bold", C[2909] || CT.C2909, "Main-BoldItalic", C[3031] || CT.C3031, "Main-Italic", C[3137] || CT.C3137, "Main-Regular", C[3242] || CT.C3242, "Math-BoldItalic", C[3362] || CT.C3362, "Math-Italic", C[3447] || CT.C3447, "SansSerif-Bold", C[3537] || CT.C3537, "SansSerif-Italic", C[3603] || CT.C3603, "SansSerif-Regular", C[3702] || CT.C3702, "Script-Regular", C[3755] || CT.C3755, "Size1-Regular", C[3782] || CT.C3782, "Size2-Regular", C[3802] || CT.C3802, "Size3-Regular", C[3817] || CT.C3817, "Size4-Regular", C[3825] || CT.C3825, "Typewriter-Regular", C[3843] || CT.C3843]);
    },
    get C3864() {
      return C[3864] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.displayCramped",
        index: 1
      });
    },
    get C3865() {
      return C[3865] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.textCramped",
        index: 3
      });
    },
    get C3866() {
      return C[3866] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.scriptCramped",
        index: 5
      });
    },
    get C3867() {
      return C[3867] = dart.const({
        __proto__: style$0.MathStyle.prototype,
        [S._name$4]: "MathStyle.scriptscriptCramped",
        index: 7
      });
    },
    get C3868() {
      return C[3868] = dart.constList([C[104] || CT.C104, C[3864] || CT.C3864, C[105] || CT.C105, C[3865] || CT.C3865, C[106] || CT.C106, C[3866] || CT.C3866, C[107] || CT.C107, C[3867] || CT.C3867], T$.MathStyleL());
    },
    get C3869() {
      return C[3869] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.sub",
        index: 0
      });
    },
    get C3870() {
      return C[3870] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.sup",
        index: 1
      });
    },
    get C3871() {
      return C[3871] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.fracNum",
        index: 2
      });
    },
    get C3872() {
      return C[3872] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.fracDen",
        index: 3
      });
    },
    get C3873() {
      return C[3873] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.cramp",
        index: 4
      });
    },
    get C3874() {
      return C[3874] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.text",
        index: 5
      });
    },
    get C3875() {
      return C[3875] = dart.const({
        __proto__: style$0.MathStyleDiff.prototype,
        [S._name$4]: "MathStyleDiff.uncramp",
        index: 6
      });
    },
    get C3876() {
      return C[3876] = dart.constList([C[3869] || CT.C3869, C[3870] || CT.C3870, C[3871] || CT.C3871, C[3872] || CT.C3872, C[3873] || CT.C3873, C[3874] || CT.C3874, C[3875] || CT.C3875], T$.MathStyleDiffL());
    },
    get C3877() {
      return C[3877] = dart.constMap(T$.StringL(), T$.MathStyleL(), ["display", C[104] || CT.C104, "displayCramped", C[3864] || CT.C3864, "text", C[105] || CT.C105, "textCramped", C[3865] || CT.C3865, "script", C[106] || CT.C106, "scriptCramped", C[3866] || CT.C3866, "scriptscript", C[107] || CT.C107, "scriptscriptCramped", C[3867] || CT.C3867]);
    },
    get C3879() {
      return C[3879] = dart.constList([4, 5, 4, 5, 6, 7, 6, 7], T$.intL());
    },
    get C3880() {
      return C[3880] = dart.constList([5, 5, 5, 5, 7, 7, 7, 7], T$.intL());
    },
    get C3881() {
      return C[3881] = dart.constList([2, 3, 4, 5, 6, 7, 6, 7], T$.intL());
    },
    get C3882() {
      return C[3882] = dart.constList([3, 3, 5, 5, 7, 7, 7, 7], T$.intL());
    },
    get C3883() {
      return C[3883] = dart.constList([1, 1, 3, 3, 5, 5, 7, 7], T$.intL());
    },
    get C3884() {
      return C[3884] = dart.constList([0, 1, 2, 3, 2, 3, 2, 3], T$.intL());
    },
    get C3885() {
      return C[3885] = dart.constList([0, 0, 2, 2, 4, 4, 6, 6], T$.intL());
    },
    get C3878() {
      return C[3878] = dart.constList([C[3879] || CT.C3879, C[3880] || CT.C3880, C[3881] || CT.C3881, C[3882] || CT.C3882, C[3883] || CT.C3883, C[3884] || CT.C3884, C[3885] || CT.C3885], T$.ListLOfintL());
    },
    get C3887() {
      return C[3887] = dart.constList([1, 1, 1], T$.intL());
    },
    get C3888() {
      return C[3888] = dart.constList([2, 1, 1], T$.intL());
    },
    get C3889() {
      return C[3889] = dart.constList([3, 1, 1], T$.intL());
    },
    get C3890() {
      return C[3890] = dart.constList([4, 2, 1], T$.intL());
    },
    get C3891() {
      return C[3891] = dart.constList([5, 2, 1], T$.intL());
    },
    get C3892() {
      return C[3892] = dart.constList([6, 3, 1], T$.intL());
    },
    get C3893() {
      return C[3893] = dart.constList([7, 4, 2], T$.intL());
    },
    get C3894() {
      return C[3894] = dart.constList([8, 6, 3], T$.intL());
    },
    get C3895() {
      return C[3895] = dart.constList([9, 7, 6], T$.intL());
    },
    get C3896() {
      return C[3896] = dart.constList([10, 8, 7], T$.intL());
    },
    get C3897() {
      return C[3897] = dart.constList([11, 10, 9], T$.intL());
    },
    get C3886() {
      return C[3886] = dart.constList([C[3887] || CT.C3887, C[3888] || CT.C3888, C[3889] || CT.C3889, C[3890] || CT.C3890, C[3891] || CT.C3891, C[3892] || CT.C3892, C[3893] || CT.C3893, C[3894] || CT.C3894, C[3895] || CT.C3895, C[3896] || CT.C3896, C[3897] || CT.C3897], T$.ListLOfintL());
    },
    get C3898() {
      return C[3898] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.mm",
        index: 1
      });
    },
    get C3899() {
      return C[3899] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.cm",
        index: 2
      });
    },
    get C3900() {
      return C[3900] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.inches",
        index: 3
      });
    },
    get C3901() {
      return C[3901] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.bp",
        index: 4
      });
    },
    get C3902() {
      return C[3902] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.pc",
        index: 5
      });
    },
    get C3903() {
      return C[3903] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.dd",
        index: 6
      });
    },
    get C3904() {
      return C[3904] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.cc",
        index: 7
      });
    },
    get C3905() {
      return C[3905] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.nd",
        index: 8
      });
    },
    get C3906() {
      return C[3906] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.nc",
        index: 9
      });
    },
    get C3907() {
      return C[3907] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.sp",
        index: 10
      });
    },
    get C3908() {
      return C[3908] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.px",
        index: 11
      });
    },
    get C3909() {
      return C[3909] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.ex",
        index: 12
      });
    },
    get C3910() {
      return C[3910] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.em",
        index: 13
      });
    },
    get C3911() {
      return C[3911] = dart.const({
        __proto__: size$.Unit.prototype,
        [S._name$5]: "Unit.lp",
        index: 15
      });
    },
    get C3912() {
      return C[3912] = dart.constList([C[1525] || CT.C1525, C[3898] || CT.C3898, C[3899] || CT.C3899, C[3900] || CT.C3900, C[3901] || CT.C3901, C[3902] || CT.C3902, C[3903] || CT.C3903, C[3904] || CT.C3904, C[3905] || CT.C3905, C[3906] || CT.C3906, C[3907] || CT.C3907, C[3908] || CT.C3908, C[3909] || CT.C3909, C[3910] || CT.C3910, C[1731] || CT.C1731, C[3911] || CT.C3911, C[2705] || CT.C2705], T$.UnitL());
    },
    get C3913() {
      return C[3913] = dart.constList([C[109] || CT.C109, C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113, C[114] || CT.C114, C[115] || CT.C115, C[116] || CT.C116, C[117] || CT.C117, C[118] || CT.C118, C[119] || CT.C119], T$.MathSizeL());
    },
    get C3914() {
      return C[3914] = dart.constMap(T$.UnitL(), T$.StringL(), [C[1525] || CT.C1525, "pt", C[3898] || CT.C3898, "mm", C[3899] || CT.C3899, "cm", C[3900] || CT.C3900, "inches", C[3901] || CT.C3901, "bp", C[3902] || CT.C3902, "pc", C[3903] || CT.C3903, "dd", C[3904] || CT.C3904, "cc", C[3905] || CT.C3905, "nd", C[3906] || CT.C3906, "nc", C[3907] || CT.C3907, "sp", C[3908] || CT.C3908, "px", C[3909] || CT.C3909, "ex", C[3910] || CT.C3910, "em", C[1731] || CT.C1731, "mu", C[3911] || CT.C3911, "lp", C[2705] || CT.C2705, "cssEm"]);
    },
    get C3915() {
      return C[3915] = dart.constMap(T$.StringL(), T$.UnitL(), ["pt", C[1525] || CT.C1525, "mm", C[3898] || CT.C3898, "cm", C[3899] || CT.C3899, "inches", C[3900] || CT.C3900, "bp", C[3901] || CT.C3901, "pc", C[3902] || CT.C3902, "dd", C[3903] || CT.C3903, "cc", C[3904] || CT.C3904, "nd", C[3905] || CT.C3905, "nc", C[3906] || CT.C3906, "sp", C[3907] || CT.C3907, "px", C[3908] || CT.C3908, "ex", C[3909] || CT.C3909, "em", C[3910] || CT.C3910, "mu", C[1731] || CT.C1731, "lp", C[3911] || CT.C3911, "cssEm", C[2705] || CT.C2705]);
    },
    get C3916() {
      return C[3916] = dart.constList([0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488], T$.doubleL());
    },
    get C3917() {
      return C[3917] = dart.constMap(T$.UnitL(), T$.doubleN(), [C[1525] || CT.C1525, 1, C[3898] || CT.C3898, 2.8452755905511813, C[3899] || CT.C3899, 28.45275590551181, C[3900] || CT.C3900, 72.27, C[3901] || CT.C3901, 1.00375, C[3902] || CT.C3902, 12, C[3903] || CT.C3903, 1.070008643042351, C[3904] || CT.C3904, 12.84010371650821, C[3905] || CT.C3905, 1.0669781931464175, C[3906] || CT.C3906, 12.80373831775701, C[3907] || CT.C3907, 0.0000152587890625, C[3908] || CT.C3908, 1.00375, C[3909] || CT.C3909, null, C[3910] || CT.C3910, null, C[1731] || CT.C1731, null, C[3911] || CT.C3911, 0.45168749999999996, C[2705] || CT.C2705, null]);
    },
    get C3919() {
      return C[3919] = dart.constList([0.25, 0.25, 0.25], T$.doubleL());
    },
    get C3920() {
      return C[3920] = dart.constList([0, 0, 0], T$.doubleL());
    },
    get C3921() {
      return C[3921] = dart.constList([0.431, 0.431, 0.431], T$.doubleL());
    },
    get C3922() {
      return C[3922] = dart.constList([1, 1.171, 1.472], T$.doubleL());
    },
    get C3923() {
      return C[3923] = dart.constList([0.677, 0.732, 0.925], T$.doubleL());
    },
    get C3924() {
      return C[3924] = dart.constList([0.394, 0.384, 0.387], T$.doubleL());
    },
    get C3925() {
      return C[3925] = dart.constList([0.444, 0.471, 0.504], T$.doubleL());
    },
    get C3926() {
      return C[3926] = dart.constList([0.686, 0.752, 1.025], T$.doubleL());
    },
    get C3927() {
      return C[3927] = dart.constList([0.345, 0.344, 0.532], T$.doubleL());
    },
    get C3928() {
      return C[3928] = dart.constList([0.413, 0.503, 0.504], T$.doubleL());
    },
    get C3929() {
      return C[3929] = dart.constList([0.363, 0.431, 0.404], T$.doubleL());
    },
    get C3930() {
      return C[3930] = dart.constList([0.289, 0.286, 0.294], T$.doubleL());
    },
    get C3931() {
      return C[3931] = dart.constList([0.15, 0.143, 0.2], T$.doubleL());
    },
    get C3932() {
      return C[3932] = dart.constList([0.247, 0.286, 0.4], T$.doubleL());
    },
    get C3933() {
      return C[3933] = dart.constList([0.386, 0.353, 0.494], T$.doubleL());
    },
    get C3934() {
      return C[3934] = dart.constList([0.05, 0.071, 0.1], T$.doubleL());
    },
    get C3935() {
      return C[3935] = dart.constList([2.39, 1.7, 1.98], T$.doubleL());
    },
    get C3936() {
      return C[3936] = dart.constList([1.01, 1.157, 1.42], T$.doubleL());
    },
    get C3937() {
      return C[3937] = dart.constList([0.04, 0.049, 0.049], T$.doubleL());
    },
    get C3938() {
      return C[3938] = dart.constList([0.111, 0.111, 0.111], T$.doubleL());
    },
    get C3939() {
      return C[3939] = dart.constList([0.166, 0.166, 0.166], T$.doubleL());
    },
    get C3940() {
      return C[3940] = dart.constList([0.2, 0.2, 0.2], T$.doubleL());
    },
    get C3941() {
      return C[3941] = dart.constList([0.6, 0.611, 0.611], T$.doubleL());
    },
    get C3942() {
      return C[3942] = dart.constList([0.1, 0.143, 0.143], T$.doubleL());
    },
    get C3943() {
      return C[3943] = dart.constList([0.04, 0.04, 0.04], T$.doubleL());
    },
    get C3944() {
      return C[3944] = dart.constList([10, 10, 10], T$.doubleL());
    },
    get C3945() {
      return C[3945] = dart.constList([0.3, 0.3, 0.3], T$.doubleL());
    },
    get C3918() {
      return C[3918] = dart.constMap(T$.StringL(), T$.ListLOfdoubleL(), ["slant", C[3919] || CT.C3919, "space", C[3920] || CT.C3920, "stretch", C[3920] || CT.C3920, "shrink", C[3920] || CT.C3920, "xHeight", C[3921] || CT.C3921, "quad", C[3922] || CT.C3922, "extraSpace", C[3920] || CT.C3920, "num1", C[3923] || CT.C3923, "num2", C[3924] || CT.C3924, "num3", C[3925] || CT.C3925, "denom1", C[3926] || CT.C3926, "denom2", C[3927] || CT.C3927, "sup1", C[3928] || CT.C3928, "sup2", C[3929] || CT.C3929, "sup3", C[3930] || CT.C3930, "sub1", C[3931] || CT.C3931, "sub2", C[3932] || CT.C3932, "supDrop", C[3933] || CT.C3933, "subDrop", C[3934] || CT.C3934, "delim1", C[3935] || CT.C3935, "delim2", C[3936] || CT.C3936, "axisHeight", C[3919] || CT.C3919, "defaultRuleThickness", C[3937] || CT.C3937, "bigOpSpacing1", C[3938] || CT.C3938, "bigOpSpacing2", C[3939] || CT.C3939, "bigOpSpacing3", C[3940] || CT.C3940, "bigOpSpacing4", C[3941] || CT.C3941, "bigOpSpacing5", C[3942] || CT.C3942, "sqrtRuleThickness", C[3943] || CT.C3943, "ptPerEm", C[3944] || CT.C3944, "doubleRuleSep", C[3940] || CT.C3940, "arrayRuleWidth", C[3943] || CT.C3943, "fboxsep", C[3945] || CT.C3945, "fboxrule", C[3943] || CT.C3943]);
    },
    get C3946() {
      return C[3946] = dart.constMap(T$.StringL(), T$.StringL(), ["Å", "A", "Ç", "C", "Ð", "D", "Þ", "o", "å", "a", "ç", "c", "ð", "d", "þ", "o", "А", "A", "Б", "B", "В", "B", "Г", "F", "Д", "A", "Е", "E", "Ж", "K", "З", "3", "И", "N", "Й", "N", "К", "K", "Л", "N", "М", "M", "Н", "H", "О", "O", "П", "N", "Р", "P", "С", "C", "Т", "T", "У", "y", "Ф", "O", "Х", "X", "Ц", "U", "Ч", "h", "Ш", "W", "Щ", "W", "Ъ", "B", "Ы", "X", "Ь", "B", "Э", "3", "Ю", "X", "Я", "R", "а", "a", "б", "b", "в", "a", "г", "r", "д", "y", "е", "e", "ж", "m", "з", "e", "и", "n", "й", "n", "к", "n", "л", "n", "м", "m", "н", "n", "о", "o", "п", "n", "р", "p", "с", "c", "т", "o", "у", "y", "ф", "b", "х", "x", "ц", "n", "ч", "n", "ш", "w", "щ", "w", "ъ", "a", "ы", "m", "ь", "a", "э", "e", "ю", "m", "я", "r"]);
    },
    get C3947() {
      return C[3947] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4278190080.0
      });
    }
  }, false);
  var C = Array(3948).fill(void 0);
  var I = [
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/web_selection_manager.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/selection_manager.dart",
    "package:flutter_math_fork/src/widgets/selection/selection_manager.dart",
    "package:flutter_math_fork/src/widgets/selection/web_selection_manager.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/handle_overlay.dart",
    "package:flutter_math_fork/src/widgets/selection/handle_overlay.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay.dart",
    "package:flutter_math_fork/src/widgets/selection/overlay.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/gesture_detector_builder_selectable.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/gesture_detector_builder.dart",
    "package:flutter_math_fork/src/widgets/selection/gesture_detector_builder.dart",
    "package:flutter_math_fork/src/widgets/selection/gesture_detector_builder_selectable.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/overlay_manager.dart",
    "package:flutter_math_fork/src/widgets/selection/overlay_manager.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/optimization.dart",
    "package:flutter_math_fork/src/encoder/optimization.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/matcher.dart",
    "package:flutter_math_fork/src/encoder/matcher.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/accent.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/accent_under.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/frac.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/function.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/left_right.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/multiscripts.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/nary.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/sqrt.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/stretchy_op.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/style.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/functions/symbol.dart",
    "package:flutter_math_fork/src/encoder/encoder.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/encoder.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/encoder/tex/encoder.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/syntax_tree.dart",
    "package:flutter_math_fork/src/ast/syntax_tree.dart",
    "package:flutter_math_fork/src/encoder/tex/encoder.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selection/cursor_timer_manager.dart",
    "package:flutter_math_fork/src/widgets/selection/cursor_timer_manager.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/tex_break.dart",
    "package:flutter_math_fork/src/ast/tex_break.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/math.dart",
    "package:flutter_math_fork/src/widgets/math.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/controller.dart",
    "package:flutter_math_fork/src/widgets/controller.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_ext/not.dart",
    "package:flutter_math_fork/src/render/layout/eqn_array.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/eqn_array.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/equation_array.dart",
    "package:flutter_math_fork/src/ast/nodes/equation_array.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/environments/eqn_array.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/symbols.dart",
    "package:flutter_math_fork/src/parser/tex/symbols.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/namespace.dart",
    "package:flutter_math_fork/src/parser/tex/namespace.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/macro_expander.dart",
    "package:flutter_math_fork/src/parser/tex/macro_expander.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/parser.dart",
    "package:flutter_math_fork/src/parser/tex/parser.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/matrix.dart",
    "package:flutter_math_fork/src/ast/nodes/matrix.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/custom_layout.dart",
    "package:flutter_math_fork/src/render/layout/custom_layout.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/environments/array.dart",
    "package:flutter_math_fork/src/parser/tex/environments/array.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/define_environment.dart",
    "package:flutter_math_fork/src/parser/tex/define_environment.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/under.dart",
    "package:flutter_math_fork/src/ast/nodes/under.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/stretchy_op.dart",
    "package:flutter_math_fork/src/ast/nodes/stretchy_op.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/sqrt.dart",
    "package:flutter_math_fork/src/ast/nodes/sqrt.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/space.dart",
    "package:flutter_math_fork/src/ast/nodes/space.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/raise_box.dart",
    "package:flutter_math_fork/src/ast/nodes/raise_box.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/phantom.dart",
    "package:flutter_math_fork/src/ast/nodes/phantom.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/nary_op.dart",
    "package:flutter_math_fork/src/ast/nodes/nary_op.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/multiscripts.dart",
    "package:flutter_math_fork/src/render/layout/multiscripts.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/multiscripts.dart",
    "package:flutter_math_fork/src/ast/nodes/multiscripts.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/svg/delimiter.dart",
    "package:flutter_math_fork/src/render/svg/delimiter.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/left_right.dart",
    "package:flutter_math_fork/src/ast/nodes/left_right.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/spacing.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/function.dart",
    "package:flutter_math_fork/src/ast/nodes/function.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/frac.dart",
    "package:flutter_math_fork/src/ast/nodes/frac.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/enclosure.dart",
    "package:flutter_math_fork/src/ast/nodes/enclosure.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent_under.dart",
    "package:flutter_math_fork/src/ast/nodes/accent_under.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/symbol.dart",
    "package:flutter_math_fork/src/ast/nodes/symbol.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/style.dart",
    "package:flutter_math_fork/src/ast/nodes/style.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/over.dart",
    "package:flutter_math_fork/src/ast/nodes/over.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_composite.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/symbols/symbols.dart",
    "package:flutter_math_fork/src/ast/symbols/symbols.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/symbols/make_symbol.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/svg/stretchy.dart",
    "package:flutter_math_fork/src/render/svg/stretchy.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/svg/static.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/reset_dimension.dart",
    "package:flutter_math_fork/src/render/layout/reset_dimension.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/nodes/accent.dart",
    "package:flutter_math_fork/src/ast/nodes/accent.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/cr.dart",
    "package:flutter_math_fork/src/parser/tex/functions/katex_base.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/environment.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/accent.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/accent_under.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/array.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/arrow.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/break.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/char.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/color.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/delimsizing.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/enclose.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/font.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/genfrac.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/horiz_brace.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/kern.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/math.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/mclass.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/op.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/operator_name.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/phantom.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/raise_box.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/rule.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/sizing.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/sqrt.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/styling.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/text.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions/katex_base/underover.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/functions.dart",
    "package:flutter_math_fork/src/parser/tex/functions.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/macros.dart",
    "package:flutter_math_fork/src/parser/tex/macros.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/settings.dart",
    "package:flutter_math_fork/src/parser/tex/settings.dart",
    "package:flutter_math_fork/src/parser/tex/lexer.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/lexer.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/source_location.dart",
    "package:flutter_math_fork/src/parser/tex/source_location.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/token.dart",
    "package:flutter_math_fork/src/parser/tex/token.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/parser/tex/parse_error.dart",
    "package:flutter_math_fork/src/parser/tex/parse_error.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/widgets/selectable.dart",
    "package:flutter_math_fork/src/widgets/selectable.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/line_editable.dart",
    "package:flutter_math_fork/src/render/layout/line_editable.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/render/layout/line.dart",
    "package:flutter_math_fork/src/render/layout/line.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/style.dart",
    "package:flutter_math_fork/src/ast/style.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/size.dart",
    "package:flutter_math_fork/src/ast/size.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/font/metrics/font_metrics.dart",
    "package:flutter_math_fork/src/font/metrics/font_metrics.dart",
    "file:///D:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_math_fork-0.3.3+1/lib/src/ast/options.dart",
    "package:flutter_math_fork/src/ast/options.dart"
  ];
  const _is_SelectionManagerMixin_default = Symbol('_is_SelectionManagerMixin_default');
  selection_manager.SelectionManagerMixin$ = dart.generic(T => {
    class SelectionManagerMixin extends framework.State$(T) {}
    SelectionManagerMixin[dart.mixinOn] = State => class SelectionManagerMixin extends State {
      get [S._oldFocusNode$1]() {
        let t2;
        return dart.test(this[S.__SelectionManagerMixin__oldFocusNode_isSet]) ? (t2 = this[S.__SelectionManagerMixin__oldFocusNode], t2) : dart.throw(new _internal.LateError.fieldNI("_oldFocusNode"));
      }
      set [S._oldFocusNode$1](t2) {
        if (t2 == null) dart.nullFailed(I[1], 32, 18, "null");
        this[S.__SelectionManagerMixin__oldFocusNode_isSet] = true;
        this[S.__SelectionManagerMixin__oldFocusNode] = t2;
      }
      get [S._oldController$1]() {
        let t3;
        return dart.test(this[S.__SelectionManagerMixin__oldController_isSet]) ? (t3 = this[S.__SelectionManagerMixin__oldController], t3) : dart.throw(new _internal.LateError.fieldNI("_oldController"));
      }
      set [S._oldController$1](t3) {
        if (t3 == null) dart.nullFailed(I[1], 34, 23, "null");
        this[S.__SelectionManagerMixin__oldController_isSet] = true;
        this[S.__SelectionManagerMixin__oldController] = t3;
      }
      initState() {
        let t4, t4$;
        super.initState();
        this[S._oldFocusNode$1] = (t4 = this.focusNode, (() => {
          t4.addListener(dart.bind(this, S._handleFocusChange$1));
          return t4;
        })());
        this[S._oldController$1] = (t4$ = this.controller, (() => {
          t4$.addListener(dart.bind(this, S._onControllerChanged));
          return t4$;
        })());
      }
      didUpdateWidget(oldWidget) {
        let t4, t4$;
        T.as(oldWidget);
        if (oldWidget == null) dart.nullFailed(I[1], 44, 34, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.focusNode, this[S._oldFocusNode$1])) {
          this[S._oldFocusNode$1].removeListener(dart.bind(this, S._handleFocusChange$1));
          this[S._oldFocusNode$1] = (t4 = this.focusNode, (() => {
            t4.addListener(dart.bind(this, S._handleFocusChange$1));
            return t4;
          })());
          this[S._handleFocusChange$1]();
        }
        if (!dart.equals(this.controller, this[S._oldController$1])) {
          this[S._oldController$1].removeListener(dart.bind(this, S._onControllerChanged));
          this[S._oldController$1] = (t4$ = this.controller, (() => {
            t4$.addListener(dart.bind(this, S._onControllerChanged));
            return t4$;
          })());
          this[S._onControllerChanged]();
        }
      }
      dispose() {
        this[S._oldController$1].removeListener(dart.bind(this, S._onControllerChanged));
        this[S._oldFocusNode$1].removeListener(dart.bind(this, S._handleFocusChange$1));
        super.dispose();
      }
      [S._handleFocusChange$1]() {
        if (!dart.test(this.hasFocus)) {
          this.handleSelectionChanged(new text_editing.TextSelection.collapsed({offset: -1}), null, selection_manager.ExtraSelectionChangedCause.unfocus);
        }
      }
      [S._onControllerChanged]() {
        if (!dart.equals(this[S._oldAst], this.controller.ast) || !dart.equals(this[S._oldSelection], this.controller.selection)) {
          this.handleSelectionChanged(this.controller.selection, null, selection_manager.ExtraSelectionChangedCause.exterior);
        }
      }
      handleSelectionChanged(selection, cause, extraCause = null) {
        if (selection == null) dart.nullFailed(I[1], 86, 21, "selection");
        if (extraCause != selection_manager.ExtraSelectionChangedCause.unfocus && extraCause != selection_manager.ExtraSelectionChangedCause.exterior && !dart.test(this.hasFocus)) {
          this.focusNode.requestFocus();
        }
        this[S._oldAst] = this.controller.ast;
        this[S._oldSelection] = selection;
        this.controller.selection = selection;
        this.onSelectionChanged(selection, cause);
      }
      selectPositionAt(opts) {
        let from = opts && 'from' in opts ? opts.from : null;
        if (from == null) dart.nullFailed(I[1], 100, 21, "from");
        let to = opts && 'to' in opts ? opts.to : null;
        let cause = opts && 'cause' in opts ? opts.cause : null;
        if (cause == null) dart.nullFailed(I[1], 102, 36, "cause");
        let fromPosition = this.getPositionForOffset(from);
        let toPosition = to == null ? fromPosition : this.getPositionForOffset(to);
        this.handleSelectionChanged(new text_editing.TextSelection.new({baseOffset: fromPosition, extentOffset: toPosition}), cause);
      }
      selectWordAt(opts) {
        let offset = opts && 'offset' in opts ? opts.offset : null;
        if (offset == null) dart.nullFailed(I[1], 113, 21, "offset");
        let cause = opts && 'cause' in opts ? opts.cause : null;
        if (cause == null) dart.nullFailed(I[1], 114, 36, "cause");
        this.handleSelectionChanged(this.getWordRangeAtPoint(offset), cause);
      }
      getRenderLineAtOffset(globalOffset) {
        let t4;
        if (globalOffset == null) dart.nullFailed(I[1], 122, 51, "globalOffset");
        let rootRenderBox = this.rootRenderBox;
        let rootOffset = rootRenderBox.globalToLocal(globalOffset);
        let constrainedOffset = new ui.Offset.new(rootOffset.dx[S.$clamp](0.0, rootRenderBox.size.width), rootOffset.dy[S.$clamp](0.0, rootRenderBox.size.height));
        t4 = render_box_extensions['HittestExtension|hittestFindLowest'](line_editable.RenderEditableLine, line_editable.RenderEditableLine.as(dart.nullCheck(dart.nullCheck(this.controller.ast.greenRoot.key).currentContext).findRenderObject()), constrainedOffset);
        return t4 == null ? line_editable.RenderEditableLine.as(dart.nullCheck(dart.nullCheck(this.controller.ast.greenRoot.key).currentContext).findRenderObject()) : t4;
      }
      get rootRenderBox() {
        return box.RenderBox.as(this.context.findRenderObject());
      }
      getPositionForOffset(globalOffset) {
        if (globalOffset == null) dart.nullFailed(I[1], 138, 35, "globalOffset");
        let target = this.getRenderLineAtOffset(globalOffset);
        let caretIndex = target.getCaretIndexForPoint(globalOffset);
        return dart.notNull(target.node.pos) + dart.notNull(target.node.caretPositions[S.$_get](caretIndex));
      }
      getLocalEndpointForPosition(position) {
        if (position == null) dart.nullFailed(I[1], 144, 42, "position");
        let node = this.controller.ast.findNodeManagesPosition(position);
        let caretIndex = node.caretPositions[S.$indexWhere](dart.fn(caretPosition => {
          if (caretPosition == null) dart.nullFailed(I[1], 147, 22, "caretPosition");
          return dart.notNull(caretPosition) >= dart.notNull(position);
        }, T$.intTobool()));
        if (caretIndex === -1) {
          caretIndex = dart.notNull(node.caretPositions[S.$length]) - 1;
        }
        let renderLine = line_editable.RenderEditableLine.as(dart.nullCheck(dart.nullCheck(node.key).currentContext).findRenderObject());
        let globalOffset = renderLine.getEndpointForCaretIndex(caretIndex);
        return this.rootRenderBox.globalToLocal(globalOffset);
      }
      getWordRangeAtPoint(globalOffset) {
        if (globalOffset == null) dart.nullFailed(I[1], 158, 44, "globalOffset");
        let target = this.getRenderLineAtOffset(globalOffset);
        let caretIndex = target.getNearestLeftCaretIndexForPoint(globalOffset);
        let node = target.node;
        let extentCaretIndex = math.max(core.int, 0, dart.notNull(caretIndex) + 1 >= dart.notNull(node.caretPositions[S.$length]) ? dart.notNull(caretIndex) - 1 : dart.notNull(caretIndex) + 1);
        let base = dart.notNull(node.pos) + dart.notNull(node.caretPositions[S.$_get](caretIndex));
        let extent = dart.notNull(node.pos) + dart.notNull(node.caretPositions[S.$_get](extentCaretIndex));
        return new text_editing.TextSelection.new({baseOffset: math.min(core.int, base, extent), extentOffset: math.max(core.int, base, extent)});
      }
      getWordsRangeInRange(opts) {
        let from = opts && 'from' in opts ? opts.from : null;
        if (from == null) dart.nullFailed(I[1], 177, 21, "from");
        let to = opts && 'to' in opts ? opts.to : null;
        if (to == null) dart.nullFailed(I[1], 178, 21, "to");
        let range1 = this.getWordRangeAtPoint(from);
        let range2 = this.getWordRangeAtPoint(to);
        if (dart.notNull(range1.start) <= dart.notNull(range2.start)) {
          return new text_editing.TextSelection.new({baseOffset: range1.start, extentOffset: range2.end});
        } else {
          return new text_editing.TextSelection.new({baseOffset: range1.end, extentOffset: range2.start});
        }
      }
      getLocalEditingRegion() {
        let root = line_editable.RenderEditableLine.as(dart.nullCheck(dart.nullCheck(this.controller.ast.greenRoot.key).currentContext).findRenderObject());
        return new ui.Rect.fromPoints(ui.Offset.zero, root.size.bottomRight(ui.Offset.zero));
      }
      get textEditingValue() {
        let encodeResult = encoder$['ListTexEncoderExt|encodeTex'](this.controller.selectedNodes);
        let string = null;
        if (this.controller.selection.start === 0 && this.controller.selection.end === dart.notNull(this.controller.ast.greenRoot.capturedCursor) - 1) {
          string = encodeResult;
        } else {
          string = dart.str(encodeResult) + "THIS MARKUP SHOULD NOT APPEAR!";
        }
        return new text_input.TextEditingValue.new({text: string, selection: new text_editing.TextSelection.new({baseOffset: 0, extentOffset: encodeResult.length})});
      }
      set textEditingValue(value) {
        if (value == null) dart.nullFailed(I[1], 221, 41, "value");
        if (value.selection.start === 0 && value.selection.end === value.text.length && value.text.length > dart.notNull(this.controller.ast.greenRoot.capturedCursor) - 1) {
          this.handleSelectionChanged(new text_editing.TextSelection.new({baseOffset: 0, extentOffset: dart.notNull(this.controller.ast.greenRoot.capturedCursor) - 1}), null, selection_manager.ExtraSelectionChangedCause.handle);
        }
      }
    };
    (SelectionManagerMixin[dart.mixinNew] = function() {
      this[S.__SelectionManagerMixin__oldFocusNode] = null;
      this[S.__SelectionManagerMixin__oldFocusNode_isSet] = false;
      this[S.__SelectionManagerMixin__oldController] = null;
      this[S.__SelectionManagerMixin__oldController_isSet] = false;
      this[S._oldAst] = null;
      this[S._oldSelection] = null;
    }).prototype = SelectionManagerMixin.prototype;
    dart.addTypeTests(SelectionManagerMixin);
    SelectionManagerMixin.prototype[_is_SelectionManagerMixin_default] = true;
    dart.addTypeCaches(SelectionManagerMixin);
    SelectionManagerMixin[dart.implements] = () => [text_input.TextSelectionDelegate, framework.State$(T)];
    dart.setMethodSignature(SelectionManagerMixin, () => ({
      __proto__: dart.getMethods(SelectionManagerMixin.__proto__),
      [S._handleFocusChange$1]: dart.fnType(dart.void, []),
      [S._onControllerChanged]: dart.fnType(dart.void, []),
      handleSelectionChanged: dart.fnType(dart.void, [text_editing.TextSelection, dart.nullable(text_input.SelectionChangedCause)], [dart.nullable(selection_manager.ExtraSelectionChangedCause)]),
      selectPositionAt: dart.fnType(dart.void, [], {to: dart.nullable(ui.Offset)}, {cause: text_input.SelectionChangedCause, from: ui.Offset}),
      selectWordAt: dart.fnType(dart.void, [], {}, {cause: text_input.SelectionChangedCause, offset: ui.Offset}),
      getRenderLineAtOffset: dart.fnType(line_editable.RenderEditableLine, [ui.Offset]),
      getPositionForOffset: dart.fnType(core.int, [ui.Offset]),
      getLocalEndpointForPosition: dart.fnType(ui.Offset, [core.int]),
      getWordRangeAtPoint: dart.fnType(text_editing.TextSelection, [ui.Offset]),
      getWordsRangeInRange: dart.fnType(text_editing.TextSelection, [], {}, {from: ui.Offset, to: ui.Offset}),
      getLocalEditingRegion: dart.fnType(ui.Rect, [])
    }));
    dart.setGetterSignature(SelectionManagerMixin, () => ({
      __proto__: dart.getGetters(SelectionManagerMixin.__proto__),
      [S._oldFocusNode$1]: focus_manager.FocusNode,
      [S._oldController$1]: controller.MathController,
      rootRenderBox: box.RenderBox,
      textEditingValue: text_input.TextEditingValue
    }));
    dart.setSetterSignature(SelectionManagerMixin, () => ({
      __proto__: dart.getSetters(SelectionManagerMixin.__proto__),
      [S._oldFocusNode$1]: focus_manager.FocusNode,
      [S._oldController$1]: controller.MathController,
      textEditingValue: text_input.TextEditingValue
    }));
    dart.setLibraryUri(SelectionManagerMixin, I[2]);
    dart.setFieldSignature(SelectionManagerMixin, () => ({
      __proto__: dart.getFields(SelectionManagerMixin.__proto__),
      [S.__SelectionManagerMixin__oldFocusNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
      [S.__SelectionManagerMixin__oldFocusNode_isSet]: dart.fieldType(core.bool),
      [S.__SelectionManagerMixin__oldController]: dart.fieldType(dart.nullable(controller.MathController)),
      [S.__SelectionManagerMixin__oldController_isSet]: dart.fieldType(core.bool),
      [S._oldAst]: dart.fieldType(dart.nullable(syntax_tree.SyntaxTree)),
      [S._oldSelection]: dart.fieldType(dart.nullable(text_editing.TextSelection))
    }));
    return SelectionManagerMixin;
  });
  selection_manager.SelectionManagerMixin = selection_manager.SelectionManagerMixin$();
  dart.defineLazy(selection_manager.SelectionManagerMixin, {
    /*selection_manager.SelectionManagerMixin._selectAllReservedTag*/get _selectAllReservedTag() {
      return "THIS MARKUP SHOULD NOT APPEAR!";
    }
  }, false);
  dart.addTypeTests(selection_manager.SelectionManagerMixin, _is_SelectionManagerMixin_default);
  const _is_WebSelectionControlsManagerMixin_default = Symbol('_is_WebSelectionControlsManagerMixin_default');
  web_selection_manager.WebSelectionControlsManagerMixin$ = dart.generic(T => {
    class WebSelectionControlsManagerMixin extends selection_manager.SelectionManagerMixin$(T) {}
    WebSelectionControlsManagerMixin[dart.mixinOn] = SelectionManagerMixin => class WebSelectionControlsManagerMixin extends SelectionManagerMixin {
      get [S._oldFocusNode]() {
        let t0;
        return dart.test(this[S.__WebSelectionControlsManagerMixin__oldFocusNode_isSet]) ? (t0 = this[S.__WebSelectionControlsManagerMixin__oldFocusNode], t0) : dart.throw(new _internal.LateError.fieldNI("_oldFocusNode"));
      }
      set [S._oldFocusNode](t0) {
        if (t0 == null) dart.nullFailed(I[0], 26, 18, "null");
        this[S.__WebSelectionControlsManagerMixin__oldFocusNode_isSet] = true;
        this[S.__WebSelectionControlsManagerMixin__oldFocusNode] = t0;
      }
      get hasFocus() {
        return this.focusNode.hasFocus;
      }
      get [S._oldController]() {
        let t1;
        return dart.test(this[S.__WebSelectionControlsManagerMixin__oldController_isSet]) ? (t1 = this[S.__WebSelectionControlsManagerMixin__oldController], t1) : dart.throw(new _internal.LateError.fieldNI("_oldController"));
      }
      set [S._oldController](t1) {
        if (t1 == null) dart.nullFailed(I[0], 32, 23, "null");
        this[S.__WebSelectionControlsManagerMixin__oldController_isSet] = true;
        this[S.__WebSelectionControlsManagerMixin__oldController] = t1;
      }
      initState() {
        let t2, t2$;
        super.initState();
        this[S._oldFocusNode] = (t2 = this.focusNode, (() => {
          t2.addListener(dart.bind(this, S._handleFocusChange));
          return t2;
        })());
        this[S._oldController] = (t2$ = this.controller, (() => {
          t2$.addListener(dart.bind(this, S._handleControllerChange));
          return t2$;
        })());
      }
      didUpdateWidget(oldWidget) {
        let t2, t2$;
        T.as(oldWidget);
        if (oldWidget == null) dart.nullFailed(I[0], 42, 26, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this[S._oldFocusNode], this.focusNode)) {
          this[S._oldFocusNode].removeListener(dart.bind(this, S._handleFocusChange));
          this[S._oldFocusNode] = (t2 = this.focusNode, (() => {
            t2.addListener(dart.bind(this, S._handleFocusChange));
            return t2;
          })());
        }
        if (!dart.equals(this[S._oldController], this.controller)) {
          this[S._oldController].removeListener(dart.bind(this, S._handleControllerChange));
          this[S._oldController] = (t2$ = this.controller, (() => {
            t2$.addListener(dart.bind(this, S._handleControllerChange));
            return t2$;
          })());
        }
      }
      dispose() {
        this.focusNode.removeListener(dart.bind(this, S._handleFocusChange));
        this.controller.removeListener(dart.bind(this, S._handleControllerChange));
        this[S._closeInputConnectionIfNeeded]();
        super.dispose();
      }
      [S._handleFocusChange]() {
        if (dart.test(this.hasFocus) && dart.test(this.focusNode.consumeKeyboardToken())) {
          this[S._openInputConnection]();
        } else if (!dart.test(this.hasFocus)) {
          this[S._closeInputConnectionIfNeeded]();
        }
      }
      [S._handleControllerChange]() {
        let t2;
        t2 = this[S._textInputConnection];
        t2 == null ? null : t2.setEditingState(this.currentTextEditingValue);
      }
      get [S._hasInputConnection]() {
        return this[S._textInputConnection] != null && dart.test(dart.nullCheck(this[S._textInputConnection]).attached);
      }
      [S._openInputConnection]() {
        let t2;
        if (!dart.test(this[S._hasInputConnection])) {
          this[S._textInputConnection] = text_input.TextInput.attach(this, new text_input.TextInputConfiguration.new({inputType: text_input.TextInputType.multiline, readOnly: true, autocorrect: false, enableSuggestions: false}));
          t2 = dart.nullCheck(this[S._textInputConnection]);
          (() => {
            t2.show();
            t2.setStyle({fontSize: 10000.0, fontWeight: ui.FontWeight.normal, fontFamily: "KaTeX_Main", textAlign: ui.TextAlign.center, textDirection: ui.TextDirection.ltr});
            t2.setEditingState(this.currentTextEditingValue);
            return t2;
          })();
          this[S._updateSizeAndTransform]();
        } else {
          dart.nullCheck(this[S._textInputConnection]).show();
        }
      }
      [S._closeInputConnectionIfNeeded]() {
        if (dart.test(this[S._hasInputConnection])) {
          dart.nullCheck(this[S._textInputConnection]).close();
          this[S._textInputConnection] = null;
        }
      }
      [S._updateSizeAndTransform]() {
        let t2;
        if (this[S._textInputConnection] != null) {
          let renderBox = this.context.findRenderObject();
          if (box.RenderBox.is(renderBox)) {
            let size = renderBox.size;
            let transform = renderBox.getTransformTo(null);
            t2 = this[S._textInputConnection];
            t2 == null ? null : t2.setEditableSizeAndTransform(size, transform);
          }
          dart.nullCheck(binding.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
            if (_ == null) dart.nullFailed(I[0], 120, 43, "_");
            return this[S._updateSizeAndTransform]();
          }, T$.DurationTovoid()));
        }
      }
      connectionClosed() {
        let t2;
        t2 = this[S._textInputConnection];
        t2 == null ? null : t2.connectionClosedReceived();
        this[S._textInputConnection] = null;
      }
      get currentAutofillScope() {
        return null;
      }
      get currentTextEditingValue() {
        return super.textEditingValue;
      }
      performAction(action) {
        if (action == null) dart.nullFailed(I[0], 137, 38, "action");
      }
      performPrivateCommand(action, data) {
        if (action == null) dart.nullFailed(I[0], 142, 37, "action");
        if (data == null) dart.nullFailed(I[0], 142, 66, "data");
      }
      showAutocorrectionPromptRect(start, end) {
        if (start == null) dart.nullFailed(I[0], 147, 41, "start");
        if (end == null) dart.nullFailed(I[0], 147, 52, "end");
      }
      updateEditingValue(value) {
        if (value == null) dart.nullFailed(I[0], 152, 44, "value");
        let currentTextEditingValue = this.currentTextEditingValue;
        if (!dart.equals(value, currentTextEditingValue)) {
          dart.nullCheck(this[S._textInputConnection]).setEditingState(currentTextEditingValue);
        }
      }
      updateFloatingCursor(point) {
        if (point == null) dart.nullFailed(I[0], 161, 52, "point");
      }
    };
    (WebSelectionControlsManagerMixin[dart.mixinNew] = function() {
      this[S.__WebSelectionControlsManagerMixin__oldFocusNode] = null;
      this[S.__WebSelectionControlsManagerMixin__oldFocusNode_isSet] = false;
      this[S._textInputConnection] = null;
      this[S.__WebSelectionControlsManagerMixin__oldController] = null;
      this[S.__WebSelectionControlsManagerMixin__oldController_isSet] = false;
    }).prototype = WebSelectionControlsManagerMixin.prototype;
    dart.addTypeTests(WebSelectionControlsManagerMixin);
    WebSelectionControlsManagerMixin.prototype[_is_WebSelectionControlsManagerMixin_default] = true;
    dart.addTypeCaches(WebSelectionControlsManagerMixin);
    WebSelectionControlsManagerMixin[dart.implements] = () => [text_input.TextInputClient, selection_manager.SelectionManagerMixin$(T)];
    dart.setMethodSignature(WebSelectionControlsManagerMixin, () => ({
      __proto__: dart.getMethods(WebSelectionControlsManagerMixin.__proto__),
      [S._handleFocusChange]: dart.fnType(dart.void, []),
      [S._handleControllerChange]: dart.fnType(dart.void, []),
      [S._openInputConnection]: dart.fnType(dart.void, []),
      [S._closeInputConnectionIfNeeded]: dart.fnType(dart.void, []),
      [S._updateSizeAndTransform]: dart.fnType(dart.void, []),
      connectionClosed: dart.fnType(dart.void, []),
      performAction: dart.fnType(dart.void, [text_input.TextInputAction]),
      performPrivateCommand: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)]),
      showAutocorrectionPromptRect: dart.fnType(dart.void, [core.int, core.int]),
      updateEditingValue: dart.fnType(dart.void, [text_input.TextEditingValue]),
      updateFloatingCursor: dart.fnType(dart.void, [text_input.RawFloatingCursorPoint])
    }));
    dart.setGetterSignature(WebSelectionControlsManagerMixin, () => ({
      __proto__: dart.getGetters(WebSelectionControlsManagerMixin.__proto__),
      [S._oldFocusNode]: focus_manager.FocusNode,
      hasFocus: core.bool,
      [S._oldController]: controller.MathController,
      [S._hasInputConnection]: core.bool,
      currentAutofillScope: dart.nullable(autofill.AutofillScope),
      currentTextEditingValue: text_input.TextEditingValue
    }));
    dart.setSetterSignature(WebSelectionControlsManagerMixin, () => ({
      __proto__: dart.getSetters(WebSelectionControlsManagerMixin.__proto__),
      [S._oldFocusNode]: focus_manager.FocusNode,
      [S._oldController]: controller.MathController
    }));
    dart.setLibraryUri(WebSelectionControlsManagerMixin, I[3]);
    dart.setFieldSignature(WebSelectionControlsManagerMixin, () => ({
      __proto__: dart.getFields(WebSelectionControlsManagerMixin.__proto__),
      [S.__WebSelectionControlsManagerMixin__oldFocusNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
      [S.__WebSelectionControlsManagerMixin__oldFocusNode_isSet]: dart.fieldType(core.bool),
      [S._textInputConnection]: dart.fieldType(dart.nullable(text_input.TextInputConnection)),
      [S.__WebSelectionControlsManagerMixin__oldController]: dart.fieldType(dart.nullable(controller.MathController)),
      [S.__WebSelectionControlsManagerMixin__oldController_isSet]: dart.fieldType(core.bool)
    }));
    return WebSelectionControlsManagerMixin;
  });
  web_selection_manager.WebSelectionControlsManagerMixin = web_selection_manager.WebSelectionControlsManagerMixin$();
  dart.addTypeTests(web_selection_manager.WebSelectionControlsManagerMixin, _is_WebSelectionControlsManagerMixin_default);
  handle_overlay.MathSelectionHandleOverlay = class MathSelectionHandleOverlay extends framework.StatefulWidget {
    get manager() {
      return this[S.manager];
    }
    set manager(value) {
      super.manager = value;
    }
    get selection() {
      return this[S.selection];
    }
    set selection(value) {
      super.selection = value;
    }
    get position() {
      return this[S.position];
    }
    set position(value) {
      super.position = value;
    }
    get startHandleLayerLink() {
      return this[S.startHandleLayerLink];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[S.endHandleLayerLink];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get onSelectionHandleChanged() {
      return this[S.onSelectionHandleChanged];
    }
    set onSelectionHandleChanged(value) {
      super.onSelectionHandleChanged = value;
    }
    get onSelectionHandleTapped() {
      return this[S.onSelectionHandleTapped];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get selectionControls() {
      return this[S.selectionControls];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new handle_overlay._MathSelectionHandleOverlayState.new();
    }
  };
  (handle_overlay.MathSelectionHandleOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let manager = opts && 'manager' in opts ? opts.manager : null;
    if (manager == null) dart.nullFailed(I[4], 16, 19, "manager");
    let selection = opts && 'selection' in opts ? opts.selection : null;
    if (selection == null) dart.nullFailed(I[4], 17, 19, "selection");
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(I[4], 18, 19, "position");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    if (startHandleLayerLink == null) dart.nullFailed(I[4], 19, 19, "startHandleLayerLink");
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    if (endHandleLayerLink == null) dart.nullFailed(I[4], 20, 19, "endHandleLayerLink");
    let onSelectionHandleChanged = opts && 'onSelectionHandleChanged' in opts ? opts.onSelectionHandleChanged : null;
    if (onSelectionHandleChanged == null) dart.nullFailed(I[4], 21, 19, "onSelectionHandleChanged");
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    if (selectionControls == null) dart.nullFailed(I[4], 23, 19, "selectionControls");
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[0] || CT.C0;
    if (dragStartBehavior == null) dart.nullFailed(I[4], 24, 10, "dragStartBehavior");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.manager] = manager;
    this[S.selection] = selection;
    this[S.position] = position;
    this[S.startHandleLayerLink] = startHandleLayerLink;
    this[S.endHandleLayerLink] = endHandleLayerLink;
    this[S.onSelectionHandleChanged] = onSelectionHandleChanged;
    this[S.onSelectionHandleTapped] = onSelectionHandleTapped;
    this[S.selectionControls] = selectionControls;
    this[S.dragStartBehavior] = dragStartBehavior;
    handle_overlay.MathSelectionHandleOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = handle_overlay.MathSelectionHandleOverlay.prototype;
  dart.addTypeTests(handle_overlay.MathSelectionHandleOverlay);
  dart.addTypeCaches(handle_overlay.MathSelectionHandleOverlay);
  dart.setMethodSignature(handle_overlay.MathSelectionHandleOverlay, () => ({
    __proto__: dart.getMethods(handle_overlay.MathSelectionHandleOverlay.__proto__),
    createState: dart.fnType(handle_overlay._MathSelectionHandleOverlayState, [])
  }));
  dart.setLibraryUri(handle_overlay.MathSelectionHandleOverlay, I[5]);
  dart.setFieldSignature(handle_overlay.MathSelectionHandleOverlay, () => ({
    __proto__: dart.getFields(handle_overlay.MathSelectionHandleOverlay.__proto__),
    manager: dart.finalFieldType(overlay_manager.SelectionOverlayManagerMixin$(framework.StatefulWidget)),
    selection: dart.finalFieldType(text_editing.TextSelection),
    position: dart.finalFieldType(overlay$0.MathSelectionHandlePosition),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    onSelectionHandleChanged: dart.finalFieldType(dart.fnType(dart.void, [text_editing.TextSelection])),
    onSelectionHandleTapped: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    selectionControls: dart.finalFieldType(text_selection.TextSelectionControls),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(handle_overlay.MathSelectionHandleOverlay) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(handle_overlay.MathSelectionHandleOverlay)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(handle_overlay.MathSelectionHandleOverlay));
  handle_overlay._MathSelectionHandleOverlayState = class _MathSelectionHandleOverlayState extends State_SingleTickerProviderStateMixin$36 {
    get [S._dragPosition]() {
      let t4;
      return dart.test(this[S.___MathSelectionHandleOverlayState__dragPosition_isSet]) ? (t4 = this[S.___MathSelectionHandleOverlayState__dragPosition], t4) : dart.throw(new _internal.LateError.fieldNI("_dragPosition"));
    }
    set [S._dragPosition](t4) {
      if (t4 == null) dart.nullFailed(I[4], 49, 15, "null");
      this[S.___MathSelectionHandleOverlayState__dragPosition_isSet] = true;
      this[S.___MathSelectionHandleOverlayState__dragPosition] = t4;
    }
    get [S._controller]() {
      let t5;
      return dart.test(this[S.___MathSelectionHandleOverlayState__controller_isSet]) ? (t5 = this[S.___MathSelectionHandleOverlayState__controller], t5) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [S._controller](t5) {
      if (t5 == null) dart.nullFailed(I[4], 51, 28, "null");
      this[S.___MathSelectionHandleOverlayState__controller_isSet] = true;
      this[S.___MathSelectionHandleOverlayState__controller] = t5;
    }
    get [S._opacity]() {
      return this[S._controller].view;
    }
    initState() {
      super.initState();
      this[S._controller] = new animation_controller.AnimationController.new({duration: text_selection.TextSelectionOverlay.fadeDuration, vsync: this});
      this[S._controller].forward();
    }
    didUpdateWidget(oldWidget) {
      handle_overlay.MathSelectionHandleOverlay.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[4], 66, 51, "oldWidget");
      super.didUpdateWidget(oldWidget);
      this[S._controller].forward();
    }
    dispose() {
      this[S._controller].dispose();
      super.dispose();
    }
    [S._handleDragStart](details) {
      if (details == null) dart.nullFailed(I[4], 77, 42, "details");
      let handleSize = this.widget.selectionControls.getHandleSize(this.widget.manager.preferredLineHeight);
      this[S._dragPosition] = details.globalPosition['+'](new ui.Offset.new(0.0, -dart.notNull(handleSize.height)));
    }
    [S._handleDragUpdate](details) {
      let t7, t6, t7$, t6$;
      if (details == null) dart.nullFailed(I[4], 83, 44, "details");
      this[S._dragPosition] = this[S._dragPosition]['+'](details.delta);
      let position = this.widget.manager.getPositionForOffset(this[S._dragPosition]);
      if (dart.test(this.widget.selection.isCollapsed)) {
        t6 = this.widget;
        t7 = new text_editing.TextSelection.collapsed({offset: position});
        t6.onSelectionHandleChanged(t7);
        return;
      }
      let newSelection = null;
      switch (this.widget.position) {
        case C[1] || CT.C1:
        {
          newSelection = new text_editing.TextSelection.new({baseOffset: position, extentOffset: this.widget.selection.extentOffset});
          break;
        }
        case C[2] || CT.C2:
        {
          newSelection = new text_editing.TextSelection.new({baseOffset: this.widget.selection.baseOffset, extentOffset: position});
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (dart.notNull(newSelection.baseOffset) >= dart.notNull(newSelection.extentOffset)) {
        return;
      }
      t6$ = this.widget;
      t7$ = newSelection;
      t6$.onSelectionHandleChanged(t7$);
    }
    [S._handleTap]() {
      if (this.widget.onSelectionHandleTapped != null) {
        dart.nullCheck(this.widget.onSelectionHandleTapped)();
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[4], 123, 29, "context");
      let layerLink = null;
      let type = null;
      switch (this.widget.position) {
        case C[1] || CT.C1:
        {
          layerLink = this.widget.startHandleLayerLink;
          type = this[S._chooseType](ui.TextDirection.ltr, text_selection.TextSelectionHandleType.left, text_selection.TextSelectionHandleType.right);
          break;
        }
        case C[2] || CT.C2:
        {
          if (!!dart.test(this.widget.selection.isCollapsed)) dart.assertFailed(null, I[4], 138, 16, "!widget.selection.isCollapsed");
          layerLink = this.widget.endHandleLayerLink;
          type = this[S._chooseType](ui.TextDirection.ltr, text_selection.TextSelectionHandleType.right, text_selection.TextSelectionHandleType.left);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let handleAnchor = this.widget.selectionControls.getHandleAnchor(type, this.widget.manager.preferredLineHeight);
      let handleSize = this.widget.selectionControls.getHandleSize(this.widget.manager.preferredLineHeight);
      let handleRect = new ui.Rect.fromLTWH(-dart.notNull(handleAnchor.dx), -dart.notNull(handleAnchor.dy), handleSize.width, handleSize.height);
      let interactiveRect = handleRect.expandToInclude(new ui.Rect.fromCircle({center: handleRect.center, radius: 48 / 2}));
      let padding = new stack.RelativeRect.fromLTRB(math.max(core.double, (dart.notNull(interactiveRect.width) - dart.notNull(handleRect.width)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.height) - dart.notNull(handleRect.height)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.width) - dart.notNull(handleRect.width)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.height) - dart.notNull(handleRect.height)) / 2, 0.0));
      let child = null;
      if (T$.BuildContextAndTextSelectionHandleTypeAnddouble__ToWidget().is(dart.bind(this.widget.selectionControls, 'buildHandle'))) {
        child = T$.BuildContextAndTextSelectionHandleTypeAnddouble__ToWidget().as(dart.bind(this.widget.selectionControls, 'buildHandle'))(context, type, this.widget.manager.preferredLineHeight, null);
      } else {
        child = dart.bind(this.widget.selectionControls, 'buildHandle')(context, type, this.widget.manager.preferredLineHeight);
      }
      return new basic.CompositedTransformFollower.new({link: layerLink, offset: interactiveRect.topLeft, showWhenUnlinked: false, child: new transitions.FadeTransition.new({opacity: this[S._opacity], child: new container.Container.new({alignment: alignment.Alignment.topLeft, width: interactiveRect.width, height: interactiveRect.height, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, dragStartBehavior: this.widget.dragStartBehavior, onPanStart: dart.bind(this, S._handleDragStart), onPanUpdate: dart.bind(this, S._handleDragUpdate), onTap: dart.bind(this, S._handleTap), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: padding.left, top: padding.top, right: padding.right, bottom: padding.bottom}), child: child, $creationLocationd_0dea112b090073317d4: C[3] || CT.C3}), $creationLocationd_0dea112b090073317d4: C[7] || CT.C7}), $creationLocationd_0dea112b090073317d4: C[15] || CT.C15}), $creationLocationd_0dea112b090073317d4: C[21] || CT.C21}), $creationLocationd_0dea112b090073317d4: C[25] || CT.C25});
    }
    [S._chooseType](textDirection, ltrType, rtlType) {
      if (textDirection == null) dart.nullFailed(I[4], 236, 19, "textDirection");
      if (ltrType == null) dart.nullFailed(I[4], 237, 29, "ltrType");
      if (rtlType == null) dart.nullFailed(I[4], 238, 29, "rtlType");
      if (dart.test(this.widget.selection.isCollapsed)) return text_selection.TextSelectionHandleType.collapsed;
      switch (textDirection) {
        case C[31] || CT.C31:
        {
          return ltrType;
        }
        case C[32] || CT.C32:
        {
          return rtlType;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
  };
  (handle_overlay._MathSelectionHandleOverlayState.new = function() {
    this[S.___MathSelectionHandleOverlayState__dragPosition] = null;
    this[S.___MathSelectionHandleOverlayState__dragPosition_isSet] = false;
    this[S.___MathSelectionHandleOverlayState__controller] = null;
    this[S.___MathSelectionHandleOverlayState__controller_isSet] = false;
    handle_overlay._MathSelectionHandleOverlayState.__proto__.new.call(this);
    ;
  }).prototype = handle_overlay._MathSelectionHandleOverlayState.prototype;
  dart.addTypeTests(handle_overlay._MathSelectionHandleOverlayState);
  dart.addTypeCaches(handle_overlay._MathSelectionHandleOverlayState);
  dart.setMethodSignature(handle_overlay._MathSelectionHandleOverlayState, () => ({
    __proto__: dart.getMethods(handle_overlay._MathSelectionHandleOverlayState.__proto__),
    [S._handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S._handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S._handleTap]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S._chooseType]: dart.fnType(text_selection.TextSelectionHandleType, [ui.TextDirection, text_selection.TextSelectionHandleType, text_selection.TextSelectionHandleType])
  }));
  dart.setGetterSignature(handle_overlay._MathSelectionHandleOverlayState, () => ({
    __proto__: dart.getGetters(handle_overlay._MathSelectionHandleOverlayState.__proto__),
    [S._dragPosition]: ui.Offset,
    [S._controller]: animation_controller.AnimationController,
    [S._opacity]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(handle_overlay._MathSelectionHandleOverlayState, () => ({
    __proto__: dart.getSetters(handle_overlay._MathSelectionHandleOverlayState.__proto__),
    [S._dragPosition]: ui.Offset,
    [S._controller]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(handle_overlay._MathSelectionHandleOverlayState, I[5]);
  dart.setFieldSignature(handle_overlay._MathSelectionHandleOverlayState, () => ({
    __proto__: dart.getFields(handle_overlay._MathSelectionHandleOverlayState.__proto__),
    [S.___MathSelectionHandleOverlayState__dragPosition]: dart.fieldType(dart.nullable(ui.Offset)),
    [S.___MathSelectionHandleOverlayState__dragPosition_isSet]: dart.fieldType(core.bool),
    [S.___MathSelectionHandleOverlayState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.___MathSelectionHandleOverlayState__controller_isSet]: dart.fieldType(core.bool)
  }));
  overlay$0.MathSelectionHandlePosition = class MathSelectionHandlePosition extends core.Object {
    toString() {
      return this[S._name$1];
    }
  };
  (overlay$0.MathSelectionHandlePosition.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[6], 12, 6, "index");
    if (_name == null) dart.nullFailed(I[6], 12, 6, "_name");
    this.index = index;
    this[S._name$1] = _name;
    ;
  }).prototype = overlay$0.MathSelectionHandlePosition.prototype;
  dart.addTypeTests(overlay$0.MathSelectionHandlePosition);
  dart.addTypeCaches(overlay$0.MathSelectionHandlePosition);
  dart.setLibraryUri(overlay$0.MathSelectionHandlePosition, I[7]);
  dart.setFieldSignature(overlay$0.MathSelectionHandlePosition, () => ({
    __proto__: dart.getFields(overlay$0.MathSelectionHandlePosition.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$1]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(overlay$0.MathSelectionHandlePosition, ['toString']);
  overlay$0.MathSelectionHandlePosition.start = C[1] || CT.C1;
  overlay$0.MathSelectionHandlePosition.end = C[2] || CT.C2;
  overlay$0.MathSelectionHandlePosition.values = C[33] || CT.C33;
  overlay$0.MathSelectionOverlay = class MathSelectionOverlay extends core.Object {
    get debugRequiredFor() {
      return this[S.debugRequiredFor];
    }
    set debugRequiredFor(value) {
      super.debugRequiredFor = value;
    }
    get toolbarLayerLink() {
      return this[S.toolbarLayerLink];
    }
    set toolbarLayerLink(value) {
      super.toolbarLayerLink = value;
    }
    get startHandleLayerLink() {
      return this[S.startHandleLayerLink$1];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[S.endHandleLayerLink$1];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get selectionControls() {
      return this[S.selectionControls$1];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get manager() {
      return this[S.manager$1];
    }
    set manager(value) {
      super.manager = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get onSelectionHandleTapped() {
      return this[S.onSelectionHandleTapped$1];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get clipboardStatus() {
      return this[S.clipboardStatus];
    }
    set clipboardStatus(value) {
      super.clipboardStatus = value;
    }
    get context() {
      return this.manager.context;
    }
    get [S._toolbarController]() {
      let t6;
      return dart.test(this[S.__MathSelectionOverlay__toolbarController_isSet]) ? (t6 = this[S.__MathSelectionOverlay__toolbarController], t6) : dart.throw(new _internal.LateError.fieldNI("_toolbarController"));
    }
    set [S._toolbarController](t6) {
      if (t6 == null) dart.nullFailed(I[6], 103, 28, "null");
      this[S.__MathSelectionOverlay__toolbarController_isSet] = true;
      this[S.__MathSelectionOverlay__toolbarController] = t6;
    }
    get [S._toolbarOpacity]() {
      return this[S._toolbarController].view;
    }
    get value() {
      return this[S._value];
    }
    get [S._selection]() {
      return this.manager.controller.selection;
    }
    get handlesVisible() {
      return this[S._handlesVisible];
    }
    set handlesVisible(visible) {
      if (visible == null) dart.nullFailed(I[6], 136, 27, "visible");
      if (this[S._handlesVisible] == visible) return;
      this[S._handlesVisible] = visible;
      if (dart.nullCheck(binding.SchedulerBinding.instance).schedulerPhase == binding.SchedulerPhase.persistentCallbacks) {
        dart.nullCheck(binding.SchedulerBinding.instance).addPostFrameCallback(dart.bind(this, S._markNeedsBuild));
      } else {
        this[S._markNeedsBuild]();
      }
    }
    showHandles() {
      if (!(this[S._handles] == null)) dart.assertFailed(null, I[6], 151, 12, "_handles == null");
      this[S._handles] = T$.JSArrayOfOverlayEntry().of([new overlay$.OverlayEntry.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(I[6], 154, 34, "context");
            return this[S._buildHandle](context, overlay$0.MathSelectionHandlePosition.start);
          }, T$.BuildContextToWidget())}), new overlay$.OverlayEntry.new({builder: dart.fn(context => {
            if (context == null) dart.nullFailed(I[6], 157, 34, "context");
            return this[S._buildHandle](context, overlay$0.MathSelectionHandlePosition.end);
          }, T$.BuildContextToWidget())})]);
      dart.nullCheck(overlay$.Overlay.of(this.context, {rootOverlay: true, debugRequiredFor: this.debugRequiredFor})).insertAll(dart.nullCheck(this[S._handles]));
    }
    hideHandles() {
      if (this[S._handles] != null) {
        dart.nullCheck(this[S._handles])[S.$_get](0).remove();
        dart.nullCheck(this[S._handles])[S.$_get](1).remove();
        this[S._handles] = null;
      }
    }
    showToolbar() {
      if (!(this[S._toolbar] == null)) dart.assertFailed(null, I[6], 176, 12, "_toolbar == null");
      this[S._toolbar] = new overlay$.OverlayEntry.new({builder: dart.bind(this, S._buildToolbar)});
      dart.nullCheck(overlay$.Overlay.of(this.context, {rootOverlay: true, debugRequiredFor: this.debugRequiredFor})).insert(dart.nullCheck(this[S._toolbar]));
      this[S._toolbarController].forward({from: 0.0});
    }
    update() {
      if (dart.nullCheck(binding.SchedulerBinding.instance).schedulerPhase == binding.SchedulerPhase.persistentCallbacks) {
        dart.nullCheck(binding.SchedulerBinding.instance).addPostFrameCallback(dart.bind(this, S._markNeedsBuild));
      } else {
        this[S._markNeedsBuild]();
      }
    }
    [S._markNeedsBuild](duration = null) {
      let t7;
      if (this[S._handles] != null) {
        dart.nullCheck(this[S._handles])[S.$_get](0).markNeedsBuild();
        dart.nullCheck(this[S._handles])[S.$_get](1).markNeedsBuild();
      }
      t7 = this[S._toolbar];
      t7 == null ? null : t7.markNeedsBuild();
    }
    get handlesAreVisible() {
      return this[S._handles] != null && dart.test(this.handlesVisible);
    }
    get toolbarIsVisible() {
      return this[S._toolbar] != null;
    }
    hide() {
      if (this[S._handles] != null) {
        dart.nullCheck(this[S._handles])[S.$_get](0).remove();
        dart.nullCheck(this[S._handles])[S.$_get](1).remove();
        this[S._handles] = null;
      }
      if (this[S._toolbar] != null) {
        this.hideToolbar();
      }
    }
    hideToolbar() {
      if (!(this[S._toolbar] != null)) dart.assertFailed(null, I[6], 231, 12, "_toolbar != null");
      this[S._toolbarController].stop();
      dart.nullCheck(this[S._toolbar]).remove();
      this[S._toolbar] = null;
    }
    dispose() {
      this.hide();
      this[S._toolbarController].dispose();
    }
    [S._buildHandle](context, position) {
      if (context == null) dart.nullFailed(I[6], 244, 20, "context");
      if (position == null) dart.nullFailed(I[6], 244, 57, "position");
      if (dart.test(this[S._selection].isCollapsed) && position == overlay$0.MathSelectionHandlePosition.end || this.selectionControls == null) {
        return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[34] || CT.C34});
      }
      return new visibility.Visibility.new({visible: this.handlesVisible, child: new handle_overlay.MathSelectionHandleOverlay.new({manager: this.manager, onSelectionHandleChanged: dart.fn(newSelection => {
            if (newSelection == null) dart.nullFailed(I[6], 254, 50, "newSelection");
            this[S._handleSelectionHandleChanged](newSelection, position);
          }, T$.TextSelectionTovoid()), onSelectionHandleTapped: this.onSelectionHandleTapped, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, selection: this[S._selection], selectionControls: dart.nullCheck(this.selectionControls), position: position, dragStartBehavior: this.dragStartBehavior, $creationLocationd_0dea112b090073317d4: C[36] || CT.C36}), $creationLocationd_0dea112b090073317d4: C[47] || CT.C47});
    }
    [S._buildToolbar](context) {
      if (context == null) dart.nullFailed(I[6], 268, 37, "context");
      if (this.selectionControls == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[51] || CT.C51});
      let endpoint1 = this.manager.getLocalEndpointForPosition(this[S._selection].start);
      let endpoint2 = this.manager.getLocalEndpointForPosition(this[S._selection].end);
      let editingRegion = this.manager.getLocalEditingRegion();
      let isMultiline = false;
      let midX = isMultiline ? dart.notNull(editingRegion.width) / 2 : (dart.notNull(endpoint1.dx) + dart.notNull(endpoint2.dx)) / 2;
      let midpoint = new ui.Offset.new(midX, dart.notNull(endpoint1.dy) - dart.notNull(this.manager.preferredLineHeight));
      return new transitions.FadeTransition.new({opacity: this[S._toolbarOpacity], child: new basic.CompositedTransformFollower.new({link: this.toolbarLayerLink, showWhenUnlinked: false, offset: editingRegion.topLeft._negate(), child: dart.nullCheck(this.selectionControls).buildToolbar(context, editingRegion, this.manager.preferredLineHeight, midpoint, T$.JSArrayOfTextSelectionPoint().of([new editable.TextSelectionPoint.new(endpoint1, ui.TextDirection.ltr), new editable.TextSelectionPoint.new(endpoint2, ui.TextDirection.ltr)]), this.manager, dart.nullCheck(this.clipboardStatus), null), $creationLocationd_0dea112b090073317d4: C[52] || CT.C52}), $creationLocationd_0dea112b090073317d4: C[58] || CT.C58});
    }
    [S._handleSelectionHandleChanged](newSelection, position) {
      if (newSelection == null) dart.nullFailed(I[6], 319, 21, "newSelection");
      if (position == null) dart.nullFailed(I[6], 319, 63, "position");
      let textPosition = null;
      switch (position) {
        case C[1] || CT.C1:
        {
          textPosition = newSelection.base;
          break;
        }
        case C[2] || CT.C2:
        {
          textPosition = newSelection.extent;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      this.manager.handleSelectionChanged(newSelection, null, selection_manager.ExtraSelectionChangedCause.handle);
      this.manager.bringIntoView(textPosition);
    }
  };
  (overlay$0.MathSelectionOverlay.new = function(opts) {
    let debugRequiredFor = opts && 'debugRequiredFor' in opts ? opts.debugRequiredFor : null;
    let toolbarLayerLink = opts && 'toolbarLayerLink' in opts ? opts.toolbarLayerLink : null;
    if (toolbarLayerLink == null) dart.nullFailed(I[6], 17, 19, "toolbarLayerLink");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    if (startHandleLayerLink == null) dart.nullFailed(I[6], 18, 19, "startHandleLayerLink");
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    if (endHandleLayerLink == null) dart.nullFailed(I[6], 19, 19, "endHandleLayerLink");
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let handlesVisible = opts && 'handlesVisible' in opts ? opts.handlesVisible : false;
    if (handlesVisible == null) dart.nullFailed(I[6], 21, 10, "handlesVisible");
    let manager = opts && 'manager' in opts ? opts.manager : null;
    if (manager == null) dart.nullFailed(I[6], 22, 19, "manager");
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[0] || CT.C0;
    if (dragStartBehavior == null) dart.nullFailed(I[6], 23, 10, "dragStartBehavior");
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let clipboardStatus = opts && 'clipboardStatus' in opts ? opts.clipboardStatus : null;
    this[S.__MathSelectionOverlay__toolbarController] = null;
    this[S.__MathSelectionOverlay__toolbarController_isSet] = false;
    this[S._value] = null;
    this[S._handles] = null;
    this[S._toolbar] = null;
    this[S.debugRequiredFor] = debugRequiredFor;
    this[S.toolbarLayerLink] = toolbarLayerLink;
    this[S.startHandleLayerLink$1] = startHandleLayerLink;
    this[S.endHandleLayerLink$1] = endHandleLayerLink;
    this[S.selectionControls$1] = selectionControls;
    this[S.manager$1] = manager;
    this[S.dragStartBehavior$1] = dragStartBehavior;
    this[S.onSelectionHandleTapped$1] = onSelectionHandleTapped;
    this[S.clipboardStatus] = clipboardStatus;
    this[S._handlesVisible] = handlesVisible;
    let overlay = overlay$.Overlay.of(this.context, {rootOverlay: true});
    if (!(overlay != null)) dart.assertFailed("No Overlay widget exists above " + dart.str(this.context) + ".\n" + "Usually the Navigator created by WidgetsApp provides the overlay. " + "Perhaps your " + "app content was created above the Navigator with the WidgetsApp " + "builder parameter.", I[6], 29, 7, "overlay != null");
    this[S._toolbarController] = new animation_controller.AnimationController.new({duration: overlay$0.MathSelectionOverlay.fadeDuration, vsync: dart.nullCheck(overlay)});
  }).prototype = overlay$0.MathSelectionOverlay.prototype;
  dart.addTypeTests(overlay$0.MathSelectionOverlay);
  dart.addTypeCaches(overlay$0.MathSelectionOverlay);
  dart.setMethodSignature(overlay$0.MathSelectionOverlay, () => ({
    __proto__: dart.getMethods(overlay$0.MathSelectionOverlay.__proto__),
    showHandles: dart.fnType(dart.void, []),
    hideHandles: dart.fnType(dart.void, []),
    showToolbar: dart.fnType(dart.void, []),
    update: dart.fnType(dart.void, []),
    [S._markNeedsBuild]: dart.fnType(dart.void, [], [dart.nullable(core.Duration)]),
    hide: dart.fnType(dart.void, []),
    hideToolbar: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    [S._buildHandle]: dart.fnType(framework.Widget, [framework.BuildContext, overlay$0.MathSelectionHandlePosition]),
    [S._buildToolbar]: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S._handleSelectionHandleChanged]: dart.fnType(dart.void, [text_editing.TextSelection, overlay$0.MathSelectionHandlePosition])
  }));
  dart.setGetterSignature(overlay$0.MathSelectionOverlay, () => ({
    __proto__: dart.getGetters(overlay$0.MathSelectionOverlay.__proto__),
    context: framework.BuildContext,
    [S._toolbarController]: animation_controller.AnimationController,
    [S._toolbarOpacity]: animation.Animation$(core.double),
    value: dart.nullable(syntax_tree.SyntaxTree),
    [S._selection]: text_editing.TextSelection,
    handlesVisible: core.bool,
    handlesAreVisible: core.bool,
    toolbarIsVisible: core.bool
  }));
  dart.setSetterSignature(overlay$0.MathSelectionOverlay, () => ({
    __proto__: dart.getSetters(overlay$0.MathSelectionOverlay.__proto__),
    [S._toolbarController]: animation_controller.AnimationController,
    handlesVisible: core.bool
  }));
  dart.setLibraryUri(overlay$0.MathSelectionOverlay, I[7]);
  dart.setFieldSignature(overlay$0.MathSelectionOverlay, () => ({
    __proto__: dart.getFields(overlay$0.MathSelectionOverlay.__proto__),
    debugRequiredFor: dart.finalFieldType(dart.nullable(framework.Widget)),
    toolbarLayerLink: dart.finalFieldType(layer.LayerLink),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    selectionControls: dart.finalFieldType(dart.nullable(text_selection.TextSelectionControls)),
    manager: dart.finalFieldType(overlay_manager.SelectionOverlayManagerMixin$(framework.StatefulWidget)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    onSelectionHandleTapped: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    clipboardStatus: dart.finalFieldType(dart.nullable(text_selection.ClipboardStatusNotifier)),
    [S.__MathSelectionOverlay__toolbarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.__MathSelectionOverlay__toolbarController_isSet]: dart.fieldType(core.bool),
    [S._value]: dart.fieldType(dart.nullable(syntax_tree.SyntaxTree)),
    [S._handles]: dart.fieldType(dart.nullable(core.List$(overlay$.OverlayEntry))),
    [S._toolbar]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [S._handlesVisible]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(overlay$0.MathSelectionOverlay, {
    /*overlay$0.MathSelectionOverlay.fadeDuration*/get fadeDuration() {
      return C[62] || CT.C62;
    }
  }, false);
  gesture_detector_builder.MathSelectionGestureDetectorBuilder = class MathSelectionGestureDetectorBuilder extends core.Object {
    get delegate() {
      return this[S.delegate];
    }
    set delegate(value) {
      super.delegate = value;
    }
    get lastTapDownPosition() {
      return this[S.lastTapDownPosition];
    }
    set lastTapDownPosition(value) {
      this[S.lastTapDownPosition] = value;
    }
    get shouldShowSelectionToolbar() {
      return this[S._shouldShowSelectionToolbar];
    }
    onTapDown(details) {
      if (details == null) dart.nullFailed(I[9], 31, 33, "details");
      this.lastTapDownPosition = details.globalPosition;
      let kind = details.kind;
      this[S._shouldShowSelectionToolbar] = kind == null || kind == ui.PointerDeviceKind.touch || kind == ui.PointerDeviceKind.stylus;
    }
    onForcePressStart(details) {
      if (details == null) dart.nullFailed(I[9], 55, 44, "details");
      if (!dart.test(this.delegate.forcePressEnabled)) dart.assertFailed(null, I[9], 56, 12, "delegate.forcePressEnabled");
      this[S._shouldShowSelectionToolbar] = true;
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.selectWordAt({offset: details.globalPosition, cause: text_input.SelectionChangedCause.forcePress});
      }
    }
    onForcePressEnd(details) {
      if (details == null) dart.nullFailed(I[9], 78, 42, "details");
      if (!dart.test(this.delegate.forcePressEnabled)) dart.assertFailed(null, I[9], 79, 12, "delegate.forcePressEnabled");
      this.delegate.selectWordAt({offset: details.globalPosition, cause: text_input.SelectionChangedCause.forcePress});
      if (dart.test(this.shouldShowSelectionToolbar)) {
        this.delegate.showToolbar();
      }
    }
    onSingleTapUp(details) {
      if (details == null) dart.nullFailed(I[9], 98, 35, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.selectPositionAt({from: dart.nullCheck(this.lastTapDownPosition), cause: text_input.SelectionChangedCause.tap});
      }
    }
    onSingleTapCancel() {
    }
    onSingleLongTapStart(details) {
      if (details == null) dart.nullFailed(I[9], 121, 51, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.selectPositionAt({from: details.globalPosition, cause: text_input.SelectionChangedCause.longPress});
      }
    }
    onSingleLongTapMoveUpdate(details) {
      if (details == null) dart.nullFailed(I[9], 131, 61, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.selectPositionAt({from: details.globalPosition, cause: text_input.SelectionChangedCause.longPress});
      }
    }
    onSingleLongTapEnd(details) {
      if (details == null) dart.nullFailed(I[9], 141, 47, "details");
      if (dart.test(this.shouldShowSelectionToolbar)) {
        this.delegate.showToolbar();
      }
    }
    onDoubleTapDown(details) {
      if (details == null) dart.nullFailed(I[9], 148, 39, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.selectWordAt({offset: details.globalPosition, cause: text_input.SelectionChangedCause.tap});
        if (dart.test(this.shouldShowSelectionToolbar)) this.delegate.showToolbar();
      }
    }
    onDragSelectionStart(details) {
      if (details == null) dart.nullFailed(I[9], 157, 46, "details");
      this.delegate.selectPositionAt({from: details.globalPosition, cause: text_input.SelectionChangedCause.drag});
    }
    onDragSelectionEnd(details) {
      if (details == null) dart.nullFailed(I[9], 165, 42, "details");
    }
    onDragSelectionUpdate(startDetails, updateDetails) {
      if (startDetails == null) dart.nullFailed(I[9], 171, 24, "startDetails");
      if (updateDetails == null) dart.nullFailed(I[9], 171, 56, "updateDetails");
      this.delegate.selectPositionAt({from: startDetails.globalPosition, to: updateDetails.globalPosition, cause: text_input.SelectionChangedCause.drag});
    }
    buildGestureDetector(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[9], 182, 21, "child");
      return new text_selection.TextSelectionGestureDetector.new({key: key, onTapDown: dart.bind(this, 'onTapDown'), onForcePressStart: dart.test(this.delegate.forcePressEnabled) ? dart.bind(this, 'onForcePressStart') : null, onForcePressEnd: dart.test(this.delegate.forcePressEnabled) ? dart.bind(this, 'onForcePressEnd') : null, onSingleTapUp: dart.bind(this, 'onSingleTapUp'), onSingleTapCancel: dart.bind(this, 'onSingleTapCancel'), onSingleLongTapStart: dart.bind(this, 'onSingleLongTapStart'), onSingleLongTapMoveUpdate: dart.bind(this, 'onSingleLongTapMoveUpdate'), onSingleLongTapEnd: dart.bind(this, 'onSingleLongTapEnd'), onDoubleTapDown: dart.bind(this, 'onDoubleTapDown'), onDragSelectionStart: dart.bind(this, 'onDragSelectionStart'), onDragSelectionUpdate: dart.bind(this, 'onDragSelectionUpdate'), onDragSelectionEnd: dart.bind(this, 'onDragSelectionEnd'), behavior: behavior, child: child, $creationLocationd_0dea112b090073317d4: C[69] || CT.C69});
    }
  };
  (gesture_detector_builder.MathSelectionGestureDetectorBuilder.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(I[9], 14, 19, "delegate");
    this[S._shouldShowSelectionToolbar] = true;
    this[S.lastTapDownPosition] = null;
    this[S.delegate] = delegate;
    ;
  }).prototype = gesture_detector_builder.MathSelectionGestureDetectorBuilder.prototype;
  dart.addTypeTests(gesture_detector_builder.MathSelectionGestureDetectorBuilder);
  dart.addTypeCaches(gesture_detector_builder.MathSelectionGestureDetectorBuilder);
  dart.setMethodSignature(gesture_detector_builder.MathSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getMethods(gesture_detector_builder.MathSelectionGestureDetectorBuilder.__proto__),
    onTapDown: dart.fnType(dart.void, [tap.TapDownDetails]),
    onForcePressStart: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    onForcePressEnd: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    onSingleTapUp: dart.fnType(dart.void, [tap.TapUpDetails]),
    onSingleTapCancel: dart.fnType(dart.void, []),
    onSingleLongTapStart: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    onSingleLongTapMoveUpdate: dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]),
    onSingleLongTapEnd: dart.fnType(dart.void, [long_press.LongPressEndDetails]),
    onDoubleTapDown: dart.fnType(dart.void, [tap.TapDownDetails]),
    onDragSelectionStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    onDragSelectionEnd: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    onDragSelectionUpdate: dart.fnType(dart.void, [drag_details.DragStartDetails, drag_details.DragUpdateDetails]),
    buildGestureDetector: dart.fnType(text_selection.TextSelectionGestureDetector, [], {behavior: dart.nullable(proxy_box.HitTestBehavior), key: dart.nullable(key.Key)}, {child: framework.Widget})
  }));
  dart.setGetterSignature(gesture_detector_builder.MathSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getGetters(gesture_detector_builder.MathSelectionGestureDetectorBuilder.__proto__),
    shouldShowSelectionToolbar: core.bool
  }));
  dart.setLibraryUri(gesture_detector_builder.MathSelectionGestureDetectorBuilder, I[10]);
  dart.setFieldSignature(gesture_detector_builder.MathSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getFields(gesture_detector_builder.MathSelectionGestureDetectorBuilder.__proto__),
    delegate: dart.finalFieldType(overlay_manager.SelectionOverlayManagerMixin$(framework.StatefulWidget)),
    [S._shouldShowSelectionToolbar]: dart.fieldType(core.bool),
    lastTapDownPosition: dart.fieldType(dart.nullable(ui.Offset))
  }));
  gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder = class SelectableMathSelectionGestureDetectorBuilder extends gesture_detector_builder.MathSelectionGestureDetectorBuilder {
    onForcePressStart(details) {
      if (details == null) dart.nullFailed(I[8], 14, 44, "details");
      super.onForcePressStart(details);
      if (dart.test(this.delegate.selectionEnabled) && dart.test(this.shouldShowSelectionToolbar)) {
        this.delegate.showToolbar();
      }
    }
    onForcePressEnd(details) {
      if (details == null) dart.nullFailed(I[8], 22, 42, "details");
    }
    onSingleLongTapMoveUpdate(details) {
      if (details == null) dart.nullFailed(I[8], 27, 61, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.handleSelectionChanged(this.delegate.getWordsRangeInRange({from: details.globalPosition['-'](details.offsetFromOrigin), to: details.globalPosition}), text_input.SelectionChangedCause.longPress);
      }
    }
    onSingleTapUp(details) {
      if (details == null) dart.nullFailed(I[8], 39, 35, "details");
      this.delegate.hide();
      if (dart.test(this.delegate.selectionEnabled)) {
        switch (theme$.Theme.of(this.delegate.context).platform) {
          case C[63] || CT.C63:
          case C[64] || CT.C64:
          {
            this.delegate.selectPositionAt({from: dart.nullCheck(this.lastTapDownPosition), cause: text_input.SelectionChangedCause.tap});
            break;
          }
          case C[65] || CT.C65:
          case C[66] || CT.C66:
          case C[67] || CT.C67:
          case C[68] || CT.C68:
          {
            this.delegate.selectPositionAt({from: dart.nullCheck(this.lastTapDownPosition), cause: text_input.SelectionChangedCause.tap});
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      }
    }
    onSingleLongTapStart(details) {
      if (details == null) dart.nullFailed(I[8], 67, 51, "details");
      if (dart.test(this.delegate.selectionEnabled)) {
        this.delegate.selectWordAt({offset: details.globalPosition, cause: text_input.SelectionChangedCause.longPress});
        feedback.Feedback.forLongPress(this.delegate.context);
      }
    }
  };
  (gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    if (delegate == null) dart.nullFailed(I[8], 10, 43, "delegate");
    gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder.__proto__.new.call(this, {delegate: delegate});
    ;
  }).prototype = gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder.prototype;
  dart.addTypeTests(gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder);
  dart.addTypeCaches(gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder);
  dart.setLibraryUri(gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder, I[11]);
  gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate = class MathSelectionGestureDetectorBuilderDelegate extends core.Object {};
  (gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate.new = function() {
    ;
  }).prototype = gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate.prototype;
  dart.addTypeTests(gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate);
  dart.addTypeCaches(gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate);
  dart.setLibraryUri(gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate, I[10]);
  const _is_SelectionOverlayManagerMixin_default = Symbol('_is_SelectionOverlayManagerMixin_default');
  overlay_manager.SelectionOverlayManagerMixin$ = dart.generic(T => {
    class SelectionOverlayManagerMixin extends selection_manager.SelectionManagerMixin$(T) {}
    SelectionOverlayManagerMixin[dart.mixinOn] = SelectionManagerMixin => class SelectionOverlayManagerMixin extends SelectionManagerMixin {
      get toolbarLayerLink() {
        return this[S.toolbarLayerLink$1];
      }
      set toolbarLayerLink(value) {
        super.toolbarLayerLink = value;
      }
      get startHandleLayerLink() {
        return this[S.startHandleLayerLink$2];
      }
      set startHandleLayerLink(value) {
        super.startHandleLayerLink = value;
      }
      get endHandleLayerLink() {
        return this[S.endHandleLayerLink$2];
      }
      set endHandleLayerLink(value) {
        super.endHandleLayerLink = value;
      }
      get toolbarVisible() {
        return this[S.toolbarVisible];
      }
      set toolbarVisible(value) {
        this[S.toolbarVisible] = value;
      }
      get hasFocus() {
        return this.focusNode.hasFocus;
      }
      get selectionOverlay() {
        return this[S._selectionOverlay];
      }
      get [S._selectionGestureDetectorBuilder]() {
        let t7;
        return dart.test(this[S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder_isSet]) ? (t7 = this[S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder], t7) : dart.throw(new _internal.LateError.fieldNI("_selectionGestureDetectorBuilder"));
      }
      set [S._selectionGestureDetectorBuilder](t7) {
        if (t7 == null) dart.nullFailed(I[12], 35, 7, "null");
        this[S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder_isSet] = true;
        this[S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder] = t7;
      }
      get selectionGestureDetectorBuilder() {
        return this[S._selectionGestureDetectorBuilder];
      }
      initState() {
        super.initState();
        this[S._selectionGestureDetectorBuilder] = new gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder.new({delegate: this});
      }
      didUpdateWidget(oldWidget) {
        let t8;
        T.as(oldWidget);
        if (oldWidget == null) dart.nullFailed(I[12], 47, 26, "oldWidget");
        super.didUpdateWidget(oldWidget);
        t8 = this[S._selectionOverlay];
        t8 == null ? null : t8.update();
      }
      dispose() {
        let t8;
        t8 = this[S._selectionOverlay];
        t8 == null ? null : t8.dispose();
        super.dispose();
      }
      showToolbar() {
        if (true) {
          return false;
        }
        if (this[S._selectionOverlay] == null || dart.test(dart.nullCheck(this[S._selectionOverlay]).toolbarIsVisible)) {
          return false;
        }
        if (dart.test(this.controller.selection.isCollapsed)) {
          return false;
        }
        dart.nullCheck(this[S._selectionOverlay]).showToolbar();
        this.toolbarVisible = true;
        return true;
      }
      hideToolbar(hideHandles = true) {
        let t8;
        if (hideHandles == null) dart.nullFailed(I[12], 84, 26, "hideHandles");
        this.toolbarVisible = false;
        t8 = this[S._selectionOverlay];
        t8 == null ? null : t8.hideToolbar();
      }
      hide() {
        let t8;
        this.toolbarVisible = false;
        t8 = this[S._selectionOverlay];
        t8 == null ? null : t8.hide();
      }
      [S._shouldShowSelectionHandles](cause) {
        if (!dart.test(this[S._selectionGestureDetectorBuilder].shouldShowSelectionToolbar)) {
          return false;
        }
        if (dart.test(this.controller.selection.isCollapsed)) return false;
        if (cause == text_input.SelectionChangedCause.keyboard) return false;
        if (cause == text_input.SelectionChangedCause.longPress) return true;
        if (dart.notNull(this.controller.ast.greenRoot.capturedCursor) > 1) return true;
        return false;
      }
      handleSelectionChanged(selection, cause, extraCause = null) {
        let t8, t8$;
        if (selection == null) dart.nullFailed(I[12], 113, 21, "selection");
        super.handleSelectionChanged(selection, cause, extraCause);
        if (extraCause != selection_manager.ExtraSelectionChangedCause.handle) {
          t8 = this[S._selectionOverlay];
          t8 == null ? null : t8.hide();
          this[S._selectionOverlay] = null;
          this[S._selectionOverlay] = new overlay$0.MathSelectionOverlay.new({clipboardStatus: true ? null : new text_selection.ClipboardStatusNotifier.new(), manager: this, toolbarLayerLink: this.toolbarLayerLink, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, onSelectionHandleTapped: dart.fn(() => {
              if (!dart.test(this.controller.selection.isCollapsed)) {
                dart.test(this.toolbarVisible) ? this.hideToolbar() : this.showToolbar();
              }
            }, T$.VoidTovoid()), selectionControls: this.textSelectionControls, dragStartBehavior: this.dragStartBehavior, debugRequiredFor: this.widget});
          dart.nullCheck(this[S._selectionOverlay]).handlesVisible = this[S._shouldShowSelectionHandles](cause);
          if (dart.nullCheck(binding.SchedulerBinding.instance).schedulerPhase == binding.SchedulerPhase.persistentCallbacks) {
            dart.nullCheck(binding.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
              if (_ == null) dart.nullFailed(I[12], 141, 36, "_");
              return dart.nullCheck(this[S._selectionOverlay]).showHandles();
            }, T$.DurationTovoid()));
          } else {
            dart.nullCheck(this[S._selectionOverlay]).showHandles();
          }
        } else {
          t8$ = this[S._selectionOverlay];
          t8$ == null ? null : t8$.update();
        }
      }
    };
    (SelectionOverlayManagerMixin[dart.mixinNew] = function() {
      this[S._selectionOverlay] = null;
      this[S.toolbarLayerLink$1] = new layer.LayerLink.new();
      this[S.startHandleLayerLink$2] = new layer.LayerLink.new();
      this[S.endHandleLayerLink$2] = new layer.LayerLink.new();
      this[S.toolbarVisible] = false;
      this[S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder] = null;
      this[S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder_isSet] = false;
    }).prototype = SelectionOverlayManagerMixin.prototype;
    dart.addTypeTests(SelectionOverlayManagerMixin);
    SelectionOverlayManagerMixin.prototype[_is_SelectionOverlayManagerMixin_default] = true;
    dart.addTypeCaches(SelectionOverlayManagerMixin);
    SelectionOverlayManagerMixin[dart.implements] = () => [gesture_detector_builder.MathSelectionGestureDetectorBuilderDelegate, selection_manager.SelectionManagerMixin$(T)];
    dart.setMethodSignature(SelectionOverlayManagerMixin, () => ({
      __proto__: dart.getMethods(SelectionOverlayManagerMixin.__proto__),
      showToolbar: dart.fnType(core.bool, []),
      hideToolbar: dart.fnType(dart.void, [], [core.bool]),
      hide: dart.fnType(dart.void, []),
      [S._shouldShowSelectionHandles]: dart.fnType(core.bool, [dart.nullable(text_input.SelectionChangedCause)])
    }));
    dart.setGetterSignature(SelectionOverlayManagerMixin, () => ({
      __proto__: dart.getGetters(SelectionOverlayManagerMixin.__proto__),
      hasFocus: core.bool,
      selectionOverlay: dart.nullable(overlay$0.MathSelectionOverlay),
      [S._selectionGestureDetectorBuilder]: gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder,
      selectionGestureDetectorBuilder: gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder
    }));
    dart.setSetterSignature(SelectionOverlayManagerMixin, () => ({
      __proto__: dart.getSetters(SelectionOverlayManagerMixin.__proto__),
      [S._selectionGestureDetectorBuilder]: gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder
    }));
    dart.setLibraryUri(SelectionOverlayManagerMixin, I[13]);
    dart.setFieldSignature(SelectionOverlayManagerMixin, () => ({
      __proto__: dart.getFields(SelectionOverlayManagerMixin.__proto__),
      [S._selectionOverlay]: dart.fieldType(dart.nullable(overlay$0.MathSelectionOverlay)),
      toolbarLayerLink: dart.finalFieldType(layer.LayerLink),
      startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
      endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
      toolbarVisible: dart.fieldType(core.bool),
      [S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder]: dart.fieldType(dart.nullable(gesture_detector_builder_selectable.SelectableMathSelectionGestureDetectorBuilder)),
      [S.__SelectionOverlayManagerMixin__selectionGestureDetectorBuilder_isSet]: dart.fieldType(core.bool)
    }));
    return SelectionOverlayManagerMixin;
  });
  overlay_manager.SelectionOverlayManagerMixin = overlay_manager.SelectionOverlayManagerMixin$();
  dart.addTypeTests(overlay_manager.SelectionOverlayManagerMixin, _is_SelectionOverlayManagerMixin_default);
  optimization$.OptimizationEntry = class OptimizationEntry extends core.Object {
    get matcher() {
      return this[S.matcher];
    }
    set matcher(value) {
      super.matcher = value;
    }
    get optimize() {
      return this[S.optimize];
    }
    set optimize(value) {
      super.optimize = value;
    }
    get [S._priority$1]() {
      return this[S._priority];
    }
    set [S._priority$1](value) {
      super[S._priority$1] = value;
    }
    get priority() {
      let t8;
      t8 = this[S._priority$1];
      return t8 == null ? this.matcher.specificity : t8;
    }
  };
  (optimization$.OptimizationEntry.new = function(opts) {
    let matcher = opts && 'matcher' in opts ? opts.matcher : null;
    if (matcher == null) dart.nullFailed(I[14], 13, 19, "matcher");
    let optimize = opts && 'optimize' in opts ? opts.optimize : null;
    if (optimize == null) dart.nullFailed(I[14], 14, 19, "optimize");
    let priority = opts && 'priority' in opts ? opts.priority : null;
    this[S.matcher] = matcher;
    this[S.optimize] = optimize;
    this[S._priority] = priority;
    ;
  }).prototype = optimization$.OptimizationEntry.prototype;
  dart.addTypeTests(optimization$.OptimizationEntry);
  dart.addTypeCaches(optimization$.OptimizationEntry);
  dart.setGetterSignature(optimization$.OptimizationEntry, () => ({
    __proto__: dart.getGetters(optimization$.OptimizationEntry.__proto__),
    priority: core.int
  }));
  dart.setLibraryUri(optimization$.OptimizationEntry, I[15]);
  dart.setFieldSignature(optimization$.OptimizationEntry, () => ({
    __proto__: dart.getFields(optimization$.OptimizationEntry.__proto__),
    matcher: dart.finalFieldType(matcher.Matcher),
    optimize: dart.finalFieldType(dart.fnType(dart.void, [syntax_tree.GreenNode])),
    [S._priority$1]: dart.finalFieldType(dart.nullable(core.int))
  }));
  matcher.Matcher = class Matcher extends core.Object {
    or(other) {
      if (other == null) dart.nullFailed(I[16], 14, 22, "other");
      return new matcher.OrMatcher.new(this, other);
    }
  };
  (matcher.Matcher.new = function() {
    ;
  }).prototype = matcher.Matcher.prototype;
  dart.addTypeTests(matcher.Matcher);
  dart.addTypeCaches(matcher.Matcher);
  dart.setMethodSignature(matcher.Matcher, () => ({
    __proto__: dart.getMethods(matcher.Matcher.__proto__),
    or: dart.fnType(matcher.Matcher, [matcher.Matcher])
  }));
  dart.setLibraryUri(matcher.Matcher, I[17]);
  matcher.OrMatcher = class OrMatcher extends matcher.Matcher {
    get matcher1() {
      return this[S.matcher1];
    }
    set matcher1(value) {
      super.matcher1 = value;
    }
    get matcher2() {
      return this[S.matcher2];
    }
    set matcher2(value) {
      super.matcher2 = value;
    }
    match(node) {
      return dart.test(this.matcher1.match(node)) || dart.test(this.matcher2.match(node));
    }
    get specificity() {
      return math.min(core.int, this.matcher1.specificity, this.matcher2.specificity);
    }
  };
  (matcher.OrMatcher.new = function(matcher1, matcher2) {
    if (matcher1 == null) dart.nullFailed(I[16], 21, 24, "matcher1");
    if (matcher2 == null) dart.nullFailed(I[16], 21, 39, "matcher2");
    this[S.matcher1] = matcher1;
    this[S.matcher2] = matcher2;
    matcher.OrMatcher.__proto__.new.call(this);
    ;
  }).prototype = matcher.OrMatcher.prototype;
  dart.addTypeTests(matcher.OrMatcher);
  dart.addTypeCaches(matcher.OrMatcher);
  dart.setMethodSignature(matcher.OrMatcher, () => ({
    __proto__: dart.getMethods(matcher.OrMatcher.__proto__),
    match: dart.fnType(core.bool, [dart.nullable(syntax_tree.GreenNode)])
  }));
  dart.setGetterSignature(matcher.OrMatcher, () => ({
    __proto__: dart.getGetters(matcher.OrMatcher.__proto__),
    specificity: core.int
  }));
  dart.setLibraryUri(matcher.OrMatcher, I[17]);
  dart.setFieldSignature(matcher.OrMatcher, () => ({
    __proto__: dart.getFields(matcher.OrMatcher.__proto__),
    matcher1: dart.finalFieldType(matcher.Matcher),
    matcher2: dart.finalFieldType(matcher.Matcher)
  }));
  matcher.NullMatcher = class NullMatcher extends matcher.Matcher {
    get specificity() {
      return 100;
    }
    match(node) {
      return node == null;
    }
  };
  (matcher.NullMatcher.new = function() {
    matcher.NullMatcher.__proto__.new.call(this);
    ;
  }).prototype = matcher.NullMatcher.prototype;
  dart.addTypeTests(matcher.NullMatcher);
  dart.addTypeCaches(matcher.NullMatcher);
  dart.setMethodSignature(matcher.NullMatcher, () => ({
    __proto__: dart.getMethods(matcher.NullMatcher.__proto__),
    match: dart.fnType(core.bool, [dart.nullable(syntax_tree.GreenNode)])
  }));
  dart.setGetterSignature(matcher.NullMatcher, () => ({
    __proto__: dart.getGetters(matcher.NullMatcher.__proto__),
    specificity: core.int
  }));
  dart.setLibraryUri(matcher.NullMatcher, I[17]);
  const _is_NodeMatcher_default = Symbol('_is_NodeMatcher_default');
  matcher.NodeMatcher$ = dart.generic(T => {
    class NodeMatcher extends matcher.Matcher {
      get matchSelf() {
        return this[S.matchSelf];
      }
      set matchSelf(value) {
        super.matchSelf = value;
      }
      get selfSpecificity() {
        return this[S.selfSpecificity];
      }
      set selfSpecificity(value) {
        super.selfSpecificity = value;
      }
      get child() {
        return this[S.child];
      }
      set child(value) {
        super.child = value;
      }
      get children() {
        return this[S.children];
      }
      set children(value) {
        super.children = value;
      }
      get firstChild() {
        return this[S.firstChild];
      }
      set firstChild(value) {
        super.firstChild = value;
      }
      get lastChild() {
        return this[S.lastChild];
      }
      set lastChild(value) {
        super.lastChild = value;
      }
      get everyChild() {
        return this[S.everyChild];
      }
      set everyChild(value) {
        super.everyChild = value;
      }
      get anyChild() {
        return this[S.anyChild];
      }
      set anyChild(value) {
        super.anyChild = value;
      }
      get specificity() {
        let t8, t8$, t8$0, t8$1, t8$2, t8$3, t8$4, t8$5, t8$6, t8$7;
        return 100 + dart.notNull(this.matchSelf != null ? this.selfSpecificity : 0) + dart.notNull(iterable_extensions['NumIterableExtension|get#max'](core.int, T$.JSArrayOfint().of([(t8$ = (t8 = this.child, t8 == null ? null : t8.specificity), t8$ == null ? 0 : t8$), (t8$1 = (t8$0 = this.children, t8$0 == null ? null : iterable_extensions$['IterableIntegerExtension|get#sum'](t8$0[S.$map](core.int, dart.fn(child => {
            if (child == null) dart.nullFailed(I[16], 67, 25, "child");
            return child.specificity;
          }, T$.MatcherToint())))), t8$1 == null ? 0 : t8$1), (t8$3 = (t8$2 = this.lastChild, t8$2 == null ? null : t8$2.specificity), t8$3 == null ? 0 : t8$3), dart.notNull((t8$5 = (t8$4 = this.everyChild, t8$4 == null ? null : t8$4.specificity), t8$5 == null ? 0 : t8$5)) * 3, (t8$7 = (t8$6 = this.anyChild, t8$6 == null ? null : t8$6.specificity), t8$7 == null ? 0 : t8$7)])));
      }
      match(node) {
        if (!T.is(node)) return false;
        if (this.matchSelf != null && dart.nullCheck(this.matchSelf)(node) === false) return false;
        if (this.child != null) {
          if (node.children[S.$length] !== 1) return false;
          if (!dart.test(dart.nullCheck(this.child).match(node.children[S.$first]))) return false;
        }
        if (this.children != null) {
          if (dart.nullCheck(this.children)[S.$length] != node.children[S.$length]) return false;
          for (let index = 0; index < dart.notNull(node.children[S.$length]); index = index + 1) {
            if (!dart.test(dart.nullCheck(this.children)[S.$_get](index).match(node.children[S.$_get](index)))) return false;
          }
        }
        if (this.firstChild != null) {
          if (dart.test(node.children[S.$isEmpty])) return false;
          if (!dart.test(dart.nullCheck(this.firstChild).match(node.children[S.$first]))) return false;
        }
        if (this.lastChild != null) {
          if (dart.test(node.children[S.$isEmpty])) return false;
          if (!dart.test(dart.nullCheck(this.lastChild).match(node.children[S.$last]))) return false;
        }
        if (this.everyChild != null && !dart.test(node.children[S.$every](dart.bind(dart.nullCheck(this.everyChild), 'match')))) {
          return false;
        }
        if (this.anyChild != null && !dart.test(node.children[S.$any](dart.bind(dart.nullCheck(this.anyChild), 'match')))) return false;
        return true;
      }
    }
    (NodeMatcher.new = function(opts) {
      let matchSelf = opts && 'matchSelf' in opts ? opts.matchSelf : null;
      let selfSpecificity = opts && 'selfSpecificity' in opts ? opts.selfSpecificity : 100;
      if (selfSpecificity == null) dart.nullFailed(I[16], 52, 10, "selfSpecificity");
      let child = opts && 'child' in opts ? opts.child : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let firstChild = opts && 'firstChild' in opts ? opts.firstChild : null;
      let lastChild = opts && 'lastChild' in opts ? opts.lastChild : null;
      let everyChild = opts && 'everyChild' in opts ? opts.everyChild : null;
      let anyChild = opts && 'anyChild' in opts ? opts.anyChild : null;
      this[S.matchSelf] = matchSelf;
      this[S.selfSpecificity] = selfSpecificity;
      this[S.child] = child;
      this[S.children] = children;
      this[S.firstChild] = firstChild;
      this[S.lastChild] = lastChild;
      this[S.everyChild] = everyChild;
      this[S.anyChild] = anyChild;
      NodeMatcher.__proto__.new.call(this);
      ;
    }).prototype = NodeMatcher.prototype;
    dart.addTypeTests(NodeMatcher);
    NodeMatcher.prototype[_is_NodeMatcher_default] = true;
    dart.addTypeCaches(NodeMatcher);
    dart.setMethodSignature(NodeMatcher, () => ({
      __proto__: dart.getMethods(NodeMatcher.__proto__),
      match: dart.fnType(core.bool, [dart.nullable(syntax_tree.GreenNode)])
    }));
    dart.setGetterSignature(NodeMatcher, () => ({
      __proto__: dart.getGetters(NodeMatcher.__proto__),
      specificity: core.int
    }));
    dart.setLibraryUri(NodeMatcher, I[17]);
    dart.setFieldSignature(NodeMatcher, () => ({
      __proto__: dart.getFields(NodeMatcher.__proto__),
      matchSelf: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T]))),
      selfSpecificity: dart.finalFieldType(core.int),
      child: dart.finalFieldType(dart.nullable(matcher.Matcher)),
      children: dart.finalFieldType(dart.nullable(core.List$(matcher.Matcher))),
      firstChild: dart.finalFieldType(dart.nullable(matcher.Matcher)),
      lastChild: dart.finalFieldType(dart.nullable(matcher.Matcher)),
      everyChild: dart.finalFieldType(dart.nullable(matcher.Matcher)),
      anyChild: dart.finalFieldType(dart.nullable(matcher.Matcher))
    }));
    return NodeMatcher;
  });
  matcher.NodeMatcher = matcher.NodeMatcher$();
  dart.addTypeTests(matcher.NodeMatcher, _is_NodeMatcher_default);
  matcher.isA = function isA(T, opts) {
    let matchSelf = opts && 'matchSelf' in opts ? opts.matchSelf : null;
    let selfSpecificity = opts && 'selfSpecificity' in opts ? opts.selfSpecificity : 100;
    if (selfSpecificity == null) dart.nullFailed(I[16], 105, 7, "selfSpecificity");
    let child = opts && 'child' in opts ? opts.child : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let firstChild = opts && 'firstChild' in opts ? opts.firstChild : null;
    let lastChild = opts && 'lastChild' in opts ? opts.lastChild : null;
    let everyChild = opts && 'everyChild' in opts ? opts.everyChild : null;
    let anyChild = opts && 'anyChild' in opts ? opts.anyChild : null;
    return new (matcher.NodeMatcher$(T)).new({matchSelf: matchSelf, selfSpecificity: selfSpecificity, child: child, children: children, firstChild: firstChild, lastChild: lastChild, everyChild: everyChild, anyChild: anyChild});
  };
  dart.defineLazy(matcher, {
    /*matcher.isNull*/get isNull() {
      return C[86] || CT.C86;
    }
  }, false);
  functions._equationRowNodeEncoderFun = function _equationRowNodeEncoderFun(node) {
    if (node == null) dart.nullFailed(I[18], 62, 51, "node");
    return new encoder$.EquationRowTexEncodeResult.new(syntax_tree.EquationRowNode.as(node).children[S.$map](encoder.EncodeResult, C[87] || CT.C87)[S.$toList]({growable: false}));
  };
  functions._accentEncoder = function _accentEncoder(node) {
    if (node == null) dart.nullFailed(I[19], 3, 39, "node");
    let accentNode = accent$.AccentNode.as(node);
    let commandCandidates = katex_base.accentCommandMapping[S.$entries][S.$where](dart.fn(entry => {
      if (entry == null) dart.nullFailed(I[19], 7, 15, "entry");
      return entry.value == accentNode.label;
    }, T$.MapEntryOfString$StringTobool()))[S.$map](core.String, dart.fn(entry => {
      if (entry == null) dart.nullFailed(I[19], 8, 13, "entry");
      return entry.key;
    }, T$.MapEntryOfString$StringToString()))[S.$toList]({growable: false});
    let textCommandCandidates = commandCandidates[S.$where](dart.fn(candidate => {
      let t8;
      if (candidate == null) dart.nullFailed(I[19], 12, 15, "candidate");
      return (t8 = functions$.functions[S.$_get](candidate), t8 == null ? null : t8.allowedInText) === true;
    }, T$.StringTobool()));
    let mathCommandCandidates = commandCandidates[S.$where](dart.fn(candidate => {
      let t8;
      if (candidate == null) dart.nullFailed(I[19], 15, 15, "candidate");
      return (t8 = functions$.functions[S.$_get](candidate), t8 == null ? null : t8.allowedInMath) === true;
    }, T$.StringTobool()));
    if (dart.test(commandCandidates[S.$isEmpty])) {
      return new encoder.NonStrictEncodeResult.new("unknown accent", "Unrecognized accent symbol encountered during TeX encoding: " + dart.str(unicode_literal.unicodeLiteral(accentNode.label)), encoder$.encodeTex(node.children[S.$first]));
    }
    function isCommandMatched(command) {
      if (command == null) dart.nullFailed(I[19], 26, 32, "command");
      return accentNode.isStretchy === !dart.test(katex_base.nonStretchyAccents.contains(command)) && accentNode.isShifty === (!dart.test(accentNode.isStretchy) || dart.test(katex_base.shiftyAccents.contains(command)));
    }
    dart.fn(isCommandMatched, T$.StringTobool());
    let mathCommand = iterable_extensions$['IterableExtension|firstWhereOrNull'](core.String, mathCommandCandidates, isCommandMatched);
    let math = mathCommand != null ? new encoder$.TexCommandEncodeResult.new({command: mathCommand, args: node.children}) : iterable_extensions$['IterableExtension|get#firstOrNull'](core.String, mathCommandCandidates) != null ? new encoder.NonStrictEncodeResult.new("imprecise accent", "No strict match for accent symbol under math mode: " + dart.str(unicode_literal.unicodeLiteral(accentNode.label)) + ", " + (dart.test(accentNode.isStretchy) ? "" : "not ") + "stretchy and " + (dart.test(accentNode.isShifty) ? "" : "not ") + "shifty", new encoder$.TexCommandEncodeResult.new({command: mathCommandCandidates[S.$first], args: node.children})) : new encoder.NonStrictEncodeResult.new("unknown accent", "No strict match for accent symbol under math mode: " + dart.str(unicode_literal.unicodeLiteral(accentNode.label)) + ", " + (dart.test(accentNode.isStretchy) ? "" : "not ") + "stretchy and " + (dart.test(accentNode.isShifty) ? "" : "not ") + "shifty", new encoder$.TexCommandEncodeResult.new({command: commandCandidates[S.$first], args: node.children}));
    let textCommand = accentNode.isStretchy === false && accentNode.isShifty === true ? iterable_extensions$['IterableExtension|get#firstOrNull'](core.String, textCommandCandidates) : null;
    let text = textCommand != null ? new encoder$.TexCommandEncodeResult.new({command: textCommand, args: node.children}) : iterable_extensions$['IterableExtension|get#firstOrNull'](core.String, textCommandCandidates) != null ? new encoder.NonStrictEncodeResult.new("imprecise accent", "No strict match for accent symbol under text mode: " + dart.str(unicode_literal.unicodeLiteral(accentNode.label)) + ", " + (dart.test(accentNode.isStretchy) ? "" : "not ") + "stretchy and " + (dart.test(accentNode.isShifty) ? "" : "not ") + "shifty", new encoder$.TexCommandEncodeResult.new({command: textCommandCandidates[S.$first], args: node.children})) : new encoder.NonStrictEncodeResult.new("unknown accent", "No strict match for accent symbol under text mode: " + dart.str(unicode_literal.unicodeLiteral(accentNode.label)) + ", " + (dart.test(accentNode.isStretchy) ? "" : "not ") + "stretchy and " + (dart.test(accentNode.isShifty) ? "" : "not ") + "shifty", new encoder$.TexCommandEncodeResult.new({command: commandCandidates[S.$first], args: node.children}));
    return new encoder$.ModeDependentEncodeResult.new({math: math, text: text});
  };
  functions._accentUnderEncoder = function _accentUnderEncoder(node) {
    let t8;
    if (node == null) dart.nullFailed(I[20], 3, 44, "node");
    let accentNode = accent_under.AccentUnderNode.as(node);
    let label = accentNode.label;
    let command = (t8 = iterable_extensions$['IterableExtension|firstWhereOrNull'](T$.MapEntryOfString$String(), katex_base.accentUnderMapping[S.$entries], dart.fn(entry => {
      if (entry == null) dart.nullFailed(I[20], 7, 26, "entry");
      return entry.value == label;
    }, T$.MapEntryOfString$StringTobool())), t8 == null ? null : t8.key);
    return command == null ? new encoder.NonStrictEncodeResult.new("unknown accent_under", "No strict match for accent_under symbol under math mode: " + dart.str(unicode_literal.unicodeLiteral(accentNode.label))) : new encoder$.TexCommandEncodeResult.new({command: command, args: accentNode.children});
  };
  functions._fracEncoder = function _fracEncoder(node) {
    if (node == null) dart.nullFailed(I[21], 3, 37, "node");
    let fracNode = frac$.FracNode.as(node);
    if (fracNode.barSize == null) {
      if (dart.test(fracNode.continued)) {
        return new encoder$.TexCommandEncodeResult.new({command: "\\cfrac", args: fracNode.children});
      } else {
        return new encoder$.TexCommandEncodeResult.new({command: "\\frac", args: fracNode.children});
      }
    } else {
      return new encoder$.TexCommandEncodeResult.new({command: "\\genfrac", args: (() => {
          let t8 = [null, null, fracNode.barSize, null];
          t8[S.$addAll](fracNode.children);
          return t8;
        })()});
    }
  };
  functions._functionEncoder = function _functionEncoder(node) {
    if (node == null) dart.nullFailed(I[22], 3, 41, "node");
    let functionNode = $function.FunctionNode.as(node);
    return new encoder.NonStrictEncodeResult.new("imprecise function encoding", "The default encoder for FunctionNode is used, which is imprecise. " + "Non better alternatives were found.", new encoder$.TransparentTexEncodeResult.new([new encoder$.TexCommandEncodeResult.new({command: "\\operatorname", args: [functionNode.functionName]}), functionNode.argument]));
  };
  functions._leftRightEncoder = function _leftRightEncoder(node) {
    if (node == null) dart.nullFailed(I[23], 3, 42, "node");
    let leftRightNode = left_right.LeftRightNode.as(node);
    let left = functions._delimEncoder(leftRightNode.leftDelim);
    let right = functions._delimEncoder(leftRightNode.rightDelim);
    let middles = leftRightNode.middle[S.$map](encoder.EncodeResult, C[88] || CT.C88)[S.$toList]({growable: false});
    return new encoder$.TransparentTexEncodeResult.new((() => {
      let t9 = ["\\left", left];
      t9[S.$addAll](leftRightNode.body[S.$first].children);
      for (let i = 1; i < dart.notNull(leftRightNode.body[S.$length]); i = i + 1)
        t9[S.$addAll]((() => {
          let t10 = ["\\middle", middles[S.$_get](i - 1)];
          t10[S.$addAll](leftRightNode.body[S.$_get](i).children);
          return t10;
        })());
      t9[S.$add]("\\right");
      t9[S.$add](right);
      return t9;
    })());
  };
  functions._delimEncoder = function _delimEncoder(delim) {
    if (delim == null) return new encoder.StaticEncodeResult.new(".");
    let result = functions._baseSymbolEncoder(delim, types.Mode.math);
    return result != null ? dart.test(katex_base.delimiterCommands[S.$contains](result)) ? new encoder.StaticEncodeResult.new(result) : new encoder.NonStrictEncodeResult.string("illegal delimiter", "Non-delimiter symbol " + dart.str(unicode_literal.unicodeLiteral(delim)) + " " + "occured as delimiter", result) : new encoder.NonStrictEncodeResult.string("unknown symbol", "Unrecognized symbol encountered during TeX encoding: " + dart.str(unicode_literal.unicodeLiteral(delim)) + " with mode Math", ".");
  };
  functions._multisciprtsEncoder = function _multisciprtsEncoder(node) {
    if (node == null) dart.nullFailed(I[24], 3, 45, "node");
    let scriptsNode = multiscripts$.MultiscriptsNode.as(node);
    return new encoder$.TexMultiscriptEncodeResult.new({base: scriptsNode.base, sub: scriptsNode.sub, sup: scriptsNode.sup, presub: scriptsNode.presub, presup: scriptsNode.presup});
  };
  functions._naryEncoder = function _naryEncoder(node) {
    if (node == null) dart.nullFailed(I[25], 3, 37, "node");
    let naryNode = nary_op.NaryOperatorNode.as(node);
    let command = functions._naryOperatorMapping[S.$_get](naryNode.operator);
    if (command == null) {
      return new encoder.NonStrictEncodeResult.new("unknown Nary opertor", "Unknown Nary opertor symbol " + dart.str(unicode_literal.unicodeLiteral(naryNode.operator)) + " " + "encountered during encoding.");
    }
    return new encoder$.TransparentTexEncodeResult.new([new encoder$.TexMultiscriptEncodeResult.new({base: naryNode.limits != null ? dart.str(command) + "\\" + (dart.nullCheck(naryNode.limits) ? "" : "no") + "limits" : command, sub: naryNode.lowerLimit, sup: naryNode.upperLimit}), naryNode.naryand]);
  };
  functions._sqrtEncoder = function _sqrtEncoder(node) {
    if (node == null) dart.nullFailed(I[26], 3, 37, "node");
    let sqrtNode = sqrt.SqrtNode.as(node);
    return new encoder$.TexCommandEncodeResult.new({command: "\\sqrt", args: sqrtNode.children});
  };
  functions._stretchyOpEncoder = function _stretchyOpEncoder(node) {
    let t11;
    if (node == null) dart.nullFailed(I[27], 3, 43, "node");
    let arrowNode = stretchy_op.StretchyOpNode.as(node);
    let command = (t11 = iterable_extensions$['IterableExtension|firstWhereOrNull'](T$.MapEntryOfString$String(), katex_base.arrowCommandMapping[S.$entries], dart.fn(entry => {
      if (entry == null) dart.nullFailed(I[27], 6, 26, "entry");
      return entry.value == arrowNode.symbol;
    }, T$.MapEntryOfString$StringTobool())), t11 == null ? null : t11.key);
    return command == null ? new encoder.NonStrictEncodeResult.new("unknown strechy_op", "No strict match for stretchy_op symbol under math mode: " + dart.str(unicode_literal.unicodeLiteral(arrowNode.symbol))) : new encoder$.TexCommandEncodeResult.new({command: command, args: [arrowNode.above, arrowNode.below]});
  };
  functions._styleEncoder = function _styleEncoder(node) {
    if (node == null) dart.nullFailed(I[28], 3, 38, "node");
    let styleNode = style$.StyleNode.as(node);
    return functions._optionsDiffEncode(styleNode.optionsDiff, styleNode.children);
  };
  functions._optionsDiffEncode = function _optionsDiffEncode(diff, children) {
    let t11, t11$, t11$0, t11$1;
    if (diff == null) dart.nullFailed(I[28], 8, 45, "diff");
    if (children == null) dart.nullFailed(I[28], 8, 65, "children");
    let res = new encoder$.TransparentTexEncodeResult.new(children);
    if (diff.size != null) {
      let sizeCommand = functions._sizeCommands[S.$_get](diff.size);
      res = new encoder$.TexModeCommandEncodeResult.new({command: (t11 = sizeCommand, t11 == null ? "\\tiny" : t11), children: [res]});
      if (sizeCommand == null) {
        res = new encoder.NonStrictEncodeResult.new("imprecise size", "Non-strict MethSize encountered during TeX encoding: " + dart.str(diff.size), res);
      }
    }
    if (diff.style != null) {
      let styleCommand = functions._styleCommands[S.$_get](diff.style);
      res = new encoder$.TexModeCommandEncodeResult.new({command: (t11$ = styleCommand, t11$ == null ? dart.nullCheck(functions._styleCommands[S.$_get](style$0['MathStyleExt|uncramp'](dart.nullCheck(diff.style)))) : t11$), children: [res]});
      if (styleCommand == null) {
        new encoder.NonStrictEncodeResult.new("imprecise style", "Non-strict MathStyle encountered during TeX encoding: " + dart.str(diff.style), res);
      }
    }
    if (diff.textFontOptions != null) {
      let command = (t11$0 = iterable_extensions$['IterableExtension|firstWhereOrNull'](T$.MapEntryOfString$PartialFontOptions(), font.texTextFontOptions[S.$entries], dart.fn(entry => {
        if (entry == null) dart.nullFailed(I[28], 45, 28, "entry");
        return dart.equals(entry.value, diff.textFontOptions);
      }, T$.MapEntryOfString$PartialFontOptionsTobool())), t11$0 == null ? null : t11$0.key);
      if (command == null) {
        res = new encoder.NonStrictEncodeResult.new("unknown font", "Unrecognized text font encountered during TeX encoding: " + dart.str(diff.textFontOptions), res);
      } else {
        res = new encoder$.TexCommandEncodeResult.new({command: command, args: [res]});
      }
    }
    if (diff.mathFontOptions != null) {
      let command = (t11$1 = iterable_extensions$['IterableExtension|firstWhereOrNull'](T$.MapEntryOfString$FontOptions(), font.texMathFontOptions[S.$entries], dart.fn(entry => {
        if (entry == null) dart.nullFailed(I[28], 64, 28, "entry");
        return dart.equals(entry.value, diff.mathFontOptions);
      }, T$.MapEntryOfString$FontOptionsTobool())), t11$1 == null ? null : t11$1.key);
      if (command == null) {
        res = new encoder.NonStrictEncodeResult.new("unknown font", "Unrecognized math font encountered during TeX encoding: " + dart.str(diff.mathFontOptions), res);
      } else {
        res = new encoder$.TexCommandEncodeResult.new({command: command, args: [res]});
      }
    }
    if (diff.color != null) {
      res = new encoder$.TexCommandEncodeResult.new({command: "\\textcolor", args: ["#" + dart.nullCheck(diff.color).value[S.$toRadixString](16)[S.$padLeft](6, "0"), res]});
    }
    return res;
  };
  functions._symbolEncoder = function _symbolEncoder(node) {
    let t11;
    if (node == null) dart.nullFailed(I[29], 3, 39, "node");
    let symbolNode = symbol$.SymbolNode.as(node);
    let symbol = symbolNode.symbol;
    let mode = symbolNode.mode;
    let encodeAsBaseSymbol = functions._baseSymbolEncoder(symbol, mode, symbolNode.overrideFont, symbolNode.atomType, symbolNode.overrideAtomType);
    if (encodeAsBaseSymbol != null) {
      return new encoder.StaticEncodeResult.new(encodeAsBaseSymbol);
    }
    if (mode == types.Mode.math && dart.test(symbols_composite.negatedOperatorSymbols[S.$containsKey](symbol))) {
      let encodeAsNegatedOp = functions._baseSymbolEncoder(dart.nullCheck(symbols_composite.negatedOperatorSymbols[S.$_get](symbol))[S.$_get](1), types.Mode.math);
      if (encodeAsNegatedOp != null) {
        return new encoder.StaticEncodeResult.new("\\not " + dart.str(encodeAsNegatedOp));
      }
    }
    return new encoder.NonStrictEncodeResult.new("unknown symbol", "Unrecognized symbol encountered during TeX encoding: " + dart.str(unicode_literal.unicodeLiteral(symbol)) + " with mode " + dart.str(mode) + " type " + dart.str(symbolNode.atomType) + " " + "font " + dart.str((t11 = symbolNode.overrideFont, t11 == null ? null : t11.fontName)), new encoder.StaticEncodeResult.new(symbolNode.symbol));
  };
  functions._baseSymbolEncoder = function _baseSymbolEncoder(symbol, mode, overrideFont = null, type = null, overrideType = null) {
    let t11;
    if (symbol == null) dart.nullFailed(I[29], 33, 35, "symbol");
    if (mode == null) dart.nullFailed(I[29], 33, 48, "mode");
    if (overrideFont == null && overrideType == null && symbol.length === 1) {
      if (dart.test(alpha_numeric.isAlphaNumericUnit(symbol)) || dart.test((C[89] || CT.C89).contains(symbol))) {
        return symbol;
      }
    }
    let candidates = T$.JSArrayOfMapEntryOfString$TexSymbolConfig().of([]);
    if (mode != types.Mode.text) {
      candidates[S.$addAll](dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$entries][S.$where](dart.fn(entry => {
        if (entry == null) dart.nullFailed(I[29], 50, 19, "entry");
        return entry.value.symbol == symbol;
      }, T$.MapEntryOfString$TexSymbolConfigTobool())));
    }
    if (mode != types.Mode.math) {
      candidates[S.$addAll](dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.text))[S.$entries][S.$where](dart.fn(entry => {
        if (entry == null) dart.nullFailed(I[29], 57, 19, "entry");
        return entry.value.symbol == symbol;
      }, T$.MapEntryOfString$TexSymbolConfigTobool())));
    }
    list_extensions['ListExtensions|sortBy'](T$.MapEntryOfString$TexSymbolConfig(), core.num, candidates, dart.fn(candidate => {
      let t11, t11$, t11$0, t11$1, t11$2, t11$3;
      if (candidate == null) dart.nullFailed(I[29], 60, 27, "candidate");
      let candidFont = candidate.value.font;
      let fontScore = dart.equals(candidFont, overrideFont) ? 1000 : ((t11 = candidFont, t11 == null ? null : t11.fontFamily) == (t11$ = overrideFont, t11$ == null ? null : t11$.fontFamily) ? 500 : 0) + ((t11$0 = candidFont, t11$0 == null ? null : t11$0.fontShape) == (t11$1 = overrideFont, t11$1 == null ? null : t11$1.fontShape) ? 300 : 0) + (dart.equals((t11$2 = candidFont, t11$2 == null ? null : t11$2.fontWeight), (t11$3 = overrideFont, t11$3 == null ? null : t11$3.fontWeight)) ? 200 : 0);
      let typeScore = candidate.value.type == overrideType ? 150 : candidate.value.type == type ? 100 : 0;
      let commandConciseness = (100 / candidate.key.length)[S.$truncate]() - 100 * dart.notNull(candidate.key[S.$runes][S.$where](dart.fn(point => {
        if (point == null) dart.nullFailed(I[29], 75, 25, "point");
        return dart.notNull(point) > 126 || dart.notNull(point) < 32;
      }, T$.intTobool()))[S.$length]);
      return fontScore + typeScore + commandConciseness;
    }, T$.MapEntryOfString$TexSymbolConfigToint()));
    t11 = iterable_extensions$['IterableExtension|get#lastOrNull'](T$.MapEntryOfString$TexSymbolConfig(), candidates);
    return t11 == null ? null : t11.key;
  };
  dart.defineLazy(functions, {
    /*functions.encoderFunctions*/get encoderFunctions() {
      return C[90] || CT.C90;
    },
    /*functions.optimizationEntries*/get optimizationEntries() {
      let t12;
      return t12 = (() => {
        let t11 = T$.ListOfOptimizationEntry().of(functions._fracOptimizationEntries);
        t11[S.$addAll](functions._functionOptimizationEntries);
        return t11;
      })(), (() => {
        list_extensions['ListExtensions|sortBy'](optimization$.OptimizationEntry, core.num, t12, dart.fn(entry => {
          if (entry == null) dart.nullFailed(I[18], 71, 17, "entry");
          return -dart.notNull(entry.priority);
        }, T$.OptimizationEntryToint()));
        return t12;
      })();
    },
    /*functions._fracOptimizationEntries*/get _fracOptimizationEntries() {
      return T$.JSArrayOfOptimizationEntry().of([new optimization$.OptimizationEntry.new({matcher: matcher.isA(style$.StyleNode, {matchSelf: dart.fn(node => {
              if (node == null) dart.nullFailed(I[21], 35, 19, "node");
              let style = node.optionsDiff.style;
              return style == style$0.MathStyle.display || style == style$0.MathStyle.text;
            }, T$.StyleNodeTobool()), child: matcher.isA(frac$.FracNode, {matchSelf: dart.fn(node => {
                if (node == null) dart.nullFailed(I[21], 40, 21, "node");
                return node.barSize == null;
              }, T$.FracNodeTobool()), selfSpecificity: 110})}), optimize: dart.fn(node => {
            if (node == null) dart.nullFailed(I[21], 44, 16, "node");
            let style = style$.StyleNode.as(node).optionsDiff.style;
            let continued = frac$.FracNode.as(node.children[S.$first]).continued;
            if (style == style$0.MathStyle.text && dart.test(continued)) return;
            let res = new encoder$.TexCommandEncodeResult.new({command: style == style$0.MathStyle.display ? dart.test(continued) ? "\\cfrac" : "\\dfrac" : "\\tfrac", args: node.children[S.$first].children});
            let remainingOptions = node.optionsDiff.removeStyle();
            encoder$.texEncodingCache._set(node, dart.test(remainingOptions.isEmpty) ? res : functions._optionsDiffEncode(remainingOptions, [res]));
          }, T$.GreenNodeTovoid())}), new optimization$.OptimizationEntry.new({matcher: matcher.isA(left_right.LeftRightNode, {matchSelf: dart.fn(node => {
              if (node == null) dart.nullFailed(I[21], 65, 19, "node");
              return node.leftDelim === "(" && node.rightDelim === ")";
            }, T$.LeftRightNodeTobool()), child: matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(frac$.FracNode, {matchSelf: dart.fn(node => {
                  let t12;
                  if (node == null) dart.nullFailed(I[21], 68, 23, "node");
                  return node.continued === false && (t12 = node.barSize, t12 == null ? null : t12.value) === 0;
                }, T$.FracNodeTobool())})})}), optimize: dart.fn(node => {
            if (node == null) dart.nullFailed(I[21], 73, 16, "node");
            encoder$.texEncodingCache._set(node, new encoder$.TexCommandEncodeResult.new({command: "\\binom", args: dart.nullCheck(dart.nullCheck(node.children[S.$first]).children[S.$first]).children}));
          }, T$.GreenNodeTovoid())}), new optimization$.OptimizationEntry.new({matcher: matcher.isA(style$.StyleNode, {matchSelf: dart.fn(node => {
              if (node == null) dart.nullFailed(I[21], 86, 19, "node");
              return node.optionsDiff.style != null;
            }, T$.StyleNodeTobool()), child: matcher.isA(left_right.LeftRightNode, {child: matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(frac$.FracNode, {matchSelf: dart.fn(node => {
                    if (node == null) dart.nullFailed(I[21], 90, 25, "node");
                    return node.continued === false;
                  }, T$.FracNodeTobool())})})})}), optimize: dart.fn(node => {
            let t13;
            if (node == null) dart.nullFailed(I[21], 95, 16, "node");
            let leftRight = left_right.LeftRightNode.as(node.children[S.$first]);
            let frac = frac$.FracNode.as(leftRight.children[S.$first].children[S.$first]);
            let res = new encoder$.TexCommandEncodeResult.new({command: "\\genfrac", args: (() => {
                let t12 = [leftRight.leftDelim == null ? null : new symbol$.SymbolNode.new({symbol: dart.nullCheck(leftRight.leftDelim)}), leftRight.rightDelim == null ? null : new symbol$.SymbolNode.new({symbol: dart.nullCheck(leftRight.rightDelim)}), frac.barSize, (t13 = style$.StyleNode.as(node).optionsDiff.style, t13 == null ? null : style$0['MathStyleExt|get#size'](t13))];
                t12[S.$addAll](frac.children);
                return t12;
              })()});
            let remainingOptions = node.optionsDiff.removeStyle();
            encoder$.texEncodingCache._set(node, dart.test(remainingOptions.isEmpty) ? res : functions._optionsDiffEncode(remainingOptions, [res]));
          }, T$.GreenNodeTovoid())}), new optimization$.OptimizationEntry.new({matcher: matcher.isA(style$.StyleNode, {matchSelf: dart.fn(node => {
              if (node == null) dart.nullFailed(I[21], 121, 19, "node");
              return node.optionsDiff.style != null;
            }, T$.StyleNodeTobool()), child: matcher.isA(frac$.FracNode, {matchSelf: dart.fn(node => {
                if (node == null) dart.nullFailed(I[21], 123, 21, "node");
                return node.continued === false;
              }, T$.FracNodeTobool())})}), optimize: dart.fn(node => {
            let t14;
            if (node == null) dart.nullFailed(I[21], 126, 16, "node");
            let frac = frac$.FracNode.as(node.children[S.$first]);
            let res = new encoder$.TexCommandEncodeResult.new({command: "\\genfrac", args: (() => {
                let t13 = [null, null, frac.barSize, (t14 = style$.StyleNode.as(node).optionsDiff.style, t14 == null ? null : style$0['MathStyleExt|get#size'](t14))];
                t13[S.$addAll](frac.children);
                return t13;
              })()});
            let remainingOptions = node.optionsDiff.removeStyle();
            encoder$.texEncodingCache._set(node, dart.test(remainingOptions.isEmpty) ? res : functions._optionsDiffEncode(remainingOptions, [res]));
          }, T$.GreenNodeTovoid())})]);
    },
    /*functions._functionOptimizationEntries*/get _functionOptimizationEntries() {
      return T$.JSArrayOfOptimizationEntry().of([new optimization$.OptimizationEntry.new({matcher: matcher.isA($function.FunctionNode, {firstChild: matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(style$.StyleNode, {matchSelf: dart.fn(node => {
                  if (node == null) dart.nullFailed(I[22], 24, 23, "node");
                  return dart.equals(node.optionsDiff.mathFontOptions, font.texMathFontOptions[S.$_get]("\\mathrm"));
                }, T$.StyleNodeTobool())})})}), optimize: dart.fn(node => {
            if (node == null) dart.nullFailed(I[22], 30, 16, "node");
            let functionNode = $function.FunctionNode.as(node);
            encoder$.texEncodingCache._set(node, new encoder$.TransparentTexEncodeResult.new([new encoder$.TexCommandEncodeResult.new({command: "\\operatorname", args: [functions._optionsDiffEncode(style$.StyleNode.as(functionNode.functionName.children[S.$first]).optionsDiff.removeMathFont(), functionNode.functionName.children[S.$first].children)]}), functionNode.argument]));
          }, T$.GreenNodeTovoid())}), new optimization$.OptimizationEntry.new({matcher: matcher.isA($function.FunctionNode, {firstChild: matcher.isA(syntax_tree.EquationRowNode, {everyChild: matcher.isA(symbol$.SymbolNode)})}), optimize: dart.fn(node => {
            if (node == null) dart.nullFailed(I[22], 52, 16, "node");
            let functionNode = $function.FunctionNode.as(node);
            let name = "\\" + dart.str(functionNode.functionName.children[S.$map](core.String, dart.fn(child => {
              if (child == null) dart.nullFailed(I[22], 55, 56, "child");
              return symbol$.SymbolNode.as(child).symbol;
            }, T$.GreenNodeToString()))[S.$join]());
            if (dart.test(katex_base.mathFunctions[S.$contains](name)) || dart.test(katex_base.mathLimits[S.$contains](name))) {
              encoder$.texEncodingCache._set(node, new encoder$.TexCommandEncodeResult.new({numArgs: 1, command: name, args: [functionNode.argument]}));
            }
          }, T$.GreenNodeTovoid())}), new optimization$.OptimizationEntry.new({matcher: matcher.isA($function.FunctionNode, {firstChild: matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(multiscripts$.MultiscriptsNode, {matchSelf: dart.fn(node => {
                  if (node == null) dart.nullFailed(I[22], 70, 23, "node");
                  return node.presub == null && node.presup == null && dart.test(matcher.isA(syntax_tree.EquationRowNode, {everyChild: matcher.isA(symbol$.SymbolNode)}).match(node.base));
                }, T$.MultiscriptsNodeTobool()), selfSpecificity: 500})})}), optimize: dart.fn(node => {
            if (node == null) dart.nullFailed(I[22], 80, 16, "node");
            let functionNode = $function.FunctionNode.as(node);
            let scriptsNode = multiscripts$.MultiscriptsNode.as(functionNode.functionName.children[S.$first]);
            let name = "\\" + dart.str(scriptsNode.base.children[S.$map](core.String, dart.fn(child => {
              if (child == null) dart.nullFailed(I[22], 85, 47, "child");
              return symbol$.SymbolNode.as(child).symbol;
            }, T$.GreenNodeToString()))[S.$join]());
            let isFunction = katex_base.mathFunctions[S.$contains](name);
            let isLimit = katex_base.mathLimits[S.$contains](name);
            if (dart.test(isFunction) || dart.test(isLimit)) {
              encoder$.texEncodingCache._set(node, new encoder$.TransparentTexEncodeResult.new([new encoder$.TexMultiscriptEncodeResult.new({base: name + (dart.test(isLimit) ? "\\nolimits" : ""), sub: scriptsNode.sub, sup: scriptsNode.sup}), functionNode.argument]));
            }
          }, T$.GreenNodeTovoid())}), new optimization$.OptimizationEntry.new({matcher: matcher.isA($function.FunctionNode, {firstChild: matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(over.OverNode, {firstChild: functions._nameMatcher.or(matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(under.UnderNode, {firstChild: functions._nameMatcher})}))}).or(matcher.isA(under.UnderNode, {firstChild: functions._nameMatcher.or(matcher.isA(syntax_tree.EquationRowNode, {child: matcher.isA(over.OverNode, {firstChild: functions._nameMatcher})}))}))})}), optimize: dart.fn(node => {
            if (node == null) dart.nullFailed(I[22], 116, 16, "node");
            let functionNode = $function.FunctionNode.as(node);
            let nameNode = functionNode.functionName.children[S.$first];
            let sub = null;
            let sup = null;
            let outer = nameNode;
            if (over.OverNode.is(outer)) {
              sup = outer.above;
              nameNode = outer.base;
              let inner = iterable_extensions$['IterableExtension|get#firstOrNull'](T$.GreenNodeN(), nameNode.children);
              if (under.UnderNode.is(inner)) {
                sub = inner.below;
                nameNode = inner.base;
              }
            } else if (under.UnderNode.is(outer)) {
              sub = outer.below;
              nameNode = outer.base;
              let inner = iterable_extensions$['IterableExtension|get#firstOrNull'](T$.GreenNodeN(), nameNode.children);
              if (over.OverNode.is(inner)) {
                sup = inner.above;
                nameNode = inner.base;
              }
            }
            let name = "\\" + dart.str(nameNode.children[S.$map](core.String, dart.fn(child => symbol$.SymbolNode.as(child).symbol, T$.GreenNodeNToString()))[S.$join]());
            let isFunction = katex_base.mathFunctions[S.$contains](name);
            let isLimit = katex_base.mathLimits[S.$contains](name);
            if (dart.test(isFunction) || dart.test(isLimit)) {
              encoder$.texEncodingCache._set(node, new encoder$.TransparentTexEncodeResult.new([new encoder$.TexMultiscriptEncodeResult.new({base: name + (dart.test(isFunction) ? "\\limits" : ""), sub: sub, sup: sup}), functionNode.argument]));
            }
          }, T$.GreenNodeTovoid())})]);
    },
    /*functions._nameMatcher*/get _nameMatcher() {
      return matcher.isA(syntax_tree.EquationRowNode, {everyChild: matcher.isA(symbol$.SymbolNode)});
    },
    /*functions._naryOperatorMapping*/get _naryOperatorMapping() {
      return (() => {
        let t14 = new (T$.IdentityMapOfString$String()).new();
        for (let t15 of katex_base.singleCharBigOps[S.$entries])
          t14[S.$_set](t15.key, t15.value);
        for (let t16 of katex_base.singleCharIntegrals[S.$entries])
          t14[S.$_set](t16.key, t16.value);
        return t14;
      })();
    },
    /*functions._styleCommands*/get _styleCommands() {
      return C[103] || CT.C103;
    },
    /*functions._sizeCommands*/get _sizeCommands() {
      return C[108] || CT.C108;
    }
  }, false);
  encoder.EncodeResult = class EncodeResult extends core.Object {};
  (encoder.EncodeResult.new = function() {
    ;
  }).prototype = encoder.EncodeResult.prototype;
  dart.addTypeTests(encoder.EncodeResult);
  dart.addTypeCaches(encoder.EncodeResult);
  dart.setLibraryUri(encoder.EncodeResult, I[30]);
  encoder.StaticEncodeResult = class StaticEncodeResult extends encoder.EncodeResult {
    get string() {
      return this[S.string];
    }
    set string(value) {
      super.string = value;
    }
    stringify(conf) {
      encoder.EncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[31], 17, 31, "conf");
      return this.string;
    }
  };
  (encoder.StaticEncodeResult.new = function(string) {
    if (string == null) dart.nullFailed(I[31], 12, 33, "string");
    this[S.string] = string;
    encoder.StaticEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder.StaticEncodeResult.prototype;
  dart.addTypeTests(encoder.StaticEncodeResult);
  dart.addTypeCaches(encoder.StaticEncodeResult);
  dart.setMethodSignature(encoder.StaticEncodeResult, () => ({
    __proto__: dart.getMethods(encoder.StaticEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.StaticEncodeResult, I[30]);
  dart.setFieldSignature(encoder.StaticEncodeResult, () => ({
    __proto__: dart.getFields(encoder.StaticEncodeResult.__proto__),
    string: dart.finalFieldType(core.String)
  }));
  encoder.NonStrictEncodeResult = class NonStrictEncodeResult extends encoder.EncodeResult {
    get errorCode() {
      return this[S.errorCode];
    }
    set errorCode(value) {
      super.errorCode = value;
    }
    get errorMsg() {
      return this[S.errorMsg];
    }
    set errorMsg(value) {
      super.errorMsg = value;
    }
    get placeHolder() {
      return this[S.placeHolder];
    }
    set placeHolder(value) {
      super.placeHolder = value;
    }
    stringify(conf) {
      encoder.EncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[31], 38, 31, "conf");
      conf.reportNonstrict(this.errorCode, this.errorMsg);
      return this.placeHolder.stringify(conf);
    }
  };
  (encoder.NonStrictEncodeResult.new = function(errorCode, errorMsg, placeHolder = C[120] || CT.C120) {
    if (errorCode == null) dart.nullFailed(I[31], 26, 10, "errorCode");
    if (errorMsg == null) dart.nullFailed(I[31], 27, 10, "errorMsg");
    if (placeHolder == null) dart.nullFailed(I[31], 28, 10, "placeHolder");
    this[S.errorCode] = errorCode;
    this[S.errorMsg] = errorMsg;
    this[S.placeHolder] = placeHolder;
    encoder.NonStrictEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder.NonStrictEncodeResult.prototype;
  (encoder.NonStrictEncodeResult.string = function(errorCode, errorMsg, placeHolder = "") {
    if (errorCode == null) dart.nullFailed(I[31], 32, 10, "errorCode");
    if (errorMsg == null) dart.nullFailed(I[31], 33, 10, "errorMsg");
    if (placeHolder == null) dart.nullFailed(I[31], 34, 12, "placeHolder");
    this[S.errorCode] = errorCode;
    this[S.errorMsg] = errorMsg;
    this[S.placeHolder] = new encoder.StaticEncodeResult.new(placeHolder);
    encoder.NonStrictEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder.NonStrictEncodeResult.prototype;
  dart.addTypeTests(encoder.NonStrictEncodeResult);
  dart.addTypeCaches(encoder.NonStrictEncodeResult);
  dart.setMethodSignature(encoder.NonStrictEncodeResult, () => ({
    __proto__: dart.getMethods(encoder.NonStrictEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.NonStrictEncodeResult, I[30]);
  dart.setFieldSignature(encoder.NonStrictEncodeResult, () => ({
    __proto__: dart.getFields(encoder.NonStrictEncodeResult.__proto__),
    errorCode: dart.finalFieldType(core.String),
    errorMsg: dart.finalFieldType(core.String),
    placeHolder: dart.finalFieldType(encoder.EncodeResult)
  }));
  encoder.EncodeConf = class EncodeConf extends core.Object {
    get strict() {
      return this[S.strict];
    }
    set strict(value) {
      super.strict = value;
    }
    get strictFun() {
      return this[S.strictFun];
    }
    set strictFun(value) {
      super.strictFun = value;
    }
    reportNonstrict(errorCode, errorMsg, token = null) {
      let t17, t17$;
      if (errorCode == null) dart.nullFailed(I[31], 59, 31, "errorCode");
      if (errorMsg == null) dart.nullFailed(I[31], 59, 49, "errorMsg");
      let strict = this.strict != settings.Strict.function ? this.strict : (t17$ = (t17 = this.strictFun, t17 == null ? null : t17(errorCode, errorMsg, token)), t17$ == null ? settings.Strict.warn : t17$);
      switch (strict) {
        case C[122] || CT.C122:
        {
          return;
        }
        case C[123] || CT.C123:
        {
          dart.throw(new exception.EncoderException.new("Nonstrict Tex encoding and strict mode is set to 'error': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]", token));
        }
        case C[121] || CT.C121:
        {
          log.warn("Nonstrict Tex encoding and strict mode is set to 'warn': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]");
          break;
        }
        default:
        {
          log.warn("Nonstrict Tex encoding and strict mode is set to " + "unrecognized '" + dart.str(strict) + "': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]");
        }
      }
    }
  };
  (encoder.EncodeConf.new = function(opts) {
    let strict = opts && 'strict' in opts ? opts.strict : C[121] || CT.C121;
    if (strict == null) dart.nullFailed(I[31], 55, 10, "strict");
    let strictFun = opts && 'strictFun' in opts ? opts.strictFun : null;
    this[S.strict] = strict;
    this[S.strictFun] = strictFun;
    ;
  }).prototype = encoder.EncodeConf.prototype;
  dart.addTypeTests(encoder.EncodeConf);
  dart.addTypeCaches(encoder.EncodeConf);
  dart.setMethodSignature(encoder.EncodeConf, () => ({
    __proto__: dart.getMethods(encoder.EncodeConf.__proto__),
    reportNonstrict: dart.fnType(dart.void, [core.String, core.String], [dart.dynamic])
  }));
  dart.setLibraryUri(encoder.EncodeConf, I[30]);
  dart.setFieldSignature(encoder.EncodeConf, () => ({
    __proto__: dart.getFields(encoder.EncodeConf.__proto__),
    strict: dart.finalFieldType(settings.Strict),
    strictFun: dart.finalFieldType(dart.nullable(dart.fnType(settings.Strict, [core.String, core.String], [dart.dynamic])))
  }));
  syntax_tree.GreenNode = class GreenNode extends core.Object {
    get capturedCursor() {
      return dart.notNull(this.editingWidth) - 1;
    }
    getRange(pos) {
      if (pos == null) dart.nullFailed(I[33], 292, 26, "pos");
      return new ui.TextRange.new({start: dart.notNull(pos) + 1, end: dart.notNull(pos) + dart.notNull(this.capturedCursor)});
    }
    toJson() {
      return new (T$.IdentityMapOfString$ObjectN()).from(["type", dart.toString(this[S.$runtimeType])]);
    }
  };
  (syntax_tree.GreenNode.new = function() {
    this[S._oldOptions] = null;
    this[S._oldBuildResult] = null;
    this[S._oldChildBuildResults] = null;
    ;
  }).prototype = syntax_tree.GreenNode.prototype;
  dart.addTypeTests(syntax_tree.GreenNode);
  dart.addTypeCaches(syntax_tree.GreenNode);
  dart.setMethodSignature(syntax_tree.GreenNode, () => ({
    __proto__: dart.getMethods(syntax_tree.GreenNode.__proto__),
    getRange: dart.fnType(ui.TextRange, [core.int]),
    toJson: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setGetterSignature(syntax_tree.GreenNode, () => ({
    __proto__: dart.getGetters(syntax_tree.GreenNode.__proto__),
    capturedCursor: core.int
  }));
  dart.setLibraryUri(syntax_tree.GreenNode, I[34]);
  dart.setFieldSignature(syntax_tree.GreenNode, () => ({
    __proto__: dart.getFields(syntax_tree.GreenNode.__proto__),
    [S._oldOptions]: dart.fieldType(dart.nullable(options$.MathOptions)),
    [S._oldBuildResult]: dart.fieldType(dart.nullable(syntax_tree.BuildResult)),
    [S._oldChildBuildResults]: dart.fieldType(dart.nullable(core.List$(dart.nullable(syntax_tree.BuildResult))))
  }));
  encoder$.TexEncoder = class TexEncoder extends convert.Converter$(syntax_tree.GreenNode, core.String) {
    convert(input) {
      syntax_tree.GreenNode.as(input);
      if (input == null) dart.nullFailed(I[32], 18, 28, "input");
      return encoder$['TexEncoderExt|encodeTeX'](input);
    }
  };
  (encoder$.TexEncoder.new = function() {
    encoder$.TexEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder$.TexEncoder.prototype;
  dart.addTypeTests(encoder$.TexEncoder);
  dart.addTypeCaches(encoder$.TexEncoder);
  dart.setMethodSignature(encoder$.TexEncoder, () => ({
    __proto__: dart.getMethods(encoder$.TexEncoder.__proto__),
    convert: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder$.TexEncoder, I[35]);
  encoder$.TexEncodeConf = class TexEncodeConf extends encoder.EncodeConf {
    get mode() {
      return this[S.mode];
    }
    set mode(value) {
      super.mode = value;
    }
    get removeRowBracket() {
      return this[S.removeRowBracket];
    }
    set removeRowBracket(value) {
      super.removeRowBracket = value;
    }
    math() {
      if (this.mode == types.Mode.math && !dart.test(this.removeRowBracket)) return this;
      return this.copyWith({mode: types.Mode.math, removeRowBracket: false});
    }
    mathParam() {
      if (this.mode == types.Mode.math && dart.test(this.removeRowBracket)) return this;
      return this.copyWith({mode: types.Mode.math, removeRowBracket: true});
    }
    text() {
      if (this.mode == types.Mode.text && !dart.test(this.removeRowBracket)) return this;
      return this.copyWith({mode: types.Mode.text, removeRowBracket: false});
    }
    textParam() {
      if (this.mode == types.Mode.text && dart.test(this.removeRowBracket)) return this;
      return this.copyWith({mode: types.Mode.text, removeRowBracket: true});
    }
    param() {
      if (dart.test(this.removeRowBracket)) return this;
      return this.copyWith({removeRowBracket: true});
    }
    ord() {
      if (!dart.test(this.removeRowBracket)) return this;
      return this.copyWith({removeRowBracket: false});
    }
    copyWith(opts) {
      let t17, t17$, t17$0, t17$1;
      let mode = opts && 'mode' in opts ? opts.mode : null;
      let removeRowBracket = opts && 'removeRowBracket' in opts ? opts.removeRowBracket : null;
      let strict = opts && 'strict' in opts ? opts.strict : null;
      let strictFun = opts && 'strictFun' in opts ? opts.strictFun : null;
      return new encoder$.TexEncodeConf.new({mode: (t17 = mode, t17 == null ? this.mode : t17), removeRowBracket: (t17$ = removeRowBracket, t17$ == null ? this.removeRowBracket : t17$), strict: (t17$0 = strict, t17$0 == null ? this.strict : t17$0), strictFun: (t17$1 = strictFun, t17$1 == null ? this.strictFun : t17$1)});
    }
  };
  (encoder$.TexEncodeConf.new = function(opts) {
    let mode = opts && 'mode' in opts ? opts.mode : C[124] || CT.C124;
    if (mode == null) dart.nullFailed(I[32], 62, 10, "mode");
    let removeRowBracket = opts && 'removeRowBracket' in opts ? opts.removeRowBracket : false;
    if (removeRowBracket == null) dart.nullFailed(I[32], 63, 10, "removeRowBracket");
    let strict = opts && 'strict' in opts ? opts.strict : C[121] || CT.C121;
    if (strict == null) dart.nullFailed(I[32], 64, 12, "strict");
    let strictFun = opts && 'strictFun' in opts ? opts.strictFun : null;
    this[S.mode] = mode;
    this[S.removeRowBracket] = removeRowBracket;
    encoder$.TexEncodeConf.__proto__.new.call(this, {strict: strict, strictFun: strictFun});
    ;
  }).prototype = encoder$.TexEncodeConf.prototype;
  dart.addTypeTests(encoder$.TexEncodeConf);
  dart.addTypeCaches(encoder$.TexEncodeConf);
  dart.setMethodSignature(encoder$.TexEncodeConf, () => ({
    __proto__: dart.getMethods(encoder$.TexEncodeConf.__proto__),
    math: dart.fnType(encoder$.TexEncodeConf, []),
    mathParam: dart.fnType(encoder$.TexEncodeConf, []),
    text: dart.fnType(encoder$.TexEncodeConf, []),
    textParam: dart.fnType(encoder$.TexEncodeConf, []),
    param: dart.fnType(encoder$.TexEncodeConf, []),
    ord: dart.fnType(encoder$.TexEncodeConf, []),
    copyWith: dart.fnType(encoder$.TexEncodeConf, [], {mode: dart.nullable(types.Mode), removeRowBracket: dart.nullable(core.bool), strict: dart.nullable(settings.Strict), strictFun: dart.nullable(dart.fnType(settings.Strict, [core.String, core.String], [dart.dynamic]))}, {})
  }));
  dart.setLibraryUri(encoder$.TexEncodeConf, I[35]);
  dart.setFieldSignature(encoder$.TexEncodeConf, () => ({
    __proto__: dart.getFields(encoder$.TexEncodeConf.__proto__),
    mode: dart.finalFieldType(types.Mode),
    removeRowBracket: dart.finalFieldType(core.bool)
  }));
  dart.defineLazy(encoder$.TexEncodeConf, {
    /*encoder$.TexEncodeConf.mathConf*/get mathConf() {
      return C[125] || CT.C125;
    },
    /*encoder$.TexEncodeConf.mathParamConf*/get mathParamConf() {
      return C[126] || CT.C126;
    },
    /*encoder$.TexEncodeConf.textConf*/get textConf() {
      return C[127] || CT.C127;
    },
    /*encoder$.TexEncodeConf.textParamConf*/get textParamConf() {
      return C[129] || CT.C129;
    }
  }, false);
  encoder$.TexCommandEncodeResult = class TexCommandEncodeResult extends encoder.EncodeResult {
    get command() {
      return this[S.command];
    }
    set command(value) {
      super.command = value;
    }
    get args() {
      return this[S.args];
    }
    set args(value) {
      super.args = value;
    }
    get spec() {
      let t18;
      if (!dart.test(this[S.__TexCommandEncodeResult_spec_isSet])) {
        let t17 = dart.nullCheck(functions$.functions[S.$_get](this.command));
        if (dart.test(this[S.__TexCommandEncodeResult_spec_isSet])) dart.throw(new _internal.LateError.fieldADI("spec"));
        this[S.__TexCommandEncodeResult_spec] = t17;
        this[S.__TexCommandEncodeResult_spec_isSet] = true;
      }
      t18 = this[S.__TexCommandEncodeResult_spec];
      return t18;
    }
    get numArgs() {
      let t19, t19$;
      if (!dart.test(this[S.__TexCommandEncodeResult_numArgs_isSet])) {
        let t18 = (t19 = this[S._numArgs], t19 == null ? this.spec.numArgs : t19);
        if (dart.test(this[S.__TexCommandEncodeResult_numArgs_isSet])) dart.throw(new _internal.LateError.fieldADI("numArgs"));
        this[S.__TexCommandEncodeResult_numArgs] = t18;
        this[S.__TexCommandEncodeResult_numArgs_isSet] = true;
      }
      t19$ = this[S.__TexCommandEncodeResult_numArgs];
      return t19$;
    }
    get numOptionalArgs() {
      let t20, t20$;
      if (!dart.test(this[S.__TexCommandEncodeResult_numOptionalArgs_isSet])) {
        let t19 = (t20 = this[S._numOptionalArgs], t20 == null ? this.spec.numOptionalArgs : t20);
        if (dart.test(this[S.__TexCommandEncodeResult_numOptionalArgs_isSet])) dart.throw(new _internal.LateError.fieldADI("numOptionalArgs"));
        this[S.__TexCommandEncodeResult_numOptionalArgs] = t19;
        this[S.__TexCommandEncodeResult_numOptionalArgs_isSet] = true;
      }
      t20$ = this[S.__TexCommandEncodeResult_numOptionalArgs];
      return t20$;
    }
    get argModes() {
      let t21, t21$;
      if (!dart.test(this[S.__TexCommandEncodeResult_argModes_isSet])) {
        let t20 = (t21 = this.spec.argModes, t21 == null ? T$.ListOfModeN().filled(dart.notNull(this.numArgs) + dart.notNull(this.numOptionalArgs), null, {growable: false}) : t21);
        if (dart.test(this[S.__TexCommandEncodeResult_argModes_isSet])) dart.throw(new _internal.LateError.fieldADI("argModes"));
        this[S.__TexCommandEncodeResult_argModes] = t20;
        this[S.__TexCommandEncodeResult_argModes_isSet] = true;
      }
      t21$ = this[S.__TexCommandEncodeResult_argModes];
      return t21$;
    }
    stringify(conf) {
      encoder$.TexEncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[32], 178, 34, "conf");
      if (!(dart.notNull(this.numArgs) >= dart.notNull(this.numOptionalArgs))) dart.assertFailed(null, I[32], 179, 12, "this.numArgs >= this.numOptionalArgs");
      if (!dart.test(this.spec.allowedInMath) && conf.mode == types.Mode.math) {
        conf.reportNonstrict("command mode mismatch", "Text-only command " + dart.str(this.command) + " occured in math encoding enviroment");
      }
      if (!dart.test(this.spec.allowedInText) && conf.mode == types.Mode.text) {
        conf.reportNonstrict("command mode mismatch", "Math-only command " + dart.str(this.command) + " occured in text encoding environment");
      }
      let argString = T$.IterableOfString().generate(dart.notNull(this.numArgs) + dart.notNull(this.numOptionalArgs), dart.fn(index => {
        let t21;
        if (index == null) dart.nullFailed(I[32], 190, 8, "index");
        let mode = (t21 = this.argModes[S.$_get](index), t21 == null ? conf.mode : t21);
        let string = encoder$._handleArg(this.args[S.$_get](index), mode == types.Mode.math ? conf.mathParam() : conf.textParam());
        if (dart.notNull(index) < dart.notNull(this.numOptionalArgs)) {
          return string[S.$isEmpty] ? "" : "[" + dart.str(string) + "]";
        } else {
          return "{" + dart.str(string) + "}";
        }
      }, T$.intToString()))[S.$join]();
      if (argString[S.$isNotEmpty] && (argString[S.$_get](0) === "[" || argString[S.$_get](0) === "{")) {
        return dart.str(this.command) + dart.str(argString);
      } else {
        return dart.str(this.command) + " " + dart.str(argString);
      }
    }
  };
  (encoder$.TexCommandEncodeResult.new = function(opts) {
    let command = opts && 'command' in opts ? opts.command : null;
    if (command == null) dart.nullFailed(I[32], 170, 19, "command");
    let args = opts && 'args' in opts ? opts.args : null;
    if (args == null) dart.nullFailed(I[32], 171, 19, "args");
    let numArgs = opts && 'numArgs' in opts ? opts.numArgs : null;
    let numOptionalArgs = opts && 'numOptionalArgs' in opts ? opts.numOptionalArgs : null;
    this[S.__TexCommandEncodeResult_spec] = null;
    this[S.__TexCommandEncodeResult_spec_isSet] = false;
    this[S.__TexCommandEncodeResult_numArgs] = null;
    this[S.__TexCommandEncodeResult_numArgs_isSet] = false;
    this[S.__TexCommandEncodeResult_numOptionalArgs] = null;
    this[S.__TexCommandEncodeResult_numOptionalArgs_isSet] = false;
    this[S.__TexCommandEncodeResult_argModes] = null;
    this[S.__TexCommandEncodeResult_argModes_isSet] = false;
    this[S.command] = command;
    this[S.args] = args;
    this[S._numArgs] = numArgs;
    this[S._numOptionalArgs] = numOptionalArgs;
    encoder$.TexCommandEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder$.TexCommandEncodeResult.prototype;
  dart.addTypeTests(encoder$.TexCommandEncodeResult);
  dart.addTypeCaches(encoder$.TexCommandEncodeResult);
  dart.setMethodSignature(encoder$.TexCommandEncodeResult, () => ({
    __proto__: dart.getMethods(encoder$.TexCommandEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(encoder$.TexCommandEncodeResult, () => ({
    __proto__: dart.getGetters(encoder$.TexCommandEncodeResult.__proto__),
    spec: functions$.FunctionSpec$(syntax_tree.GreenNode),
    numArgs: core.int,
    numOptionalArgs: core.int,
    argModes: core.List$(dart.nullable(types.Mode))
  }));
  dart.setLibraryUri(encoder$.TexCommandEncodeResult, I[35]);
  dart.setFieldSignature(encoder$.TexCommandEncodeResult, () => ({
    __proto__: dart.getFields(encoder$.TexCommandEncodeResult.__proto__),
    command: dart.finalFieldType(core.String),
    args: dart.finalFieldType(core.List),
    [S.__TexCommandEncodeResult_spec]: dart.fieldType(dart.nullable(functions$.FunctionSpec$(syntax_tree.GreenNode))),
    [S.__TexCommandEncodeResult_spec_isSet]: dart.fieldType(core.bool),
    [S._numArgs]: dart.finalFieldType(dart.nullable(core.int)),
    [S.__TexCommandEncodeResult_numArgs]: dart.fieldType(dart.nullable(core.int)),
    [S.__TexCommandEncodeResult_numArgs_isSet]: dart.fieldType(core.bool),
    [S._numOptionalArgs]: dart.finalFieldType(dart.nullable(core.int)),
    [S.__TexCommandEncodeResult_numOptionalArgs]: dart.fieldType(dart.nullable(core.int)),
    [S.__TexCommandEncodeResult_numOptionalArgs_isSet]: dart.fieldType(core.bool),
    [S.__TexCommandEncodeResult_argModes]: dart.fieldType(dart.nullable(core.List$(dart.nullable(types.Mode)))),
    [S.__TexCommandEncodeResult_argModes_isSet]: dart.fieldType(core.bool)
  }));
  encoder$.EquationRowTexEncodeResult = class EquationRowTexEncodeResult extends encoder.EncodeResult {
    get children() {
      return this[S.children$1];
    }
    set children(value) {
      super.children = value;
    }
    stringify(conf) {
      encoder$.TexEncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[32], 234, 34, "conf");
      let content = encoder$['TexEncoderJoinerExt|texJoin'](T$.IterableOfString().generate(this.children[S.$length], dart.fn(index => {
        if (index == null) dart.nullFailed(I[32], 235, 57, "index");
        let child = this.children[S.$_get](index);
        if (index === dart.notNull(this.children[S.$length]) - 1 && encoder$.TexModeCommandEncodeResult.is(child)) {
          return encoder$._handleArg(child, conf.param());
        }
        return encoder$._handleArg(child, conf.ord());
      }, T$.intToString())));
      if (conf.removeRowBracket === true) {
        return content;
      } else {
        return "{" + dart.str(content) + "}";
      }
    }
  };
  (encoder$.EquationRowTexEncodeResult.new = function(children) {
    if (children == null) dart.nullFailed(I[32], 231, 41, "children");
    this[S.children$1] = children;
    encoder$.EquationRowTexEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder$.EquationRowTexEncodeResult.prototype;
  dart.addTypeTests(encoder$.EquationRowTexEncodeResult);
  dart.addTypeCaches(encoder$.EquationRowTexEncodeResult);
  dart.setMethodSignature(encoder$.EquationRowTexEncodeResult, () => ({
    __proto__: dart.getMethods(encoder$.EquationRowTexEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder$.EquationRowTexEncodeResult, I[35]);
  dart.setFieldSignature(encoder$.EquationRowTexEncodeResult, () => ({
    __proto__: dart.getFields(encoder$.EquationRowTexEncodeResult.__proto__),
    children: dart.finalFieldType(core.List)
  }));
  encoder$.TransparentTexEncodeResult = class TransparentTexEncodeResult extends encoder.EncodeResult {
    get children() {
      return this[S.children$2];
    }
    set children(value) {
      super.children = value;
    }
    stringify(conf) {
      encoder$.TexEncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[32], 256, 34, "conf");
      return encoder$['TexEncoderJoinerExt|texJoin'](this.children[S.$map](core.String, dart.fn(child => encoder$._handleArg(child, conf.ord()), T$.dynamicToString())));
    }
  };
  (encoder$.TransparentTexEncodeResult.new = function(children) {
    if (children == null) dart.nullFailed(I[32], 253, 41, "children");
    this[S.children$2] = children;
    encoder$.TransparentTexEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder$.TransparentTexEncodeResult.prototype;
  dart.addTypeTests(encoder$.TransparentTexEncodeResult);
  dart.addTypeCaches(encoder$.TransparentTexEncodeResult);
  dart.setMethodSignature(encoder$.TransparentTexEncodeResult, () => ({
    __proto__: dart.getMethods(encoder$.TransparentTexEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder$.TransparentTexEncodeResult, I[35]);
  dart.setFieldSignature(encoder$.TransparentTexEncodeResult, () => ({
    __proto__: dart.getFields(encoder$.TransparentTexEncodeResult.__proto__),
    children: dart.finalFieldType(core.List)
  }));
  encoder$.ModeDependentEncodeResult = class ModeDependentEncodeResult extends encoder.EncodeResult {
    get text() {
      return this[S.text];
    }
    set text(value) {
      super.text = value;
    }
    get math() {
      return this[S.math];
    }
    set math(value) {
      super.math = value;
    }
    stringify(conf) {
      encoder$.TexEncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[32], 268, 34, "conf");
      return encoder$.ModeDependentEncodeResult._handleArg(conf.mode == types.Mode.math ? this.math : this.text, conf);
    }
    static _handleArg(arg, conf) {
      if (conf == null) dart.nullFailed(I[32], 271, 55, "conf");
      if (arg == null) return "";
      if (syntax_tree.GreenNode.is(arg)) return encoder$['TexEncoderExt|encodeTeX'](arg, {conf: conf});
      if (encoder.EncodeResult.is(arg)) return arg.stringify(conf);
      return dart.toString(arg);
    }
  };
  (encoder$.ModeDependentEncodeResult.new = function(opts) {
    let text = opts && 'text' in opts ? opts.text : null;
    let math = opts && 'math' in opts ? opts.math : null;
    this[S.text] = text;
    this[S.math] = math;
    encoder$.ModeDependentEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder$.ModeDependentEncodeResult.prototype;
  dart.addTypeTests(encoder$.ModeDependentEncodeResult);
  dart.addTypeCaches(encoder$.ModeDependentEncodeResult);
  dart.setMethodSignature(encoder$.ModeDependentEncodeResult, () => ({
    __proto__: dart.getMethods(encoder$.ModeDependentEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder$.ModeDependentEncodeResult, I[35]);
  dart.setFieldSignature(encoder$.ModeDependentEncodeResult, () => ({
    __proto__: dart.getFields(encoder$.ModeDependentEncodeResult.__proto__),
    text: dart.finalFieldType(dart.dynamic),
    math: dart.finalFieldType(dart.dynamic)
  }));
  encoder$.TexModeCommandEncodeResult = class TexModeCommandEncodeResult extends encoder.EncodeResult {
    get command() {
      return this[S.command$1];
    }
    set command(value) {
      super.command = value;
    }
    get children() {
      return this[S.children$3];
    }
    set children(value) {
      super.children = value;
    }
    stringify(conf) {
      encoder$.TexEncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[32], 288, 34, "conf");
      let content = encoder$['TexEncoderJoinerExt|texJoin'](T$.IterableOfString().generate(this.children[S.$length], dart.fn(index => {
        if (index == null) dart.nullFailed(I[32], 289, 57, "index");
        let child = this.children[S.$_get](index);
        if (index === dart.notNull(this.children[S.$length]) - 1 && encoder$.TexModeCommandEncodeResult.is(child)) {
          return encoder$._handleArg(child, conf.param());
        }
        return encoder$._handleArg(child, conf.ord());
      }, T$.intToString())));
      if (conf.removeRowBracket === true) {
        return dart.str(this.command) + " " + dart.str(content);
      } else {
        return "{" + dart.str(this.command) + " " + dart.str(content) + "}";
      }
    }
  };
  (encoder$.TexModeCommandEncodeResult.new = function(opts) {
    let command = opts && 'command' in opts ? opts.command : null;
    if (command == null) dart.nullFailed(I[32], 285, 22, "command");
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[32], 285, 45, "children");
    this[S.command$1] = command;
    this[S.children$3] = children;
    encoder$.TexModeCommandEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder$.TexModeCommandEncodeResult.prototype;
  dart.addTypeTests(encoder$.TexModeCommandEncodeResult);
  dart.addTypeCaches(encoder$.TexModeCommandEncodeResult);
  dart.setMethodSignature(encoder$.TexModeCommandEncodeResult, () => ({
    __proto__: dart.getMethods(encoder$.TexModeCommandEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder$.TexModeCommandEncodeResult, I[35]);
  dart.setFieldSignature(encoder$.TexModeCommandEncodeResult, () => ({
    __proto__: dart.getFields(encoder$.TexModeCommandEncodeResult.__proto__),
    command: dart.finalFieldType(core.String),
    children: dart.finalFieldType(core.List)
  }));
  encoder$.TexMultiscriptEncodeResult = class TexMultiscriptEncodeResult extends encoder.EncodeResult {
    get base() {
      return this[S.base];
    }
    set base(value) {
      super.base = value;
    }
    get sub() {
      return this[S.sub];
    }
    set sub(value) {
      super.sub = value;
    }
    get sup() {
      return this[S.sup];
    }
    set sup(value) {
      super.sup = value;
    }
    get presub() {
      return this[S.presub];
    }
    set presub(value) {
      super.presub = value;
    }
    get presup() {
      return this[S.presup];
    }
    set presup(value) {
      super.presup = value;
    }
    stringify(conf) {
      encoder$.TexEncodeConf.as(conf);
      if (conf == null) dart.nullFailed(I[32], 320, 34, "conf");
      if (conf.mode != types.Mode.math) {
        conf.reportNonstrict("command mode mismatch", "Sub/sup scripts occured in text encoding environment");
      }
      if (this.presub != null || this.presup != null) {
        conf.reportNonstrict("imprecise encoding", "Prescripts are not supported in vanilla KaTeX");
      }
      return encoder$['TexEncoderJoinerExt|texJoin']((() => {
        let t21 = T$.JSArrayOfString().of([]);
        if (this.presub != null || this.presup != null) t21[S.$add]("{}");
        if (this.presub != null) t21[S.$addAll](T$.JSArrayOfString().of(["_", encoder$._handleAndWrapArg(this.presub, conf.param())]));
        if (this.presup != null) t21[S.$addAll](T$.JSArrayOfString().of(["^", encoder$._handleAndWrapArg(this.presup, conf.param())]));
        t21[S.$add](encoder$._handleAndWrapArg(this.base, conf.param()));
        if (this.sub != null) t21[S.$addAll](T$.JSArrayOfString().of(["_", encoder$._handleAndWrapArg(this.sub, conf.param())]));
        if (this.sup != null) t21[S.$addAll](T$.JSArrayOfString().of(["^", encoder$._handleAndWrapArg(this.sup, conf.param())]));
        return t21;
      })());
    }
  };
  (encoder$.TexMultiscriptEncodeResult.new = function(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    let sub = opts && 'sub' in opts ? opts.sub : null;
    let sup = opts && 'sup' in opts ? opts.sup : null;
    let presub = opts && 'presub' in opts ? opts.presub : null;
    let presup = opts && 'presup' in opts ? opts.presup : null;
    this[S.base] = base;
    this[S.sub] = sub;
    this[S.sup] = sup;
    this[S.presub] = presub;
    this[S.presup] = presup;
    encoder$.TexMultiscriptEncodeResult.__proto__.new.call(this);
    ;
  }).prototype = encoder$.TexMultiscriptEncodeResult.prototype;
  dart.addTypeTests(encoder$.TexMultiscriptEncodeResult);
  dart.addTypeCaches(encoder$.TexMultiscriptEncodeResult);
  dart.setMethodSignature(encoder$.TexMultiscriptEncodeResult, () => ({
    __proto__: dart.getMethods(encoder$.TexMultiscriptEncodeResult.__proto__),
    stringify: dart.fnType(core.String, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder$.TexMultiscriptEncodeResult, I[35]);
  dart.setFieldSignature(encoder$.TexMultiscriptEncodeResult, () => ({
    __proto__: dart.getFields(encoder$.TexMultiscriptEncodeResult.__proto__),
    base: dart.finalFieldType(dart.dynamic),
    sub: dart.finalFieldType(dart.dynamic),
    sup: dart.finalFieldType(dart.dynamic),
    presub: dart.finalFieldType(dart.dynamic),
    presup: dart.finalFieldType(dart.dynamic)
  }));
  encoder$['TexEncoderExt|encodeTeX'] = function TexEncoderExt$124encodeTeX($this, opts) {
    if ($this == null) dart.nullFailed(I[32], 23, 10, "#this");
    let conf = opts && 'conf' in opts ? opts.conf : C[125] || CT.C125;
    if (conf == null) dart.nullFailed(I[32], 23, 35, "conf");
    return encoder$.encodeTex($this).stringify(conf);
  };
  encoder$['TexEncoderExt|get#encodeTeX'] = function TexEncoderExt$124get$35encodeTeX($this) {
    if ($this == null) dart.nullFailed(I[32], 23, 10, "#this");
    return dart.fn(opts => {
      let conf = opts && 'conf' in opts ? opts.conf : C[125] || CT.C125;
      if (conf == null) dart.nullFailed(I[32], 23, 35, "conf");
      return encoder$['TexEncoderExt|encodeTeX']($this, {conf: conf});
    }, T$.__ToString());
  };
  encoder$['ListTexEncoderExt|encodeTex'] = function ListTexEncoderExt$124encodeTex($this) {
    if ($this == null) dart.nullFailed(I[32], 29, 10, "#this");
    return encoder$['TexEncoderExt|encodeTeX'](syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow']($this), {conf: new encoder$.TexEncodeConf.new().mathParam()});
  };
  encoder$['ListTexEncoderExt|get#encodeTex'] = function ListTexEncoderExt$124get$35encodeTex($this) {
    if ($this == null) dart.nullFailed(I[32], 29, 10, "#this");
    return dart.fn(() => encoder$['ListTexEncoderExt|encodeTex']($this), T$.VoidToString());
  };
  encoder$.encodeTex = function encodeTex(node) {
    let t27, t26;
    if (node == null) dart.nullFailed(I[32], 33, 34, "node");
    let cachedRes = encoder$.texEncodingCache._get(node);
    if (cachedRes != null) return cachedRes;
    let optimization = iterable_extensions$['IterableExtension|firstWhereOrNull'](optimization$.OptimizationEntry, functions.optimizationEntries, dart.fn(entry => {
      if (entry == null) dart.nullFailed(I[32], 38, 26, "entry");
      return entry.matcher.match(node);
    }, T$.OptimizationEntryTobool()));
    if (optimization != null) {
      t26 = optimization;
      t27 = node;
      t26.optimize(t27);
      let cachedRes = encoder$.texEncodingCache._get(node);
      if (cachedRes != null) return cachedRes;
    }
    let type = dart.runtimeType(node);
    let encoderFunction = functions.encoderFunctions[S.$_get](type);
    if (encoderFunction == null) {
      return new encoder.NonStrictEncodeResult.new("unknown node type", "Unrecognized node type " + dart.str(type) + " encountered during encoding");
    }
    let encodeResult = encoderFunction(node);
    encoder$.texEncodingCache._set(node, encodeResult);
    return encodeResult;
  };
  encoder$._handleArg = function _handleArg(arg, conf) {
    if (conf == null) dart.nullFailed(I[32], 118, 43, "conf");
    if (arg == null) return "";
    if (encoder.EncodeResult.is(arg)) {
      return arg.stringify(conf);
    }
    if (syntax_tree.GreenNode.is(arg)) {
      return encoder$.encodeTex(arg).stringify(conf);
    }
    if (typeof arg == 'string') return arg;
    return dart.toString(arg);
  };
  encoder$._handleAndWrapArg = function _handleAndWrapArg(arg, conf) {
    if (conf == null) dart.nullFailed(I[32], 130, 50, "conf");
    let string = encoder$._handleArg(arg, conf);
    return string.length === 1 || dart.test(encoder$._isSingleSymbol(arg)) ? string : "{" + dart.str(string) + "}";
  };
  encoder$._isSingleSymbol = function _isSingleSymbol(arg) {
    while (true) {
      if (encoder$.TransparentTexEncodeResult.is(arg) && arg.children[S.$length] === 1) {
        arg = arg.children[S.$first];
      } else if (encoder$.EquationRowTexEncodeResult.is(arg) && arg.children[S.$length] === 1) {
        arg = arg.children[S.$first];
      } else if (syntax_tree.EquationRowNode.is(arg) && arg.children[S.$length] === 1) {
        arg = arg.children[S.$first];
      } else {
        break;
      }
    }
    if (typeof arg == 'string') return true;
    if (encoder.StaticEncodeResult.is(arg)) return true;
    return false;
  };
  encoder$['TexEncoderJoinerExt|texJoin'] = function TexEncoderJoinerExt$124texJoin($this) {
    let t27;
    if ($this == null) dart.nullFailed(I[32], 211, 10, "#this");
    let iterator = (t27 = $this[S.$iterator], (() => {
      t27.moveNext();
      return t27;
    })());
    let length = $this[S.$length];
    return T$.IterableOfString().generate(length, dart.fn(index => {
      let t27;
      if (index == null) dart.nullFailed(I[32], 214, 39, "index");
      if (index === dart.notNull(length) - 1) return iterator.current;
      let current = iterator.current;
      let next = (t27 = iterator, (() => {
        t27.moveNext();
        return t27;
      })()).current;
      if (current.length === 1 || next[S.$isNotEmpty] && !dart.test(alpha_numeric.isAlphaNumericUnit(next[S.$_get](0))) && next[S.$_get](0) !== "*" || current[S.$isNotEmpty] && current[S.$_get](current.length - 1) === "}") {
        return current;
      }
      return dart.str(current) + " ";
    }, T$.intToString()))[S.$join]();
  };
  encoder$['TexEncoderJoinerExt|get#texJoin'] = function TexEncoderJoinerExt$124get$35texJoin($this) {
    if ($this == null) dart.nullFailed(I[32], 211, 10, "#this");
    return dart.fn(() => encoder$['TexEncoderJoinerExt|texJoin']($this), T$.VoidToString());
  };
  dart.defineLazy(encoder$, {
    /*encoder$.texEncodingCache*/get texEncodingCache() {
      return new (T$.ExpandoOfEncodeResult()).new("Tex encoding results");
    }
  }, false);
  selection_manager.ExtraSelectionChangedCause = class ExtraSelectionChangedCause extends core.Object {
    toString() {
      return this[S._name$8];
    }
  };
  (selection_manager.ExtraSelectionChangedCause.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[1], 13, 6, "index");
    if (_name == null) dart.nullFailed(I[1], 13, 6, "_name");
    this.index = index;
    this[S._name$8] = _name;
    ;
  }).prototype = selection_manager.ExtraSelectionChangedCause.prototype;
  dart.addTypeTests(selection_manager.ExtraSelectionChangedCause);
  dart.addTypeCaches(selection_manager.ExtraSelectionChangedCause);
  dart.setLibraryUri(selection_manager.ExtraSelectionChangedCause, I[2]);
  dart.setFieldSignature(selection_manager.ExtraSelectionChangedCause, () => ({
    __proto__: dart.getFields(selection_manager.ExtraSelectionChangedCause.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$8]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(selection_manager.ExtraSelectionChangedCause, ['toString']);
  selection_manager.ExtraSelectionChangedCause.handle = C[130] || CT.C130;
  selection_manager.ExtraSelectionChangedCause.unfocus = C[131] || CT.C131;
  selection_manager.ExtraSelectionChangedCause.exterior = C[132] || CT.C132;
  selection_manager.ExtraSelectionChangedCause.values = C[133] || CT.C133;
  const _is_CursorTimerManagerMixin_default = Symbol('_is_CursorTimerManagerMixin_default');
  cursor_timer_manager.CursorTimerManagerMixin$ = dart.generic(T => {
    class CursorTimerManagerMixin extends selection_manager.SelectionManagerMixin$(T) {}
    CursorTimerManagerMixin[dart.mixinOn] = SelectionManagerMixin => class CursorTimerManagerMixin extends SelectionManagerMixin {
      get cursorBlinkOpacityController() {
        let t28;
        return dart.test(this[S.__CursorTimerManagerMixin_cursorBlinkOpacityController_isSet]) ? (t28 = this[S.__CursorTimerManagerMixin_cursorBlinkOpacityController], t28) : dart.throw(new _internal.LateError.fieldNI("cursorBlinkOpacityController"));
      }
      set cursorBlinkOpacityController(t28) {
        if (t28 == null) dart.nullFailed(I[36], 28, 28, "null");
        this[S.__CursorTimerManagerMixin_cursorBlinkOpacityController_isSet] = true;
        this[S.__CursorTimerManagerMixin_cursorBlinkOpacityController] = t28;
      }
      get [S._oldController$2]() {
        let t29;
        return dart.test(this[S.__CursorTimerManagerMixin__oldController_isSet]) ? (t29 = this[S.__CursorTimerManagerMixin__oldController], t29) : dart.throw(new _internal.LateError.fieldNI("_oldController"));
      }
      set [S._oldController$2](t29) {
        if (t29 == null) dart.nullFailed(I[36], 32, 23, "null");
        this[S.__CursorTimerManagerMixin__oldController_isSet] = true;
        this[S.__CursorTimerManagerMixin__oldController] = t29;
      }
      get [S._oldFocusNode$2]() {
        let t30;
        return dart.test(this[S.__CursorTimerManagerMixin__oldFocusNode_isSet]) ? (t30 = this[S.__CursorTimerManagerMixin__oldFocusNode], t30) : dart.throw(new _internal.LateError.fieldNI("_oldFocusNode"));
      }
      set [S._oldFocusNode$2](t30) {
        if (t30 == null) dart.nullFailed(I[36], 34, 18, "null");
        this[S.__CursorTimerManagerMixin__oldFocusNode_isSet] = true;
        this[S.__CursorTimerManagerMixin__oldFocusNode] = t30;
      }
      initState() {
        let t31, t31$;
        this.cursorBlinkOpacityController = new animation_controller.AnimationController.new({vsync: this, duration: cursor_timer_manager.CursorTimerManagerMixin._fadeDuration});
        super.initState();
        this[S._oldController$2] = (t31 = this.controller, (() => {
          t31.addListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
          return t31;
        })());
        this[S._oldFocusNode$2] = (t31$ = this.focusNode, (() => {
          t31$.addListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
          return t31$;
        })());
      }
      didUpdateWidget(oldWidget) {
        let t31, t31$;
        T.as(oldWidget);
        if (oldWidget == null) dart.nullFailed(I[36], 49, 34, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.controller, this[S._oldController$2])) {
          this[S._oldController$2].removeListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
          this[S._oldController$2] = (t31 = this.controller, (() => {
            t31.addListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
            return t31;
          })());
        }
        if (!dart.equals(this.focusNode, this[S._oldFocusNode$2])) {
          this[S._oldFocusNode$2].removeListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
          this[S._oldFocusNode$2] = (t31$ = this.focusNode, (() => {
            t31$.addListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
            return t31$;
          })());
        }
        this[S._startOrStopOrResetCursorTimerIfNeeded]();
      }
      dispose() {
        this[S._stopCursorTimer]();
        this[S._oldController$2].removeListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
        this[S._oldFocusNode$2].removeListener(dart.bind(this, S._startOrStopOrResetCursorTimerIfNeeded));
        super.dispose();
      }
      [S._cursorTick](timer) {
        if (timer == null) dart.nullFailed(I[36], 74, 26, "timer");
        this[S._targetCursorVisibility] = !dart.test(this[S._targetCursorVisibility]);
        let targetOpacity = dart.test(this[S._targetCursorVisibility]) ? 1.0 : 0.0;
        if (dart.test(this.cursorOpacityAnimates)) {
          this.cursorBlinkOpacityController.animateTo(targetOpacity, {curve: curves.Curves.easeOut});
        } else {
          this.cursorBlinkOpacityController.value = targetOpacity;
        }
      }
      [S._cursorWaitForStart](timer) {
        let t31;
        if (timer == null) dart.nullFailed(I[36], 92, 34, "timer");
        if (!dart.test(cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkHalfPeriod['>'](cursor_timer_manager.CursorTimerManagerMixin._fadeDuration))) dart.assertFailed(null, I[36], 93, 12, "_kCursorBlinkHalfPeriod > _fadeDuration");
        t31 = this[S._cursorTimer];
        t31 == null ? null : t31.cancel();
        this[S._cursorTimer] = async.Timer.periodic(cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkHalfPeriod, dart.bind(this, S._cursorTick));
      }
      [S._startCursorTimer]() {
        this[S._targetCursorVisibility] = true;
        this.cursorBlinkOpacityController.value = 1.0;
        if (dart.test(editable_text.EditableText.debugDeterministicCursor)) return;
        if (dart.test(this.cursorOpacityAnimates)) {
          this[S._cursorTimer] = async.Timer.periodic(cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkWaitForStart, dart.bind(this, S._cursorWaitForStart));
        } else {
          this[S._cursorTimer] = async.Timer.periodic(cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkHalfPeriod, dart.bind(this, S._cursorTick));
        }
      }
      [S._stopCursorTimer]() {
        let t31;
        t31 = this[S._cursorTimer];
        t31 == null ? null : t31.cancel();
        this[S._cursorTimer] = null;
        this[S._targetCursorVisibility] = false;
        this.cursorBlinkOpacityController.value = 0.0;
        if (dart.test(editable_text.EditableText.debugDeterministicCursor)) return;
        if (dart.test(this.cursorOpacityAnimates)) {
          this.cursorBlinkOpacityController.stop();
          this.cursorBlinkOpacityController.value = 0.0;
        }
      }
      [S._startOrStopOrResetCursorTimerIfNeeded]() {
        if (this.showCursor !== true) {
          this[S._stopCursorTimer]();
          return;
        }
        if (dart.test(this.hasFocus) && dart.test(this.controller.selection.isCollapsed)) {
          if (this[S._cursorTimer] == null) {
            this[S._startCursorTimer]();
          } else {
            this[S._stopCursorTimer]();
            this[S._startCursorTimer]();
          }
        } else if (this[S._cursorTimer] != null && (!dart.test(this.hasFocus) || !dart.test(this.controller.selection.isCollapsed))) {
          this[S._stopCursorTimer]();
        }
      }
      get cursorCurrentlyVisible() {
        return dart.notNull(this.cursorBlinkOpacityController.value) > 0;
      }
      get cursorBlinkInterval() {
        return cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkHalfPeriod;
      }
    };
    (CursorTimerManagerMixin[dart.mixinNew] = function() {
      this[S._cursorTimer] = null;
      this[S.__CursorTimerManagerMixin_cursorBlinkOpacityController] = null;
      this[S.__CursorTimerManagerMixin_cursorBlinkOpacityController_isSet] = false;
      this[S._targetCursorVisibility] = false;
      this[S.__CursorTimerManagerMixin__oldController] = null;
      this[S.__CursorTimerManagerMixin__oldController_isSet] = false;
      this[S.__CursorTimerManagerMixin__oldFocusNode] = null;
      this[S.__CursorTimerManagerMixin__oldFocusNode_isSet] = false;
    }).prototype = CursorTimerManagerMixin.prototype;
    dart.addTypeTests(CursorTimerManagerMixin);
    CursorTimerManagerMixin.prototype[_is_CursorTimerManagerMixin_default] = true;
    dart.addTypeCaches(CursorTimerManagerMixin);
    CursorTimerManagerMixin[dart.implements] = () => [ticker.TickerProvider, selection_manager.SelectionManagerMixin$(T)];
    dart.setMethodSignature(CursorTimerManagerMixin, () => ({
      __proto__: dart.getMethods(CursorTimerManagerMixin.__proto__),
      [S._cursorTick]: dart.fnType(dart.void, [async.Timer]),
      [S._cursorWaitForStart]: dart.fnType(dart.void, [async.Timer]),
      [S._startCursorTimer]: dart.fnType(dart.void, []),
      [S._stopCursorTimer]: dart.fnType(dart.void, []),
      [S._startOrStopOrResetCursorTimerIfNeeded]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(CursorTimerManagerMixin, () => ({
      __proto__: dart.getGetters(CursorTimerManagerMixin.__proto__),
      cursorBlinkOpacityController: animation_controller.AnimationController,
      [S._oldController$2]: controller.MathController,
      [S._oldFocusNode$2]: focus_manager.FocusNode,
      cursorCurrentlyVisible: core.bool,
      cursorBlinkInterval: core.Duration
    }));
    dart.setSetterSignature(CursorTimerManagerMixin, () => ({
      __proto__: dart.getSetters(CursorTimerManagerMixin.__proto__),
      cursorBlinkOpacityController: animation_controller.AnimationController,
      [S._oldController$2]: controller.MathController,
      [S._oldFocusNode$2]: focus_manager.FocusNode
    }));
    dart.setLibraryUri(CursorTimerManagerMixin, I[37]);
    dart.setFieldSignature(CursorTimerManagerMixin, () => ({
      __proto__: dart.getFields(CursorTimerManagerMixin.__proto__),
      [S._cursorTimer]: dart.fieldType(dart.nullable(async.Timer)),
      [S.__CursorTimerManagerMixin_cursorBlinkOpacityController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
      [S.__CursorTimerManagerMixin_cursorBlinkOpacityController_isSet]: dart.fieldType(core.bool),
      [S._targetCursorVisibility]: dart.fieldType(core.bool),
      [S.__CursorTimerManagerMixin__oldController]: dart.fieldType(dart.nullable(controller.MathController)),
      [S.__CursorTimerManagerMixin__oldController_isSet]: dart.fieldType(core.bool),
      [S.__CursorTimerManagerMixin__oldFocusNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
      [S.__CursorTimerManagerMixin__oldFocusNode_isSet]: dart.fieldType(core.bool)
    }));
    return CursorTimerManagerMixin;
  });
  cursor_timer_manager.CursorTimerManagerMixin = cursor_timer_manager.CursorTimerManagerMixin$();
  dart.defineLazy(cursor_timer_manager.CursorTimerManagerMixin, {
    /*cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkHalfPeriod*/get _kCursorBlinkHalfPeriod() {
      return C[134] || CT.C134;
    },
    /*cursor_timer_manager.CursorTimerManagerMixin._fadeDuration*/get _fadeDuration() {
      return C[135] || CT.C135;
    },
    /*cursor_timer_manager.CursorTimerManagerMixin._kCursorBlinkWaitForStart*/get _kCursorBlinkWaitForStart() {
      return C[62] || CT.C62;
    }
  }, false);
  dart.addTypeTests(cursor_timer_manager.CursorTimerManagerMixin, _is_CursorTimerManagerMixin_default);
  const _is_BreakResult_default = Symbol('_is_BreakResult_default');
  tex_break.BreakResult$ = dart.generic(T => {
    class BreakResult extends core.Object {
      get parts() {
        return this[S.parts];
      }
      set parts(value) {
        super.parts = value;
      }
      get penalties() {
        return this[S.penalties];
      }
      set penalties(value) {
        super.penalties = value;
      }
    }
    (BreakResult.new = function(opts) {
      let parts = opts && 'parts' in opts ? opts.parts : null;
      if (parts == null) dart.nullFailed(I[38], 102, 19, "parts");
      let penalties = opts && 'penalties' in opts ? opts.penalties : null;
      if (penalties == null) dart.nullFailed(I[38], 103, 19, "penalties");
      this[S.parts] = parts;
      this[S.penalties] = penalties;
      ;
    }).prototype = BreakResult.prototype;
    dart.addTypeTests(BreakResult);
    BreakResult.prototype[_is_BreakResult_default] = true;
    dart.addTypeCaches(BreakResult);
    dart.setLibraryUri(BreakResult, I[39]);
    dart.setFieldSignature(BreakResult, () => ({
      __proto__: dart.getFields(BreakResult.__proto__),
      parts: dart.finalFieldType(core.List$(T)),
      penalties: dart.finalFieldType(core.List$(core.int))
    }));
    return BreakResult;
  });
  tex_break.BreakResult = tex_break.BreakResult$();
  dart.addTypeTests(tex_break.BreakResult, _is_BreakResult_default);
  tex_break['SyntaxTreeTexStyleBreakExt|texBreak'] = function SyntaxTreeTexStyleBreakExt$124texBreak($this, opts) {
    if ($this == null) dart.nullFailed(I[38], 12, 27, "#this");
    let relPenalty = opts && 'relPenalty' in opts ? opts.relPenalty : 500;
    if (relPenalty == null) dart.nullFailed(I[38], 13, 9, "relPenalty");
    let binOpPenalty = opts && 'binOpPenalty' in opts ? opts.binOpPenalty : 700;
    if (binOpPenalty == null) dart.nullFailed(I[38], 14, 9, "binOpPenalty");
    let enforceNoBreak = opts && 'enforceNoBreak' in opts ? opts.enforceNoBreak : true;
    if (enforceNoBreak == null) dart.nullFailed(I[38], 15, 10, "enforceNoBreak");
    let eqRowBreakResult = tex_break['EquationRowNodeTexStyleBreakExt|texBreak']($this.greenRoot, {relPenalty: relPenalty, binOpPenalty: binOpPenalty, enforceNoBreak: true});
    return new (T$.BreakResultOfSyntaxTree()).new({parts: eqRowBreakResult.parts[S.$map](syntax_tree.SyntaxTree, dart.fn(part => {
        if (part == null) dart.nullFailed(I[38], 24, 17, "part");
        return new syntax_tree.SyntaxTree.new({greenRoot: part});
      }, T$.EquationRowNodeToSyntaxTree()))[S.$toList]({growable: false}), penalties: eqRowBreakResult.penalties});
  };
  tex_break['SyntaxTreeTexStyleBreakExt|get#texBreak'] = function SyntaxTreeTexStyleBreakExt$124get$35texBreak($this) {
    if ($this == null) dart.nullFailed(I[38], 12, 27, "#this");
    return dart.fn(opts => {
      let relPenalty = opts && 'relPenalty' in opts ? opts.relPenalty : 500;
      if (relPenalty == null) dart.nullFailed(I[38], 13, 9, "relPenalty");
      let binOpPenalty = opts && 'binOpPenalty' in opts ? opts.binOpPenalty : 700;
      if (binOpPenalty == null) dart.nullFailed(I[38], 14, 9, "binOpPenalty");
      let enforceNoBreak = opts && 'enforceNoBreak' in opts ? opts.enforceNoBreak : true;
      if (enforceNoBreak == null) dart.nullFailed(I[38], 15, 10, "enforceNoBreak");
      return tex_break['SyntaxTreeTexStyleBreakExt|texBreak']($this, {relPenalty: relPenalty, binOpPenalty: binOpPenalty, enforceNoBreak: enforceNoBreak});
    }, T$.__ToBreakResultOfSyntaxTree());
  };
  tex_break['EquationRowNodeTexStyleBreakExt|texBreak'] = function EquationRowNodeTexStyleBreakExt$124texBreak($this, opts) {
    if ($this == null) dart.nullFailed(I[38], 38, 32, "#this");
    let relPenalty = opts && 'relPenalty' in opts ? opts.relPenalty : 500;
    if (relPenalty == null) dart.nullFailed(I[38], 39, 9, "relPenalty");
    let binOpPenalty = opts && 'binOpPenalty' in opts ? opts.binOpPenalty : 700;
    if (binOpPenalty == null) dart.nullFailed(I[38], 40, 9, "binOpPenalty");
    let enforceNoBreak = opts && 'enforceNoBreak' in opts ? opts.enforceNoBreak : true;
    if (enforceNoBreak == null) dart.nullFailed(I[38], 41, 10, "enforceNoBreak");
    let breakIndices = T$.JSArrayOfint().of([]);
    let penalties = T$.JSArrayOfint().of([]);
    for (let i = 0; i < dart.notNull($this.flattenedChildList[S.$length]); i = i + 1) {
      let child = $this.flattenedChildList[S.$_get](i);
      if (i < dart.notNull($this.flattenedChildList[S.$length]) - 1) {
        let nextChild = $this.flattenedChildList[S.$_get](i + 1);
        if (space.SpaceNode.is(nextChild) && nextChild.breakPenalty != null && dart.nullCheck(nextChild.breakPenalty) >= 10000) {
          if (!dart.test(enforceNoBreak)) {
            continue;
          } else {
            i = i + 1;
            continue;
          }
        }
      }
      if (child.rightType == syntax_tree.AtomType.bin) {
        breakIndices[S.$add](i);
        penalties[S.$add](binOpPenalty);
      } else if (child.rightType == syntax_tree.AtomType.rel) {
        breakIndices[S.$add](i);
        penalties[S.$add](relPenalty);
      } else if (space.SpaceNode.is(child) && child.breakPenalty != null) {
        breakIndices[S.$add](i);
        penalties[S.$add](dart.nullCheck(child.breakPenalty));
      }
    }
    let res = T$.JSArrayOfEquationRowNode().of([]);
    let pos = 1;
    for (let i = 0; i < dart.notNull(breakIndices[S.$length]); i = i + 1) {
      let breakEnd = $this.caretPositions[S.$_get](dart.notNull(breakIndices[S.$_get](i)) + 1);
      res[S.$add](syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow']($this.clipChildrenBetween(pos, breakEnd)));
      pos = breakEnd;
    }
    if (pos != $this.caretPositions[S.$last]) {
      res[S.$add](syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow']($this.clipChildrenBetween(pos, $this.caretPositions[S.$last])));
      penalties[S.$add](10000);
    }
    return new (T$.BreakResultOfEquationRowNode()).new({parts: res, penalties: penalties});
  };
  tex_break['EquationRowNodeTexStyleBreakExt|get#texBreak'] = function EquationRowNodeTexStyleBreakExt$124get$35texBreak($this) {
    if ($this == null) dart.nullFailed(I[38], 38, 32, "#this");
    return dart.fn(opts => {
      let relPenalty = opts && 'relPenalty' in opts ? opts.relPenalty : 500;
      if (relPenalty == null) dart.nullFailed(I[38], 39, 9, "relPenalty");
      let binOpPenalty = opts && 'binOpPenalty' in opts ? opts.binOpPenalty : 700;
      if (binOpPenalty == null) dart.nullFailed(I[38], 40, 9, "binOpPenalty");
      let enforceNoBreak = opts && 'enforceNoBreak' in opts ? opts.enforceNoBreak : true;
      if (enforceNoBreak == null) dart.nullFailed(I[38], 41, 10, "enforceNoBreak");
      return tex_break['EquationRowNodeTexStyleBreakExt|texBreak']($this, {relPenalty: relPenalty, binOpPenalty: binOpPenalty, enforceNoBreak: enforceNoBreak});
    }, T$.__ToBreakResultOfEquationRowNode());
  };
  math$.Math = class Math extends framework.StatelessWidget {
    get ast() {
      return this[S.ast];
    }
    set ast(value) {
      super.ast = value;
    }
    get mathStyle() {
      return this[S.mathStyle];
    }
    set mathStyle(value) {
      super.mathStyle = value;
    }
    get logicalPpi() {
      return this[S.logicalPpi];
    }
    set logicalPpi(value) {
      super.logicalPpi = value;
    }
    get onErrorFallback() {
      return this[S.onErrorFallback];
    }
    set onErrorFallback(value) {
      super.onErrorFallback = value;
    }
    get options() {
      return this[S.options];
    }
    set options(value) {
      super.options = value;
    }
    get parseError() {
      return this[S.parseError];
    }
    set parseError(value) {
      super.parseError = value;
    }
    get textScaleFactor() {
      return this[S.textScaleFactor];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get textStyle() {
      return this[S.textStyle];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    static tex(expression, opts) {
      if (expression == null) dart.nullFailed(I[40], 136, 12, "expression");
      let key = opts && 'key' in opts ? opts.key : null;
      let mathStyle = opts && 'mathStyle' in opts ? opts.mathStyle : C[104] || CT.C104;
      if (mathStyle == null) dart.nullFailed(I[40], 138, 15, "mathStyle");
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let onErrorFallback = opts && 'onErrorFallback' in opts ? opts.onErrorFallback : C[136] || CT.C136;
      if (onErrorFallback == null) dart.nullFailed(I[40], 140, 21, "onErrorFallback");
      let settings = opts && 'settings' in opts ? opts.settings : C[137] || CT.C137;
      if (settings == null) dart.nullFailed(I[40], 141, 23, "settings");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      let ast = null;
      let parseError = null;
      try {
        ast = new syntax_tree.SyntaxTree.new({greenRoot: new parser$.TexParser.new(expression, settings).parse()});
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (parse_error.ParseException.is(ex)) {
          let e = ex;
          parseError = e;
        } else if (core.Object.is(ex)) {
          let e = ex;
          parseError = new parse_error.ParseException.new("Unsanitized parse exception detected: " + dart.str(e) + "." + "Please report this error with correponding input.");
        } else
          throw e$;
      }
      return new math$.Math.new({key: key, ast: ast, parseError: parseError, options: options, onErrorFallback: onErrorFallback, mathStyle: mathStyle, textScaleFactor: textScaleFactor, textStyle: textStyle, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    build(context) {
      let t37, t37$, t39, t39$;
      if (context == null) dart.nullFailed(I[40], 168, 29, "context");
      if (this.parseError != null) {
        t37 = dart.nullCheck(this.parseError);
        return this.onErrorFallback(t37);
      }
      let options = this.options;
      if (options == null) {
        let effectiveTextStyle = this.textStyle;
        if (effectiveTextStyle == null || dart.test(effectiveTextStyle.inherit)) {
          effectiveTextStyle = text.DefaultTextStyle.of(context).style.merge(this.textStyle);
        }
        if (dart.test(media_query.MediaQuery.boldTextOverride(context))) {
          effectiveTextStyle = effectiveTextStyle.merge(C[139] || CT.C139);
        }
        let textScaleFactor = (t37$ = this.textScaleFactor, t37$ == null ? media_query.MediaQuery.textScaleFactorOf(context) : t37$);
        options = options$.MathOptions.new({style: this.mathStyle, fontSize: dart.nullCheck(effectiveTextStyle.fontSize) * dart.notNull(textScaleFactor), mathFontOptions: !dart.equals(effectiveTextStyle.fontWeight, ui.FontWeight.normal) ? new options$.FontOptions.new({fontWeight: dart.nullCheck(effectiveTextStyle.fontWeight)}) : null, logicalPpi: this.logicalPpi, color: dart.nullCheck(effectiveTextStyle.color)});
      }
      let child = null;
      try {
        child = dart.nullCheck(this.ast).buildWidget(options);
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (exception$.BuildException.is(ex)) {
          let e = ex;
          t39$ = e;
          return this.onErrorFallback(t39$);
        } else if (core.Object.is(ex)) {
          let e = ex;
          t39 = new exception$.BuildException.new("Unsanitized build exception detected: " + dart.str(e) + "." + "Please report this error with correponding input.");
          return this.onErrorFallback(t39);
        } else
          throw e$;
      }
      return new (T$.ProviderOfFlutterMathMode()).value({value: mode$.FlutterMathMode.view, child: child, $creationLocationd_0dea112b090073317d4: C[141] || CT.C141});
    }
    static defaultOnErrorFallback(error) {
      if (error == null) dart.nullFailed(I[40], 218, 61, "error");
      return new selectable_text.SelectableText.new(error.messageWithType, {$creationLocationd_0dea112b090073317d4: C[145] || CT.C145});
    }
    texBreak(opts) {
      let relPenalty = opts && 'relPenalty' in opts ? opts.relPenalty : 500;
      if (relPenalty == null) dart.nullFailed(I[40], 243, 9, "relPenalty");
      let binOpPenalty = opts && 'binOpPenalty' in opts ? opts.binOpPenalty : 700;
      if (binOpPenalty == null) dart.nullFailed(I[40], 244, 9, "binOpPenalty");
      let enforceNoBreak = opts && 'enforceNoBreak' in opts ? opts.enforceNoBreak : true;
      if (enforceNoBreak == null) dart.nullFailed(I[40], 245, 10, "enforceNoBreak");
      let ast = this.ast;
      if (ast == null || this.parseError != null) {
        return new (T$.BreakResultOfMath()).new({parts: T$.JSArrayOfMath().of([this]), penalties: T$.JSArrayOfint().of([10000])});
      }
      let astBreakResult = tex_break['SyntaxTreeTexStyleBreakExt|texBreak'](ast, {relPenalty: relPenalty, binOpPenalty: binOpPenalty, enforceNoBreak: enforceNoBreak});
      return new (T$.BreakResultOfMath()).new({parts: astBreakResult.parts[S.$map](math$.Math, dart.fn(part => {
          if (part == null) dart.nullFailed(I[40], 258, 17, "part");
          return new math$.Math.new({ast: part, mathStyle: this.mathStyle, logicalPpi: this.logicalPpi, onErrorFallback: this.onErrorFallback, options: this.options, parseError: this.parseError, textScaleFactor: this.textScaleFactor, textStyle: this.textStyle, $creationLocationd_0dea112b090073317d4: C[148] || CT.C148});
        }, T$.SyntaxTreeToMath()))[S.$toList]({growable: false}), penalties: astBreakResult.penalties});
    }
  };
  (math$.Math.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ast = opts && 'ast' in opts ? opts.ast : null;
    let mathStyle = opts && 'mathStyle' in opts ? opts.mathStyle : C[104] || CT.C104;
    if (mathStyle == null) dart.nullFailed(I[40], 42, 10, "mathStyle");
    let logicalPpi = opts && 'logicalPpi' in opts ? opts.logicalPpi : null;
    let onErrorFallback = opts && 'onErrorFallback' in opts ? opts.onErrorFallback : C[136] || CT.C136;
    if (onErrorFallback == null) dart.nullFailed(I[40], 44, 10, "onErrorFallback");
    let options = opts && 'options' in opts ? opts.options : null;
    let parseError = opts && 'parseError' in opts ? opts.parseError : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.ast] = ast;
    this[S.mathStyle] = mathStyle;
    this[S.logicalPpi] = logicalPpi;
    this[S.onErrorFallback] = onErrorFallback;
    this[S.options] = options;
    this[S.parseError] = parseError;
    this[S.textScaleFactor] = textScaleFactor;
    this[S.textStyle] = textStyle;
    if (!(ast != null || parseError != null)) dart.assertFailed(null, I[40], 49, 16, "ast != null || parseError != null");
    math$.Math.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = math$.Math.prototype;
  dart.addTypeTests(math$.Math);
  dart.addTypeCaches(math$.Math);
  dart.setMethodSignature(math$.Math, () => ({
    __proto__: dart.getMethods(math$.Math.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    texBreak: dart.fnType(tex_break.BreakResult$(math$.Math), [], {binOpPenalty: core.int, enforceNoBreak: core.bool, relPenalty: core.int}, {})
  }));
  dart.setLibraryUri(math$.Math, I[41]);
  dart.setFieldSignature(math$.Math, () => ({
    __proto__: dart.getFields(math$.Math.__proto__),
    ast: dart.finalFieldType(dart.nullable(syntax_tree.SyntaxTree)),
    mathStyle: dart.finalFieldType(style$0.MathStyle),
    logicalPpi: dart.finalFieldType(dart.nullable(core.double)),
    onErrorFallback: dart.finalFieldType(dart.fnType(framework.Widget, [exception$.FlutterMathException])),
    options: dart.finalFieldType(dart.nullable(options$.MathOptions)),
    parseError: dart.finalFieldType(dart.nullable(parse_error.ParseException)),
    textScaleFactor: dart.finalFieldType(dart.nullable(core.double)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle))
  }));
  controller.MathController = class MathController extends change_notifier.ChangeNotifier {
    get ast() {
      return this[S._ast];
    }
    set ast(value) {
      if (value == null) dart.nullFailed(I[42], 15, 22, "value");
      if (!dart.equals(this[S._ast], value)) {
        this[S._ast] = value;
        this[S._selection$1] = C[158] || CT.C158;
        this.notifyListeners();
      }
    }
    get selection() {
      return this[S._selection$1];
    }
    set selection(value) {
      if (value == null) dart.nullFailed(I[42], 25, 31, "value");
      if (!dart.equals(this[S._selection$1], value)) {
        this[S._selection$1] = this.sanitizeSelection(this.ast, value);
        this.notifyListeners();
      }
    }
    sanitizeSelection(ast, selection) {
      if (ast == null) dart.nullFailed(I[42], 32, 46, "ast");
      if (selection == null) dart.nullFailed(I[42], 32, 65, "selection");
      if (dart.notNull(selection.end) <= 0) return selection;
      return text_extension['TextSelectionExt|constrainedBy'](selection, ast.root.range);
    }
    get selectedNodes() {
      return this.ast.findSelectedNodes(this.selection.start, this.selection.end);
    }
  };
  (controller.MathController.new = function(opts) {
    let ast = opts && 'ast' in opts ? opts.ast : null;
    if (ast == null) dart.nullFailed(I[42], 8, 25, "ast");
    let selection = opts && 'selection' in opts ? opts.selection : C[158] || CT.C158;
    if (selection == null) dart.nullFailed(I[42], 9, 19, "selection");
    this[S._ast] = ast;
    this[S._selection$1] = selection;
    controller.MathController.__proto__.new.call(this);
    ;
  }).prototype = controller.MathController.prototype;
  dart.addTypeTests(controller.MathController);
  dart.addTypeCaches(controller.MathController);
  dart.setMethodSignature(controller.MathController, () => ({
    __proto__: dart.getMethods(controller.MathController.__proto__),
    sanitizeSelection: dart.fnType(text_editing.TextSelection, [syntax_tree.SyntaxTree, text_editing.TextSelection])
  }));
  dart.setGetterSignature(controller.MathController, () => ({
    __proto__: dart.getGetters(controller.MathController.__proto__),
    ast: syntax_tree.SyntaxTree,
    selection: text_editing.TextSelection,
    selectedNodes: core.List$(syntax_tree.GreenNode)
  }));
  dart.setSetterSignature(controller.MathController, () => ({
    __proto__: dart.getSetters(controller.MathController.__proto__),
    ast: syntax_tree.SyntaxTree,
    selection: text_editing.TextSelection
  }));
  dart.setLibraryUri(controller.MathController, I[43]);
  dart.setFieldSignature(controller.MathController, () => ({
    __proto__: dart.getFields(controller.MathController.__proto__),
    [S._ast]: dart.fieldType(syntax_tree.SyntaxTree),
    [S._selection$1]: dart.fieldType(text_editing.TextSelection)
  }));
  katex_ext._notHandler = function _notHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[44], 54, 33, "parser");
    if (context == null) dart.nullFailed(I[44], 54, 57, "context");
    let base = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    let node = parser$.assertNodeType(symbol$.SymbolNode, base);
    let remappedSymbol = katex_ext._notRemap[S.$_get](node.symbol);
    if (node.mode != types.Mode.math || node.variantForm === true || remappedSymbol == null) {
      dart.throw(new parse_error.ParseException.new("\\not has to be followed by a combinable character"));
    }
    return node.withSymbol(remappedSymbol);
  };
  dart.defineLazy(katex_ext, {
    /*katex_ext.katexExtFunctionEntries*/get katexExtFunctionEntries() {
      return C[160] || CT.C160;
    },
    /*katex_ext._notEntries*/get _notEntries() {
      return C[160] || CT.C160;
    },
    /*katex_ext._notRemap*/get _notRemap() {
      return C[164] || CT.C164;
    }
  }, false);
  eqn_array.EqnArrayParentData = class EqnArrayParentData extends box.ContainerBoxParentData$(box.RenderBox) {};
  (eqn_array.EqnArrayParentData.new = function() {
    eqn_array.EqnArrayParentData.__proto__.new.call(this);
    ;
  }).prototype = eqn_array.EqnArrayParentData.prototype;
  dart.addTypeTests(eqn_array.EqnArrayParentData);
  dart.addTypeCaches(eqn_array.EqnArrayParentData);
  dart.setLibraryUri(eqn_array.EqnArrayParentData, I[45]);
  eqn_array.EqnArray = class EqnArray extends framework.MultiChildRenderObjectWidget {
    get ruleThickness() {
      return this[S.ruleThickness];
    }
    set ruleThickness(value) {
      super.ruleThickness = value;
    }
    get jotSize() {
      return this[S.jotSize];
    }
    set jotSize(value) {
      super.jotSize = value;
    }
    get arrayskip() {
      return this[S.arrayskip];
    }
    set arrayskip(value) {
      super.arrayskip = value;
    }
    get hlines() {
      return this[S.hlines];
    }
    set hlines(value) {
      super.hlines = value;
    }
    get rowSpacings() {
      return this[S.rowSpacings];
    }
    set rowSpacings(value) {
      super.rowSpacings = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[46], 33, 48, "context");
      return new eqn_array.RenderEqnArray.new({ruleThickness: this.ruleThickness, jotSize: this.jotSize, arrayskip: this.arrayskip, hlines: this.hlines, rowSpacings: this.rowSpacings});
    }
  };
  (eqn_array.EqnArray.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ruleThickness = opts && 'ruleThickness' in opts ? opts.ruleThickness : null;
    if (ruleThickness == null) dart.nullFailed(I[46], 24, 19, "ruleThickness");
    let jotSize = opts && 'jotSize' in opts ? opts.jotSize : null;
    if (jotSize == null) dart.nullFailed(I[46], 25, 19, "jotSize");
    let arrayskip = opts && 'arrayskip' in opts ? opts.arrayskip : null;
    if (arrayskip == null) dart.nullFailed(I[46], 26, 19, "arrayskip");
    let hlines = opts && 'hlines' in opts ? opts.hlines : null;
    if (hlines == null) dart.nullFailed(I[46], 27, 19, "hlines");
    let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : null;
    if (rowSpacings == null) dart.nullFailed(I[46], 28, 19, "rowSpacings");
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[46], 29, 27, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.ruleThickness] = ruleThickness;
    this[S.jotSize] = jotSize;
    this[S.arrayskip] = arrayskip;
    this[S.hlines] = hlines;
    this[S.rowSpacings] = rowSpacings;
    eqn_array.EqnArray.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = eqn_array.EqnArray.prototype;
  dart.addTypeTests(eqn_array.EqnArray);
  dart.addTypeCaches(eqn_array.EqnArray);
  dart.setMethodSignature(eqn_array.EqnArray, () => ({
    __proto__: dart.getMethods(eqn_array.EqnArray.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(eqn_array.EqnArray, I[45]);
  dart.setFieldSignature(eqn_array.EqnArray, () => ({
    __proto__: dart.getFields(eqn_array.EqnArray.__proto__),
    ruleThickness: dart.finalFieldType(core.double),
    jotSize: dart.finalFieldType(core.double),
    arrayskip: dart.finalFieldType(core.double),
    hlines: dart.finalFieldType(core.List$(matrix.MatrixSeparatorStyle)),
    rowSpacings: dart.finalFieldType(core.List$(core.double))
  }));
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object.ContainerRenderObjectMixin$(box.RenderBox, eqn_array.EqnArrayParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(box.RenderBox, eqn_array.EqnArrayParentData));
  const RenderBox_RenderBoxContainerDefaultsMixin$36 = class RenderBox_RenderBoxContainerDefaultsMixin extends RenderBox_ContainerRenderObjectMixin$36 {};
  (RenderBox_RenderBoxContainerDefaultsMixin$36.new = function() {
    RenderBox_RenderBoxContainerDefaultsMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_RenderBoxContainerDefaultsMixin$36.prototype;
  dart.applyMixin(RenderBox_RenderBoxContainerDefaultsMixin$36, box.RenderBoxContainerDefaultsMixin$(box.RenderBox, eqn_array.EqnArrayParentData));
  const RenderBox_DebugOverflowIndicatorMixin$36 = class RenderBox_DebugOverflowIndicatorMixin extends RenderBox_RenderBoxContainerDefaultsMixin$36 {};
  (RenderBox_DebugOverflowIndicatorMixin$36.new = function() {
    debug_overflow_indicator.DebugOverflowIndicatorMixin[dart.mixinNew].call(this);
    RenderBox_DebugOverflowIndicatorMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_DebugOverflowIndicatorMixin$36.prototype;
  dart.applyMixin(RenderBox_DebugOverflowIndicatorMixin$36, debug_overflow_indicator.DebugOverflowIndicatorMixin);
  eqn_array.RenderEqnArray = class RenderEqnArray extends RenderBox_DebugOverflowIndicatorMixin$36 {
    get hlinePos() {
      return this[S.hlinePos];
    }
    set hlinePos(value) {
      this[S.hlinePos] = value;
    }
    get width() {
      return this[S.width];
    }
    set width(value) {
      this[S.width] = value;
    }
    get ruleThickness() {
      return this[S._ruleThickness];
    }
    set ruleThickness(value) {
      if (value == null) dart.nullFailed(I[46], 64, 28, "value");
      if (this[S._ruleThickness] != value) {
        this[S._ruleThickness] = value;
        this.markNeedsLayout();
      }
    }
    get jotSize() {
      return this[S._jotSize];
    }
    set jotSize(value) {
      if (value == null) dart.nullFailed(I[46], 73, 22, "value");
      if (this[S._jotSize] != value) {
        this[S._jotSize] = value;
        this.markNeedsLayout();
      }
    }
    get arrayskip() {
      return this[S._arrayskip];
    }
    set arrayskip(value) {
      if (value == null) dart.nullFailed(I[46], 82, 24, "value");
      if (this[S._arrayskip] != value) {
        this[S._arrayskip] = value;
        this.markNeedsLayout();
      }
    }
    get hlines() {
      return this[S._hlines];
    }
    set hlines(value) {
      if (value == null) dart.nullFailed(I[46], 91, 41, "value");
      if (!dart.equals(this[S._hlines], value)) {
        this[S._hlines] = value;
        this.markNeedsLayout();
      }
    }
    get rowSpacings() {
      return this[S._rowSpacings];
    }
    set rowSpacings(value) {
      if (value == null) dart.nullFailed(I[46], 100, 32, "value");
      if (!dart.equals(this[S._rowSpacings], value)) {
        this[S._rowSpacings] = value;
        this.markNeedsLayout();
      }
    }
    setupParentData(child) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[46], 108, 37, "child");
      if (!eqn_array.EqnArrayParentData.is(child.parentData)) {
        child.parentData = new eqn_array.EqnArrayParentData.new();
      }
    }
    performLayout() {
      let t39;
      let nonAligningChildren = T$.JSArrayOfRenderBox().of([]);
      let child = this.firstChild;
      let colWidths = T$.JSArrayOfdouble().of([]);
      while (child != null) {
        if (line.RenderLine.is(child)) {
          child.alignColWidth = null;
          child.layout(constants.infiniteConstraint, {parentUsesSize: true});
          let childColWidth = child.alignColWidth;
          if (childColWidth != null) {
            for (let i = 0; i < dart.notNull(childColWidth[S.$length]); i = i + 1) {
              if (i >= dart.notNull(colWidths[S.$length])) {
                colWidths[S.$add](childColWidth[S.$_get](i));
              } else {
                colWidths[S.$_set](i, math.max(core.double, colWidths[S.$_get](i), childColWidth[S.$_get](i)));
              }
            }
          } else {
            nonAligningChildren[S.$add](child);
          }
        } else {
          child.layout(constants.infiniteConstraint, {parentUsesSize: true});
          colWidths[S.$_set](0, math.max(core.double, colWidths[S.$_get](0), child.size.width));
        }
        child = eqn_array.EqnArrayParentData.as(child.parentData).nextSibling;
      }
      let nonAligningChildrenWidth = (t39 = iterable_extensions['NumIterableExtension|get#maxOrNull'](core.double, nonAligningChildren[S.$map](core.double, dart.fn(e => {
        if (e == null) dart.nullFailed(I[46], 154, 34, "e");
        return e.size.width;
      }, T$.RenderBoxTodouble()))), t39 == null ? 0.0 : t39);
      let aligningChildrenWidth = iterable_extensions$['IterableDoubleExtension|get#sum'](colWidths);
      this.width = math.max(core.double, nonAligningChildrenWidth, aligningChildrenWidth);
      let index = 0;
      let vPos = 0.0;
      this.hlinePos[S.$add](vPos);
      index = index + 1;
      child = this.firstChild;
      while (child != null) {
        let childParentData = eqn_array.EqnArrayParentData.as(child.parentData);
        let hPos = 0.0;
        if (line.RenderLine.is(child) && child.alignColWidth != null) {
          child.alignColWidth = colWidths;
          child.layout(new box.BoxConstraints.new({maxWidth: aligningChildrenWidth}), {parentUsesSize: true});
          hPos = (dart.notNull(this.width) - dart.notNull(aligningChildrenWidth)) / 2 + dart.notNull(colWidths[S.$_get](0)) - dart.notNull(dart.nullCheck(child.alignColWidth)[S.$_get](0));
        } else {
          hPos = (dart.notNull(this.width) - dart.notNull(child.size.width)) / 2;
        }
        vPos = vPos + math.max(core.num, render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](child), 0.7 * dart.notNull(this.arrayskip));
        childParentData.offset = new ui.Offset.new(hPos, vPos - dart.notNull(render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](child)));
        vPos = vPos + (math.max(core.double, render_box_offset['RenderBoxOffsetExt|get#layoutDepth'](child), 0.3 * dart.notNull(this.arrayskip)) + dart.notNull(this.jotSize) + dart.notNull(this.rowSpacings[S.$_get](index - 1)));
        this.hlinePos[S.$add](vPos);
        vPos = vPos + dart.notNull(this.hlines[S.$_get](index) != matrix.MatrixSeparatorStyle.none ? this.ruleThickness : 0.0);
        index = index + 1;
        child = childParentData.nextSibling;
      }
      this.size = new ui.Size.new(this.width, vPos);
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[46], 198, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[46], 198, 66, "position");
      return this.defaultHitTestChildren(result, {position: position});
    }
    paint(context, offset) {
      let t39;
      if (context == null) dart.nullFailed(I[46], 202, 30, "context");
      if (offset == null) dart.nullFailed(I[46], 202, 46, "offset");
      this.defaultPaint(context, offset);
      for (let i = 0; i < dart.notNull(this.hlines[S.$length]); i = i + 1) {
        if (this.hlines[S.$_get](i) != matrix.MatrixSeparatorStyle.none) {
          context.canvas.drawLine(new ui.Offset.new(0.0, dart.notNull(this.hlinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2), new ui.Offset.new(this.width, dart.notNull(this.hlinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2), (t39 = ui.Paint.new(), (() => {
            t39.strokeWidth = this.ruleThickness;
            return t39;
          })()));
        }
      }
    }
  };
  (eqn_array.RenderEqnArray.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let ruleThickness = opts && 'ruleThickness' in opts ? opts.ruleThickness : null;
    if (ruleThickness == null) dart.nullFailed(I[46], 49, 21, "ruleThickness");
    let jotSize = opts && 'jotSize' in opts ? opts.jotSize : null;
    if (jotSize == null) dart.nullFailed(I[46], 50, 21, "jotSize");
    let arrayskip = opts && 'arrayskip' in opts ? opts.arrayskip : null;
    if (arrayskip == null) dart.nullFailed(I[46], 51, 21, "arrayskip");
    let hlines = opts && 'hlines' in opts ? opts.hlines : null;
    if (hlines == null) dart.nullFailed(I[46], 52, 41, "hlines");
    let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : null;
    if (rowSpacings == null) dart.nullFailed(I[46], 53, 27, "rowSpacings");
    this[S.hlinePos] = T$.JSArrayOfdouble().of([]);
    this[S.width] = 0.0;
    this[S._ruleThickness] = ruleThickness;
    this[S._jotSize] = jotSize;
    this[S._arrayskip] = arrayskip;
    this[S._hlines] = hlines;
    this[S._rowSpacings] = rowSpacings;
    eqn_array.RenderEqnArray.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = eqn_array.RenderEqnArray.prototype;
  dart.addTypeTests(eqn_array.RenderEqnArray);
  dart.addTypeCaches(eqn_array.RenderEqnArray);
  dart.setGetterSignature(eqn_array.RenderEqnArray, () => ({
    __proto__: dart.getGetters(eqn_array.RenderEqnArray.__proto__),
    ruleThickness: core.double,
    jotSize: core.double,
    arrayskip: core.double,
    hlines: core.List$(matrix.MatrixSeparatorStyle),
    rowSpacings: core.List$(core.double)
  }));
  dart.setSetterSignature(eqn_array.RenderEqnArray, () => ({
    __proto__: dart.getSetters(eqn_array.RenderEqnArray.__proto__),
    ruleThickness: core.double,
    jotSize: core.double,
    arrayskip: core.double,
    hlines: core.List$(matrix.MatrixSeparatorStyle),
    rowSpacings: core.List$(core.double)
  }));
  dart.setLibraryUri(eqn_array.RenderEqnArray, I[45]);
  dart.setFieldSignature(eqn_array.RenderEqnArray, () => ({
    __proto__: dart.getFields(eqn_array.RenderEqnArray.__proto__),
    [S._ruleThickness]: dart.fieldType(core.double),
    [S._jotSize]: dart.fieldType(core.double),
    [S._arrayskip]: dart.fieldType(core.double),
    [S._hlines]: dart.fieldType(core.List$(matrix.MatrixSeparatorStyle)),
    [S._rowSpacings]: dart.fieldType(core.List$(core.double)),
    hlinePos: dart.fieldType(core.List$(core.double)),
    width: dart.fieldType(core.double)
  }));
  const _is_ParentableNode_default = Symbol('_is_ParentableNode_default');
  syntax_tree.ParentableNode$ = dart.generic(T => {
    class ParentableNode extends syntax_tree.GreenNode {
      get editingWidth() {
        let t42;
        if (!dart.test(this[S.__ParentableNode_editingWidth_isSet])) {
          let t41 = this.computeWidth();
          if (dart.test(this[S.__ParentableNode_editingWidth_isSet])) dart.throw(new _internal.LateError.fieldADI("editingWidth"));
          this[S.__ParentableNode_editingWidth] = t41;
          this[S.__ParentableNode_editingWidth_isSet] = true;
        }
        t42 = this[S.__ParentableNode_editingWidth];
        return t42;
      }
      get childPositions() {
        let t43;
        if (!dart.test(this[S.__ParentableNode_childPositions_isSet])) {
          let t42 = this.computeChildPositions();
          if (dart.test(this[S.__ParentableNode_childPositions_isSet])) dart.throw(new _internal.LateError.fieldADI("childPositions"));
          this[S.__ParentableNode_childPositions] = t42;
          this[S.__ParentableNode_childPositions_isSet] = true;
        }
        t43 = this[S.__ParentableNode_childPositions];
        return t43;
      }
    }
    (ParentableNode.new = function() {
      this[S.__ParentableNode_editingWidth] = null;
      this[S.__ParentableNode_editingWidth_isSet] = false;
      this[S.__ParentableNode_childPositions] = null;
      this[S.__ParentableNode_childPositions_isSet] = false;
      ParentableNode.__proto__.new.call(this);
      ;
    }).prototype = ParentableNode.prototype;
    dart.addTypeTests(ParentableNode);
    ParentableNode.prototype[_is_ParentableNode_default] = true;
    dart.addTypeCaches(ParentableNode);
    dart.setGetterSignature(ParentableNode, () => ({
      __proto__: dart.getGetters(ParentableNode.__proto__),
      editingWidth: core.int,
      childPositions: core.List$(core.int)
    }));
    dart.setLibraryUri(ParentableNode, I[34]);
    dart.setFieldSignature(ParentableNode, () => ({
      __proto__: dart.getFields(ParentableNode.__proto__),
      [S.__ParentableNode_editingWidth]: dart.fieldType(dart.nullable(core.int)),
      [S.__ParentableNode_editingWidth_isSet]: dart.fieldType(core.bool),
      [S.__ParentableNode_childPositions]: dart.fieldType(dart.nullable(core.List$(core.int))),
      [S.__ParentableNode_childPositions_isSet]: dart.fieldType(core.bool)
    }));
    return ParentableNode;
  });
  syntax_tree.ParentableNode = syntax_tree.ParentableNode$();
  dart.addTypeTests(syntax_tree.ParentableNode, _is_ParentableNode_default);
  const _is_SlotableNode_default = Symbol('_is_SlotableNode_default');
  syntax_tree.SlotableNode$ = dart.generic(T => {
    var TToint = () => (TToint = dart.constFn(dart.fnType(core.int, [T])))();
    class SlotableNode extends syntax_tree.ParentableNode$(T) {
      get children() {
        let t41;
        if (!dart.test(this[S.__SlotableNode_children_isSet])) {
          let t40 = this.computeChildren();
          if (dart.test(this[S.__SlotableNode_children_isSet])) dart.throw(new _internal.LateError.fieldADI("children"));
          this[S.__SlotableNode_children] = t40;
          this[S.__SlotableNode_children_isSet] = true;
        }
        t41 = this[S.__SlotableNode_children];
        return t41;
      }
      computeWidth() {
        return dart.notNull(iterable_extensions$['IterableIntegerExtension|get#sum'](this.children[S.$map](core.int, dart.fn(child => {
          let t41, t41$;
          t41$ = (t41 = child, t41 == null ? null : t41.capturedCursor);
          return t41$ == null ? 0 : t41$;
        }, TToint())))) + 1;
      }
      computeChildPositions() {
        let t41, t41$;
        let curPos = 0;
        let result = T$.JSArrayOfint().of([]);
        for (let child of this.children) {
          result[S.$add](curPos);
          curPos = curPos + dart.notNull((t41$ = (t41 = child, t41 == null ? null : t41.capturedCursor), t41$ == null ? 0 : t41$));
        }
        return result;
      }
    }
    (SlotableNode.new = function() {
      this[S.__SlotableNode_children] = null;
      this[S.__SlotableNode_children_isSet] = false;
      SlotableNode.__proto__.new.call(this);
      ;
    }).prototype = SlotableNode.prototype;
    dart.addTypeTests(SlotableNode);
    SlotableNode.prototype[_is_SlotableNode_default] = true;
    dart.addTypeCaches(SlotableNode);
    dart.setMethodSignature(SlotableNode, () => ({
      __proto__: dart.getMethods(SlotableNode.__proto__),
      computeWidth: dart.fnType(core.int, []),
      computeChildPositions: dart.fnType(core.List$(core.int), [])
    }));
    dart.setGetterSignature(SlotableNode, () => ({
      __proto__: dart.getGetters(SlotableNode.__proto__),
      children: core.List$(T)
    }));
    dart.setLibraryUri(SlotableNode, I[34]);
    dart.setFieldSignature(SlotableNode, () => ({
      __proto__: dart.getFields(SlotableNode.__proto__),
      [S.__SlotableNode_children]: dart.fieldType(dart.nullable(core.List$(T))),
      [S.__SlotableNode_children_isSet]: dart.fieldType(core.bool)
    }));
    return SlotableNode;
  });
  syntax_tree.SlotableNode = syntax_tree.SlotableNode$();
  dart.addTypeTests(syntax_tree.SlotableNode, _is_SlotableNode_default);
  const _is_PositionDependentMixin_default = Symbol('_is_PositionDependentMixin_default');
  syntax_tree.PositionDependentMixin$ = dart.generic(T => {
    class PositionDependentMixin extends syntax_tree.ParentableNode$(T) {}
    PositionDependentMixin[dart.mixinOn] = ParentableNode => class PositionDependentMixin extends ParentableNode {
      get range() {
        return this[S.range];
      }
      set range(value) {
        this[S.range] = value;
      }
      get pos() {
        return dart.notNull(this.range.start) - 1;
      }
      updatePos(pos) {
        if (pos == null) dart.nullFailed(I[33], 346, 22, "pos");
        this.range = this.getRange(pos);
      }
    };
    (PositionDependentMixin[dart.mixinNew] = function() {
      this[S.range] = C[228] || CT.C228;
    }).prototype = PositionDependentMixin.prototype;
    dart.addTypeTests(PositionDependentMixin);
    PositionDependentMixin.prototype[_is_PositionDependentMixin_default] = true;
    dart.addTypeCaches(PositionDependentMixin);
    PositionDependentMixin[dart.implements] = () => [syntax_tree.ParentableNode$(T)];
    dart.setMethodSignature(PositionDependentMixin, () => ({
      __proto__: dart.getMethods(PositionDependentMixin.__proto__),
      updatePos: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(PositionDependentMixin, () => ({
      __proto__: dart.getGetters(PositionDependentMixin.__proto__),
      pos: core.int
    }));
    dart.setLibraryUri(PositionDependentMixin, I[34]);
    dart.setFieldSignature(PositionDependentMixin, () => ({
      __proto__: dart.getFields(PositionDependentMixin.__proto__),
      range: dart.fieldType(ui.TextRange)
    }));
    return PositionDependentMixin;
  });
  syntax_tree.PositionDependentMixin = syntax_tree.PositionDependentMixin$();
  dart.addTypeTests(syntax_tree.PositionDependentMixin, _is_PositionDependentMixin_default);
  syntax_tree._ClipChildrenMixin = class _ClipChildrenMixin extends syntax_tree.ParentableNode$(syntax_tree.GreenNode) {};
  syntax_tree._ClipChildrenMixin[dart.mixinOn] = ParentableNode => class _ClipChildrenMixin extends ParentableNode {
    clipChildrenBetween(pos1, pos2) {
      if (pos1 == null) dart.nullFailed(I[33], 680, 53, "pos1");
      if (pos2 == null) dart.nullFailed(I[33], 680, 63, "pos2");
      let childIndex1 = iterable_extensions['NumListSearchExt|slotFor'](core.int, this.childPositions, pos1);
      let childIndex2 = iterable_extensions['NumListSearchExt|slotFor'](core.int, this.childPositions, pos2);
      let childIndex1Floor = childIndex1[S.$floor]();
      let childIndex1Ceil = childIndex1[S.$ceil]();
      let childIndex2Floor = childIndex2[S.$floor]();
      let childIndex2Ceil = childIndex2[S.$ceil]();
      let head = null;
      let tail = null;
      if (childIndex1Floor !== childIndex1 && childIndex1Floor >= 0 && childIndex1Floor <= dart.notNull(this.children[S.$length]) - 1) {
        let child = this.children[S.$_get](childIndex1Floor);
        if (syntax_tree.TransparentNode.is(child)) {
          head = child.clipChildrenBetween(dart.notNull(pos1) - dart.notNull(this.childPositions[S.$_get](childIndex1Floor)), dart.notNull(pos2) - dart.notNull(this.childPositions[S.$_get](childIndex1Floor)));
        } else {
          head = child;
        }
      }
      if (childIndex2Ceil !== childIndex2 && childIndex2Floor >= 0 && childIndex2Floor <= dart.notNull(this.children[S.$length]) - 1) {
        let child = this.children[S.$_get](childIndex2Floor);
        if (syntax_tree.TransparentNode.is(child)) {
          tail = child.clipChildrenBetween(dart.notNull(pos1) - dart.notNull(this.childPositions[S.$_get](childIndex2Floor)), dart.notNull(pos2) - dart.notNull(this.childPositions[S.$_get](childIndex2Floor)));
        } else {
          tail = child;
        }
      }
      return this.updateChildren((() => {
        let t46 = T$.JSArrayOfGreenNode().of([]);
        if (head != null) t46[S.$add](head);
        for (let i = childIndex1Ceil; i < childIndex2Floor; i = i + 1)
          t46[S.$add](this.children[S.$_get](i));
        if (tail != null) t46[S.$add](tail);
        return t46;
      })());
    }
  };
  dart.addTypeTests(syntax_tree._ClipChildrenMixin);
  dart.addTypeCaches(syntax_tree._ClipChildrenMixin);
  syntax_tree._ClipChildrenMixin[dart.implements] = () => [syntax_tree.ParentableNode$(syntax_tree.GreenNode)];
  dart.setMethodSignature(syntax_tree._ClipChildrenMixin, () => ({
    __proto__: dart.getMethods(syntax_tree._ClipChildrenMixin.__proto__),
    clipChildrenBetween: dart.fnType(syntax_tree.ParentableNode$(syntax_tree.GreenNode), [core.int, core.int])
  }));
  dart.setLibraryUri(syntax_tree._ClipChildrenMixin, I[34]);
  const ParentableNode_PositionDependentMixin$36 = class ParentableNode_PositionDependentMixin extends syntax_tree.ParentableNode$(syntax_tree.GreenNode) {};
  (ParentableNode_PositionDependentMixin$36.new = function() {
    syntax_tree.PositionDependentMixin$(syntax_tree.GreenNode)[dart.mixinNew].call(this);
    ParentableNode_PositionDependentMixin$36.__proto__.new.call(this);
  }).prototype = ParentableNode_PositionDependentMixin$36.prototype;
  dart.applyMixin(ParentableNode_PositionDependentMixin$36, syntax_tree.PositionDependentMixin$(syntax_tree.GreenNode));
  const ParentableNode__ClipChildrenMixin$36 = class ParentableNode__ClipChildrenMixin extends ParentableNode_PositionDependentMixin$36 {};
  (ParentableNode__ClipChildrenMixin$36.new = function() {
    ParentableNode__ClipChildrenMixin$36.__proto__.new.call(this);
  }).prototype = ParentableNode__ClipChildrenMixin$36.prototype;
  dart.applyMixin(ParentableNode__ClipChildrenMixin$36, syntax_tree._ClipChildrenMixin);
  syntax_tree.EquationRowNode = class EquationRowNode extends ParentableNode__ClipChildrenMixin$36 {
    get overrideType() {
      return this[S.overrideType];
    }
    set overrideType(value) {
      super.overrideType = value;
    }
    get children() {
      return this[S.children$4];
    }
    set children(value) {
      super.children = value;
    }
    get key() {
      return this[S._key];
    }
    computeWidth() {
      return dart.notNull(iterable_extensions$['IterableIntegerExtension|get#sum'](this.children[S.$map](core.int, dart.fn(child => {
        if (child == null) dart.nullFailed(I[33], 448, 39, "child");
        return child.editingWidth;
      }, T$.GreenNodeToint())))) + 2;
    }
    computeChildPositions() {
      let curPos = 1;
      return T$.ListOfint().generate(dart.notNull(this.children[S.$length]) + 1, dart.fn(index => {
        if (index == null) dart.nullFailed(I[33], 453, 48, "index");
        if (index === 0) return curPos;
        return curPos = curPos + dart.notNull(this.children[S.$_get](dart.notNull(index) - 1).editingWidth);
      }, T$.intToint()), {growable: false});
    }
    static empty() {
      return new syntax_tree.EquationRowNode.new({children: T$.JSArrayOfGreenNode().of([])});
    }
    get flattenedChildList() {
      let t44;
      if (!dart.test(this[S.__EquationRowNode_flattenedChildList_isSet])) {
        let t43 = this.children[S.$expand](syntax_tree.GreenNode, dart.fn(child => {
          if (child == null) dart.nullFailed(I[33], 468, 16, "child");
          return syntax_tree.TransparentNode.is(child) ? child.flattenedChildList : T$.JSArrayOfGreenNode().of([child]);
        }, T$.GreenNodeToListOfGreenNode()))[S.$toList]({growable: false});
        if (dart.test(this[S.__EquationRowNode_flattenedChildList_isSet])) dart.throw(new _internal.LateError.fieldADI("flattenedChildList"));
        this[S.__EquationRowNode_flattenedChildList] = t43;
        this[S.__EquationRowNode_flattenedChildList_isSet] = true;
      }
      t44 = this[S.__EquationRowNode_flattenedChildList];
      return t44;
    }
    get caretPositions() {
      let t45;
      if (!dart.test(this[S.__EquationRowNode_caretPositions_isSet])) {
        let t44 = this.computeCaretPositions();
        if (dart.test(this[S.__EquationRowNode_caretPositions_isSet])) dart.throw(new _internal.LateError.fieldADI("caretPositions"));
        this[S.__EquationRowNode_caretPositions] = t44;
        this[S.__EquationRowNode_caretPositions_isSet] = true;
      }
      t45 = this[S.__EquationRowNode_caretPositions];
      return t45;
    }
    computeCaretPositions() {
      let curPos = 1;
      return T$.ListOfint().generate(dart.notNull(this.flattenedChildList[S.$length]) + 1, dart.fn(index => {
        if (index == null) dart.nullFailed(I[33], 477, 58, "index");
        if (index === 0) return curPos;
        return curPos = curPos + dart.notNull(this.flattenedChildList[S.$_get](dart.notNull(index) - 1).editingWidth);
      }, T$.intToint()), {growable: false});
    }
    buildWidget(options, childBuildResults) {
      let t45, t45$;
      if (options == null) dart.nullFailed(I[33], 485, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[33], 485, 47, "childBuildResults");
      let flattenedBuildResults = childBuildResults[S.$expand](syntax_tree.BuildResult, dart.fn(result => {
        let t45;
        t45 = dart.nullCheck(result).results;
        return t45 == null ? T$.JSArrayOfBuildResult().of([result]) : t45;
      }, T$.BuildResultNToListOfBuildResult()))[S.$toList]({growable: false});
      let flattenedChildOptions = flattenedBuildResults[S.$map](options$.MathOptions, dart.fn(e => {
        if (e == null) dart.nullFailed(I[33], 490, 36, "e");
        return e.options;
      }, T$.BuildResultToMathOptions()))[S.$toList]({growable: false});
      let childSpacingConfs = T$.ListOf_NodeSpacingConf().generate(this.flattenedChildList[S.$length], dart.fn(index => {
        if (index == null) dart.nullFailed(I[33], 501, 8, "index");
        let e = this.flattenedChildList[S.$_get](index);
        return new syntax_tree._NodeSpacingConf.new(e.leftType, e.rightType, flattenedChildOptions[S.$_get](index), 0.0);
      }, T$.intTo_NodeSpacingConf()), {growable: false});
      syntax_tree._traverseNonSpaceNodes(childSpacingConfs, dart.fn((prev, curr) => {
        let t45, t45$, t45$0, t45$1;
        if ((t45 = prev, t45 == null ? null : t45.rightType) == syntax_tree.AtomType.bin && dart.test((C[178] || CT.C178).contains((t45$ = curr, t45$ == null ? null : t45$.leftType)))) {
          dart.nullCheck(prev).rightType = syntax_tree.AtomType.ord;
          if (prev.leftType == syntax_tree.AtomType.bin) {
            prev.leftType = syntax_tree.AtomType.ord;
          }
        } else if ((t45$0 = curr, t45$0 == null ? null : t45$0.leftType) == syntax_tree.AtomType.bin && dart.test((C[182] || CT.C182).contains((t45$1 = prev, t45$1 == null ? null : t45$1.rightType)))) {
          dart.nullCheck(curr).leftType = syntax_tree.AtomType.ord;
          if (curr.rightType == syntax_tree.AtomType.bin) {
            curr.rightType = syntax_tree.AtomType.ord;
          }
        }
      }, T$._NodeSpacingConfNAnd_NodeSpacingConfNTovoid()));
      syntax_tree._traverseNonSpaceNodes(childSpacingConfs, dart.fn((prev, curr) => {
        if (prev != null && curr != null) {
          prev.spacingAfter = spacing$.getSpacingSize(prev.rightType, curr.leftType, curr.options.style).toLpUnder(curr.options);
        }
      }, T$._NodeSpacingConfNAnd_NodeSpacingConfNTovoid()));
      this[S._key] = T$.GlobalKeyOfStateOfStatefulWidget().new();
      let lineChildren = T$.ListOfLineElement().generate(flattenedBuildResults[S.$length], dart.fn(index => {
        if (index == null) dart.nullFailed(I[33], 550, 8, "index");
        return new line.LineElement.new({child: flattenedBuildResults[S.$_get](index).widget, canBreakBefore: false, alignerOrSpacer: space.SpaceNode.is(this.flattenedChildList[S.$_get](index)) && dart.test(space.SpaceNode.as(this.flattenedChildList[S.$_get](index)).alignerOrSpacer), trailingMargin: childSpacingConfs[S.$_get](index).spacingAfter, $creationLocationd_0dea112b090073317d4: C[186] || CT.C186});
      }, T$.intToLineElement()), {growable: false});
      let widget = new (T$.ConsumerOfFlutterMathMode()).new({builder: dart.fn((context, mode, child) => {
          if (context == null) dart.nullFailed(I[33], 560, 56, "context");
          if (mode == null) dart.nullFailed(I[33], 560, 65, "mode");
          if (mode == mode$.FlutterMathMode.view) {
            return new line.Line.new({key: dart.nullCheck(this[S._key]), children: lineChildren, $creationLocationd_0dea112b090073317d4: C[192] || CT.C192});
          }
          return new (T$.ProxyProviderOfTextSelection$TextSelection()).new({create: dart.fn(_ => {
              if (_ == null) dart.nullFailed(I[33], 570, 18, "_");
              return C[158] || CT.C158;
            }, T$.BuildContextToTextSelection()), update: dart.fn((context, selection, _) => {
              if (context == null) dart.nullFailed(I[33], 571, 18, "context");
              if (selection == null) dart.nullFailed(I[33], 571, 27, "selection");
              return selection.copyWith({baseOffset: num_extension['IntExt|clampInt'](selection.baseOffset, dart.notNull(this.range.start) - 1, dart.notNull(this.range.end) + 1), extentOffset: num_extension['IntExt|clampInt'](selection.extentOffset, dart.notNull(this.range.start) - 1, dart.notNull(this.range.end) + 1)});
            }, T$.BuildContextAndTextSelectionAndTextSelectionNToTextSelection()), child: new (T$.Selector2OfTextSelection$Tuple2OfLayerLink$LayerLink$Tuple3OfTextSelection$LayerLinkN$LayerLinkN()).new({selector: dart.fn((context, selection, handleLayerLinks) => {
                if (context == null) dart.nullFailed(I[33], 581, 22, "context");
                if (selection == null) dart.nullFailed(I[33], 581, 31, "selection");
                if (handleLayerLinks == null) dart.nullFailed(I[33], 581, 42, "handleLayerLinks");
                let start = dart.notNull(selection.start) - dart.notNull(this.pos);
                let end = dart.notNull(selection.end) - dart.notNull(this.pos);
                let caretStart = iterable_extensions['NumListSearchExt|slotFor'](core.int, this.caretPositions, start)[S.$ceil]();
                let caretEnd = iterable_extensions['NumListSearchExt|slotFor'](core.int, this.caretPositions, end)[S.$floor]();
                let caretSelection = caretStart <= caretEnd ? dart.notNull(selection.baseOffset) <= dart.notNull(selection.extentOffset) ? new text_editing.TextSelection.new({baseOffset: caretStart, extentOffset: caretEnd}) : new text_editing.TextSelection.new({baseOffset: caretEnd, extentOffset: caretStart}) : C[158] || CT.C158;
                let startHandleLayerLink = dart.test(this.caretPositions[S.$contains](start)) ? handleLayerLinks.item1 : null;
                let endHandleLayerLink = dart.test(this.caretPositions[S.$contains](end)) ? handleLayerLinks.item2 : null;
                return new (T$.Tuple3OfTextSelection$LayerLinkN$LayerLinkN()).new(caretSelection, startHandleLayerLink, endHandleLayerLink);
              }, T$.BuildContextAndTextSelectionAndTuple2OfLayerLink$LayerLinkToTuple3OfTextSelection$LayerLinkN$LayerLinkN()), builder: dart.fn((context, conf, _) => {
                if (context == null) dart.nullFailed(I[33], 606, 21, "context");
                if (conf == null) dart.nullFailed(I[33], 606, 30, "conf");
                let value = provider.Provider.of(selectable.SelectionStyle, context);
                return new line_editable.EditableLine.new({key: this[S._key], children: lineChildren, devicePixelRatio: media_query.MediaQuery.of(context).devicePixelRatio, node: this, preferredLineHeight: options.fontSize, cursorBlinkOpacityController: provider.Provider.of(T$.WrapperOfAnimationController(), context).value, selection: conf.item1, startHandleLayerLink: conf.item2, endHandleLayerLink: conf.item3, cursorColor: value.cursorColor, cursorOffset: value.cursorOffset, cursorRadius: value.cursorRadius, cursorWidth: value.cursorWidth, cursorHeight: value.cursorHeight, hintingColor: value.hintingColor, paintCursorAboveText: value.paintCursorAboveText, selectionColor: value.selectionColor, showCursor: value.showCursor, $creationLocationd_0dea112b090073317d4: C[196] || CT.C196});
              }, T$.BuildContextAndTuple3OfTextSelection$LayerLinkN$LayerLinkNAndWidgetNToEditableLine()), $creationLocationd_0dea112b090073317d4: C[216] || CT.C216}), $creationLocationd_0dea112b090073317d4: C[220] || CT.C220});
        }, T$.BuildContextAndFlutterMathModeAndWidgetNToWidget()), $creationLocationd_0dea112b090073317d4: C[225] || CT.C225});
      return new syntax_tree.BuildResult.new({options: options, italic: (t45$ = (t45 = iterable_extensions$['IterableExtension|get#lastOrNull'](syntax_tree.BuildResult, flattenedBuildResults), t45 == null ? null : t45.italic), t45$ == null ? 0.0 : t45$), skew: flattenedBuildResults[S.$length] === 1 ? flattenedBuildResults[S.$first].italic : 0.0, widget: widget});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[33], 645, 53, "options");
      return T$.ListOfMathOptions().filled(this.children[S.$length], options, {growable: false});
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[33], 649, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[33], 649, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfGreenNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[33], 653, 50, "newChildren");
      return this.copyWith({children: newChildren});
    }
    get leftType() {
      let t45;
      t45 = this.overrideType;
      return t45 == null ? syntax_tree.AtomType.ord : t45;
    }
    get rightType() {
      let t45;
      t45 = this.overrideType;
      return t45 == null ? syntax_tree.AtomType.ord : t45;
    }
    toJson() {
      let t45;
      t45 = super.toJson();
      return (() => {
        t45[S.$addAll]((() => {
          let t46 = new (T$.IdentityMapOfString$ObjectN()).new();
          t46[S.$_set]("children", this.children[S.$map](T$.MapOfString$ObjectN(), dart.fn(child => {
            if (child == null) dart.nullFailed(I[33], 664, 33, "child");
            return child.toJson();
          }, T$.GreenNodeToMapOfString$ObjectN()))[S.$toList]());
          if (this.overrideType != null) t46[S.$_set]("overrideType", this.overrideType);
          return t46;
        })());
        return t45;
      })();
    }
    copyWith(opts) {
      let t46, t46$;
      let overrideType = opts && 'overrideType' in opts ? opts.overrideType : null;
      let children = opts && 'children' in opts ? opts.children : null;
      return new syntax_tree.EquationRowNode.new({overrideType: (t46 = overrideType, t46 == null ? this.overrideType : t46), children: (t46$ = children, t46$ == null ? this.children : t46$)});
    }
  };
  (syntax_tree.EquationRowNode.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[33], 460, 19, "children");
    let overrideType = opts && 'overrideType' in opts ? opts.overrideType : null;
    this[S._key] = null;
    this[S.__EquationRowNode_flattenedChildList] = null;
    this[S.__EquationRowNode_flattenedChildList_isSet] = false;
    this[S.__EquationRowNode_caretPositions] = null;
    this[S.__EquationRowNode_caretPositions_isSet] = false;
    this[S.children$4] = children;
    this[S.overrideType] = overrideType;
    syntax_tree.EquationRowNode.__proto__.new.call(this);
    ;
  }).prototype = syntax_tree.EquationRowNode.prototype;
  dart.addTypeTests(syntax_tree.EquationRowNode);
  dart.addTypeCaches(syntax_tree.EquationRowNode);
  dart.setMethodSignature(syntax_tree.EquationRowNode, () => ({
    __proto__: dart.getMethods(syntax_tree.EquationRowNode.__proto__),
    computeWidth: dart.fnType(core.int, []),
    computeChildPositions: dart.fnType(core.List$(core.int), []),
    computeCaretPositions: dart.fnType(core.List$(core.int), []),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(syntax_tree.EquationRowNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(syntax_tree.EquationRowNode, [], {children: dart.nullable(core.List$(syntax_tree.GreenNode)), overrideType: dart.nullable(syntax_tree.AtomType)}, {})
  }));
  dart.setGetterSignature(syntax_tree.EquationRowNode, () => ({
    __proto__: dart.getGetters(syntax_tree.EquationRowNode.__proto__),
    key: dart.nullable(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    flattenedChildList: core.List$(syntax_tree.GreenNode),
    caretPositions: core.List$(core.int),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(syntax_tree.EquationRowNode, I[34]);
  dart.setFieldSignature(syntax_tree.EquationRowNode, () => ({
    __proto__: dart.getFields(syntax_tree.EquationRowNode.__proto__),
    overrideType: dart.finalFieldType(dart.nullable(syntax_tree.AtomType)),
    children: dart.finalFieldType(core.List$(syntax_tree.GreenNode)),
    [S._key]: dart.fieldType(dart.nullable(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
    [S.__EquationRowNode_flattenedChildList]: dart.fieldType(dart.nullable(core.List$(syntax_tree.GreenNode))),
    [S.__EquationRowNode_flattenedChildList_isSet]: dart.fieldType(core.bool),
    [S.__EquationRowNode_caretPositions]: dart.fieldType(dart.nullable(core.List$(core.int))),
    [S.__EquationRowNode_caretPositions_isSet]: dart.fieldType(core.bool)
  }));
  equation_array.EquationArrayNode = class EquationArrayNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get arrayStretch() {
      return this[S.arrayStretch];
    }
    set arrayStretch(value) {
      super.arrayStretch = value;
    }
    get addJot() {
      return this[S.addJot];
    }
    set addJot(value) {
      super.addJot = value;
    }
    get body() {
      return this[S.body];
    }
    set body(value) {
      super.body = value;
    }
    get hlines() {
      return this[S.hlines$1];
    }
    set hlines(value) {
      super.hlines = value;
    }
    get rowSpacings() {
      return this[S.rowSpacings$1];
    }
    set rowSpacings(value) {
      super.rowSpacings = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[47], 47, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[47], 47, 51, "childBuildResults");
      return new syntax_tree.BuildResult.new({options: options, widget: new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options), child: new eqn_array.EqnArray.new({ruleThickness: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.defaultRuleThickness).toLpUnder(options), jotSize: dart.test(this.addJot) ? size$['MeasurementExtOnNum|get#pt'](3.0).toLpUnder(options) : 0.0, arrayskip: dart.notNull(size$['MeasurementExtOnNum|get#pt'](12.0).toLpUnder(options)) * dart.notNull(this.arrayStretch), hlines: this.hlines, rowSpacings: this.rowSpacings[S.$map](core.double, dart.fn(e => {
              if (e == null) dart.nullFailed(I[47], 60, 23, "e");
              return e.toLpUnder(options);
            }, T$.MeasurementTodouble()))[S.$toList]({growable: false}), children: childBuildResults[S.$map](framework.Widget, dart.fn(e => dart.nullCheck(e).widget, T$.BuildResultNToWidget()))[S.$toList]({growable: false}), $creationLocationd_0dea112b090073317d4: C[165] || CT.C165}), $creationLocationd_0dea112b090073317d4: C[173] || CT.C173})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[47], 69, 53, "options");
      return T$.ListOfMathOptions().filled(this.body[S.$length], options, {growable: false});
    }
    computeChildren() {
      return this.body;
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[47], 82, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[47], 82, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[47], 86, 58, "newChildren");
      return this.copyWith({body: newChildren});
    }
    toJson() {
      let t39;
      t39 = super.toJson();
      return (() => {
        t39[S.$addAll]((() => {
          let t40 = new (T$.IdentityMapOfString$ObjectN()).new();
          if (this.addJot !== false) t40[S.$_set]("addJot", this.addJot);
          t40[S.$_set]("body", this.body[S.$map](T$.MapOfString$ObjectN(), dart.fn(e => {
            if (e == null) dart.nullFailed(I[47], 93, 25, "e");
            return e.toJson();
          }, T$.EquationRowNodeToMapOfString$ObjectN())));
          if (this.arrayStretch !== 1.0) t40[S.$_set]("arrayStretch", this.arrayStretch);
          t40[S.$_set]("hlines", this.hlines[S.$map](core.String, dart.fn(e => {
            if (e == null) dart.nullFailed(I[47], 95, 29, "e");
            return dart.toString(e);
          }, T$.MatrixSeparatorStyleToString())));
          t40[S.$_set]("rowSpacings", this.rowSpacings[S.$map](core.String, dart.fn(e => {
            if (e == null) dart.nullFailed(I[47], 96, 39, "e");
            return dart.toString(e);
          }, T$.MeasurementToString())));
          return t40;
        })());
        return t39;
      })();
    }
    copyWith(opts) {
      let t40, t40$, t40$0, t40$1, t40$2;
      let arrayStretch = opts && 'arrayStretch' in opts ? opts.arrayStretch : null;
      let addJot = opts && 'addJot' in opts ? opts.addJot : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let hlines = opts && 'hlines' in opts ? opts.hlines : null;
      let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : null;
      return new equation_array.EquationArrayNode.new({arrayStretch: (t40 = arrayStretch, t40 == null ? this.arrayStretch : t40), addJot: (t40$ = addJot, t40$ == null ? this.addJot : t40$), body: (t40$0 = body, t40$0 == null ? this.body : t40$0), hlines: (t40$1 = hlines, t40$1 == null ? this.hlines : t40$1), rowSpacings: (t40$2 = rowSpacings, t40$2 == null ? this.rowSpacings : t40$2)});
    }
  };
  (equation_array.EquationArrayNode.new = function(opts) {
    let t39, t39$;
    let addJot = opts && 'addJot' in opts ? opts.addJot : false;
    if (addJot == null) dart.nullFailed(I[47], 35, 10, "addJot");
    let body = opts && 'body' in opts ? opts.body : null;
    if (body == null) dart.nullFailed(I[47], 36, 19, "body");
    let arrayStretch = opts && 'arrayStretch' in opts ? opts.arrayStretch : 1;
    if (arrayStretch == null) dart.nullFailed(I[47], 37, 10, "arrayStretch");
    let hlines = opts && 'hlines' in opts ? opts.hlines : null;
    let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : null;
    this[S.addJot] = addJot;
    this[S.body] = body;
    this[S.arrayStretch] = arrayStretch;
    this[S.hlines$1] = iterable_extensions['ListExtension|extendToByFill'](matrix.MatrixSeparatorStyle, (t39 = hlines, t39 == null ? T$.JSArrayOfMatrixSeparatorStyle().of([]) : t39), dart.notNull(body[S.$length]) + 1, matrix.MatrixSeparatorStyle.none);
    this[S.rowSpacings$1] = iterable_extensions['ListExtension|extendToByFill'](size$.Measurement, (t39$ = rowSpacings, t39$ == null ? T$.JSArrayOfMeasurement().of([]) : t39$), body[S.$length], size$.Measurement.zero);
    equation_array.EquationArrayNode.__proto__.new.call(this);
    ;
  }).prototype = equation_array.EquationArrayNode.prototype;
  dart.addTypeTests(equation_array.EquationArrayNode);
  dart.addTypeCaches(equation_array.EquationArrayNode);
  dart.setMethodSignature(equation_array.EquationArrayNode, () => ({
    __proto__: dart.getMethods(equation_array.EquationArrayNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(equation_array.EquationArrayNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(equation_array.EquationArrayNode, [], {addJot: dart.nullable(core.bool), arrayStretch: dart.nullable(core.double), body: dart.nullable(core.List$(syntax_tree.EquationRowNode)), hlines: dart.nullable(core.List$(matrix.MatrixSeparatorStyle)), rowSpacings: dart.nullable(core.List$(size$.Measurement))}, {})
  }));
  dart.setGetterSignature(equation_array.EquationArrayNode, () => ({
    __proto__: dart.getGetters(equation_array.EquationArrayNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(equation_array.EquationArrayNode, I[48]);
  dart.setFieldSignature(equation_array.EquationArrayNode, () => ({
    __proto__: dart.getFields(equation_array.EquationArrayNode.__proto__),
    arrayStretch: dart.finalFieldType(core.double),
    addJot: dart.finalFieldType(core.bool),
    body: dart.finalFieldType(core.List$(syntax_tree.EquationRowNode)),
    hlines: dart.finalFieldType(core.List$(matrix.MatrixSeparatorStyle)),
    rowSpacings: dart.finalFieldType(core.List$(size$.Measurement))
  }));
  eqn_array$._casesHandler = function _casesHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[49], 62, 35, "parser");
    if (context == null) dart.nullFailed(I[49], 62, 54, "context");
    let body = eqn_array$.parseEqnArray(parser, {concatRow: dart.fn(cells => {
        if (cells == null) dart.nullFailed(I[49], 65, 17, "cells");
        let children = (() => {
          let t47 = T$.JSArrayOfGreenNode().of([new space.SpaceNode.alignerOrSpacer()]);
          if (dart.notNull(cells[S.$length]) >= 1) t47[S.$addAll](cells[S.$_get](0).children);
          if (dart.notNull(cells[S.$length]) > 1) t47[S.$add](new space.SpaceNode.alignerOrSpacer());
          if (dart.notNull(cells[S.$length]) > 1) t47[S.$add](new space.SpaceNode.new({height: size$.Measurement.zero, width: size$['MeasurementExtOnNum|get#em'](1.0), mode: types.Mode.math}));
          return t47;
        })();
        for (let i = 1; i < dart.notNull(cells[S.$length]); i = i + 1) {
          children[S.$add](new space.SpaceNode.alignerOrSpacer());
          children[S.$addAll](cells[S.$_get](i).children);
          children[S.$add](new space.SpaceNode.alignerOrSpacer());
        }
        if (context.envName === "dcases" || context.envName === "drcases") {
          return new syntax_tree.EquationRowNode.new({children: T$.JSArrayOfGreenNode().of([new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({style: style$0.MathStyle.display}), children: children})])});
        } else {
          return new syntax_tree.EquationRowNode.new({children: children});
        }
      }, T$.ListOfEquationRowNodeToEquationRowNode())});
    if (context.envName === "rcases" || context.envName === "drcases") {
      return new left_right.LeftRightNode.new({leftDelim: null, rightDelim: "}", body: T$.JSArrayOfEquationRowNode().of([syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body)])});
    } else {
      return new left_right.LeftRightNode.new({leftDelim: "{", rightDelim: null, body: T$.JSArrayOfEquationRowNode().of([syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body)])});
    }
  };
  eqn_array$._alignedHandler = function _alignedHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[49], 105, 37, "parser");
    if (context == null) dart.nullFailed(I[49], 105, 56, "context");
    return eqn_array$.parseEqnArray(parser, {addJot: true, concatRow: dart.fn(cells => {
        if (cells == null) dart.nullFailed(I[49], 109, 19, "cells");
        let expanded = cells[S.$expand](syntax_tree.GreenNode, dart.fn(cell => {
          if (cell == null) dart.nullFailed(I[49], 111, 22, "cell");
          return (() => {
            let t48 = T$.ListOfGreenNode().of(cell.children);
            t48[S.$add](new space.SpaceNode.alignerOrSpacer());
            return t48;
          })();
        }, T$.EquationRowNodeToListOfGreenNode()))[S.$toList]({growable: true});
        return new syntax_tree.EquationRowNode.new({children: expanded});
      }, T$.ListOfEquationRowNodeToEquationRowNode())});
  };
  eqn_array$._alignedAtHandler = function _alignedAtHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[49], 119, 39, "parser");
    if (context == null) dart.nullFailed(I[49], 119, 58, "context");
    let arg = parser.parseArgNode({mode: null, optional: false});
    let numNode = parser$.assertNodeType(syntax_tree.EquationRowNode, arg);
    let string = numNode.children[S.$map](core.String, dart.fn(e => {
      if (e == null) dart.nullFailed(I[49], 123, 13, "e");
      return parser$.assertNodeType(symbol$.SymbolNode, e).symbol;
    }, T$.GreenNodeToString()))[S.$join]("");
    let cols = core.int.tryParse(string);
    if (cols == null) {
      dart.throw(new parse_error.ParseException.new("Invalid argument for environment: alignedat"));
    }
    return eqn_array$.parseEqnArray(parser, {addJot: true, concatRow: dart.fn(cells => {
        if (cells == null) dart.nullFailed(I[49], 132, 17, "cells");
        if (dart.notNull(cells[S.$length]) > 2 * dart.notNull(cols)) {
          dart.throw(new parse_error.ParseException.new("Too many math in a row: " + "expected " + dart.str(2 * dart.notNull(cols)) + ", but got " + dart.str(cells[S.$length])));
        }
        let expanded = cells[S.$expand](syntax_tree.GreenNode, dart.fn(cell => {
          if (cell == null) dart.nullFailed(I[49], 138, 20, "cell");
          return (() => {
            let t49 = T$.ListOfGreenNode().of(cell.children);
            t49[S.$add](new space.SpaceNode.alignerOrSpacer());
            return t49;
          })();
        }, T$.EquationRowNodeToListOfGreenNode()))[S.$toList]({growable: true});
        return new syntax_tree.EquationRowNode.new({children: expanded});
      }, T$.ListOfEquationRowNodeToEquationRowNode())});
  };
  eqn_array$.parseEqnArray = function parseEqnArray(parser, opts) {
    let t50, t50$, t50$0;
    if (parser == null) dart.nullFailed(I[49], 146, 13, "parser");
    let addJot = opts && 'addJot' in opts ? opts.addJot : false;
    if (addJot == null) dart.nullFailed(I[49], 147, 8, "addJot");
    let concatRow = opts && 'concatRow' in opts ? opts.concatRow : null;
    if (concatRow == null) dart.nullFailed(I[49], 148, 66, "concatRow");
    parser.macroExpander.beginGroup();
    parser.macroExpander.macros.set("\\\\", new macros.MacroDefinition.fromString("\\cr"));
    let arrayStretch = 1.0;
    let stretch = parser.macroExpander.expandMacroAsText("\\arraystretch");
    if (stretch == null) {
      arrayStretch = 1.0;
    } else {
      arrayStretch = core.double.tryParse(stretch);
      if (arrayStretch == null || dart.notNull(arrayStretch) < 0) {
        dart.throw(new parse_error.ParseException.new("Invalid \\arraystretch: " + dart.str(stretch)));
      }
    }
    parser.macroExpander.beginGroup();
    let row = T$.JSArrayOfEquationRowNode().of([]);
    let body = T$.JSArrayOfListOfEquationRowNode().of([row]);
    let rowGaps = T$.JSArrayOfMeasurement().of([]);
    let hLinesBeforeRow = T$.JSArrayOfMatrixSeparatorStyle().of([]);
    hLinesBeforeRow[S.$add]((t50 = iterable_extensions$['IterableExtension|get#lastOrNull'](matrix.MatrixSeparatorStyle, array.getHLines(parser)), t50 == null ? matrix.MatrixSeparatorStyle.none : t50));
    while (true) {
      let cellBody = parser.parseExpression({breakOnInfix: false, breakOnTokenText: "\\cr"});
      parser.macroExpander.endGroup();
      parser.macroExpander.beginGroup();
      let cell = syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](cellBody);
      row[S.$add](cell);
      let next = parser.fetch().text;
      if (next === "&") {
        parser.consume();
      } else if (next === "\\end") {
        if (row[S.$length] === 1 && style$.StyleNode.is(cell) && dart.test(cell.children[S.$isEmpty])) {
          body[S.$removeLast]();
        }
        if (dart.notNull(hLinesBeforeRow[S.$length]) < dart.notNull(body[S.$length]) + 1) {
          hLinesBeforeRow[S.$add](matrix.MatrixSeparatorStyle.none);
        }
        break;
      } else if (next === "\\cr") {
        let cr = parser$.assertNodeType(katex_base.CrNode, parser.parseFunction(null, null, null));
        rowGaps[S.$add]((t50$ = cr.size, t50$ == null ? size$.Measurement.zero : t50$));
        hLinesBeforeRow[S.$add]((t50$0 = iterable_extensions$['IterableExtension|get#lastOrNull'](matrix.MatrixSeparatorStyle, array.getHLines(parser)), t50$0 == null ? matrix.MatrixSeparatorStyle.none : t50$0));
        row = T$.JSArrayOfEquationRowNode().of([]);
        body[S.$add](row);
      } else {
        dart.throw(new parse_error.ParseException.new("Expected & or \\\\ or \\cr or \\end", parser.nextToken));
      }
    }
    parser.macroExpander.endGroup();
    parser.macroExpander.endGroup();
    let rows = body[S.$map](syntax_tree.EquationRowNode, concatRow)[S.$toList]();
    return new equation_array.EquationArrayNode.new({arrayStretch: arrayStretch, hlines: hLinesBeforeRow, rowSpacings: rowGaps, addJot: addJot, body: rows});
  };
  dart.defineLazy(eqn_array$, {
    /*eqn_array$.eqnArrayEntries*/get eqnArrayEntries() {
      return C[229] || CT.C229;
    }
  }, false);
  dart.defineLazy(symbols_extra$, {
    /*symbols_extra$.extraTexMathSymbolCommandConfigs*/get extraTexMathSymbolCommandConfigs() {
      return C[239] || CT.C239;
    },
    /*symbols_extra$.extraTexTextSymbolCommandConfigs*/get extraTexTextSymbolCommandConfigs() {
      return C[258] || CT.C258;
    }
  }, false);
  symbols.TexSymbolConfig = class TexSymbolConfig extends core.Object {
    get symbol() {
      return this[S.symbol];
    }
    set symbol(value) {
      super.symbol = value;
    }
    get variantForm() {
      return this[S.variantForm];
    }
    set variantForm(value) {
      super.variantForm = value;
    }
    get type() {
      return this[S.type];
    }
    set type(value) {
      super.type = value;
    }
    get font() {
      return this[S.font];
    }
    set font(value) {
      super.font = value;
    }
  };
  (symbols.TexSymbolConfig.new = function(symbol, opts) {
    if (symbol == null) dart.nullFailed(I[50], 43, 10, "symbol");
    let variantForm = opts && 'variantForm' in opts ? opts.variantForm : false;
    if (variantForm == null) dart.nullFailed(I[50], 44, 10, "variantForm");
    let type = opts && 'type' in opts ? opts.type : null;
    let font = opts && 'font' in opts ? opts.font : null;
    this[S.symbol] = symbol;
    this[S.variantForm] = variantForm;
    this[S.type] = type;
    this[S.font] = font;
    ;
  }).prototype = symbols.TexSymbolConfig.prototype;
  dart.addTypeTests(symbols.TexSymbolConfig);
  dart.addTypeCaches(symbols.TexSymbolConfig);
  dart.setLibraryUri(symbols.TexSymbolConfig, I[51]);
  dart.setFieldSignature(symbols.TexSymbolConfig, () => ({
    __proto__: dart.getFields(symbols.TexSymbolConfig.__proto__),
    symbol: dart.finalFieldType(core.String),
    variantForm: dart.finalFieldType(core.bool),
    type: dart.finalFieldType(dart.nullable(syntax_tree.AtomType)),
    font: dart.finalFieldType(dart.nullable(options$.FontOptions))
  }));
  dart.defineLazy(symbols, {
    /*symbols.mainrm*/get mainrm() {
      return C[259] || CT.C259;
    },
    /*symbols.amsrm*/get amsrm() {
      return C[263] || CT.C263;
    },
    /*symbols.mathdefault*/get mathdefault() {
      return C[264] || CT.C264;
    },
    /*symbols.texSymbolCommandConfigs*/get texSymbolCommandConfigs() {
      return C[266] || CT.C266;
    },
    /*symbols.extraLatin*/get extraLatin() {
      return C[1362] || CT.C1362;
    },
    /*symbols.ligatures*/get ligatures() {
      return C[1363] || CT.C1363;
    }
  }, false);
  const _is_Namespace_default = Symbol('_is_Namespace_default');
  namespace.Namespace$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var MapOfString$TN = () => (MapOfString$TN = dart.constFn(core.Map$(core.String, TN())))();
    var JSArrayOfMapOfString$TN = () => (JSArrayOfMapOfString$TN = dart.constFn(_interceptors.JSArray$(MapOfString$TN())))();
    var LinkedHashMapOfString$T = () => (LinkedHashMapOfString$T = dart.constFn(collection.LinkedHashMap$(core.String, T)))();
    var IdentityMapOfString$TN = () => (IdentityMapOfString$TN = dart.constFn(_js_helper.IdentityMap$(core.String, TN())))();
    var StringAndTNTovoid = () => (StringAndTNTovoid = dart.constFn(dart.fnType(dart.void, [core.String, TN()])))();
    class Namespace extends core.Object {
      get current() {
        return this[S.current];
      }
      set current(value) {
        super.current = value;
      }
      get builtins() {
        return this[S.builtins];
      }
      set builtins(value) {
        super.builtins = value;
      }
      get undefStack() {
        return this[S.undefStack];
      }
      set undefStack(value) {
        super.undefStack = value;
      }
      get(name) {
        if (name == null) dart.nullFailed(I[52], 33, 17, "name");
        let currentRes = this.current[S.$_get](name);
        if (currentRes != null) {
          return currentRes;
        }
        return this.builtins[S.$_get](name);
      }
      set(name, value, opts) {
        if (name == null) dart.nullFailed(I[52], 41, 19, "name");
        T.as(value);
        let global = opts && 'global' in opts ? opts.global : false;
        if (global == null) dart.nullFailed(I[52], 41, 40, "global");
        if (dart.test(global)) {
          for (let undef of this.undefStack) {
            undef[S.$remove](name);
          }
          if (dart.test(this.undefStack[S.$isNotEmpty])) {
            this.undefStack[S.$last][S.$_set](name, value);
          }
        } else {
          if (dart.test(this.undefStack[S.$isNotEmpty])) {
            this.undefStack[S.$last][S.$_set](name, this.current[S.$_get](name));
          }
        }
        this.current[S.$_set](name, value);
      }
      has(name) {
        if (name == null) dart.nullFailed(I[52], 57, 19, "name");
        return dart.test(this.current[S.$containsKey](name)) || dart.test(this.builtins[S.$containsKey](name));
      }
      beginGroup() {
        this.undefStack[S.$add](new (IdentityMapOfString$TN()).new());
      }
      endGroup() {
        if (dart.test(this.undefStack[S.$isEmpty])) {
          dart.throw(new parse_error.ParseException.new("Unbalanced namespace destruction: attempt " + "to pop global namespace; please report this as a bug"));
        }
        let undefs = this.undefStack[S.$removeLast]();
        undefs[S.$forEach](dart.fn((key, value) => {
          if (key == null) dart.nullFailed(I[52], 70, 21, "key");
          if (value == null) {
            this.current[S.$remove](key);
          } else {
            this.current[S.$_set](key, value);
          }
        }, StringAndTNTovoid()));
      }
    }
    (Namespace.new = function(builtins, current) {
      if (builtins == null) dart.nullFailed(I[52], 27, 18, "builtins");
      if (current == null) dart.nullFailed(I[52], 27, 43, "current");
      this[S.undefStack] = JSArrayOfMapOfString$TN().of([]);
      this[S.builtins] = builtins;
      this[S.current] = LinkedHashMapOfString$T().from(current);
      ;
    }).prototype = Namespace.prototype;
    dart.addTypeTests(Namespace);
    Namespace.prototype[_is_Namespace_default] = true;
    dart.addTypeCaches(Namespace);
    dart.setMethodSignature(Namespace, () => ({
      __proto__: dart.getMethods(Namespace.__proto__),
      get: dart.fnType(dart.nullable(T), [core.String]),
      set: dart.fnType(dart.void, [core.String, dart.nullable(core.Object)], {global: core.bool}, {}),
      has: dart.fnType(core.bool, [core.String]),
      beginGroup: dart.fnType(dart.void, []),
      endGroup: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(Namespace, I[53]);
    dart.setFieldSignature(Namespace, () => ({
      __proto__: dart.getFields(Namespace.__proto__),
      current: dart.finalFieldType(core.Map$(core.String, T)),
      builtins: dart.finalFieldType(core.Map$(core.String, T)),
      undefStack: dart.finalFieldType(core.List$(core.Map$(core.String, dart.nullable(T))))
    }));
    return Namespace;
  });
  namespace.Namespace = namespace.Namespace$();
  dart.addTypeTests(namespace.Namespace, _is_Namespace_default);
  macro_expander.MacroExpander = class MacroExpander extends core.Object {
    get input() {
      return this[S.input];
    }
    set input(value) {
      this[S.input] = value;
    }
    get settings() {
      return this[S.settings];
    }
    set settings(value) {
      this[S.settings] = value;
    }
    get mode() {
      return this[S.mode$1];
    }
    set mode(value) {
      this[S.mode$1] = value;
    }
    get expansionCount() {
      return this[S.expansionCount];
    }
    set expansionCount(value) {
      this[S.expansionCount] = value;
    }
    get stack() {
      return this[S.stack];
    }
    set stack(value) {
      this[S.stack] = value;
    }
    get lexer() {
      return this[S.lexer];
    }
    set lexer(value) {
      this[S.lexer] = value;
    }
    get macros() {
      return this[S.macros];
    }
    set macros(value) {
      this[S.macros] = value;
    }
    expandAfterFuture() {
      this.expandOnce();
      return this.future();
    }
    expandNextToken() {
      while (true) {
        let expanded = this.expandOnce();
        if (expanded != null) {
          if (expanded.text === "\\relax") {
            this.stack[S.$removeLast]();
          } else {
            return this.stack[S.$removeLast]();
          }
        }
      }
    }
    beginGroup() {
      this.macros.beginGroup();
    }
    endGroup() {
      this.macros.endGroup();
    }
    expandOnce(expandableOnly = false) {
      if (expandableOnly == null) dart.nullFailed(I[54], 85, 27, "expandableOnly");
      let topToken = this.popToken();
      let name = topToken.text;
      let expansion = !dart.test(topToken.noexpand) ? this[S._getExpansion](name) : null;
      if (expansion == null || dart.test(expandableOnly) && dart.test(expansion.unexpandable)) {
        if (dart.test(expandableOnly) && expansion == null && name[S.$_get](0) === "\\" && dart.test(this.isDefined(name))) {
          dart.throw(new parse_error.ParseException.new("Undefined control sequence: " + dart.str(name)));
        }
        this.pushToken(topToken);
        return topToken;
      }
      this.expansionCount = dart.notNull(this.expansionCount) + 1;
      if (dart.notNull(this.expansionCount) > dart.notNull(this.settings.maxExpand)) {
        dart.throw(new parse_error.ParseException.new("Too many expansions: infinite loop or " + "need to increase maxExpand setting"));
      }
      let tokens = expansion.tokens;
      if (expansion.numArgs !== 0) {
        let args = this.consumeArgs(expansion.numArgs);
        tokens = tokens[S.$toList]();
        for (let i = dart.notNull(tokens[S.$length]) - 1; i >= 0; i = i - 1) {
          let tok = tokens[S.$_get](i);
          if (tok.text === "#") {
            if (i === 0) {
              dart.throw(new parse_error.ParseException.new("Incomplete placeholder at end of macro body", tok));
            }
            i = i - 1;
            tok = tokens[S.$_get](i);
            if (tok.text === "#") {
              tokens[S.$removeAt](i + 1);
            } else {
              try {
                tokens[S.$replaceRange](i, i + 2, args[S.$_get](dart.notNull(core.int.parse(tok.text)) - 1));
              } catch (e) {
                let ex = dart.getThrown(e);
                if (core.FormatException.is(ex)) {
                  dart.throw(new parse_error.ParseException.new("Not a valid argument number", tok));
                } else
                  throw e;
              }
            }
          }
        }
      }
      this.pushTokens(tokens);
      return null;
    }
    pushToken(token) {
      if (token == null) dart.nullFailed(I[54], 136, 24, "token");
      this.stack[S.$add](token);
    }
    pushTokens(tokens) {
      if (tokens == null) dart.nullFailed(I[54], 140, 31, "tokens");
      this.stack[S.$addAll](tokens);
    }
    popToken() {
      this.future();
      return this.stack[S.$removeLast]();
    }
    future() {
      if (dart.test(this.stack[S.$isEmpty])) {
        this.stack[S.$add](this.lexer.lex());
      }
      return this.stack[S.$last];
    }
    [S._getExpansion](name) {
      let t52;
      if (name == null) dart.nullFailed(I[54], 156, 40, "name");
      let definition = this.macros.get(name);
      if (definition == null) {
        return null;
      }
      t52 = definition;
      return t52.expand(this);
    }
    consumeArgs(numArgs) {
      if (numArgs == null) dart.nullFailed(I[54], 164, 37, "numArgs");
      let args = T$.ListOfListOfToken().generate(numArgs, dart.fn(i => {
        if (i == null) dart.nullFailed(I[54], 165, 55, "i");
        this.consumeSpaces();
        let startOfArg = this.popToken();
        if (startOfArg.text === "{") {
          let arg = T$.JSArrayOfToken().of([]);
          let depth = 1;
          while (depth !== 0) {
            let tok = this.popToken();
            arg[S.$add](tok);
            switch (tok.text) {
              case "{":
              {
                depth = depth + 1;
                break;
              }
              case "}":
              {
                depth = depth - 1;
                break;
              }
              case "EOF":
              {
                dart.throw(new parse_error.ParseException.new("End of input in macro argument", startOfArg));
              }
            }
          }
          arg[S.$removeLast]();
          return arg[S.$reversed][S.$toList]();
        } else if (startOfArg.text === "EOF") {
          dart.throw(new parse_error.ParseException.new("End of input expecting macro argument"));
        } else {
          return T$.JSArrayOfToken().of([startOfArg]);
        }
      }, T$.intToListOfToken()));
      return args;
    }
    consumeSpaces() {
      while (true) {
        let token = this.future();
        if (token.text === " ") {
          this.stack[S.$removeLast]();
        } else {
          break;
        }
      }
    }
    isDefined(name) {
      if (name == null) dart.nullFailed(I[54], 208, 25, "name");
      return dart.test(this.macros.has(name)) || dart.test(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$containsKey](name)) || dart.test(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.text))[S.$containsKey](name)) || dart.test(functions$.functions[S.$containsKey](name)) || dart.test(macro_expander.implicitCommands.contains(name));
    }
    isExpandable(name) {
      let t52, t52$;
      if (name == null) dart.nullFailed(I[54], 215, 28, "name");
      let macro = this.macros.get(name);
      t52$ = (t52 = macro, t52 == null ? null : t52.expandable);
      return t52$ == null ? functions$.functions[S.$containsKey](name) : t52$;
    }
    getNewLexer(input) {
      if (input == null) dart.nullFailed(I[54], 220, 28, "input");
      return new lexer.Lexer.new(input, this.settings);
    }
    expandMacroAsText(name) {
      if (name == null) dart.nullFailed(I[54], 222, 36, "name");
      let tokens = this.expandMacro(name);
      if (tokens != null) {
        return tokens[S.$map](core.String, dart.fn(token => {
          if (token == null) dart.nullFailed(I[54], 225, 26, "token");
          return token.text;
        }, T$.TokenToString()))[S.$join]("");
      }
      return null;
    }
    expandMacro(name) {
      if (name == null) dart.nullFailed(I[54], 230, 35, "name");
      if (this.macros.get(name) == null) {
        return null;
      }
      let output = T$.JSArrayOfToken().of([]);
      let oldStackLength = this.stack[S.$length];
      this.pushToken(new token.Token.new(name));
      while (dart.notNull(this.stack[S.$length]) > dart.notNull(oldStackLength)) {
        let expanded = this.expandOnce();
        if (expanded != null) {
          output[S.$add](this.stack[S.$removeLast]());
        }
      }
      return output;
    }
  };
  (macro_expander.MacroExpander.new = function(input, settings, mode) {
    if (input == null) dart.nullFailed(I[54], 45, 22, "input");
    if (settings == null) dart.nullFailed(I[54], 45, 34, "settings");
    if (mode == null) dart.nullFailed(I[54], 45, 49, "mode");
    this[S.expansionCount] = 0;
    this[S.stack] = T$.JSArrayOfToken().of([]);
    this[S.input] = input;
    this[S.settings] = settings;
    this[S.mode$1] = mode;
    this[S.macros] = new (T$.NamespaceOfMacroDefinition()).new(macros.builtinMacros, settings.macros);
    this[S.lexer] = new lexer.Lexer.new(input, settings);
    ;
  }).prototype = macro_expander.MacroExpander.prototype;
  dart.addTypeTests(macro_expander.MacroExpander);
  dart.addTypeCaches(macro_expander.MacroExpander);
  macro_expander.MacroExpander[dart.implements] = () => [macro_expander.MacroContext];
  dart.setMethodSignature(macro_expander.MacroExpander, () => ({
    __proto__: dart.getMethods(macro_expander.MacroExpander.__proto__),
    expandAfterFuture: dart.fnType(token.Token, []),
    expandNextToken: dart.fnType(token.Token, []),
    beginGroup: dart.fnType(dart.void, []),
    endGroup: dart.fnType(dart.void, []),
    expandOnce: dart.fnType(dart.nullable(token.Token), [], [core.bool]),
    pushToken: dart.fnType(dart.void, [token.Token]),
    pushTokens: dart.fnType(dart.void, [core.List$(token.Token)]),
    popToken: dart.fnType(token.Token, []),
    future: dart.fnType(token.Token, []),
    [S._getExpansion]: dart.fnType(dart.nullable(macros.MacroExpansion), [core.String]),
    consumeArgs: dart.fnType(core.List$(core.List$(token.Token)), [core.int]),
    consumeSpaces: dart.fnType(dart.void, []),
    isDefined: dart.fnType(core.bool, [core.String]),
    isExpandable: dart.fnType(core.bool, [core.String]),
    getNewLexer: dart.fnType(lexer.Lexer, [core.String]),
    expandMacroAsText: dart.fnType(dart.nullable(core.String), [core.String]),
    expandMacro: dart.fnType(dart.nullable(core.List$(token.Token)), [core.String])
  }));
  dart.setLibraryUri(macro_expander.MacroExpander, I[55]);
  dart.setFieldSignature(macro_expander.MacroExpander, () => ({
    __proto__: dart.getFields(macro_expander.MacroExpander.__proto__),
    input: dart.fieldType(core.String),
    settings: dart.fieldType(settings.TexParserSettings),
    mode: dart.fieldType(types.Mode),
    expansionCount: dart.fieldType(core.int),
    stack: dart.fieldType(core.List$(token.Token)),
    lexer: dart.fieldType(lexer.Lexer),
    macros: dart.fieldType(namespace.Namespace$(macros.MacroDefinition))
  }));
  macro_expander.MacroContext = class MacroContext extends core.Object {};
  (macro_expander.MacroContext.new = function() {
    ;
  }).prototype = macro_expander.MacroContext.prototype;
  dart.addTypeTests(macro_expander.MacroContext);
  dart.addTypeCaches(macro_expander.MacroContext);
  dart.setLibraryUri(macro_expander.MacroContext, I[55]);
  dart.defineLazy(macro_expander, {
    /*macro_expander.implicitCommands*/get implicitCommands() {
      return C[1364] || CT.C1364;
    }
  }, false);
  parser$.TexParser = class TexParser extends core.Object {
    get settings() {
      return this[S.settings$1];
    }
    set settings(value) {
      super.settings = value;
    }
    get mode() {
      return this[S.mode$2];
    }
    set mode(value) {
      this[S.mode$2] = value;
    }
    get leftrightDepth() {
      return this[S.leftrightDepth];
    }
    set leftrightDepth(value) {
      this[S.leftrightDepth] = value;
    }
    get macroExpander() {
      return this[S.macroExpander];
    }
    set macroExpander(value) {
      super.macroExpander = value;
    }
    get nextToken() {
      return this[S.nextToken];
    }
    set nextToken(value) {
      this[S.nextToken] = value;
    }
    get argParsingContexts() {
      return this[S.argParsingContexts];
    }
    set argParsingContexts(value) {
      super.argParsingContexts = value;
    }
    parse() {
      if (!dart.test(this.settings.globalGroup)) {
        this.macroExpander.beginGroup();
      }
      if (dart.test(this.settings.colorIsTextColor)) {
        this.macroExpander.macros.set("\\color", new macros.MacroDefinition.fromString("\\textcolor"));
      }
      let parse = this.parseExpression({breakOnInfix: false});
      this.expect("EOF");
      if (!dart.test(this.settings.globalGroup)) {
        this.macroExpander.endGroup();
      }
      return syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](parse);
    }
    parseExpression(opts) {
      let t53, t52;
      let breakOnInfix = opts && 'breakOnInfix' in opts ? opts.breakOnInfix : false;
      if (breakOnInfix == null) dart.nullFailed(I[56], 90, 10, "breakOnInfix");
      let breakOnTokenText = opts && 'breakOnTokenText' in opts ? opts.breakOnTokenText : null;
      let infixArgumentMode = opts && 'infixArgumentMode' in opts ? opts.infixArgumentMode : false;
      if (infixArgumentMode == null) dart.nullFailed(I[56], 92, 10, "infixArgumentMode");
      let body = T$.JSArrayOfGreenNode().of([]);
      while (true) {
        if (this.mode == types.Mode.math) {
          this.consumeSpaces();
        }
        let lex = this.fetch();
        if (dart.test(parser$.TexParser.endOfExpression.contains(lex.text))) {
          break;
        }
        if (breakOnTokenText != null && lex.text == breakOnTokenText) {
          break;
        }
        let funcData = functions$.functions[S.$_get](lex.text);
        if (funcData != null && funcData.infix === true) {
          if (dart.test(infixArgumentMode)) {
            dart.throw(new parse_error.ParseException.new("only one infix operator per group", lex));
          }
          if (dart.test(breakOnInfix)) {
            break;
          }
          this.consume();
          this[S._enterArgumentParsingMode](lex.text, funcData);
          try {
            let atom = (t52 = funcData, t53 = new functions$.FunctionContext.new({funcName: lex.text, breakOnTokenText: breakOnTokenText, token: lex, infixExistingArguments: T$.ListOfGreenNode().of(body, {growable: false})}), t52.handler(this, t53));
            body[S.$clear]();
            body[S.$add](atom);
          } finally {
            this[S._leaveArgumentParsingMode](lex.text);
          }
        } else {
          let atom = this.parseAtom(breakOnTokenText);
          if (atom == null) {
            break;
          }
          body[S.$add](atom);
        }
      }
      return body;
    }
    expect(text, opts) {
      if (text == null) dart.nullFailed(I[56], 174, 22, "text");
      let consume = opts && 'consume' in opts ? opts.consume : true;
      if (consume == null) dart.nullFailed(I[56], 174, 34, "consume");
      if (this.fetch().text != text) {
        dart.throw(new parse_error.ParseException.new("Expected '" + dart.str(text) + "', got '" + dart.str(this.fetch().text) + "'", this.fetch()));
      }
      if (dart.test(consume)) {
        this.consume();
      }
    }
    consumeSpaces() {
      while (this.fetch().text === " ") {
        this.consume();
      }
    }
    parseAtom(breakOnTokenText) {
      let t52, t52$, t52$0, t52$1, t52$2, t52$3;
      let base = this.parseGroup("atom", {optional: false, greediness: null, breakOnTokenText: breakOnTokenText});
      if (this.mode == types.Mode.text) {
        return base;
      }
      let scriptsResult = this.parseScripts({allowLimits: syntax_tree.EquationRowNode.is(base) && base.overrideType == syntax_tree.AtomType.op});
      if (!dart.test(scriptsResult.empty)) {
        if (scriptsResult.limits !== true) {
          return new multiscripts$.MultiscriptsNode.new({base: (t52$ = (t52 = base, t52 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t52)), t52$ == null ? syntax_tree.EquationRowNode.empty() : t52$), sub: scriptsResult.subscript, sup: scriptsResult.superscript});
        } else {
          let res = scriptsResult.superscript != null ? new over.OverNode.new({base: (t52$1 = (t52$0 = base, t52$0 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t52$0)), t52$1 == null ? syntax_tree.EquationRowNode.empty() : t52$1), above: dart.nullCheck(scriptsResult.superscript)}) : base;
          res = scriptsResult.subscript != null ? new under.UnderNode.new({base: (t52$3 = (t52$2 = res, t52$2 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t52$2)), t52$3 == null ? syntax_tree.EquationRowNode.empty() : t52$3), below: dart.nullCheck(scriptsResult.subscript)}) : res;
          return res;
        }
      } else {
        return base;
      }
    }
    parseScripts(opts) {
      let allowLimits = opts && 'allowLimits' in opts ? opts.allowLimits : false;
      if (allowLimits == null) dart.nullFailed(I[56], 229, 44, "allowLimits");
      let subscript = null;
      let superscript = null;
      let limits = null;
      L0:
        while (true) {
          this.consumeSpaces();
          let lex = this.fetch();
          switch (lex.text) {
            case "\\limits":
            case "\\nolimits":
            {
              if (!dart.test(allowLimits)) {
                dart.throw(new parse_error.ParseException.new("Limit controls must follow a math operator", lex));
              }
              limits = lex.text === "\\limits";
              this.consume();
              break;
            }
            case "^":
            {
              if (superscript != null) {
                dart.throw(new parse_error.ParseException.new("Double superscript", lex));
              }
              superscript = syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](this[S._handleScript]());
              break;
            }
            case "_":
            {
              if (subscript != null) {
                dart.throw(new parse_error.ParseException.new("Double subscript", lex));
              }
              subscript = syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](this[S._handleScript]());
              break;
            }
            case "'":
            {
              if (superscript != null) {
                dart.throw(new parse_error.ParseException.new("Double superscript", lex));
              }
              let primeCommand = dart.nullCheck(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$_get]("\\prime"));
              let superscriptList = T$.JSArrayOfGreenNode().of([new symbol$.SymbolNode.new({mode: this.mode, symbol: primeCommand.symbol, variantForm: primeCommand.variantForm, overrideAtomType: primeCommand.type, overrideFont: primeCommand.font})]);
              this.consume();
              while (this.fetch().text === "'") {
                superscriptList[S.$add](new symbol$.SymbolNode.new({mode: this.mode, symbol: primeCommand.symbol, variantForm: primeCommand.variantForm, overrideAtomType: primeCommand.type, overrideFont: primeCommand.font}));
                this.consume();
              }
              if (this.fetch().text === "^") {
                superscriptList[S.$addAll](syntax_tree['GreenNodeWrappingExt|expandEquationRow'](this[S._handleScript]()));
              }
              superscript = syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](superscriptList);
              break;
            }
            default:
            {
              break L0;
            }
          }
        }
      return new parser$.ScriptsParsingResults.new({subscript: subscript, superscript: superscript, limits: limits});
    }
    [S._handleScript]() {
      let symbolToken = this.fetch();
      let symbol = symbolToken.text;
      this.consume();
      let group = this.parseGroup(symbol === "_" ? "subscript" : "superscript", {optional: false, greediness: 1, consumeSpaces: true});
      if (group == null) {
        dart.throw(new parse_error.ParseException.new("Expected group after '" + dart.str(symbol) + "'", symbolToken));
      }
      return group;
    }
    fetch() {
      let nextToken = this.nextToken;
      if (nextToken == null) {
        return this.nextToken = this.macroExpander.expandNextToken();
      }
      return nextToken;
    }
    consume() {
      this.nextToken = null;
    }
    parseGroup(name, opts) {
      let t52;
      if (name == null) dart.nullFailed(I[56], 347, 12, "name");
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 348, 19, "optional");
      let greediness = opts && 'greediness' in opts ? opts.greediness : null;
      let breakOnTokenText = opts && 'breakOnTokenText' in opts ? opts.breakOnTokenText : null;
      let mode = opts && 'mode' in opts ? opts.mode : null;
      let consumeSpaces = opts && 'consumeSpaces' in opts ? opts.consumeSpaces : false;
      if (consumeSpaces == null) dart.nullFailed(I[56], 352, 10, "consumeSpaces");
      let outerMode = this.mode;
      if (mode != null) {
        this.switchMode(mode);
      }
      if (consumeSpaces === true) {
        this.consumeSpaces();
      }
      let firstToken = this.fetch();
      let text = firstToken.text;
      let result = null;
      if (dart.test(optional) ? text === "[" : text === "{" || text === "\\begingroup") {
        this.consume();
        let groupEnd = dart.nullCheck(parser$.TexParser.endOfGroup[S.$_get](text));
        this.macroExpander.beginGroup();
        let expression = this.parseExpression({breakOnInfix: false, breakOnTokenText: groupEnd});
        this.expect(groupEnd);
        this.macroExpander.endGroup();
        result = syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](expression);
      } else if (dart.test(optional)) {
        result = null;
      } else {
        result = (t52 = this.parseFunction(breakOnTokenText, name, greediness), t52 == null ? this[S._parseSymbol]() : t52);
        if (result == null && text[S.$_get](0) === "\\" && !dart.test(macro_expander.implicitCommands.contains(text))) {
          if (dart.test(this.settings.throwOnError)) {
            dart.throw(new parse_error.ParseException.new("Undefined control sequence: " + dart.str(text), firstToken));
          }
          result = this[S._formatUnsuppotedCmd](text);
          this.consume();
        }
      }
      if (mode != null) {
        this.switchMode(outerMode);
      }
      return result;
    }
    parseFunction(breakOnTokenText, name, greediness) {
      let t53, t52;
      let token = this.fetch();
      let func = token.text;
      let funcData = functions$.functions[S.$_get](func);
      if (funcData == null) {
        return null;
      }
      this.consume();
      if (greediness != null && dart.notNull(funcData.greediness) <= dart.notNull(greediness)) {
        dart.throw(new parse_error.ParseException.new("Got function '" + dart.str(func) + "' with no arguments " + (name != null ? " as " + dart.str(name) : ""), token));
      } else if (this.mode == types.Mode.text && !dart.test(funcData.allowedInText)) {
        dart.throw(new parse_error.ParseException.new("Can't use function '" + dart.str(func) + "' in text mode", token));
      } else if (this.mode == types.Mode.math && funcData.allowedInMath === false) {
        dart.throw(new parse_error.ParseException.new("Can't use function '" + dart.str(func) + "' in math mode", token));
      }
      let context = new functions$.FunctionContext.new({funcName: func, token: token, breakOnTokenText: breakOnTokenText});
      this[S._enterArgumentParsingMode](func, funcData);
      try {
        t52 = funcData;
        t53 = context;
        return t52.handler(this, t53);
      } finally {
        this[S._leaveArgumentParsingMode](func);
      }
    }
    get currArgParsingContext() {
      return this.argParsingContexts[S.$last];
    }
    [S._enterArgumentParsingMode](name, funcData) {
      if (name == null) dart.nullFailed(I[56], 456, 41, "name");
      if (funcData == null) dart.nullFailed(I[56], 456, 60, "funcData");
      this.argParsingContexts.addLast(new parser$.ArgumentParsingContext.new({funcName: name, funcData: funcData}));
    }
    [S._leaveArgumentParsingMode](name) {
      if (name == null) dart.nullFailed(I[56], 461, 41, "name");
      if (!(this.currArgParsingContext.funcName == name)) dart.assertFailed(null, I[56], 462, 12, "currArgParsingContext.funcName == name");
      this.argParsingContexts.removeLast();
    }
    [S._assertOptionalBeforeReturn](value, opts) {
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 466, 66, "optional");
      if (!dart.test(optional) && value == null) {
        dart.throw(new parse_error.ParseException.new("Expected group after " + dart.str(this.currArgParsingContext.funcName), this.fetch()));
      }
    }
    parseArgColor(opts) {
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 484, 39, "optional");
      this.currArgParsingContext.newArgument({optional: optional});
      let i = this.currArgParsingContext.currArgNum;
      let consumeSpaces = dart.notNull(i) > 0 && !dart.test(optional) || i === 0 && !dart.test(optional) && this.mode == types.Mode.math;
      if (consumeSpaces) {
        this.consumeSpaces();
      }
      let res = this[S._parseStringGroup]("color", {optional: optional});
      if (res == null) {
        this[S._assertOptionalBeforeReturn](null, {optional: optional});
        return null;
      }
      let match3 = parser$.TexParser._parseColorRegex3.firstMatch(res.text);
      if (match3 != null) {
        let color = colors.colorByName[S.$_get](dart.nullCheck(match3._get(0))[S.$toLowerCase]());
        if (color != null) {
          return color;
        }
      }
      let match2 = parser$.TexParser._parseColorRegex2.firstMatch(res.text);
      if (match2 != null) {
        return new ui.Color.fromARGB(255, core.int.parse(dart.nullCheck(match2._get(1)), {radix: 16}), core.int.parse(dart.nullCheck(match2._get(2)), {radix: 16}), core.int.parse(dart.nullCheck(match2._get(3)), {radix: 16}));
      }
      let match1 = parser$.TexParser._parseColorRegex1.firstMatch(res.text);
      if (match1 != null) {
        return new ui.Color.fromARGB(255, core.int.parse(dart.nullCheck(match1._get(1))[S.$times](2), {radix: 16}), core.int.parse(dart.nullCheck(match1._get(2))[S.$times](2), {radix: 16}), core.int.parse(dart.nullCheck(match1._get(3))[S.$times](2), {radix: 16}));
      }
      dart.throw(new parse_error.ParseException.new("Invalid color: '" + dart.str(res.text) + "'"));
    }
    parseArgSize(opts) {
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 534, 44, "optional");
      this.currArgParsingContext.newArgument({optional: optional});
      let i = this.currArgParsingContext.currArgNum;
      let consumeSpaces = dart.notNull(i) > 0 && !dart.test(optional) || i === 0 && !dart.test(optional) && this.mode == types.Mode.math;
      if (consumeSpaces) {
        this.consumeSpaces();
      }
      let res = null;
      if (!dart.test(optional) && this.fetch().text !== "{") {
        res = this[S._parseRegexGroup](parser$.TexParser._parseSizeRegex, "size");
      } else {
        res = this[S._parseStringGroup]("size", {optional: optional});
      }
      if (res == null) {
        this[S._assertOptionalBeforeReturn](null, {optional: optional});
        return null;
      }
      if (!dart.test(optional) && res.text[S.$isEmpty]) {
        return null;
      }
      let match = parser$.TexParser._parseMeasurementRegex.firstMatch(res.text);
      if (match == null) {
        dart.throw(new parse_error.ParseException.new("Invalid size: '" + dart.str(res.text) + "'", res));
      }
      let unit = size$['UnitExtOnString|parseUnit'](dart.nullCheck(match._get(3)));
      if (unit == null) {
        dart.throw(new parse_error.ParseException.new("Invalid unit: '" + dart.str(match._get(3)) + "'", res));
      }
      let size = new size$.Measurement.new({value: core.double.parse(dart.nullCheck(match._get(1)) + dart.nullCheck(match._get(2))), unit: unit});
      return size;
    }
    parseArgUrl(opts) {
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 573, 37, "optional");
      this.currArgParsingContext.newArgument({optional: optional});
      dart.throw(new core.UnimplementedError.new());
    }
    parseArgNode(opts) {
      let mode = opts && 'mode' in opts ? opts.mode : null;
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 585, 63, "optional");
      this.currArgParsingContext.newArgument({optional: optional});
      let i = this.currArgParsingContext.currArgNum;
      let consumeSpaces = dart.notNull(i) > 0 && !dart.test(optional) || i === 0 && !dart.test(optional) && this.mode == types.Mode.math;
      let res = this.parseGroup(this.currArgParsingContext.name, {optional: optional, greediness: this.currArgParsingContext.funcData.greediness, mode: mode, consumeSpaces: consumeSpaces});
      this[S._assertOptionalBeforeReturn](res, {optional: optional});
      return res;
    }
    parseArgHbox(opts) {
      let t52, t52$;
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 604, 41, "optional");
      let res = this.parseArgNode({mode: types.Mode.text, optional: optional});
      if (syntax_tree.EquationRowNode.is(res)) {
        return new syntax_tree.EquationRowNode.new({children: T$.JSArrayOfGreenNode().of([new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({style: style$0.MathStyle.text}), children: res.children})])});
      } else {
        return new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({style: style$0.MathStyle.text}), children: (t52$ = (t52 = res, t52 == null ? null : iterable_extensions$['IterableNullableExtension|whereNotNull'](syntax_tree.GreenNode, t52.children)[S.$toList]({growable: false})), t52$ == null ? T$.JSArrayOfGreenNode().of([]) : t52$)});
      }
    }
    parseArgRaw(opts) {
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 621, 38, "optional");
      this.currArgParsingContext.newArgument({optional: optional});
      let i = this.currArgParsingContext.currArgNum;
      let consumeSpaces = dart.notNull(i) > 0 && !dart.test(optional) || i === 0 && !dart.test(optional) && this.mode == types.Mode.math;
      if (consumeSpaces) {
        this.consumeSpaces();
      }
      if (dart.test(optional) && this.fetch().text === "{") {
        return null;
      }
      let token = this[S._parseStringGroup]("raw", {optional: optional});
      if (token != null) {
        return token.text;
      } else {
        dart.throw(new parse_error.ParseException.new("Expected raw group", this.fetch()));
      }
    }
    [S._parseStringGroup](modeName, opts) {
      if (modeName == null) dart.nullFailed(I[56], 642, 35, "modeName");
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 643, 22, "optional");
      let raw = opts && 'raw' in opts ? opts.raw : false;
      if (raw == null) dart.nullFailed(I[56], 643, 37, "raw");
      let groupBegin = dart.test(optional) ? "[" : "{";
      let groupEnd = dart.test(optional) ? "]" : "}";
      let beginToken = this.fetch();
      if (beginToken.text !== groupBegin) {
        if (dart.test(optional)) {
          return null;
        } else if (dart.test(raw) && beginToken.text !== "EOF" && dart.test(parser$.TexParser._parseStringGroupRegex.hasMatch(beginToken.text))) {
          this.consume();
          return beginToken;
        }
      }
      let outerMode = this.mode;
      this.mode = types.Mode.text;
      this.expect(groupBegin);
      let str = "";
      let firstToken = this.fetch();
      let nested = 0;
      let lastToken = firstToken;
      let nextToken = null;
      while ((nextToken = this.fetch()).text !== groupEnd || dart.test(raw) && nested > 0) {
        if (nextToken.text === "EOF") {
          dart.throw(new parse_error.ParseException.new("Unexpected end of input in " + dart.str(modeName), token.Token.range(firstToken, lastToken, str)));
        } else if (nextToken.text === groupBegin) {
          nested = nested + 1;
        } else if (nextToken.text === groupEnd) {
          nested = nested - 1;
        }
        lastToken = nextToken;
        str = str + dart.notNull(lastToken.text);
        this.consume();
      }
      this.expect(groupEnd);
      this.mode = outerMode;
      return token.Token.range(firstToken, lastToken, str);
    }
    [S._parseRegexGroup](regex, modeName) {
      if (regex == null) dart.nullFailed(I[56], 684, 33, "regex");
      if (modeName == null) dart.nullFailed(I[56], 684, 47, "modeName");
      let outerMode = this.mode;
      this.mode = types.Mode.text;
      let firstToken = this.fetch();
      let lastToken = firstToken;
      let str = "";
      let nextToken = null;
      while ((nextToken = this.fetch()).text !== "EOF" && dart.test(regex.hasMatch(str + dart.notNull(nextToken.text)))) {
        lastToken = nextToken;
        str = str + dart.notNull(lastToken.text);
        this.consume();
      }
      if (str[S.$isEmpty]) {
        dart.throw(new parse_error.ParseException.new("Invalid " + dart.str(modeName) + ": '" + dart.str(firstToken.text) + "'", firstToken));
      }
      this.mode = outerMode;
      return token.Token.range(firstToken, lastToken, str);
    }
    [S._parseSymbol]() {
      let nucleus = this.fetch();
      let text = nucleus.text;
      if (dart.test(parser$.TexParser._parseVerbRegex.hasMatch(text))) {
        this.consume();
        let arg = text[S.$substring](5);
        let star = arg[S.$_get](0) === "*";
        if (star) {
          arg = arg[S.$substring](1);
        }
        if (arg.length < 2 || arg[S.$_get](0) !== arg[S.$_get](arg.length - 1)) {
          dart.throw(new parse_error.ParseException.new("\\verb assertion failed --\n                    please report what input caused this bug"));
        }
        arg = arg[S.$substring](1, arg.length - 1);
        return new syntax_tree.EquationRowNode.new({children: arg[S.$split]("")[S.$map](symbol$.SymbolNode, dart.fn(char => {
            if (char == null) dart.nullFailed(I[56], 727, 19, "char");
            return new symbol$.SymbolNode.new({symbol: char, overrideFont: C[1365] || CT.C1365, mode: types.Mode.text});
          }, T$.StringToSymbolNode()))[S.$toList]({growable: false})});
      }
      if (dart.test(symbols_unicode.unicodeSymbols[S.$containsKey](text[S.$_get](0))) && !dart.test(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](this.mode))[S.$containsKey](text[S.$_get](0)))) {
        if (this.mode == types.Mode.math) {
          this.settings.reportNonstrict("unicodeTextInMathMode", "Accented Unicode text character \"" + text[S.$_get](0) + "\" used in math mode", nucleus);
        }
      }
      let match = lexer.combiningDiacriticalMarksEndRegex.firstMatch(text);
      let combiningMarks = "";
      if (match != null) {
        text = text[S.$substring](0, match.start);
        for (let i = 0; i < dart.nullCheck(match._get(0)).length; i = i + 1) {
          let accent = dart.nullCheck(match._get(0))[S.$_get](i);
          if (!dart.test(unicode_accents.unicodeAccents[S.$containsKey](accent))) {
            dart.throw(new parse_error.ParseException.new("Unknown accent ' " + accent + "'", nucleus));
          }
          let command = dart.nullCheck(unicode_accents.unicodeAccents[S.$_get](accent))[S.$_get](this.mode);
          if (command == null) {
            dart.throw(new parse_error.ParseException.new("Accent " + accent + " unsupported in " + dart.str(this.mode) + " mode", nucleus));
          }
        }
        combiningMarks = dart.nullCheck(match._get(0));
      }
      let symbol = null;
      let symbolCommandConfig = dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](this.mode))[S.$_get](text);
      if (symbolCommandConfig != null) {
        if (this.mode == types.Mode.math && dart.test(symbols.extraLatin.contains(text))) {
          this.settings.reportNonstrict("unicodeTextInMathMode", "Latin-1/Unicode text character \"" + text[S.$_get](0) + "\" used in math mode", nucleus);
        }
        symbol = new symbol$.SymbolNode.new({mode: this.mode, symbol: dart.notNull(symbolCommandConfig.symbol) + combiningMarks, variantForm: symbolCommandConfig.variantForm, overrideAtomType: symbolCommandConfig.type, overrideFont: symbolCommandConfig.font});
      } else if (text[S.$isNotEmpty] && text[S.$codeUnitAt](0) >= 128) {
        if (!dart.test(unicode_scripts.supportedCodepoint(text[S.$codeUnitAt](0)))) {
          this.settings.reportNonstrict("unknownSymbol", "Unrecognized Unicode character \"" + text[S.$_get](0) + "\" " + "(" + dart.str(text[S.$codeUnitAt](0)) + ")", nucleus);
        } else if (this.mode == types.Mode.math) {
          this.settings.reportNonstrict("unicodeTextInMathMode", "Unicode text character \"" + text[S.$_get](0) + " used in math mode\"", nucleus);
        }
        symbol = new symbol$.SymbolNode.new({symbol: dart.notNull(text) + combiningMarks, overrideAtomType: syntax_tree.AtomType.ord});
      } else {
        return null;
      }
      this.consume();
      return symbol;
    }
    switchMode(newMode) {
      if (newMode == null) dart.nullFailed(I[56], 803, 24, "newMode");
      this.mode = newMode;
      this.macroExpander.mode = newMode;
    }
    [S._formatUnsuppotedCmd](text) {
      if (text == null) dart.nullFailed(I[56], 808, 41, "text");
      dart.throw(new core.UnimplementedError.new());
    }
  };
  (parser$.TexParser.new = function(content, settings) {
    if (content == null) dart.nullFailed(I[56], 56, 20, "content");
    if (settings == null) dart.nullFailed(I[56], 56, 34, "settings");
    this[S.nextToken] = null;
    this[S.argParsingContexts] = new (T$.ListQueueOfArgumentParsingContext()).new();
    this[S.settings$1] = settings;
    this[S.leftrightDepth] = 0;
    this[S.mode$2] = types.Mode.math;
    this[S.macroExpander] = new macro_expander.MacroExpander.new(content, settings, types.Mode.math);
    ;
  }).prototype = parser$.TexParser.prototype;
  dart.addTypeTests(parser$.TexParser);
  dart.addTypeCaches(parser$.TexParser);
  dart.setMethodSignature(parser$.TexParser, () => ({
    __proto__: dart.getMethods(parser$.TexParser.__proto__),
    parse: dart.fnType(syntax_tree.EquationRowNode, []),
    parseExpression: dart.fnType(core.List$(syntax_tree.GreenNode), [], {breakOnInfix: core.bool, breakOnTokenText: dart.nullable(core.String), infixArgumentMode: core.bool}, {}),
    expect: dart.fnType(dart.void, [core.String], {consume: core.bool}, {}),
    consumeSpaces: dart.fnType(dart.void, []),
    parseAtom: dart.fnType(dart.nullable(syntax_tree.GreenNode), [dart.nullable(core.String)]),
    parseScripts: dart.fnType(parser$.ScriptsParsingResults, [], {allowLimits: core.bool}, {}),
    [S._handleScript]: dart.fnType(syntax_tree.GreenNode, []),
    fetch: dart.fnType(token.Token, []),
    consume: dart.fnType(dart.void, []),
    parseGroup: dart.fnType(dart.nullable(syntax_tree.GreenNode), [core.String], {breakOnTokenText: dart.nullable(core.String), consumeSpaces: core.bool, greediness: dart.nullable(core.int), mode: dart.nullable(types.Mode)}, {optional: core.bool}),
    parseFunction: dart.fnType(dart.nullable(syntax_tree.GreenNode), [dart.nullable(core.String), dart.nullable(core.String), dart.nullable(core.int)]),
    [S._enterArgumentParsingMode]: dart.fnType(dart.void, [core.String, functions$.FunctionSpec$(syntax_tree.GreenNode)]),
    [S._leaveArgumentParsingMode]: dart.fnType(dart.void, [core.String]),
    [S._assertOptionalBeforeReturn]: dart.fnType(dart.void, [dart.dynamic], {}, {optional: core.bool}),
    parseArgColor: dart.fnType(dart.nullable(ui.Color), [], {}, {optional: core.bool}),
    parseArgSize: dart.fnType(dart.nullable(size$.Measurement), [], {}, {optional: core.bool}),
    parseArgUrl: dart.fnType(core.String, [], {}, {optional: core.bool}),
    parseArgNode: dart.fnType(dart.nullable(syntax_tree.GreenNode), [], {}, {mode: dart.nullable(types.Mode), optional: core.bool}),
    parseArgHbox: dart.fnType(syntax_tree.GreenNode, [], {}, {optional: core.bool}),
    parseArgRaw: dart.fnType(dart.nullable(core.String), [], {}, {optional: core.bool}),
    [S._parseStringGroup]: dart.fnType(dart.nullable(token.Token), [core.String], {raw: core.bool}, {optional: core.bool}),
    [S._parseRegexGroup]: dart.fnType(token.Token, [core.RegExp, core.String]),
    [S._parseSymbol]: dart.fnType(dart.nullable(syntax_tree.GreenNode), []),
    switchMode: dart.fnType(dart.void, [types.Mode]),
    [S._formatUnsuppotedCmd]: dart.fnType(syntax_tree.GreenNode, [core.String])
  }));
  dart.setGetterSignature(parser$.TexParser, () => ({
    __proto__: dart.getGetters(parser$.TexParser.__proto__),
    currArgParsingContext: parser$.ArgumentParsingContext
  }));
  dart.setLibraryUri(parser$.TexParser, I[57]);
  dart.setFieldSignature(parser$.TexParser, () => ({
    __proto__: dart.getFields(parser$.TexParser.__proto__),
    settings: dart.finalFieldType(settings.TexParserSettings),
    mode: dart.fieldType(types.Mode),
    leftrightDepth: dart.fieldType(core.int),
    macroExpander: dart.finalFieldType(macro_expander.MacroExpander),
    nextToken: dart.fieldType(dart.nullable(token.Token)),
    argParsingContexts: dart.finalFieldType(collection.Queue$(parser$.ArgumentParsingContext))
  }));
  dart.defineLazy(parser$.TexParser, {
    /*parser$.TexParser.breakTokens*/get breakTokens() {
      return C[1366] || CT.C1366;
    },
    /*parser$.TexParser.endOfExpression*/get endOfExpression() {
      return C[1367] || CT.C1367;
    },
    /*parser$.TexParser.endOfGroup*/get endOfGroup() {
      return C[1368] || CT.C1368;
    },
    /*parser$.TexParser.supsubGreediness*/get supsubGreediness() {
      return 1;
    },
    /*parser$.TexParser._parseColorRegex1*/get _parseColorRegex1() {
      return core.RegExp.new("^#([a-f0-9])([a-f0-9])([a-f0-9])$", {caseSensitive: false});
    },
    /*parser$.TexParser._parseColorRegex2*/get _parseColorRegex2() {
      return core.RegExp.new("^#?([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$", {caseSensitive: false});
    },
    /*parser$.TexParser._parseColorRegex3*/get _parseColorRegex3() {
      return core.RegExp.new("^([a-z]+)$", {caseSensitive: false});
    },
    /*parser$.TexParser._parseSizeRegex*/get _parseSizeRegex() {
      return core.RegExp.new("^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$");
    },
    /*parser$.TexParser._parseMeasurementRegex*/get _parseMeasurementRegex() {
      return core.RegExp.new("([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})");
    },
    /*parser$.TexParser._parseStringGroupRegex*/get _parseStringGroupRegex() {
      return core.RegExp.new("[^{}[]]");
    },
    /*parser$.TexParser._parseVerbRegex*/get _parseVerbRegex() {
      return core.RegExp.new("^\\\\verb[^a-zA-Z]");
    }
  }, false);
  parser$.ArgumentParsingContext = class ArgumentParsingContext extends core.Object {
    get funcName() {
      return this[S.funcName];
    }
    set funcName(value) {
      super.funcName = value;
    }
    get currArgNum() {
      return this[S.currArgNum];
    }
    set currArgNum(value) {
      this[S.currArgNum] = value;
    }
    get funcData() {
      return this[S.funcData];
    }
    set funcData(value) {
      super.funcData = value;
    }
    get optional() {
      return this[S._optional];
    }
    set optional(value) {
      if (value == null) dart.nullFailed(I[56], 821, 21, "value");
      if (!(dart.test(this[S._optional]) || !dart.test(value))) dart.assertFailed(null, I[56], 822, 12, "_optional || !value");
      this[S._optional] = value;
    }
    get name() {
      return "argument to " + dart.str(this.funcName);
    }
    newArgument(opts) {
      let optional = opts && 'optional' in opts ? opts.optional : null;
      if (optional == null) dart.nullFailed(I[56], 835, 35, "optional");
      this.currArgNum = dart.notNull(this.currArgNum) + 1;
      this.optional = optional;
    }
  };
  (parser$.ArgumentParsingContext.new = function(opts) {
    let funcData = opts && 'funcData' in opts ? opts.funcData : null;
    if (funcData == null) dart.nullFailed(I[56], 829, 19, "funcData");
    let funcName = opts && 'funcName' in opts ? opts.funcName : null;
    if (funcName == null) dart.nullFailed(I[56], 830, 19, "funcName");
    let currArgNum = opts && 'currArgNum' in opts ? opts.currArgNum : -1;
    if (currArgNum == null) dart.nullFailed(I[56], 831, 10, "currArgNum");
    let optional = opts && 'optional' in opts ? opts.optional : true;
    if (optional == null) dart.nullFailed(I[56], 832, 10, "optional");
    this[S.funcData] = funcData;
    this[S.funcName] = funcName;
    this[S.currArgNum] = currArgNum;
    this[S._optional] = optional;
    ;
  }).prototype = parser$.ArgumentParsingContext.prototype;
  dart.addTypeTests(parser$.ArgumentParsingContext);
  dart.addTypeCaches(parser$.ArgumentParsingContext);
  dart.setMethodSignature(parser$.ArgumentParsingContext, () => ({
    __proto__: dart.getMethods(parser$.ArgumentParsingContext.__proto__),
    newArgument: dart.fnType(dart.void, [], {}, {optional: core.bool})
  }));
  dart.setGetterSignature(parser$.ArgumentParsingContext, () => ({
    __proto__: dart.getGetters(parser$.ArgumentParsingContext.__proto__),
    optional: core.bool,
    name: core.String
  }));
  dart.setSetterSignature(parser$.ArgumentParsingContext, () => ({
    __proto__: dart.getSetters(parser$.ArgumentParsingContext.__proto__),
    optional: core.bool
  }));
  dart.setLibraryUri(parser$.ArgumentParsingContext, I[57]);
  dart.setFieldSignature(parser$.ArgumentParsingContext, () => ({
    __proto__: dart.getFields(parser$.ArgumentParsingContext.__proto__),
    funcName: dart.finalFieldType(core.String),
    currArgNum: dart.fieldType(core.int),
    funcData: dart.finalFieldType(functions$.FunctionSpec$(syntax_tree.GreenNode)),
    [S._optional]: dart.fieldType(core.bool)
  }));
  parser$.ScriptsParsingResults = class ScriptsParsingResults extends core.Object {
    get subscript() {
      return this[S.subscript];
    }
    set subscript(value) {
      super.subscript = value;
    }
    get superscript() {
      return this[S.superscript];
    }
    set superscript(value) {
      super.superscript = value;
    }
    get limits() {
      return this[S.limits];
    }
    set limits(value) {
      super.limits = value;
    }
    get empty() {
      return this.subscript == null && this.superscript == null;
    }
  };
  (parser$.ScriptsParsingResults.new = function(opts) {
    let subscript = opts && 'subscript' in opts ? opts.subscript : null;
    let superscript = opts && 'superscript' in opts ? opts.superscript : null;
    let limits = opts && 'limits' in opts ? opts.limits : null;
    this[S.subscript] = subscript;
    this[S.superscript] = superscript;
    this[S.limits] = limits;
    ;
  }).prototype = parser$.ScriptsParsingResults.prototype;
  dart.addTypeTests(parser$.ScriptsParsingResults);
  dart.addTypeCaches(parser$.ScriptsParsingResults);
  dart.setGetterSignature(parser$.ScriptsParsingResults, () => ({
    __proto__: dart.getGetters(parser$.ScriptsParsingResults.__proto__),
    empty: core.bool
  }));
  dart.setLibraryUri(parser$.ScriptsParsingResults, I[57]);
  dart.setFieldSignature(parser$.ScriptsParsingResults, () => ({
    __proto__: dart.getFields(parser$.ScriptsParsingResults.__proto__),
    subscript: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    superscript: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    limits: dart.finalFieldType(dart.nullable(core.bool))
  }));
  parser$.assertNodeType = function assertNodeType(T, node) {
    if (T.is(node)) {
      return node;
    }
    dart.throw(new parse_error.ParseException.new("Expected node of type " + dart.str(dart.wrapType(T)) + ", but got node of type " + dart.str(dart.runtimeType(node))));
  };
  matrix.MatrixSeparatorStyle = class MatrixSeparatorStyle extends core.Object {
    toString() {
      return this[S._name$10];
    }
  };
  (matrix.MatrixSeparatorStyle.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 15, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 15, 6, "_name");
    this.index = index;
    this[S._name$10] = _name;
    ;
  }).prototype = matrix.MatrixSeparatorStyle.prototype;
  dart.addTypeTests(matrix.MatrixSeparatorStyle);
  dart.addTypeCaches(matrix.MatrixSeparatorStyle);
  dart.setLibraryUri(matrix.MatrixSeparatorStyle, I[59]);
  dart.setFieldSignature(matrix.MatrixSeparatorStyle, () => ({
    __proto__: dart.getFields(matrix.MatrixSeparatorStyle.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$10]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(matrix.MatrixSeparatorStyle, ['toString']);
  matrix.MatrixSeparatorStyle.solid = C[1369] || CT.C1369;
  matrix.MatrixSeparatorStyle.dashed = C[1370] || CT.C1370;
  matrix.MatrixSeparatorStyle.none = C[1371] || CT.C1371;
  matrix.MatrixSeparatorStyle.values = C[1372] || CT.C1372;
  matrix.MatrixColumnAlign = class MatrixColumnAlign extends core.Object {
    toString() {
      return this[S._name$10];
    }
  };
  (matrix.MatrixColumnAlign.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 21, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 21, 6, "_name");
    this.index = index;
    this[S._name$10] = _name;
    ;
  }).prototype = matrix.MatrixColumnAlign.prototype;
  dart.addTypeTests(matrix.MatrixColumnAlign);
  dart.addTypeCaches(matrix.MatrixColumnAlign);
  dart.setLibraryUri(matrix.MatrixColumnAlign, I[59]);
  dart.setFieldSignature(matrix.MatrixColumnAlign, () => ({
    __proto__: dart.getFields(matrix.MatrixColumnAlign.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$10]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(matrix.MatrixColumnAlign, ['toString']);
  matrix.MatrixColumnAlign.left = C[1373] || CT.C1373;
  matrix.MatrixColumnAlign.center = C[1374] || CT.C1374;
  matrix.MatrixColumnAlign.right = C[1375] || CT.C1375;
  matrix.MatrixColumnAlign.values = C[1376] || CT.C1376;
  matrix.MatrixRowAlign = class MatrixRowAlign extends core.Object {
    toString() {
      return this[S._name$10];
    }
  };
  (matrix.MatrixRowAlign.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[58], 27, 6, "index");
    if (_name == null) dart.nullFailed(I[58], 27, 6, "_name");
    this.index = index;
    this[S._name$10] = _name;
    ;
  }).prototype = matrix.MatrixRowAlign.prototype;
  dart.addTypeTests(matrix.MatrixRowAlign);
  dart.addTypeCaches(matrix.MatrixRowAlign);
  dart.setLibraryUri(matrix.MatrixRowAlign, I[59]);
  dart.setFieldSignature(matrix.MatrixRowAlign, () => ({
    __proto__: dart.getFields(matrix.MatrixRowAlign.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$10]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(matrix.MatrixRowAlign, ['toString']);
  matrix.MatrixRowAlign.top = C[1377] || CT.C1377;
  matrix.MatrixRowAlign.bottom = C[1378] || CT.C1378;
  matrix.MatrixRowAlign.center = C[1379] || CT.C1379;
  matrix.MatrixRowAlign.baseline = C[1380] || CT.C1380;
  matrix.MatrixRowAlign.values = C[1381] || CT.C1381;
  matrix.MatrixNode = class MatrixNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get arrayStretch() {
      return this[S.arrayStretch$1];
    }
    set arrayStretch(value) {
      super.arrayStretch = value;
    }
    get hskipBeforeAndAfter() {
      return this[S.hskipBeforeAndAfter];
    }
    set hskipBeforeAndAfter(value) {
      super.hskipBeforeAndAfter = value;
    }
    get isSmall() {
      return this[S.isSmall];
    }
    set isSmall(value) {
      super.isSmall = value;
    }
    get columnAligns() {
      return this[S.columnAligns];
    }
    set columnAligns(value) {
      super.columnAligns = value;
    }
    get vLines() {
      return this[S.vLines];
    }
    set vLines(value) {
      super.vLines = value;
    }
    get rowSpacings() {
      return this[S.rowSpacings$2];
    }
    set rowSpacings(value) {
      super.rowSpacings = value;
    }
    get hLines() {
      return this[S.hLines];
    }
    set hLines(value) {
      super.hLines = value;
    }
    get body() {
      return this[S.body$1];
    }
    set body(value) {
      super.body = value;
    }
    get rows() {
      return this[S.rows];
    }
    set rows(value) {
      super.rows = value;
    }
    get cols() {
      return this[S.cols];
    }
    set cols(value) {
      super.cols = value;
    }
    static new(opts) {
      let t52;
      let arrayStretch = opts && 'arrayStretch' in opts ? opts.arrayStretch : 1;
      if (arrayStretch == null) dart.nullFailed(I[58], 99, 12, "arrayStretch");
      let hskipBeforeAndAfter = opts && 'hskipBeforeAndAfter' in opts ? opts.hskipBeforeAndAfter : false;
      if (hskipBeforeAndAfter == null) dart.nullFailed(I[58], 100, 10, "hskipBeforeAndAfter");
      let isSmall = opts && 'isSmall' in opts ? opts.isSmall : false;
      if (isSmall == null) dart.nullFailed(I[58], 101, 10, "isSmall");
      let columnAligns = opts && 'columnAligns' in opts ? opts.columnAligns : C[1382] || CT.C1382;
      if (columnAligns == null) dart.nullFailed(I[58], 102, 29, "columnAligns");
      let vLines = opts && 'vLines' in opts ? opts.vLines : C[1383] || CT.C1383;
      if (vLines == null) dart.nullFailed(I[58], 103, 32, "vLines");
      let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : C[1384] || CT.C1384;
      if (rowSpacings == null) dart.nullFailed(I[58], 104, 23, "rowSpacings");
      let hLines = opts && 'hLines' in opts ? opts.hLines : C[1383] || CT.C1383;
      if (hLines == null) dart.nullFailed(I[58], 105, 32, "hLines");
      let body = opts && 'body' in opts ? opts.body : null;
      if (body == null) dart.nullFailed(I[58], 106, 43, "body");
      let cols = num_extension.max3(core.int, (t52 = iterable_extensions['NumIterableExtension|get#maxOrNull'](core.int, body[S.$map](core.int, dart.fn(row => {
        if (row == null) dart.nullFailed(I[58], 109, 17, "row");
        return row[S.$length];
      }, T$.ListOfEquationRowNodeNToint()))), t52 == null ? 0 : t52), columnAligns[S.$length], dart.notNull(vLines[S.$length]) - 1);
      let sanitizedColumnAligns = iterable_extensions['ListExtension|extendToByFill'](matrix.MatrixColumnAlign, columnAligns, cols, matrix.MatrixColumnAlign.center);
      let sanitizedVLines = iterable_extensions['ListExtension|extendToByFill'](matrix.MatrixSeparatorStyle, vLines, dart.notNull(cols) + 1, matrix.MatrixSeparatorStyle.none);
      let rows = num_extension.max3(core.int, body[S.$length], rowSpacings[S.$length], dart.notNull(hLines[S.$length]) - 1);
      let sanitizedBody = iterable_extensions['ListExtension|extendToByFill'](T$.ListOfEquationRowNodeN(), body[S.$map](T$.ListOfEquationRowNodeN(), dart.fn(row => {
        if (row == null) dart.nullFailed(I[58], 125, 15, "row");
        return iterable_extensions['ListExtension|extendToByFill'](T$.EquationRowNodeN(), row, cols, null);
      }, T$.ListOfEquationRowNodeNToListOfEquationRowNodeN()))[S.$toList]({growable: false}), rows, T$.ListOfEquationRowNodeN().filled(cols, null));
      let sanitizedRowSpacing = iterable_extensions['ListExtension|extendToByFill'](size$.Measurement, rowSpacings, rows, size$.Measurement.zero);
      let sanitizedHLines = iterable_extensions['ListExtension|extendToByFill'](matrix.MatrixSeparatorStyle, hLines, dart.notNull(rows) + 1, matrix.MatrixSeparatorStyle.none);
      return new matrix.MatrixNode.__({rows: rows, cols: cols, arrayStretch: arrayStretch, hskipBeforeAndAfter: hskipBeforeAndAfter, isSmall: isSmall, columnAligns: sanitizedColumnAligns, vLines: sanitizedVLines, rowSpacings: sanitizedRowSpacing, hLines: sanitizedHLines, body: sanitizedBody});
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[58], 149, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[58], 149, 47, "childBuildResults");
      if (!(childBuildResults[S.$length] === dart.notNull(this.rows) * dart.notNull(this.cols))) dart.assertFailed(null, I[58], 150, 12, "childBuildResults.length == rows * cols");
      return new syntax_tree.BuildResult.new({options: options, widget: new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options), child: new (T$.CustomLayoutOfint()).new({delegate: new matrix.MatrixLayoutDelegate.new({rows: this.rows, cols: this.cols, ruleThickness: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.defaultRuleThickness).toLpUnder(options), arrayskip: dart.notNull(this.arrayStretch) * dart.notNull(size$['MeasurementExtOnNum|get#pt'](12.0).toLpUnder(options)), rowSpacings: this.rowSpacings[S.$map](core.double, dart.fn(e => {
                if (e == null) dart.nullFailed(I[58], 165, 23, "e");
                return e.toLpUnder(options);
              }, T$.MeasurementTodouble()))[S.$toList]({growable: false}), hLines: this.hLines, hskipBeforeAndAfter: this.hskipBeforeAndAfter, arraycolsep: dart.test(this.isSmall) ? size$['MeasurementExtOnNum|get#cssEm'](5 / 18).toLpUnder(options.havingStyle(style$0.MathStyle.script)) : size$['MeasurementExtOnNum|get#pt'](5.0).toLpUnder(options), vLines: this.vLines, columnAligns: this.columnAligns}), children: iterable_extensions$['IterableNullableExtension|whereNotNull'](T$.CustomLayoutIdOfint(), list_extensions['ListExtensions|mapIndexed'](T$.BuildResultN(), T$.CustomLayoutIdNOfint(), childBuildResults, dart.fn((index, result) => {
              if (index == null) dart.nullFailed(I[58], 178, 28, "index");
              return result == null ? null : new (T$.CustomLayoutIdOfint()).new({id: index, child: result.widget, $creationLocationd_0dea112b090073317d4: C[1385] || CT.C1385});
            }, T$.intAndBuildResultNToCustomLayoutIdNOfint())))[S.$toList]({growable: false}), $creationLocationd_0dea112b090073317d4: C[1389] || CT.C1389}), $creationLocationd_0dea112b090073317d4: C[1393] || CT.C1393})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[58], 189, 53, "options");
      return T$.ListOfMathOptions().filled(dart.notNull(this.rows) * dart.notNull(this.cols), options, {growable: false});
    }
    computeChildren() {
      return this.body[S.$expand](T$.EquationRowNodeN(), dart.fn(row => {
        if (row == null) dart.nullFailed(I[58], 194, 20, "row");
        return row;
      }, T$.ListOfEquationRowNodeNToListOfEquationRowNodeN()))[S.$toList]({growable: false});
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[58], 203, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[58], 203, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[58], 207, 51, "newChildren");
      if (!(dart.notNull(newChildren[S.$length]) >= dart.notNull(this.rows) * dart.notNull(this.cols))) dart.assertFailed(null, I[58], 208, 12, "newChildren.length >= rows * cols");
      let body = T$.ListOfListOfEquationRowNode().generate(this.rows, dart.fn(i => {
        if (i == null) dart.nullFailed(I[58], 211, 8, "i");
        return newChildren[S.$sublist](dart.notNull(i) * dart.notNull(this.cols) + (dart.notNull(i) + 1) * dart.notNull(this.cols));
      }, T$.intToListOfEquationRowNode()), {growable: false});
      return this.copyWith({body: body});
    }
    copyWith(opts) {
      let t52, t52$, t52$0, t52$1, t52$2, t52$3, t52$4, t52$5;
      let arrayStretch = opts && 'arrayStretch' in opts ? opts.arrayStretch : null;
      let hskipBeforeAndAfter = opts && 'hskipBeforeAndAfter' in opts ? opts.hskipBeforeAndAfter : null;
      let isSmall = opts && 'isSmall' in opts ? opts.isSmall : null;
      let columnAligns = opts && 'columnAligns' in opts ? opts.columnAligns : null;
      let columnLines = opts && 'columnLines' in opts ? opts.columnLines : null;
      let rowSpacing = opts && 'rowSpacing' in opts ? opts.rowSpacing : null;
      let rowLines = opts && 'rowLines' in opts ? opts.rowLines : null;
      let body = opts && 'body' in opts ? opts.body : null;
      return matrix.MatrixNode.new({arrayStretch: (t52 = arrayStretch, t52 == null ? this.arrayStretch : t52), hskipBeforeAndAfter: (t52$ = hskipBeforeAndAfter, t52$ == null ? this.hskipBeforeAndAfter : t52$), isSmall: (t52$0 = isSmall, t52$0 == null ? this.isSmall : t52$0), columnAligns: (t52$1 = columnAligns, t52$1 == null ? this.columnAligns : t52$1), vLines: (t52$2 = columnLines, t52$2 == null ? this.vLines : t52$2), rowSpacings: (t52$3 = rowSpacing, t52$3 == null ? this.rowSpacings : t52$3), hLines: (t52$4 = rowLines, t52$4 == null ? this.hLines : t52$4), body: (t52$5 = body, t52$5 == null ? this.body : t52$5)});
    }
    toJson() {
      let t52;
      t52 = super.toJson();
      return (() => {
        t52[S.$addAll]((() => {
          let t53 = new (T$.IdentityMapOfString$ObjectN()).new();
          t53[S.$_set]("cols", this.cols);
          if (this.arrayStretch !== 1) t53[S.$_set]("arrayStretch", this.arrayStretch);
          if (this.hskipBeforeAndAfter !== false) t53[S.$_set]("hskipBeforeAndAfter", this.hskipBeforeAndAfter);
          if (this.isSmall !== false) t53[S.$_set]("isSmall", this.isSmall);
          t53[S.$_set]("columnAligns", this.columnAligns[S.$map](core.String, dart.fn(e => {
            if (e == null) dart.nullFailed(I[58], 246, 41, "e");
            return dart.toString(e);
          }, T$.MatrixColumnAlignToString())));
          t53[S.$_set]("vLines", this.vLines[S.$map](core.String, dart.fn(e => {
            if (e == null) dart.nullFailed(I[58], 247, 29, "e");
            return dart.toString(e);
          }, T$.MatrixSeparatorStyleToString())));
          if (!dart.test(this.rowSpacings[S.$every](dart.fn(element => {
            if (element == null) dart.nullFailed(I[58], 248, 31, "element");
            return element.value === 0;
          }, T$.MeasurementTobool())))) t53[S.$_set]("rowSpacings", this.rowSpacings[S.$map](core.String, dart.fn(e => {
            if (e == null) dart.nullFailed(I[58], 249, 41, "e");
            return dart.toString(e);
          }, T$.MeasurementToString())));
          if (!dart.test(this.hLines[S.$every](dart.fn(element => {
            if (element == null) dart.nullFailed(I[58], 250, 26, "element");
            return element == matrix.MatrixSeparatorStyle.none;
          }, T$.MatrixSeparatorStyleTobool())))) t53[S.$_set]("hLines", this.hLines[S.$map](core.String, dart.fn(e => {
            if (e == null) dart.nullFailed(I[58], 251, 31, "e");
            return dart.toString(e);
          }, T$.MatrixSeparatorStyleToString())));
          t53[S.$_set]("body", this.body[S.$map](T$.IterableOfMapNOfString$ObjectN(), dart.fn(e => {
            if (e == null) dart.nullFailed(I[58], 252, 25, "e");
            return e[S.$map](T$.MapNOfString$ObjectN(), dart.fn(e => {
              let t54;
              t54 = e;
              return t54 == null ? null : t54.toJson();
            }, T$.EquationRowNodeNToMapNOfString$ObjectN()));
          }, T$.ListOfEquationRowNodeNToIterableOfMapNOfString$ObjectN())));
          return t53;
        })());
        return t52;
      })();
    }
  };
  (matrix.MatrixNode.__ = function(opts) {
    let rows = opts && 'rows' in opts ? opts.rows : null;
    if (rows == null) dart.nullFailed(I[58], 79, 19, "rows");
    let cols = opts && 'cols' in opts ? opts.cols : null;
    if (cols == null) dart.nullFailed(I[58], 80, 19, "cols");
    let arrayStretch = opts && 'arrayStretch' in opts ? opts.arrayStretch : 1;
    if (arrayStretch == null) dart.nullFailed(I[58], 81, 10, "arrayStretch");
    let hskipBeforeAndAfter = opts && 'hskipBeforeAndAfter' in opts ? opts.hskipBeforeAndAfter : false;
    if (hskipBeforeAndAfter == null) dart.nullFailed(I[58], 82, 10, "hskipBeforeAndAfter");
    let isSmall = opts && 'isSmall' in opts ? opts.isSmall : false;
    if (isSmall == null) dart.nullFailed(I[58], 83, 10, "isSmall");
    let columnAligns = opts && 'columnAligns' in opts ? opts.columnAligns : null;
    if (columnAligns == null) dart.nullFailed(I[58], 84, 19, "columnAligns");
    let vLines = opts && 'vLines' in opts ? opts.vLines : null;
    if (vLines == null) dart.nullFailed(I[58], 85, 19, "vLines");
    let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : null;
    if (rowSpacings == null) dart.nullFailed(I[58], 86, 19, "rowSpacings");
    let hLines = opts && 'hLines' in opts ? opts.hLines : null;
    if (hLines == null) dart.nullFailed(I[58], 88, 19, "hLines");
    let body = opts && 'body' in opts ? opts.body : null;
    if (body == null) dart.nullFailed(I[58], 89, 19, "body");
    this[S.rows] = rows;
    this[S.cols] = cols;
    this[S.arrayStretch$1] = arrayStretch;
    this[S.hskipBeforeAndAfter] = hskipBeforeAndAfter;
    this[S.isSmall] = isSmall;
    this[S.columnAligns] = columnAligns;
    this[S.vLines] = vLines;
    this[S.rowSpacings$2] = rowSpacings;
    this[S.hLines] = hLines;
    this[S.body$1] = body;
    if (!(body[S.$length] == rows)) dart.assertFailed(null, I[58], 90, 17, "body.length == rows");
    if (!dart.test(body[S.$every](dart.fn(row => {
      if (row == null) dart.nullFailed(I[58], 91, 28, "row");
      return row[S.$length] == cols;
    }, T$.ListOfEquationRowNodeNTobool())))) dart.assertFailed(null, I[58], 91, 16, "body.every((row) => row.length == cols)");
    if (!(columnAligns[S.$length] == cols)) dart.assertFailed(null, I[58], 92, 16, "columnAligns.length == cols");
    if (!(vLines[S.$length] === dart.notNull(cols) + 1)) dart.assertFailed(null, I[58], 93, 16, "vLines.length == cols + 1");
    if (!(rowSpacings[S.$length] == rows)) dart.assertFailed(null, I[58], 94, 16, "rowSpacings.length == rows");
    if (!(hLines[S.$length] === dart.notNull(rows) + 1)) dart.assertFailed(null, I[58], 95, 16, "hLines.length == rows + 1");
    matrix.MatrixNode.__proto__.new.call(this);
    ;
  }).prototype = matrix.MatrixNode.prototype;
  dart.addTypeTests(matrix.MatrixNode);
  dart.addTypeCaches(matrix.MatrixNode);
  dart.setMethodSignature(matrix.MatrixNode, () => ({
    __proto__: dart.getMethods(matrix.MatrixNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(dart.nullable(syntax_tree.EquationRowNode)), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(matrix.MatrixNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(matrix.MatrixNode, [], {arrayStretch: dart.nullable(core.double), body: dart.nullable(core.List$(core.List$(dart.nullable(syntax_tree.EquationRowNode)))), columnAligns: dart.nullable(core.List$(matrix.MatrixColumnAlign)), columnLines: dart.nullable(core.List$(matrix.MatrixSeparatorStyle)), hskipBeforeAndAfter: dart.nullable(core.bool), isSmall: dart.nullable(core.bool), rowLines: dart.nullable(core.List$(matrix.MatrixSeparatorStyle)), rowSpacing: dart.nullable(core.List$(size$.Measurement))}, {})
  }));
  dart.setGetterSignature(matrix.MatrixNode, () => ({
    __proto__: dart.getGetters(matrix.MatrixNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(matrix.MatrixNode, I[59]);
  dart.setFieldSignature(matrix.MatrixNode, () => ({
    __proto__: dart.getFields(matrix.MatrixNode.__proto__),
    arrayStretch: dart.finalFieldType(core.double),
    hskipBeforeAndAfter: dart.finalFieldType(core.bool),
    isSmall: dart.finalFieldType(core.bool),
    columnAligns: dart.finalFieldType(core.List$(matrix.MatrixColumnAlign)),
    vLines: dart.finalFieldType(core.List$(matrix.MatrixSeparatorStyle)),
    rowSpacings: dart.finalFieldType(core.List$(size$.Measurement)),
    hLines: dart.finalFieldType(core.List$(matrix.MatrixSeparatorStyle)),
    body: dart.finalFieldType(core.List$(core.List$(dart.nullable(syntax_tree.EquationRowNode)))),
    rows: dart.finalFieldType(core.int),
    cols: dart.finalFieldType(core.int)
  }));
  const _is_CustomLayoutDelegate_default = Symbol('_is_CustomLayoutDelegate_default');
  custom_layout.CustomLayoutDelegate$ = dart.generic(T => {
    class CustomLayoutDelegate extends core.Object {
      additionalPaint(context, offset) {
        if (context == null) dart.nullFailed(I[60], 28, 40, "context");
        if (offset == null) dart.nullFailed(I[60], 28, 56, "offset");
      }
    }
    (CustomLayoutDelegate.new = function() {
      ;
    }).prototype = CustomLayoutDelegate.prototype;
    dart.addTypeTests(CustomLayoutDelegate);
    CustomLayoutDelegate.prototype[_is_CustomLayoutDelegate_default] = true;
    dart.addTypeCaches(CustomLayoutDelegate);
    dart.setMethodSignature(CustomLayoutDelegate, () => ({
      __proto__: dart.getMethods(CustomLayoutDelegate.__proto__),
      additionalPaint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset])
    }));
    dart.setLibraryUri(CustomLayoutDelegate, I[61]);
    return CustomLayoutDelegate;
  });
  custom_layout.CustomLayoutDelegate = custom_layout.CustomLayoutDelegate$();
  dart.addTypeTests(custom_layout.CustomLayoutDelegate, _is_CustomLayoutDelegate_default);
  const _is_IntrinsicLayoutDelegate_default = Symbol('_is_IntrinsicLayoutDelegate_default');
  custom_layout.IntrinsicLayoutDelegate$ = dart.generic(T => {
    var MapOfT$RenderBox = () => (MapOfT$RenderBox = dart.constFn(core.Map$(T, box.RenderBox)))();
    var MapEntryOfT$double = () => (MapEntryOfT$double = dart.constFn(core.MapEntry$(T, core.double)))();
    var TAndRenderBoxToMapEntryOfT$double = () => (TAndRenderBoxToMapEntryOfT$double = dart.constFn(dart.fnType(MapEntryOfT$double(), [T, box.RenderBox])))();
    var TAndRenderBoxTovoid = () => (TAndRenderBoxTovoid = dart.constFn(dart.fnType(dart.void, [T, box.RenderBox])))();
    class IntrinsicLayoutDelegate extends custom_layout.CustomLayoutDelegate$(T) {
      getIntrinsicSize(opts) {
        let sizingDirection = opts && 'sizingDirection' in opts ? opts.sizingDirection : null;
        if (sizingDirection == null) dart.nullFailed(I[60], 238, 19, "sizingDirection");
        let max = opts && 'max' in opts ? opts.max : null;
        if (max == null) dart.nullFailed(I[60], 239, 19, "max");
        let extent = opts && 'extent' in opts ? opts.extent : null;
        if (extent == null) dart.nullFailed(I[60], 240, 21, "extent");
        let childSize = opts && 'childSize' in opts ? opts.childSize : null;
        if (childSize == null) dart.nullFailed(I[60], 241, 62, "childSize");
        let childrenTable = opts && 'childrenTable' in opts ? opts.childrenTable : null;
        MapOfT$RenderBox().as(childrenTable);
        if (childrenTable == null) dart.nullFailed(I[60], 242, 32, "childrenTable");
        if (sizingDirection == basic_types.Axis.horizontal) {
          return this.performHorizontalIntrinsicLayout({childrenWidths: childrenTable[S.$map](T, core.double, dart.fn((key, value) => {
              if (value == null) dart.nullFailed(I[60], 247, 19, "value");
              return new (MapEntryOfT$double()).__(key, childSize(value, 1 / 0));
            }, TAndRenderBoxToMapEntryOfT$double())), isComputingIntrinsics: true}).size;
        } else {
          let childrenHeights = childrenTable[S.$map](T, core.double, dart.fn((key, value) => {
            if (value == null) dart.nullFailed(I[60], 252, 17, "value");
            return new (MapEntryOfT$double()).__(key, childSize(value, 1 / 0));
          }, TAndRenderBoxToMapEntryOfT$double()));
          return this.performVerticalIntrinsicLayout({childrenHeights: childrenHeights, childrenBaselines: childrenHeights, isComputingIntrinsics: true}).size;
        }
      }
      performLayout(constraints, childrenTable) {
        if (constraints == null) dart.nullFailed(I[60], 263, 22, "constraints");
        MapOfT$RenderBox().as(childrenTable);
        if (childrenTable == null) dart.nullFailed(I[60], 263, 53, "childrenTable");
        childrenTable[S.$forEach](dart.fn((_, child) => {
          if (child == null) dart.nullFailed(I[60], 265, 13, "child");
          return child.layout(constants.infiniteConstraint, {parentUsesSize: true});
        }, TAndRenderBoxTovoid()));
        let hconf = this.performHorizontalIntrinsicLayout({childrenWidths: childrenTable[S.$map](T, core.double, dart.fn((key, value) => {
            if (value == null) dart.nullFailed(I[60], 268, 35, "value");
            return new (MapEntryOfT$double()).__(key, value.size.width);
          }, TAndRenderBoxToMapEntryOfT$double()))});
        let vconf = this.performVerticalIntrinsicLayout({childrenHeights: childrenTable[S.$map](T, core.double, dart.fn((key, value) => {
            if (value == null) dart.nullFailed(I[60], 272, 35, "value");
            return new (MapEntryOfT$double()).__(key, value.size.height);
          }, TAndRenderBoxToMapEntryOfT$double())), childrenBaselines: childrenTable[S.$map](T, core.double, dart.fn((key, value) => {
            if (value == null) dart.nullFailed(I[60], 273, 50, "value");
            return new (MapEntryOfT$double()).__(key, dart.nullCheck(value.getDistanceToBaseline(ui.TextBaseline.alphabetic, {onlyReal: true})));
          }, TAndRenderBoxToMapEntryOfT$double()))});
        childrenTable[S.$forEach](dart.fn((id, child) => {
          let t53;
          if (child == null) dart.nullFailed(I[60], 279, 32, "child");
          t53 = new ui.Offset.new(dart.nullCheck(hconf.offsetTable[S.$_get](id)), dart.nullCheck(vconf.offsetTable[S.$_get](id)));
          render_box_offset['RenderBoxOffsetExt|set#offset'](child, t53);
          return t53;
        }, TAndRenderBoxTovoid()));
        return new ui.Size.new(hconf.size, vconf.size);
      }
    }
    (IntrinsicLayoutDelegate.new = function() {
      IntrinsicLayoutDelegate.__proto__.new.call(this);
      ;
    }).prototype = IntrinsicLayoutDelegate.prototype;
    dart.addTypeTests(IntrinsicLayoutDelegate);
    IntrinsicLayoutDelegate.prototype[_is_IntrinsicLayoutDelegate_default] = true;
    dart.addTypeCaches(IntrinsicLayoutDelegate);
    dart.setMethodSignature(IntrinsicLayoutDelegate, () => ({
      __proto__: dart.getMethods(IntrinsicLayoutDelegate.__proto__),
      getIntrinsicSize: dart.fnType(core.double, [], {childSize: dart.fnType(core.double, [box.RenderBox, core.double]), childrenTable: dart.nullable(core.Object), extent: core.double, max: core.bool, sizingDirection: basic_types.Axis}, {}),
      performLayout: dart.fnType(ui.Size, [box.BoxConstraints, dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(IntrinsicLayoutDelegate, I[61]);
    return IntrinsicLayoutDelegate;
  });
  custom_layout.IntrinsicLayoutDelegate = custom_layout.IntrinsicLayoutDelegate$();
  dart.addTypeTests(custom_layout.IntrinsicLayoutDelegate, _is_IntrinsicLayoutDelegate_default);
  matrix.MatrixLayoutDelegate = class MatrixLayoutDelegate extends custom_layout.IntrinsicLayoutDelegate$(core.int) {
    get rows() {
      return this[S.rows$1];
    }
    set rows(value) {
      super.rows = value;
    }
    get cols() {
      return this[S.cols$1];
    }
    set cols(value) {
      super.cols = value;
    }
    get ruleThickness() {
      return this[S.ruleThickness$1];
    }
    set ruleThickness(value) {
      super.ruleThickness = value;
    }
    get arrayskip() {
      return this[S.arrayskip$1];
    }
    set arrayskip(value) {
      super.arrayskip = value;
    }
    get rowSpacings() {
      return this[S.rowSpacings$3];
    }
    set rowSpacings(value) {
      super.rowSpacings = value;
    }
    get hLines() {
      return this[S.hLines$1];
    }
    set hLines(value) {
      super.hLines = value;
    }
    get hskipBeforeAndAfter() {
      return this[S.hskipBeforeAndAfter$1];
    }
    set hskipBeforeAndAfter(value) {
      super.hskipBeforeAndAfter = value;
    }
    get arraycolsep() {
      return this[S.arraycolsep];
    }
    set arraycolsep(value) {
      super.arraycolsep = value;
    }
    get vLines() {
      return this[S.vLines$1];
    }
    set vLines(value) {
      super.vLines = value;
    }
    get columnAligns() {
      return this[S.columnAligns$1];
    }
    set columnAligns(value) {
      super.columnAligns = value;
    }
    get hLinePos() {
      return this[S.hLinePos];
    }
    set hLinePos(value) {
      this[S.hLinePos] = value;
    }
    get vLinePos() {
      return this[S.vLinePos];
    }
    set vLinePos(value) {
      this[S.vLinePos] = value;
    }
    get totalHeight() {
      return this[S.totalHeight];
    }
    set totalHeight(value) {
      this[S.totalHeight] = value;
    }
    get width() {
      return this[S.width$1];
    }
    set width(value) {
      this[S.width$1] = value;
    }
    computeDistanceToActualBaseline(baseline, childrenTable) {
      if (baseline == null) dart.nullFailed(I[58], 290, 24, "baseline");
      T$.MapOfint$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[58], 292, 31, "childrenTable");
      return null;
    }
    performHorizontalIntrinsicLayout(opts) {
      let childrenWidths = opts && 'childrenWidths' in opts ? opts.childrenWidths : null;
      T$.MapOfint$double().as(childrenWidths);
      if (childrenWidths == null) dart.nullFailed(I[58], 297, 31, "childrenWidths");
      let isComputingIntrinsics = opts && 'isComputingIntrinsics' in opts ? opts.isComputingIntrinsics : false;
      if (isComputingIntrinsics == null) dart.nullFailed(I[58], 298, 10, "isComputingIntrinsics");
      let childWidths = T$.ListOfdouble().generate(dart.notNull(this.cols) * dart.notNull(this.rows), dart.fn(index => {
        let t53;
        if (index == null) dart.nullFailed(I[58], 301, 23, "index");
        t53 = childrenWidths[S.$_get](index);
        return t53 == null ? 0.0 : t53;
      }, T$.intTodouble()), {growable: false});
      let colWidths = T$.ListOfdouble().filled(this.cols, 0.0, {growable: false});
      for (let i = 0; i < dart.notNull(this.cols); i = i + 1) {
        for (let j = 0; j < dart.notNull(this.rows); j = j + 1) {
          colWidths[S.$_set](i, math.max(core.double, colWidths[S.$_get](i), childWidths[S.$_get](j * dart.notNull(this.cols) + i)));
        }
      }
      let colPos = T$.ListOfdouble().filled(this.cols, 0.0, {growable: false});
      let vLinePos = T$.ListOfdouble().filled(dart.notNull(this.cols) + 1, 0.0, {growable: false});
      let pos = 0.0;
      vLinePos[S.$_set](0, pos);
      pos = pos + dart.notNull(this.vLines[S.$_get](0) != matrix.MatrixSeparatorStyle.none ? this.ruleThickness : 0.0);
      pos = pos + dart.notNull(dart.test(this.hskipBeforeAndAfter) ? this.arraycolsep : 0.0);
      for (let i = 0; i < dart.notNull(this.cols) - 1; i = i + 1) {
        colPos[S.$_set](i, pos);
        pos = pos + (dart.notNull(colWidths[S.$_get](i)) + dart.notNull(this.arraycolsep));
        vLinePos[S.$_set](i + 1, pos);
        pos = pos + dart.notNull(this.vLines[S.$_get](i + 1) != matrix.MatrixSeparatorStyle.none ? this.ruleThickness : 0.0);
        pos = pos + dart.notNull(this.arraycolsep);
      }
      colPos[S.$_set](dart.notNull(this.cols) - 1, pos);
      pos = pos + dart.notNull(colWidths[S.$_get](dart.notNull(this.cols) - 1));
      pos = pos + dart.notNull(dart.test(this.hskipBeforeAndAfter) ? this.arraycolsep : 0.0);
      vLinePos[S.$_set](this.cols, pos);
      pos = pos + dart.notNull(this.vLines[S.$_get](this.cols) != matrix.MatrixSeparatorStyle.none ? this.ruleThickness : 0.0);
      this.width = pos;
      let childPos = T$.ListOfdouble().generate(dart.notNull(this.rows) * dart.notNull(this.cols), dart.fn(index => {
        if (index == null) dart.nullFailed(I[58], 341, 50, "index");
        let col = index[S.$modulo](this.cols);
        switch (this.columnAligns[S.$_get](col)) {
          case C[1373] || CT.C1373:
          {
            return colPos[S.$_get](col);
          }
          case C[1375] || CT.C1375:
          {
            return dart.notNull(colPos[S.$_get](col)) + dart.notNull(colWidths[S.$_get](col)) - dart.notNull(childWidths[S.$_get](index));
          }
          case C[1374] || CT.C1374:
          default:
          {
            return dart.notNull(colPos[S.$_get](col)) + (dart.notNull(colWidths[S.$_get](col)) - dart.notNull(childWidths[S.$_get](index))) / 2;
          }
        }
      }, T$.intTodouble()), {growable: false});
      if (!dart.test(isComputingIntrinsics)) {
        this.vLinePos = vLinePos;
      }
      return new (T$.AxisConfigurationOfint()).new({size: this.width, offsetTable: childPos[S.$asMap]()});
    }
    performVerticalIntrinsicLayout(opts) {
      let childrenHeights = opts && 'childrenHeights' in opts ? opts.childrenHeights : null;
      T$.MapOfint$double().as(childrenHeights);
      if (childrenHeights == null) dart.nullFailed(I[58], 366, 31, "childrenHeights");
      let childrenBaselines = opts && 'childrenBaselines' in opts ? opts.childrenBaselines : null;
      T$.MapOfint$double().as(childrenBaselines);
      if (childrenBaselines == null) dart.nullFailed(I[58], 367, 31, "childrenBaselines");
      let isComputingIntrinsics = opts && 'isComputingIntrinsics' in opts ? opts.isComputingIntrinsics : false;
      if (isComputingIntrinsics == null) dart.nullFailed(I[58], 368, 10, "isComputingIntrinsics");
      let childHeights = T$.ListOfdouble().generate(dart.notNull(this.cols) * dart.notNull(this.rows), dart.fn(index => {
        let t53;
        if (index == null) dart.nullFailed(I[58], 372, 8, "index");
        t53 = childrenBaselines[S.$_get](index);
        return t53 == null ? 0.0 : t53;
      }, T$.intTodouble()), {growable: false});
      let childDepth = T$.ListOfdouble().generate(dart.notNull(this.cols) * dart.notNull(this.rows), dart.fn(index => {
        if (index == null) dart.nullFailed(I[58], 375, 52, "index");
        let height = childrenBaselines[S.$_get](index);
        return height != null ? dart.nullCheck(childrenHeights[S.$_get](index)) - dart.notNull(height) : 0.0;
      }, T$.intTodouble()), {growable: false});
      let rowHeights = T$.ListOfdouble().filled(this.rows, 0.7 * dart.notNull(this.arrayskip), {growable: false});
      let rowDepth = T$.ListOfdouble().filled(this.rows, 0.3 * dart.notNull(this.arrayskip), {growable: false});
      for (let i = 0; i < dart.notNull(this.rows); i = i + 1) {
        for (let j = 0; j < dart.notNull(this.cols); j = j + 1) {
          rowHeights[S.$_set](i, math.max(core.double, rowHeights[S.$_get](i), childHeights[S.$_get](i * dart.notNull(this.cols) + j)));
          rowDepth[S.$_set](i, math.max(core.double, rowDepth[S.$_get](i), childDepth[S.$_get](i * dart.notNull(this.cols) + j)));
        }
      }
      let pos = 0.0;
      let rowBaselinePos = T$.ListOfdouble().filled(this.rows, 0.0, {growable: false});
      let hLinePos = T$.ListOfdouble().filled(dart.notNull(this.rows) + 1, 0.0, {growable: false});
      for (let i = 0; i < dart.notNull(this.rows); i = i + 1) {
        hLinePos[S.$_set](i, pos);
        pos = pos + dart.notNull(this.hLines[S.$_get](i) != matrix.MatrixSeparatorStyle.none ? this.ruleThickness : 0.0);
        pos = pos + dart.notNull(rowHeights[S.$_get](i));
        rowBaselinePos[S.$_set](i, pos);
        pos = pos + dart.notNull(rowDepth[S.$_get](i));
        pos = pos + dart.notNull(i < dart.notNull(this.rows) - 1 ? this.rowSpacings[S.$_get](i) : 0);
      }
      hLinePos[S.$_set](this.rows, pos);
      pos = pos + dart.notNull(this.hLines[S.$_get](this.rows) != matrix.MatrixSeparatorStyle.none ? this.ruleThickness : 0.0);
      this.totalHeight = pos;
      let childPos = T$.ListOfdouble().generate(dart.notNull(this.rows) * dart.notNull(this.cols), dart.fn(index => {
        if (index == null) dart.nullFailed(I[58], 416, 50, "index");
        let row = (dart.notNull(index) / dart.notNull(this.cols))[S.$truncate]();
        return dart.notNull(rowBaselinePos[S.$_get](row)) - dart.notNull(childHeights[S.$_get](index));
      }, T$.intTodouble()), {growable: false});
      if (!dart.test(isComputingIntrinsics)) {
        this.hLinePos = hLinePos;
      }
      return new (T$.AxisConfigurationOfint()).new({size: this.totalHeight, offsetTable: childPos[S.$asMap]()});
    }
    additionalPaint(context, offset) {
      let t53;
      if (context == null) dart.nullFailed(I[58], 433, 40, "context");
      if (offset == null) dart.nullFailed(I[58], 433, 56, "offset");
      let paint = (t53 = ui.Paint.new(), (() => {
        t53.strokeWidth = this.ruleThickness;
        return t53;
      })());
      for (let i = 0; i < dart.notNull(this.hLines[S.$length]); i = i + 1) {
        switch (this.hLines[S.$_get](i)) {
          case C[1369] || CT.C1369:
          {
            context.canvas.drawLine(new ui.Offset.new(offset.dx, dart.notNull(offset.dy) + dart.notNull(this.hLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2), new ui.Offset.new(dart.notNull(offset.dx) + dart.notNull(this.width), dart.notNull(offset.dy) + dart.notNull(this.hLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2), paint);
            break;
          }
          case C[1370] || CT.C1370:
          {
            for (let dx = 0.0; dx < dart.notNull(this.width); dx = dx + 4) {
              context.canvas.drawLine(new ui.Offset.new(dart.notNull(offset.dx) + dx, dart.notNull(offset.dy) + dart.notNull(this.hLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2), new ui.Offset.new(dart.notNull(offset.dx) + math.min(core.num, dx + 4 / 2, this.width), dart.notNull(offset.dy) + dart.notNull(this.hLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2), paint);
            }
            break;
          }
          default:
        }
      }
      for (let i = 0; i < dart.notNull(this.vLines[S.$length]); i = i + 1) {
        switch (this.vLines[S.$_get](i)) {
          case C[1369] || CT.C1369:
          {
            context.canvas.drawLine(new ui.Offset.new(dart.notNull(offset.dx) + dart.notNull(this.vLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2, offset.dy), new ui.Offset.new(dart.notNull(offset.dx) + dart.notNull(this.vLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2, dart.notNull(offset.dy) + dart.notNull(this.totalHeight)), paint);
            break;
          }
          case C[1370] || CT.C1370:
          {
            for (let dy = 0.0; dy < dart.notNull(this.totalHeight); dy = dy + 4) {
              context.canvas.drawLine(new ui.Offset.new(dart.notNull(offset.dx) + dart.notNull(this.vLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2, dart.notNull(offset.dy) + dy), new ui.Offset.new(dart.notNull(offset.dx) + dart.notNull(this.vLinePos[S.$_get](i)) + dart.notNull(this.ruleThickness) / 2, dart.notNull(offset.dy) + math.min(core.num, dy + 4 / 2, this.totalHeight)), paint);
            }
            break;
          }
          default:
        }
      }
    }
  };
  (matrix.MatrixLayoutDelegate.new = function(opts) {
    let rows = opts && 'rows' in opts ? opts.rows : null;
    if (rows == null) dart.nullFailed(I[58], 269, 19, "rows");
    let cols = opts && 'cols' in opts ? opts.cols : null;
    if (cols == null) dart.nullFailed(I[58], 270, 19, "cols");
    let ruleThickness = opts && 'ruleThickness' in opts ? opts.ruleThickness : null;
    if (ruleThickness == null) dart.nullFailed(I[58], 271, 19, "ruleThickness");
    let arrayskip = opts && 'arrayskip' in opts ? opts.arrayskip : null;
    if (arrayskip == null) dart.nullFailed(I[58], 272, 19, "arrayskip");
    let rowSpacings = opts && 'rowSpacings' in opts ? opts.rowSpacings : null;
    if (rowSpacings == null) dart.nullFailed(I[58], 273, 19, "rowSpacings");
    let hLines = opts && 'hLines' in opts ? opts.hLines : null;
    if (hLines == null) dart.nullFailed(I[58], 274, 19, "hLines");
    let hskipBeforeAndAfter = opts && 'hskipBeforeAndAfter' in opts ? opts.hskipBeforeAndAfter : null;
    if (hskipBeforeAndAfter == null) dart.nullFailed(I[58], 275, 19, "hskipBeforeAndAfter");
    let arraycolsep = opts && 'arraycolsep' in opts ? opts.arraycolsep : null;
    if (arraycolsep == null) dart.nullFailed(I[58], 276, 19, "arraycolsep");
    let vLines = opts && 'vLines' in opts ? opts.vLines : null;
    if (vLines == null) dart.nullFailed(I[58], 277, 19, "vLines");
    let columnAligns = opts && 'columnAligns' in opts ? opts.columnAligns : null;
    if (columnAligns == null) dart.nullFailed(I[58], 278, 19, "columnAligns");
    this[S.totalHeight] = 0.0;
    this[S.width$1] = 0.0;
    this[S.rows$1] = rows;
    this[S.cols$1] = cols;
    this[S.ruleThickness$1] = ruleThickness;
    this[S.arrayskip$1] = arrayskip;
    this[S.rowSpacings$3] = rowSpacings;
    this[S.hLines$1] = hLines;
    this[S.hskipBeforeAndAfter$1] = hskipBeforeAndAfter;
    this[S.arraycolsep] = arraycolsep;
    this[S.vLines$1] = vLines;
    this[S.columnAligns$1] = columnAligns;
    this[S.vLinePos] = T$.ListOfdouble().filled(dart.notNull(cols) + 1, 0.0, {growable: false});
    this[S.hLinePos] = T$.ListOfdouble().filled(dart.notNull(rows) + 1, 0.0, {growable: false});
    matrix.MatrixLayoutDelegate.__proto__.new.call(this);
    ;
  }).prototype = matrix.MatrixLayoutDelegate.prototype;
  dart.addTypeTests(matrix.MatrixLayoutDelegate);
  dart.addTypeCaches(matrix.MatrixLayoutDelegate);
  dart.setMethodSignature(matrix.MatrixLayoutDelegate, () => ({
    __proto__: dart.getMethods(matrix.MatrixLayoutDelegate.__proto__),
    computeDistanceToActualBaseline: dart.fnType(dart.nullable(core.double), [ui.TextBaseline, dart.nullable(core.Object)]),
    performHorizontalIntrinsicLayout: dart.fnType(custom_layout.AxisConfiguration$(core.int), [], {childrenWidths: dart.nullable(core.Object), isComputingIntrinsics: core.bool}, {}),
    performVerticalIntrinsicLayout: dart.fnType(custom_layout.AxisConfiguration$(core.int), [], {childrenBaselines: dart.nullable(core.Object), childrenHeights: dart.nullable(core.Object), isComputingIntrinsics: core.bool}, {})
  }));
  dart.setLibraryUri(matrix.MatrixLayoutDelegate, I[59]);
  dart.setFieldSignature(matrix.MatrixLayoutDelegate, () => ({
    __proto__: dart.getFields(matrix.MatrixLayoutDelegate.__proto__),
    rows: dart.finalFieldType(core.int),
    cols: dart.finalFieldType(core.int),
    ruleThickness: dart.finalFieldType(core.double),
    arrayskip: dart.finalFieldType(core.double),
    rowSpacings: dart.finalFieldType(core.List$(core.double)),
    hLines: dart.finalFieldType(core.List$(matrix.MatrixSeparatorStyle)),
    hskipBeforeAndAfter: dart.finalFieldType(core.bool),
    arraycolsep: dart.finalFieldType(core.double),
    vLines: dart.finalFieldType(core.List$(matrix.MatrixSeparatorStyle)),
    columnAligns: dart.finalFieldType(core.List$(matrix.MatrixColumnAlign)),
    hLinePos: dart.fieldType(core.List$(core.double)),
    vLinePos: dart.fieldType(core.List$(core.double)),
    totalHeight: dart.fieldType(core.double),
    width: dart.fieldType(core.double)
  }));
  array.ColSeparationType = class ColSeparationType extends core.Object {
    toString() {
      return this[S._name$11];
    }
  };
  (array.ColSeparationType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[62], 63, 6, "index");
    if (_name == null) dart.nullFailed(I[62], 63, 6, "_name");
    this.index = index;
    this[S._name$11] = _name;
    ;
  }).prototype = array.ColSeparationType.prototype;
  dart.addTypeTests(array.ColSeparationType);
  dart.addTypeCaches(array.ColSeparationType);
  dart.setLibraryUri(array.ColSeparationType, I[63]);
  dart.setFieldSignature(array.ColSeparationType, () => ({
    __proto__: dart.getFields(array.ColSeparationType.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$11]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(array.ColSeparationType, ['toString']);
  array.ColSeparationType.align = C[1398] || CT.C1398;
  array.ColSeparationType.alignat = C[1399] || CT.C1399;
  array.ColSeparationType.small = C[1400] || CT.C1400;
  array.ColSeparationType.values = C[1401] || CT.C1401;
  array.getHLines = function getHLines(parser) {
    if (parser == null) dart.nullFailed(I[62], 69, 48, "parser");
    let hlineInfo = T$.JSArrayOfMatrixSeparatorStyle().of([]);
    parser.consumeSpaces();
    let next = parser.fetch().text;
    while (next === "\\hline" || next === "\\hdashline") {
      parser.consume();
      hlineInfo[S.$add](next === "\\hdashline" ? matrix.MatrixSeparatorStyle.dashed : matrix.MatrixSeparatorStyle.solid);
      parser.consumeSpaces();
      next = parser.fetch().text;
    }
    return hlineInfo;
  };
  array.parseArray = function parseArray(parser, opts) {
    let t53, t53$, t53$0;
    if (parser == null) dart.nullFailed(I[62], 91, 13, "parser");
    let hskipBeforeAndAfter = opts && 'hskipBeforeAndAfter' in opts ? opts.hskipBeforeAndAfter : false;
    if (hskipBeforeAndAfter == null) dart.nullFailed(I[62], 92, 8, "hskipBeforeAndAfter");
    let arrayStretch = opts && 'arrayStretch' in opts ? opts.arrayStretch : null;
    let separators = opts && 'separators' in opts ? opts.separators : C[1383] || CT.C1383;
    if (separators == null) dart.nullFailed(I[62], 94, 30, "separators");
    let colAligns = opts && 'colAligns' in opts ? opts.colAligns : C[1382] || CT.C1382;
    if (colAligns == null) dart.nullFailed(I[62], 95, 27, "colAligns");
    let style = opts && 'style' in opts ? opts.style : null;
    let isSmall = opts && 'isSmall' in opts ? opts.isSmall : false;
    if (isSmall == null) dart.nullFailed(I[62], 97, 8, "isSmall");
    parser.macroExpander.beginGroup();
    parser.macroExpander.macros.set("\\\\", new macros.MacroDefinition.fromString("\\cr"));
    if (arrayStretch == null) {
      let stretch = parser.macroExpander.expandMacroAsText("\\arraystretch");
      if (stretch == null) {
        arrayStretch = 1.0;
      } else {
        arrayStretch = core.double.tryParse(stretch);
        if (arrayStretch == null || dart.notNull(arrayStretch) < 0) {
          dart.throw(new parse_error.ParseException.new("Invalid \\arraystretch: " + dart.str(stretch)));
        }
      }
    }
    parser.macroExpander.beginGroup();
    let row = T$.JSArrayOfEquationRowNode().of([]);
    let body = T$.JSArrayOfListOfEquationRowNode().of([row]);
    let rowGaps = T$.JSArrayOfMeasurement().of([]);
    let hLinesBeforeRow = T$.JSArrayOfMatrixSeparatorStyle().of([]);
    hLinesBeforeRow[S.$add]((t53 = iterable_extensions$['IterableExtension|get#lastOrNull'](matrix.MatrixSeparatorStyle, array.getHLines(parser)), t53 == null ? matrix.MatrixSeparatorStyle.none : t53));
    while (true) {
      let cellBody = parser.parseExpression({breakOnInfix: false, breakOnTokenText: "\\cr"});
      parser.macroExpander.endGroup();
      parser.macroExpander.beginGroup();
      let cell = style == null ? syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](cellBody) : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](new style$.StyleNode.new({children: cellBody, optionsDiff: new options$.OptionsDiff.new({style: style})}));
      row[S.$add](cell);
      let next = parser.fetch().text;
      if (next === "&") {
        parser.consume();
      } else if (next === "\\end") {
        if (row[S.$length] === 1 && dart.test(cellBody[S.$isEmpty])) {
          body[S.$removeLast]();
        }
        if (dart.notNull(hLinesBeforeRow[S.$length]) < dart.notNull(body[S.$length]) + 1) {
          hLinesBeforeRow[S.$add](matrix.MatrixSeparatorStyle.none);
        }
        break;
      } else if (next === "\\cr") {
        let cr = parser$.assertNodeType(katex_base.CrNode, parser.parseFunction(null, null, null));
        rowGaps[S.$add]((t53$ = cr.size, t53$ == null ? size$.Measurement.zero : t53$));
        hLinesBeforeRow[S.$add]((t53$0 = iterable_extensions$['IterableExtension|get#lastOrNull'](matrix.MatrixSeparatorStyle, array.getHLines(parser)), t53$0 == null ? matrix.MatrixSeparatorStyle.none : t53$0));
        row = T$.JSArrayOfEquationRowNode().of([]);
        body[S.$add](row);
      } else {
        dart.throw(new parse_error.ParseException.new("Expected & or \\\\ or \\cr or \\end", parser.nextToken));
      }
    }
    parser.macroExpander.endGroup();
    parser.macroExpander.endGroup();
    return matrix.MatrixNode.new({body: body, vLines: separators, columnAligns: colAligns, rowSpacings: rowGaps, arrayStretch: arrayStretch, hLines: hLinesBeforeRow, hskipBeforeAndAfter: hskipBeforeAndAfter, isSmall: isSmall});
  };
  array._dCellStyle = function _dCellStyle(envName) {
    if (envName == null) dart.nullFailed(I[62], 193, 30, "envName");
    return envName[S.$substring](0, 1) === "d" ? style$0.MathStyle.display : style$0.MathStyle.text;
  };
  array._arrayHandler = function _arrayHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[62], 215, 35, "parser");
    if (context == null) dart.nullFailed(I[62], 215, 54, "context");
    let symArg = parser.parseArgNode({mode: null, optional: false});
    let colalign = symbol$.SymbolNode.is(symArg) ? T$.JSArrayOfSymbolNode().of([symArg]) : parser$.assertNodeType(syntax_tree.EquationRowNode, symArg).children;
    let separators = T$.JSArrayOfMatrixSeparatorStyle().of([]);
    let aligns = T$.JSArrayOfMatrixColumnAlign().of([]);
    let alignSpecified = true;
    let lastIsSeparator = false;
    for (let nde of colalign) {
      let node = parser$.assertNodeType(symbol$.SymbolNode, nde);
      let ca = node.symbol;
      switch (ca) {
        case "l":
        case "c":
        case "r":
        {
          aligns[S.$add](dart.nullCheck((C[1402] || CT.C1402)[S.$_get](ca)));
          if (alignSpecified) {
            separators[S.$add](matrix.MatrixSeparatorStyle.none);
          }
          alignSpecified = true;
          lastIsSeparator = false;
          break;
        }
        case "|":
        case ":":
        {
          if (alignSpecified) {
            separators[S.$add](dart.nullCheck((C[1403] || CT.C1403)[S.$_get](ca)));
          }
          alignSpecified = false;
          lastIsSeparator = true;
          break;
        }
        default:
        {
          dart.throw(new parse_error.ParseException.new("Unknown column alignment: " + dart.str(ca)));
        }
      }
    }
    if (!lastIsSeparator) {
      separators[S.$add](matrix.MatrixSeparatorStyle.none);
    }
    return array.parseArray(parser, {separators: separators, colAligns: aligns, hskipBeforeAndAfter: true, style: array._dCellStyle(context.envName)});
  };
  array._matrixHandler = function _matrixHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[62], 272, 36, "parser");
    if (context == null) dart.nullFailed(I[62], 272, 55, "context");
    let delimiters = (C[1404] || CT.C1404)[S.$_get](context.envName);
    let res = array.parseArray(parser, {hskipBeforeAndAfter: false, style: array._dCellStyle(context.envName)});
    return delimiters == null ? res : new left_right.LeftRightNode.new({leftDelim: delimiters[S.$_get](0), rightDelim: delimiters[S.$_get](1), body: T$.JSArrayOfEquationRowNode().of([syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](T$.JSArrayOfMatrixNode().of([res]))])});
  };
  array._smallMatrixHandler = function _smallMatrixHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[62], 297, 41, "parser");
    if (context == null) dart.nullFailed(I[62], 297, 60, "context");
    return array.parseArray(parser, {arrayStretch: 0.5, style: style$0.MathStyle.script, isSmall: true});
  };
  array._subArrayHandler = function _subArrayHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[62], 305, 38, "parser");
    if (context == null) dart.nullFailed(I[62], 305, 57, "context");
    let symArg = parser.parseArgNode({mode: null, optional: false});
    let colalign = symbol$.SymbolNode.is(symArg) ? T$.JSArrayOfSymbolNode().of([symArg]) : parser$.assertNodeType(syntax_tree.EquationRowNode, symArg).children;
    let aligns = T$.JSArrayOfMatrixColumnAlign().of([]);
    for (let nde of colalign) {
      let node = parser$.assertNodeType(symbol$.SymbolNode, nde);
      let ca = node.symbol;
      if (ca === "l" || ca === "c") {
        aligns[S.$add](ca === "l" ? matrix.MatrixColumnAlign.left : matrix.MatrixColumnAlign.center);
      } else {
        dart.throw(new parse_error.ParseException.new("Unknown column alignment: " + dart.str(ca)));
      }
    }
    if (dart.notNull(aligns[S.$length]) > 1) {
      dart.throw(new parse_error.ParseException.new("{subarray} can contain only one column"));
    }
    let res = array.parseArray(parser, {colAligns: aligns, hskipBeforeAndAfter: false, arrayStretch: 0.5, style: style$0.MathStyle.script});
    if (dart.notNull(res.body[S.$_get](0)[S.$length]) > 1) {
      dart.throw(new parse_error.ParseException.new("{subarray} can contain only one column"));
    }
    return res;
  };
  dart.defineLazy(array, {
    /*array.arrayEntries*/get arrayEntries() {
      return C[1410] || CT.C1410;
    }
  }, false);
  define_environment.EnvContext = class EnvContext extends core.Object {
    get mode() {
      return this[S.mode$3];
    }
    set mode(value) {
      super.mode = value;
    }
    get envName() {
      return this[S.envName];
    }
    set envName(value) {
      super.envName = value;
    }
  };
  (define_environment.EnvContext.new = function(opts) {
    let mode = opts && 'mode' in opts ? opts.mode : null;
    if (mode == null) dart.nullFailed(I[64], 35, 19, "mode");
    let envName = opts && 'envName' in opts ? opts.envName : null;
    if (envName == null) dart.nullFailed(I[64], 36, 19, "envName");
    this[S.mode$3] = mode;
    this[S.envName] = envName;
    ;
  }).prototype = define_environment.EnvContext.prototype;
  dart.addTypeTests(define_environment.EnvContext);
  dart.addTypeCaches(define_environment.EnvContext);
  dart.setLibraryUri(define_environment.EnvContext, I[65]);
  dart.setFieldSignature(define_environment.EnvContext, () => ({
    __proto__: dart.getFields(define_environment.EnvContext.__proto__),
    mode: dart.finalFieldType(types.Mode),
    envName: dart.finalFieldType(core.String)
  }));
  define_environment.EnvSpec = class EnvSpec extends core.Object {
    get numArgs() {
      return this[S.numArgs];
    }
    set numArgs(value) {
      super.numArgs = value;
    }
    get greediness() {
      return this[S.greediness];
    }
    set greediness(value) {
      super.greediness = value;
    }
    get allowedInText() {
      return this[S.allowedInText];
    }
    set allowedInText(value) {
      super.allowedInText = value;
    }
    get numOptionalArgs() {
      return this[S.numOptionalArgs];
    }
    set numOptionalArgs(value) {
      super.numOptionalArgs = value;
    }
    get handler() {
      return this[S.handler];
    }
    set handler(value) {
      super.handler = value;
    }
  };
  (define_environment.EnvSpec.new = function(opts) {
    let numArgs = opts && 'numArgs' in opts ? opts.numArgs : null;
    if (numArgs == null) dart.nullFailed(I[64], 48, 19, "numArgs");
    let greediness = opts && 'greediness' in opts ? opts.greediness : 1;
    if (greediness == null) dart.nullFailed(I[64], 49, 10, "greediness");
    let allowedInText = opts && 'allowedInText' in opts ? opts.allowedInText : false;
    if (allowedInText == null) dart.nullFailed(I[64], 50, 10, "allowedInText");
    let numOptionalArgs = opts && 'numOptionalArgs' in opts ? opts.numOptionalArgs : 0;
    if (numOptionalArgs == null) dart.nullFailed(I[64], 51, 10, "numOptionalArgs");
    let handler = opts && 'handler' in opts ? opts.handler : null;
    if (handler == null) dart.nullFailed(I[64], 52, 19, "handler");
    this[S.numArgs] = numArgs;
    this[S.greediness] = greediness;
    this[S.allowedInText] = allowedInText;
    this[S.numOptionalArgs] = numOptionalArgs;
    this[S.handler] = handler;
    ;
  }).prototype = define_environment.EnvSpec.prototype;
  dart.addTypeTests(define_environment.EnvSpec);
  dart.addTypeCaches(define_environment.EnvSpec);
  dart.setLibraryUri(define_environment.EnvSpec, I[65]);
  dart.setFieldSignature(define_environment.EnvSpec, () => ({
    __proto__: dart.getFields(define_environment.EnvSpec.__proto__),
    numArgs: dart.finalFieldType(core.int),
    greediness: dart.finalFieldType(core.int),
    allowedInText: dart.finalFieldType(core.bool),
    numOptionalArgs: dart.finalFieldType(core.int),
    handler: dart.finalFieldType(dart.fnType(syntax_tree.GreenNode, [parser$.TexParser, define_environment.EnvContext]))
  }));
  dart.copyProperties(define_environment, {
    get environments() {
      if (dart.test(define_environment._environments[S.$isEmpty])) {
        define_environment._environmentsEntries[S.$forEach](dart.fn((key, value) => {
          if (key == null) dart.nullFailed(I[64], 59, 35, "key");
          if (value == null) dart.nullFailed(I[64], 59, 40, "value");
          for (let name of key) {
            define_environment._environments[S.$_set](name, value);
          }
        }, T$.ListOfStringAndEnvSpecTovoid()));
      }
      return define_environment._environments;
    }
  });
  dart.defineLazy(define_environment, {
    /*define_environment._environments*/get _environments() {
      return new (T$.IdentityMapOfString$EnvSpec()).new();
    },
    /*define_environment._environmentsEntries*/get _environmentsEntries() {
      return (() => {
        let t53 = new (T$.LinkedMapOfListOfString$EnvSpec()).new();
        for (let t54 of array.arrayEntries[S.$entries])
          t53[S.$_set](t54.key, t54.value);
        for (let t55 of eqn_array$.eqnArrayEntries[S.$entries])
          t53[S.$_set](t55.key, t55.value);
        return t53;
      })();
    }
  }, false);
  under.UnderNode = class UnderNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get base() {
      return this[S.base$1];
    }
    set base(value) {
      super.base = value;
    }
    get below() {
      return this[S.below];
    }
    set below(value) {
      super.below = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[66], 27, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[66], 27, 47, "childBuildResults");
      let spacing = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing5).toLpUnder(options);
      return new syntax_tree.BuildResult.new({italic: 0.0, options: options, widget: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: spacing}), child: new vlist.VList.new({baselineReferenceWidgetIndex: 0, children: T$.JSArrayOfWidget().of([dart.nullCheck(childBuildResults[S.$_get](0)).widget, new min_dimension.MinDimension.new({minHeight: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing4).toLpUnder(options), topPadding: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing2).toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get](1)).widget, $creationLocationd_0dea112b090073317d4: C[1423] || CT.C1423})]), $creationLocationd_0dea112b090073317d4: C[1428] || CT.C1428}), $creationLocationd_0dea112b090073317d4: C[1432] || CT.C1432})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[66], 53, 53, "options");
      return T$.JSArrayOfMathOptions().of([options, options.havingStyle(style$0['MathStyleExt|sub'](options.style))]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.base, this.below]);
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[66], 68, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[66], 68, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[66], 72, 50, "newChildren");
      return this.copyWith({base: newChildren[S.$_get](0), below: newChildren[S.$_get](1)});
    }
    toJson() {
      let t56;
      t56 = super.toJson();
      return (() => {
        t56[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["base", this.base.toJson(), "below", this.below.toJson()]));
        return t56;
      })();
    }
    copyWith(opts) {
      let t56, t56$;
      let base = opts && 'base' in opts ? opts.base : null;
      let below = opts && 'below' in opts ? opts.below : null;
      return new under.UnderNode.new({base: (t56 = base, t56 == null ? this.base : t56), below: (t56$ = below, t56$ == null ? this.below : t56$)});
    }
  };
  (under.UnderNode.new = function(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[66], 20, 19, "base");
    let below = opts && 'below' in opts ? opts.below : null;
    if (below == null) dart.nullFailed(I[66], 21, 19, "below");
    this[S.base$1] = base;
    this[S.below] = below;
    under.UnderNode.__proto__.new.call(this);
    ;
  }).prototype = under.UnderNode.prototype;
  dart.addTypeTests(under.UnderNode);
  dart.addTypeCaches(under.UnderNode);
  dart.setMethodSignature(under.UnderNode, () => ({
    __proto__: dart.getMethods(under.UnderNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(under.UnderNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(under.UnderNode, [], {base: dart.nullable(syntax_tree.EquationRowNode), below: dart.nullable(syntax_tree.EquationRowNode)}, {})
  }));
  dart.setGetterSignature(under.UnderNode, () => ({
    __proto__: dart.getGetters(under.UnderNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(under.UnderNode, I[67]);
  dart.setFieldSignature(under.UnderNode, () => ({
    __proto__: dart.getFields(under.UnderNode.__proto__),
    base: dart.finalFieldType(syntax_tree.EquationRowNode),
    below: dart.finalFieldType(syntax_tree.EquationRowNode)
  }));
  stretchy_op.StretchyOpNode = class StretchyOpNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get symbol() {
      return this[S.symbol$1];
    }
    set symbol(value) {
      super.symbol = value;
    }
    get above() {
      return this[S.above];
    }
    set above(value) {
      super.above = value;
    }
    get below() {
      return this[S.below$1];
    }
    set below(value) {
      super.below = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[68], 34, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[68], 34, 47, "childBuildResults");
      let verticalPadding = size$['MeasurementExtOnNum|get#mu'](2.0).toLpUnder(options);
      return new syntax_tree.BuildResult.new({options: options, italic: 0.0, widget: new vlist.VList.new({baselineReferenceWidgetIndex: this.above != null ? 1 : 0, children: (() => {
            let t56 = T$.JSArrayOfWidget().of([]);
            if (this.above != null) t56[S.$add](new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: verticalPadding}), child: dart.nullCheck(childBuildResults[S.$_get](0)).widget, $creationLocationd_0dea112b090073317d4: C[1436] || CT.C1436}));
            t56[S.$add](new vlist.VListElement.new({customCrossSize: dart.fn(width => {
                if (width == null) dart.nullFailed(I[68], 49, 31, "width");
                return new box.BoxConstraints.new({minWidth: dart.notNull(width) + dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](1.0).toLpUnder(options))});
              }, T$.doubleToBoxConstraints()), child: new layout_builder_baseline.LayoutBuilderPreserveBaseline.new({builder: dart.fn((context, constraints) => {
                  let t57;
                  if (context == null) dart.nullFailed(I[68], 52, 25, "context");
                  if (constraints == null) dart.nullFailed(I[68], 52, 34, "constraints");
                  return new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.xHeight).toLpUnder(options), child: stretchy.strechySvgSpan((t57 = stretchy_op.stretchyOpMapping[S.$_get](this.symbol), t57 == null ? this.symbol : t57), constraints.minWidth, options), $creationLocationd_0dea112b090073317d4: C[1440] || CT.C1440});
                }, T$.BuildContextAndBoxConstraintsToShiftBaseline()), $creationLocationd_0dea112b090073317d4: C[1445] || CT.C1445}), $creationLocationd_0dea112b090073317d4: C[1448] || CT.C1448}));
            if (this.below != null) t56[S.$add](new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: verticalPadding}), child: dart.nullCheck(childBuildResults[S.$_get](1)).widget, $creationLocationd_0dea112b090073317d4: C[1452] || CT.C1452}));
            return t56;
          })(), $creationLocationd_0dea112b090073317d4: C[1456] || CT.C1456})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[68], 74, 53, "options");
      return T$.JSArrayOfMathOptions().of([options.havingStyle(style$0['MathStyleExt|sup'](options.style)), options.havingStyle(style$0['MathStyleExt|sub'](options.style))]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNodeN().of([this.above, this.below]);
    }
    get leftType() {
      return syntax_tree.AtomType.rel;
    }
    get rightType() {
      return syntax_tree.AtomType.rel;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[68], 89, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[68], 89, 64, "newOptions");
      return oldOptions.sizeMultiplier != newOptions.sizeMultiplier;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[68], 93, 55, "newChildren");
      return new stretchy_op.StretchyOpNode.new({above: newChildren[S.$_get](0), below: newChildren[S.$_get](1), symbol: this.symbol});
    }
    toJson() {
      let t57;
      t57 = super.toJson();
      return (() => {
        t57[S.$addAll]((() => {
          let t58 = new (T$.IdentityMapOfString$ObjectN()).new();
          t58[S.$_set]("symbol", unicode_literal.unicodeLiteral(this.symbol));
          if (this.above != null) t58[S.$_set]("above", dart.nullCheck(this.above).toJson());
          if (this.below != null) t58[S.$_set]("below", dart.nullCheck(this.below).toJson());
          return t58;
        })());
        return t57;
      })();
    }
  };
  (stretchy_op.StretchyOpNode.new = function(opts) {
    let above = opts && 'above' in opts ? opts.above : null;
    let below = opts && 'below' in opts ? opts.below : null;
    let symbol = opts && 'symbol' in opts ? opts.symbol : null;
    if (symbol == null) dart.nullFailed(I[68], 29, 19, "symbol");
    this[S.above] = above;
    this[S.below$1] = below;
    this[S.symbol$1] = symbol;
    if (!(above != null || below != null)) dart.assertFailed(null, I[68], 30, 15, "above != null || below != null");
    stretchy_op.StretchyOpNode.__proto__.new.call(this);
    ;
  }).prototype = stretchy_op.StretchyOpNode.prototype;
  dart.addTypeTests(stretchy_op.StretchyOpNode);
  dart.addTypeCaches(stretchy_op.StretchyOpNode);
  dart.setMethodSignature(stretchy_op.StretchyOpNode, () => ({
    __proto__: dart.getMethods(stretchy_op.StretchyOpNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(dart.nullable(syntax_tree.EquationRowNode)), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(stretchy_op.StretchyOpNode, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(stretchy_op.StretchyOpNode, () => ({
    __proto__: dart.getGetters(stretchy_op.StretchyOpNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(stretchy_op.StretchyOpNode, I[69]);
  dart.setFieldSignature(stretchy_op.StretchyOpNode, () => ({
    __proto__: dart.getFields(stretchy_op.StretchyOpNode.__proto__),
    symbol: dart.finalFieldType(core.String),
    above: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    below: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode))
  }));
  dart.defineLazy(stretchy_op, {
    /*stretchy_op.stretchyOpMapping*/get stretchyOpMapping() {
      return C[1460] || CT.C1460;
    }
  }, false);
  sqrt.SqrtNode = class SqrtNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get index() {
      return this[S.index];
    }
    set index(value) {
      super.index = value;
    }
    get base() {
      return this[S.base$2];
    }
    set base(value) {
      super.base = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[70], 42, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[70], 42, 47, "childBuildResults");
      let baseResult = dart.nullCheck(childBuildResults[S.$_get](1));
      let indexResult = childBuildResults[S.$_get](0);
      return new syntax_tree.BuildResult.new({options: options, widget: new (T$.CustomLayoutOf_SqrtPos()).new({delegate: new sqrt.SqrtLayoutDelegate.new({options: options, baseOptions: baseResult.options}), children: (() => {
            let t58 = T$.JSArrayOfWidget().of([new (T$.CustomLayoutIdOf_SqrtPos()).new({id: sqrt._SqrtPos.base, child: new min_dimension.MinDimension.new({minHeight: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.xHeight).toLpUnder(options), topPadding: 0.0, child: baseResult.widget, $creationLocationd_0dea112b090073317d4: C[1461] || CT.C1461}), $creationLocationd_0dea112b090073317d4: C[1466] || CT.C1466}), new (T$.CustomLayoutIdOf_SqrtPos()).new({id: sqrt._SqrtPos.surd, child: new layout_builder_baseline.LayoutBuilderPreserveBaseline.new({builder: dart.fn((context, constraints) => {
                    if (context == null) dart.nullFailed(I[70], 65, 25, "context");
                    if (constraints == null) dart.nullFailed(I[70], 65, 34, "constraints");
                    return sqrt.sqrtSvg({minDelimiterHeight: constraints.minHeight, baseWidth: constraints.minWidth, options: options});
                  }, T$.BuildContextAndBoxConstraintsToWidget()), $creationLocationd_0dea112b090073317d4: C[1470] || CT.C1470}), $creationLocationd_0dea112b090073317d4: C[1473] || CT.C1473})]);
            if (this.index != null) t58[S.$add](new (T$.CustomLayoutIdOf_SqrtPos()).new({id: sqrt._SqrtPos.ind, child: dart.nullCheck(indexResult).widget, $creationLocationd_0dea112b090073317d4: C[1477] || CT.C1477}));
            return t58;
          })(), $creationLocationd_0dea112b090073317d4: C[1481] || CT.C1481})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[70], 83, 53, "options");
      return T$.JSArrayOfMathOptions().of([options.havingStyle(style$0.MathStyle.scriptscript), options.havingStyle(style$0['MathStyleExt|cramp'](options.style))]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNodeN().of([this.index, this.base]);
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[70], 98, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[70], 98, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNodeN().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[70], 102, 50, "newChildren");
      return new sqrt.SqrtNode.new({index: newChildren[S.$_get](0), base: dart.nullCheck(newChildren[S.$_get](1))});
    }
    toJson() {
      let t60, t59;
      t59 = super.toJson();
      return (() => {
        t59[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["index", (t60 = this.index, t60 == null ? null : t60.toJson()), "base", this.base.toJson()]));
        return t59;
      })();
    }
    copyWith(opts) {
      let t59, t59$;
      let index = opts && 'index' in opts ? opts.index : null;
      let base = opts && 'base' in opts ? opts.base : null;
      return new sqrt.SqrtNode.new({index: (t59 = index, t59 == null ? this.index : t59), base: (t59$ = base, t59$ == null ? this.base : t59$)});
    }
  };
  (sqrt.SqrtNode.new = function(opts) {
    let index = opts && 'index' in opts ? opts.index : null;
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[70], 37, 19, "base");
    this[S.index] = index;
    this[S.base$2] = base;
    sqrt.SqrtNode.__proto__.new.call(this);
    ;
  }).prototype = sqrt.SqrtNode.prototype;
  dart.addTypeTests(sqrt.SqrtNode);
  dart.addTypeCaches(sqrt.SqrtNode);
  dart.setMethodSignature(sqrt.SqrtNode, () => ({
    __proto__: dart.getMethods(sqrt.SqrtNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(dart.nullable(syntax_tree.EquationRowNode)), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(sqrt.SqrtNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(sqrt.SqrtNode, [], {base: dart.nullable(syntax_tree.EquationRowNode), index: dart.nullable(syntax_tree.EquationRowNode)}, {})
  }));
  dart.setGetterSignature(sqrt.SqrtNode, () => ({
    __proto__: dart.getGetters(sqrt.SqrtNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(sqrt.SqrtNode, I[71]);
  dart.setFieldSignature(sqrt.SqrtNode, () => ({
    __proto__: dart.getFields(sqrt.SqrtNode.__proto__),
    index: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    base: dart.finalFieldType(syntax_tree.EquationRowNode)
  }));
  sqrt._SqrtPos = class _SqrtPos extends core.Object {
    toString() {
      return this[S._name$12];
    }
  };
  (sqrt._SqrtPos.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[70], 124, 6, "index");
    if (_name == null) dart.nullFailed(I[70], 124, 6, "_name");
    this.index = index;
    this[S._name$12] = _name;
    ;
  }).prototype = sqrt._SqrtPos.prototype;
  dart.addTypeTests(sqrt._SqrtPos);
  dart.addTypeCaches(sqrt._SqrtPos);
  dart.setLibraryUri(sqrt._SqrtPos, I[71]);
  dart.setFieldSignature(sqrt._SqrtPos, () => ({
    __proto__: dart.getFields(sqrt._SqrtPos.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$12]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(sqrt._SqrtPos, ['toString']);
  sqrt._SqrtPos.base = C[1485] || CT.C1485;
  sqrt._SqrtPos.ind = C[1486] || CT.C1486;
  sqrt._SqrtPos.surd = C[1487] || CT.C1487;
  sqrt._SqrtPos.values = C[1488] || CT.C1488;
  sqrt.SqrtLayoutDelegate = class SqrtLayoutDelegate extends custom_layout.CustomLayoutDelegate$(sqrt._SqrtPos) {
    get options() {
      return this[S.options$1];
    }
    set options(value) {
      super.options = value;
    }
    get baseOptions() {
      return this[S.baseOptions];
    }
    set baseOptions(value) {
      super.baseOptions = value;
    }
    get heightAboveBaseline() {
      return this[S.heightAboveBaseline];
    }
    set heightAboveBaseline(value) {
      this[S.heightAboveBaseline] = value;
    }
    get svgHorizontalPos() {
      return this[S.svgHorizontalPos];
    }
    set svgHorizontalPos(value) {
      this[S.svgHorizontalPos] = value;
    }
    get svgVerticalPos() {
      return this[S.svgVerticalPos];
    }
    set svgVerticalPos(value) {
      this[S.svgVerticalPos] = value;
    }
    computeDistanceToActualBaseline(baseline, childrenTable) {
      if (baseline == null) dart.nullFailed(I[70], 147, 24, "baseline");
      T$.MapOf_SqrtPos$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[70], 147, 59, "childrenTable");
      return this.heightAboveBaseline;
    }
    getIntrinsicSize(opts) {
      let sizingDirection = opts && 'sizingDirection' in opts ? opts.sizingDirection : null;
      if (sizingDirection == null) dart.nullFailed(I[70], 152, 19, "sizingDirection");
      let max = opts && 'max' in opts ? opts.max : null;
      if (max == null) dart.nullFailed(I[70], 153, 19, "max");
      let extent = opts && 'extent' in opts ? opts.extent : null;
      if (extent == null) dart.nullFailed(I[70], 154, 21, "extent");
      let childSize = opts && 'childSize' in opts ? opts.childSize : null;
      if (childSize == null) dart.nullFailed(I[70], 155, 62, "childSize");
      let childrenTable = opts && 'childrenTable' in opts ? opts.childrenTable : null;
      T$.MapOf_SqrtPos$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[70], 156, 39, "childrenTable");
      return 0.0;
    }
    performLayout(constraints, childrenTable) {
      let t59, t59$, t59$0, t59$1, t59$2, t59$3;
      if (constraints == null) dart.nullFailed(I[70], 162, 22, "constraints");
      T$.MapOf_SqrtPos$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[70], 162, 60, "childrenTable");
      let base = dart.nullCheck(childrenTable[S.$_get](sqrt._SqrtPos.base));
      let index = childrenTable[S.$_get](sqrt._SqrtPos.ind);
      let surd = dart.nullCheck(childrenTable[S.$_get](sqrt._SqrtPos.surd));
      base.layout(constants.infiniteConstraint, {parentUsesSize: true});
      t59 = index;
      t59 == null ? null : t59.layout(constants.infiniteConstraint, {parentUsesSize: true});
      let baseHeight = render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](base);
      let baseWidth = base.size.width;
      let indexHeight = (t59$0 = (t59$ = index, t59$ == null ? null : render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](t59$)), t59$0 == null ? 0.0 : t59$0);
      let indexWidth = (t59$2 = (t59$1 = index, t59$1 == null ? null : t59$1.size.width), t59$2 == null ? 0.0 : t59$2);
      let theta = size$['MeasurementExtOnNum|get#cssEm'](this.baseOptions.fontMetrics.defaultRuleThickness).toLpUnder(this.baseOptions);
      let phi = dart.test(style$0['MathStyleExt|>'](this.baseOptions.style, style$0.MathStyle.text)) ? size$['MeasurementExtOnNum|get#cssEm'](this.baseOptions.fontMetrics.xHeight).toLpUnder(this.baseOptions) : theta;
      let psi = dart.notNull(theta) + 0.25 * phi[S.$abs]();
      let minSqrtHeight = dart.notNull(base.size.height) + psi + dart.notNull(theta);
      surd.layout(new box.BoxConstraints.new({minWidth: baseWidth, minHeight: minSqrtHeight}), {parentUsesSize: true});
      let advanceWidth = sqrt.getSqrtAdvanceWidth(minSqrtHeight, baseWidth, this.options);
      let indexRightPadding = -dart.notNull(size$['MeasurementExtOnNum|get#mu'](10.0).toLpUnder(this.options));
      let indexLeftPadding = size$['MeasurementExtOnNum|get#pt'](0.5).toLpUnder(this.options);
      let sqrtHorizontalPos = math.max(core.double, 0.0, dart.notNull(indexLeftPadding) + dart.notNull(indexWidth) + indexRightPadding);
      let width = sqrtHorizontalPos + dart.notNull(surd.size.width);
      this.svgHorizontalPos = sqrtHorizontalPos;
      let delimDepth = render_box_offset['RenderBoxOffsetExt|get#layoutDepth'](surd);
      let ruleWidth = render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](surd);
      if (dart.notNull(delimDepth) > dart.notNull(base.size.height) + psi) {
        psi = psi + 0.5 * (dart.notNull(delimDepth) - dart.notNull(base.size.height) - psi);
      }
      let bodyHeight = dart.notNull(baseHeight) + psi + dart.notNull(ruleWidth);
      let bodyDepth = dart.notNull(surd.size.height) - bodyHeight;
      let indexShift = 0.6 * (bodyHeight - bodyDepth);
      let sqrtVerticalPos = math.max(core.double, 0.0, dart.notNull(indexHeight) + indexShift - dart.notNull(baseHeight) - psi - dart.notNull(ruleWidth));
      this.heightAboveBaseline = bodyHeight + sqrtVerticalPos;
      let fullHeight = sqrtVerticalPos + dart.notNull(surd.size.height);
      render_box_offset['RenderBoxOffsetExt|set#offset'](base, new ui.Offset.new(sqrtHorizontalPos + dart.notNull(advanceWidth), dart.notNull(this.heightAboveBaseline) - dart.notNull(baseHeight)));
      t59$3 = index;
      t59$3 == null ? null : render_box_offset['RenderBoxOffsetExt|set#offset'](t59$3, new ui.Offset.new(sqrtHorizontalPos - indexRightPadding - dart.notNull(indexWidth), dart.notNull(this.heightAboveBaseline) - indexShift - dart.notNull(indexHeight)));
      render_box_offset['RenderBoxOffsetExt|set#offset'](surd, new ui.Offset.new(sqrtHorizontalPos, sqrtVerticalPos));
      return new ui.Size.new(width, fullHeight);
    }
  };
  (sqrt.SqrtLayoutDelegate.new = function(opts) {
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[70], 137, 19, "options");
    let baseOptions = opts && 'baseOptions' in opts ? opts.baseOptions : null;
    if (baseOptions == null) dart.nullFailed(I[70], 138, 19, "baseOptions");
    this[S.heightAboveBaseline] = 0.0;
    this[S.svgHorizontalPos] = 0.0;
    this[S.svgVerticalPos] = 0.0;
    this[S.options$1] = options;
    this[S.baseOptions] = baseOptions;
    sqrt.SqrtLayoutDelegate.__proto__.new.call(this);
    ;
  }).prototype = sqrt.SqrtLayoutDelegate.prototype;
  dart.addTypeTests(sqrt.SqrtLayoutDelegate);
  dart.addTypeCaches(sqrt.SqrtLayoutDelegate);
  dart.setMethodSignature(sqrt.SqrtLayoutDelegate, () => ({
    __proto__: dart.getMethods(sqrt.SqrtLayoutDelegate.__proto__),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline, dart.nullable(core.Object)]),
    getIntrinsicSize: dart.fnType(core.double, [], {childSize: dart.fnType(core.double, [box.RenderBox, core.double]), childrenTable: dart.nullable(core.Object), extent: core.double, max: core.bool, sizingDirection: basic_types.Axis}, {}),
    performLayout: dart.fnType(ui.Size, [box.BoxConstraints, dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sqrt.SqrtLayoutDelegate, I[71]);
  dart.setFieldSignature(sqrt.SqrtLayoutDelegate, () => ({
    __proto__: dart.getFields(sqrt.SqrtLayoutDelegate.__proto__),
    options: dart.finalFieldType(options$.MathOptions),
    baseOptions: dart.finalFieldType(options$.MathOptions),
    heightAboveBaseline: dart.fieldType(core.double),
    svgHorizontalPos: dart.fieldType(core.double),
    svgVerticalPos: dart.fieldType(core.double)
  }));
  sqrt.getSqrtAdvanceWidth = function getSqrtAdvanceWidth(minDelimiterHeight, baseWidth, options) {
    if (minDelimiterHeight == null) dart.nullFailed(I[70], 244, 12, "minDelimiterHeight");
    if (baseWidth == null) dart.nullFailed(I[70], 244, 39, "baseWidth");
    if (options == null) dart.nullFailed(I[70], 244, 62, "options");
    let delimConf = iterable_extensions$['IterableExtension|firstWhereOrNull'](delimiter.DelimiterConf, sqrt.sqrtDelimieterSequence, dart.fn(element => {
      if (element == null) dart.nullFailed(I[70], 247, 6, "element");
      return dart.notNull(delimiter.getHeightForDelim({delim: "√", fontName: element.font.fontName, style: element.style, options: options})) > dart.notNull(minDelimiterHeight);
    }, T$.DelimiterConfTobool()));
    if (delimConf != null) {
      let delimOptions = options.havingStyle(delimConf.style);
      if (delimConf.font.fontName === "Main-Regular") {
        let advanceWidth = size$['MeasurementExtOnNum|get#cssEm'](0.833).toLpUnder(delimOptions);
        return advanceWidth;
      } else {
        let advanceWidth = size$['MeasurementExtOnNum|get#cssEm'](1.0).toLpUnder(delimOptions);
        return advanceWidth;
      }
    } else {
      let advanceWidth = size$['MeasurementExtOnNum|get#cssEm'](1.056).toLpUnder(options);
      return advanceWidth;
    }
  };
  sqrt.sqrtSvg = function sqrtSvg(opts) {
    let minDelimiterHeight = opts && 'minDelimiterHeight' in opts ? opts.minDelimiterHeight : null;
    if (minDelimiterHeight == null) dart.nullFailed(I[70], 279, 19, "minDelimiterHeight");
    let baseWidth = opts && 'baseWidth' in opts ? opts.baseWidth : null;
    if (baseWidth == null) dart.nullFailed(I[70], 280, 19, "baseWidth");
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[70], 281, 24, "options");
    let delimConf = iterable_extensions$['IterableExtension|firstWhereOrNull'](delimiter.DelimiterConf, sqrt.sqrtDelimieterSequence, dart.fn(element => {
      if (element == null) dart.nullFailed(I[70], 285, 6, "element");
      return dart.notNull(delimiter.getHeightForDelim({delim: "√", fontName: element.font.fontName, style: element.style, options: options})) > dart.notNull(minDelimiterHeight);
    }, T$.DelimiterConfTobool()));
    let extraViniculum = 0.0;
    if (delimConf != null) {
      let fontHeight = dart.nullCheck((C[1489] || CT.C1489)[S.$_get](delimConf.font.fontName));
      let delimOptions = options.havingStyle(delimConf.style);
      let viewPortHeight = size$['MeasurementExtOnNum|get#cssEm'](fontHeight + extraViniculum + 0.08).toLpUnder(delimOptions);
      if (delimConf.font.fontName === "Main-Regular") {
        let advanceWidth = size$['MeasurementExtOnNum|get#cssEm'](0.833).toLpUnder(delimOptions);
        let viewPortWidth = dart.notNull(advanceWidth) + dart.notNull(baseWidth);
        let viewBoxHeight = 1000 + 1000 * extraViniculum + 80;
        let viewBoxWidth = dart.notNull(size$['MeasurementExtOnNum|get#lp'](viewPortWidth).toCssEmUnder(delimOptions)) * 1000;
        let svgPath = svg_geomertry.sqrtPath("sqrtMain", extraViniculum, viewBoxHeight);
        return new reset_baseline.ResetBaseline.new({height: size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(options.fontMetrics.sqrtRuleThickness) + extraViniculum).toLpUnder(delimOptions), child: new min_dimension.MinDimension.new({topPadding: -dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](0.08).toLpUnder(delimOptions)), child: svg_string.svgWidgetFromPath(svgPath, new ui.Size.new(viewPortWidth, viewPortHeight), new ui.Rect.fromLTWH(0.0, 0.0, viewBoxWidth, viewBoxHeight), options.color, {align: alignment.Alignment.topLeft, fit: box_fit.BoxFit.fill}), $creationLocationd_0dea112b090073317d4: C[1490] || CT.C1490}), $creationLocationd_0dea112b090073317d4: C[1494] || CT.C1494});
      } else {
        let advanceWidth = size$['MeasurementExtOnNum|get#cssEm'](1.0).toLpUnder(delimOptions);
        let viewPortWidth = math.max(core.double, dart.notNull(advanceWidth) + dart.notNull(baseWidth), size$['MeasurementExtOnNum|get#cssEm'](1.02).toCssEmUnder(delimOptions));
        let viewBoxHeight = (1000 + 80) * fontHeight;
        let viewBoxWidth = dart.notNull(size$['MeasurementExtOnNum|get#lp'](viewPortWidth).toCssEmUnder(delimOptions)) * 1000;
        let svgPath = svg_geomertry.sqrtPath("sqrt" + delimConf.font.fontName[S.$substring](0, 5), extraViniculum, viewBoxHeight);
        return new reset_baseline.ResetBaseline.new({height: size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(options.fontMetrics.sqrtRuleThickness) + extraViniculum).toLpUnder(delimOptions), child: new min_dimension.MinDimension.new({topPadding: -dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](0.08).toLpUnder(delimOptions)), child: svg_string.svgWidgetFromPath(svgPath, new ui.Size.new(viewPortWidth, viewPortHeight), new ui.Rect.fromLTWH(0.0, 0.0, viewBoxWidth, viewBoxHeight), options.color, {align: alignment.Alignment.topLeft, fit: box_fit.BoxFit.cover}), $creationLocationd_0dea112b090073317d4: C[1498] || CT.C1498}), $creationLocationd_0dea112b090073317d4: C[1502] || CT.C1502});
      }
    } else {
      let viewPortHeight = dart.notNull(minDelimiterHeight) + dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](extraViniculum + 0.08).toLpUnder(options));
      let viewBoxHeight = 1000 * dart.notNull(size$['MeasurementExtOnNum|get#lp'](minDelimiterHeight).toCssEmUnder(options)) + extraViniculum + 80;
      let advanceWidth = size$['MeasurementExtOnNum|get#cssEm'](1.056).toLpUnder(options);
      let viewPortWidth = dart.notNull(advanceWidth) + dart.notNull(baseWidth);
      let viewBoxWidth = dart.notNull(size$['MeasurementExtOnNum|get#lp'](viewPortWidth).toCssEmUnder(options)) * 1000;
      let svgPath = svg_geomertry.sqrtPath("sqrtTall", extraViniculum, viewBoxHeight);
      return new reset_baseline.ResetBaseline.new({height: size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(options.fontMetrics.sqrtRuleThickness) + extraViniculum).toLpUnder(options), child: new min_dimension.MinDimension.new({topPadding: -dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](0.08).toLpUnder(options)), child: svg_string.svgWidgetFromPath(svgPath, new ui.Size.new(viewPortWidth, viewPortHeight), new ui.Rect.fromLTWH(0.0, 0.0, viewBoxWidth, viewBoxHeight), options.color, {align: alignment.Alignment.topLeft, fit: box_fit.BoxFit.cover}), $creationLocationd_0dea112b090073317d4: C[1506] || CT.C1506}), $creationLocationd_0dea112b090073317d4: C[1510] || CT.C1510});
    }
  };
  dart.defineLazy(sqrt, {
    /*sqrt.sqrtDelimieterSequence*/get sqrtDelimieterSequence() {
      return C[1514] || CT.C1514;
    },
    /*sqrt.vbPad*/get vbPad() {
      return 80;
    },
    /*sqrt.emPad*/get emPad() {
      return 0.08;
    }
  }, false);
  syntax_tree.LeafNode = class LeafNode extends syntax_tree.GreenNode {
    get children() {
      return C[1538] || CT.C1538;
    }
    updateChildren(newChildren) {
      T$.ListOfGreenNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[33], 778, 43, "newChildren");
      if (!dart.test(newChildren[S.$isEmpty])) dart.assertFailed(null, I[33], 779, 12, "newChildren.isEmpty");
      return this;
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[33], 784, 53, "options");
      return C[1539] || CT.C1539;
    }
    get childPositions() {
      return C[1540] || CT.C1540;
    }
    get editingWidth() {
      return 1;
    }
  };
  (syntax_tree.LeafNode.new = function() {
    syntax_tree.LeafNode.__proto__.new.call(this);
    ;
  }).prototype = syntax_tree.LeafNode.prototype;
  dart.addTypeTests(syntax_tree.LeafNode);
  dart.addTypeCaches(syntax_tree.LeafNode);
  dart.setMethodSignature(syntax_tree.LeafNode, () => ({
    __proto__: dart.getMethods(syntax_tree.LeafNode.__proto__),
    updateChildren: dart.fnType(syntax_tree.LeafNode, [dart.nullable(core.Object)]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions])
  }));
  dart.setGetterSignature(syntax_tree.LeafNode, () => ({
    __proto__: dart.getGetters(syntax_tree.LeafNode.__proto__),
    children: core.List$(syntax_tree.GreenNode),
    childPositions: core.List$(core.int),
    editingWidth: core.int
  }));
  dart.setLibraryUri(syntax_tree.LeafNode, I[34]);
  space.SpaceNode = class SpaceNode extends syntax_tree.LeafNode {
    get height() {
      return this[S.height];
    }
    set height(value) {
      super.height = value;
    }
    get width() {
      return this[S.width$2];
    }
    set width(value) {
      super.width = value;
    }
    get depth() {
      return this[S.depth];
    }
    set depth(value) {
      super.depth = value;
    }
    get shift() {
      return this[S.shift];
    }
    set shift(value) {
      super.shift = value;
    }
    get breakPenalty() {
      return this[S.breakPenalty];
    }
    set breakPenalty(value) {
      super.breakPenalty = value;
    }
    get fill() {
      return this[S.fill];
    }
    set fill(value) {
      super.fill = value;
    }
    get mode() {
      return this[S.mode$4];
    }
    set mode(value) {
      super.mode = value;
    }
    get alignerOrSpacer() {
      return this[S.alignerOrSpacer];
    }
    set alignerOrSpacer(value) {
      super.alignerOrSpacer = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[72], 66, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[72], 66, 47, "childBuildResults");
      if (this.alignerOrSpacer === true) {
        return new syntax_tree.BuildResult.new({options: options, widget: new container.Container.new({height: 0.0, $creationLocationd_0dea112b090073317d4: C[1526] || CT.C1526})});
      }
      let height = this.height.toLpUnder(options);
      let depth = this.depth.toLpUnder(options);
      let width = this.width.toLpUnder(options);
      let shift = this.shift.toLpUnder(options);
      let topMost = math.max(core.double, height, -dart.notNull(depth)) + dart.notNull(shift);
      let bottomMost = math.min(core.double, height, -dart.notNull(depth)) + dart.notNull(shift);
      return new syntax_tree.BuildResult.new({options: options, widget: new reset_baseline.ResetBaseline.new({height: topMost, child: new container.Container.new({color: dart.test(this.fill) ? options.color : null, height: topMost - bottomMost, width: math.max(core.double, 0.0, width), $creationLocationd_0dea112b090073317d4: C[1529] || CT.C1529}), $creationLocationd_0dea112b090073317d4: C[1534] || CT.C1534})});
    }
    get leftType() {
      return syntax_tree.AtomType.spacing;
    }
    get rightType() {
      return syntax_tree.AtomType.spacing;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[72], 100, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[72], 100, 64, "newOptions");
      return oldOptions.sizeMultiplier != newOptions.sizeMultiplier;
    }
    toJson() {
      let t59;
      t59 = super.toJson();
      return (() => {
        t59[S.$addAll]((() => {
          let t60 = new (T$.IdentityMapOfString$ObjectN()).new();
          t60[S.$_set]("mode", dart.toString(this.mode));
          t60[S.$_set]("height", dart.toString(this.height));
          t60[S.$_set]("width", dart.toString(this.width));
          if (!dart.equals(this.depth, size$.Measurement.zero)) t60[S.$_set]("depth", dart.toString(this.depth));
          if (!dart.equals(this.shift, size$.Measurement.zero)) t60[S.$_set]("shift", dart.toString(this.shift));
          if (this.breakPenalty != null) t60[S.$_set]("breakPenalty", this.breakPenalty);
          if (this.fill !== false) t60[S.$_set]("fill", this.fill);
          if (this.alignerOrSpacer !== false) t60[S.$_set]("alignerOrSpacer", this.alignerOrSpacer);
          return t60;
        })());
        return t59;
      })();
    }
  };
  (space.SpaceNode.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    if (height == null) dart.nullFailed(I[72], 42, 19, "height");
    let width = opts && 'width' in opts ? opts.width : null;
    if (width == null) dart.nullFailed(I[72], 43, 19, "width");
    let shift = opts && 'shift' in opts ? opts.shift : C[1524] || CT.C1524;
    if (shift == null) dart.nullFailed(I[72], 44, 10, "shift");
    let depth = opts && 'depth' in opts ? opts.depth : C[1524] || CT.C1524;
    if (depth == null) dart.nullFailed(I[72], 45, 10, "depth");
    let breakPenalty = opts && 'breakPenalty' in opts ? opts.breakPenalty : null;
    let fill = opts && 'fill' in opts ? opts.fill : false;
    if (fill == null) dart.nullFailed(I[72], 47, 10, "fill");
    let mode = opts && 'mode' in opts ? opts.mode : null;
    if (mode == null) dart.nullFailed(I[72], 49, 19, "mode");
    let alignerOrSpacer = opts && 'alignerOrSpacer' in opts ? opts.alignerOrSpacer : false;
    if (alignerOrSpacer == null) dart.nullFailed(I[72], 50, 10, "alignerOrSpacer");
    this[S.height] = height;
    this[S.width$2] = width;
    this[S.shift] = shift;
    this[S.depth] = depth;
    this[S.breakPenalty] = breakPenalty;
    this[S.fill] = fill;
    this[S.mode$4] = mode;
    this[S.alignerOrSpacer] = alignerOrSpacer;
    space.SpaceNode.__proto__.new.call(this);
    ;
  }).prototype = space.SpaceNode.prototype;
  (space.SpaceNode.alignerOrSpacer = function() {
    this[S.height] = size$.Measurement.zero;
    this[S.width$2] = size$.Measurement.zero;
    this[S.shift] = size$.Measurement.zero;
    this[S.depth] = size$.Measurement.zero;
    this[S.breakPenalty] = null;
    this[S.fill] = true;
    this[S.mode$4] = types.Mode.math;
    this[S.alignerOrSpacer] = true;
    space.SpaceNode.__proto__.new.call(this);
    ;
  }).prototype = space.SpaceNode.prototype;
  dart.addTypeTests(space.SpaceNode);
  dart.addTypeCaches(space.SpaceNode);
  dart.setMethodSignature(space.SpaceNode, () => ({
    __proto__: dart.getMethods(space.SpaceNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions])
  }));
  dart.setGetterSignature(space.SpaceNode, () => ({
    __proto__: dart.getGetters(space.SpaceNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(space.SpaceNode, I[73]);
  dart.setFieldSignature(space.SpaceNode, () => ({
    __proto__: dart.getFields(space.SpaceNode.__proto__),
    height: dart.finalFieldType(size$.Measurement),
    width: dart.finalFieldType(size$.Measurement),
    depth: dart.finalFieldType(size$.Measurement),
    shift: dart.finalFieldType(size$.Measurement),
    breakPenalty: dart.finalFieldType(dart.nullable(core.int)),
    fill: dart.finalFieldType(core.bool),
    mode: dart.finalFieldType(types.Mode),
    alignerOrSpacer: dart.finalFieldType(core.bool)
  }));
  raise_box.RaiseBoxNode = class RaiseBoxNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get body() {
      return this[S.body$2];
    }
    set body(value) {
      super.body = value;
    }
    get dy() {
      return this[S.dy];
    }
    set dy(value) {
      super.dy = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[74], 23, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[74], 23, 51, "childBuildResults");
      return new syntax_tree.BuildResult.new({options: options, widget: new shift_baseline.ShiftBaseline.new({offset: this.dy.toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get](0)).widget, $creationLocationd_0dea112b090073317d4: C[1541] || CT.C1541})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[74], 33, 53, "options");
      return T$.JSArrayOfMathOptions().of([options]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.body]);
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[74], 45, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[74], 45, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[74], 49, 53, "newChildren");
      return this.copyWith({body: newChildren[S.$_get](0)});
    }
    toJson() {
      let t60;
      t60 = super.toJson();
      return (() => {
        t60[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["body", this.body.toJson(), "dy", dart.toString(this.dy)]));
        return t60;
      })();
    }
    copyWith(opts) {
      let t60, t60$;
      let body = opts && 'body' in opts ? opts.body : null;
      let dy = opts && 'dy' in opts ? opts.dy : null;
      return new raise_box.RaiseBoxNode.new({body: (t60 = body, t60 == null ? this.body : t60), dy: (t60$ = dy, t60$ == null ? this.dy : t60$)});
    }
  };
  (raise_box.RaiseBoxNode.new = function(opts) {
    let body = opts && 'body' in opts ? opts.body : null;
    if (body == null) dart.nullFailed(I[74], 17, 19, "body");
    let dy = opts && 'dy' in opts ? opts.dy : null;
    if (dy == null) dart.nullFailed(I[74], 18, 19, "dy");
    this[S.body$2] = body;
    this[S.dy] = dy;
    raise_box.RaiseBoxNode.__proto__.new.call(this);
    ;
  }).prototype = raise_box.RaiseBoxNode.prototype;
  dart.addTypeTests(raise_box.RaiseBoxNode);
  dart.addTypeCaches(raise_box.RaiseBoxNode);
  dart.setMethodSignature(raise_box.RaiseBoxNode, () => ({
    __proto__: dart.getMethods(raise_box.RaiseBoxNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(raise_box.RaiseBoxNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(raise_box.RaiseBoxNode, [], {body: dart.nullable(syntax_tree.EquationRowNode), dy: dart.nullable(size$.Measurement)}, {})
  }));
  dart.setGetterSignature(raise_box.RaiseBoxNode, () => ({
    __proto__: dart.getGetters(raise_box.RaiseBoxNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(raise_box.RaiseBoxNode, I[75]);
  dart.setFieldSignature(raise_box.RaiseBoxNode, () => ({
    __proto__: dart.getFields(raise_box.RaiseBoxNode.__proto__),
    body: dart.finalFieldType(syntax_tree.EquationRowNode),
    dy: dart.finalFieldType(size$.Measurement)
  }));
  phantom.PhantomNode = class PhantomNode extends syntax_tree.LeafNode {
    get phantomChild() {
      return this[S.phantomChild];
    }
    set phantomChild(value) {
      super.phantomChild = value;
    }
    get zeroWidth() {
      return this[S.zeroWidth];
    }
    set zeroWidth(value) {
      super.zeroWidth = value;
    }
    get zeroHeight() {
      return this[S.zeroHeight];
    }
    set zeroHeight(value) {
      super.zeroHeight = value;
    }
    get zeroDepth() {
      return this[S.zeroDepth];
    }
    set zeroDepth(value) {
      super.zeroDepth = value;
    }
    get mode() {
      return types.Mode.math;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[76], 38, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[76], 38, 47, "childBuildResults");
      let phantomRedNode = new syntax_tree.SyntaxNode.new({parent: null, value: this.phantomChild, pos: 0});
      let phantomResult = phantomRedNode.buildWidget(options);
      let widget = new basic.Opacity.new({opacity: 0.0, child: phantomResult.widget, $creationLocationd_0dea112b090073317d4: C[1545] || CT.C1545});
      widget = new reset_dimension.ResetDimension.new({width: dart.test(this.zeroWidth) ? 0.0 : null, height: dart.test(this.zeroHeight) ? 0.0 : null, depth: dart.test(this.zeroDepth) ? 0.0 : null, child: widget, $creationLocationd_0dea112b090073317d4: C[1549] || CT.C1549});
      return new syntax_tree.BuildResult.new({options: options, italic: phantomResult.italic, widget: widget});
    }
    get leftType() {
      return this.phantomChild.leftType;
    }
    get rightType() {
      return this.phantomChild.rightType;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[76], 66, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[76], 66, 64, "newOptions");
      return this.phantomChild.shouldRebuildWidget(oldOptions, newOptions);
    }
    toJson() {
      let t60;
      t60 = super.toJson();
      return (() => {
        t60[S.$addAll]((() => {
          let t61 = new (T$.IdentityMapOfString$ObjectN()).new();
          t61[S.$_set]("phantomChild", this.phantomChild.toJson());
          if (this.zeroWidth !== false) t61[S.$_set]("zeroWidth", this.zeroWidth);
          if (this.zeroHeight !== false) t61[S.$_set]("zeroHeight", this.zeroHeight);
          return t61;
        })());
        return t60;
      })();
    }
  };
  (phantom.PhantomNode.new = function(opts) {
    let phantomChild = opts && 'phantomChild' in opts ? opts.phantomChild : null;
    if (phantomChild == null) dart.nullFailed(I[76], 30, 19, "phantomChild");
    let zeroHeight = opts && 'zeroHeight' in opts ? opts.zeroHeight : false;
    if (zeroHeight == null) dart.nullFailed(I[76], 31, 10, "zeroHeight");
    let zeroWidth = opts && 'zeroWidth' in opts ? opts.zeroWidth : false;
    if (zeroWidth == null) dart.nullFailed(I[76], 32, 10, "zeroWidth");
    let zeroDepth = opts && 'zeroDepth' in opts ? opts.zeroDepth : false;
    if (zeroDepth == null) dart.nullFailed(I[76], 33, 10, "zeroDepth");
    this[S.phantomChild] = phantomChild;
    this[S.zeroHeight] = zeroHeight;
    this[S.zeroWidth] = zeroWidth;
    this[S.zeroDepth] = zeroDepth;
    phantom.PhantomNode.__proto__.new.call(this);
    ;
  }).prototype = phantom.PhantomNode.prototype;
  dart.addTypeTests(phantom.PhantomNode);
  dart.addTypeCaches(phantom.PhantomNode);
  dart.setMethodSignature(phantom.PhantomNode, () => ({
    __proto__: dart.getMethods(phantom.PhantomNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions])
  }));
  dart.setGetterSignature(phantom.PhantomNode, () => ({
    __proto__: dart.getGetters(phantom.PhantomNode.__proto__),
    mode: types.Mode,
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(phantom.PhantomNode, I[77]);
  dart.setFieldSignature(phantom.PhantomNode, () => ({
    __proto__: dart.getFields(phantom.PhantomNode.__proto__),
    phantomChild: dart.finalFieldType(syntax_tree.EquationRowNode),
    zeroWidth: dart.finalFieldType(core.bool),
    zeroHeight: dart.finalFieldType(core.bool),
    zeroDepth: dart.finalFieldType(core.bool)
  }));
  nary_op.NaryOperatorNode = class NaryOperatorNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get operator() {
      return this[S.operator];
    }
    set operator(value) {
      super.operator = value;
    }
    get lowerLimit() {
      return this[S.lowerLimit];
    }
    set lowerLimit(value) {
      super.lowerLimit = value;
    }
    get upperLimit() {
      return this[S.upperLimit];
    }
    set upperLimit(value) {
      super.upperLimit = value;
    }
    get naryand() {
      return this[S.naryand];
    }
    set naryand(value) {
      super.naryand = value;
    }
    get limits() {
      return this[S.limits$1];
    }
    set limits(value) {
      super.limits = value;
    }
    get allowLargeOp() {
      return this[S.allowLargeOp];
    }
    set allowLargeOp(value) {
      super.allowLargeOp = value;
    }
    buildWidget(options, childBuildResults) {
      let t61;
      if (options == null) dart.nullFailed(I[78], 53, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[78], 53, 47, "childBuildResults");
      let large = dart.test(this.allowLargeOp) && style$0['MathStyleExt|get#size'](options.style) == style$0['MathStyleExt|get#size'](style$0.MathStyle.display);
      let font = large ? new options$.FontOptions.new({fontFamily: "Size2"}) : new options$.FontOptions.new({fontFamily: "Size1"});
      let operatorWidget = null;
      let symbolMetrics = null;
      if (!dart.test(nary_op._stashedOvalNaryOperator[S.$containsKey](this.operator))) {
        let lookupResult = make_symbol.lookupChar(this.operator, font, types.Mode.math);
        if (lookupResult == null) {
          symbolMetrics = C[1555] || CT.C1555;
          operatorWidget = new container.Container.new({$creationLocationd_0dea112b090073317d4: C[1556] || CT.C1556});
        } else {
          symbolMetrics = lookupResult;
          let symbolWidget = make_symbol.makeChar(this.operator, font, symbolMetrics, options, {needItalic: true});
          operatorWidget = symbolWidget;
        }
      } else {
        let baseSymbol = dart.nullCheck(nary_op._stashedOvalNaryOperator[S.$_get](this.operator));
        symbolMetrics = dart.nullCheck(make_symbol.lookupChar(baseSymbol, font, types.Mode.math));
        let baseSymbolWidget = make_symbol.makeChar(baseSymbol, font, symbolMetrics, options, {needItalic: true});
        let oval = $static.staticSvg((this.operator === "∯" ? "oiint" : "oiiint") + "Size" + (large ? "2" : "1"), options);
        operatorWidget = new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.baseline, textBaseline: ui.TextBaseline.alphabetic, mainAxisAlignment: flex.MainAxisAlignment.start, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new reset_dimension.ResetDimension.new({horizontalAlignment: flex.CrossAxisAlignment.start, width: 0.0, child: new shift_baseline.ShiftBaseline.new({offset: large ? size$['MeasurementExtOnNum|get#cssEm'](0.08).toLpUnder(options) : 0.0, child: oval, $creationLocationd_0dea112b090073317d4: C[1557] || CT.C1557}), $creationLocationd_0dea112b090073317d4: C[1561] || CT.C1561}), baseSymbolWidget]), $creationLocationd_0dea112b090073317d4: C[1566] || CT.C1566});
      }
      if (this.lowerLimit != null || this.upperLimit != null) {
        let shouldLimits = (t61 = this.limits, t61 == null ? dart.test(nary_op._naryDefaultLimit.contains(this.operator)) && style$0['MathStyleExt|get#size'](options.style) == style$0['MathStyleExt|get#size'](style$0.MathStyle.display) : t61);
        let italic = size$['MeasurementExtOnNum|get#cssEm'](symbolMetrics.italic).toLpUnder(options);
        if (!dart.test(shouldLimits)) {
          operatorWidget = new multiscripts.Multiscripts.new({isBaseCharacterBox: false, baseResult: new syntax_tree.BuildResult.new({widget: operatorWidget, options: options, italic: italic}), subResult: childBuildResults[S.$_get](0), supResult: childBuildResults[S.$_get](1), $creationLocationd_0dea112b090073317d4: C[1573] || CT.C1573});
        } else {
          let spacing = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing5).toLpUnder(options);
          operatorWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this.upperLimit != null ? spacing : 0.0, bottom: this.lowerLimit != null ? spacing : 0.0}), child: new vlist.VList.new({baselineReferenceWidgetIndex: this.upperLimit != null ? 1 : 0, children: (() => {
                let t61 = T$.JSArrayOfWidget().of([]);
                if (this.upperLimit != null) t61[S.$add](new vlist.VListElement.new({hShift: 0.5 * dart.notNull(italic), child: new min_dimension.MinDimension.new({minDepth: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing3).toLpUnder(options), bottomPadding: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing1).toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get](1)).widget, $creationLocationd_0dea112b090073317d4: C[1579] || CT.C1579}), $creationLocationd_0dea112b090073317d4: C[1584] || CT.C1584}));
                t61[S.$add](operatorWidget);
                if (this.lowerLimit != null) t61[S.$add](new vlist.VListElement.new({hShift: -0.5 * dart.notNull(italic), child: new min_dimension.MinDimension.new({minHeight: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing4).toLpUnder(options), topPadding: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing2).toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get](0)).widget, $creationLocationd_0dea112b090073317d4: C[1588] || CT.C1588}), $creationLocationd_0dea112b090073317d4: C[1593] || CT.C1593}));
                return t61;
              })(), $creationLocationd_0dea112b090073317d4: C[1597] || CT.C1597}), $creationLocationd_0dea112b090073317d4: C[1601] || CT.C1601});
        }
      }
      let widget = new line.Line.new({children: T$.JSArrayOfWidget().of([new line.LineElement.new({child: operatorWidget, trailingMargin: spacing$.getSpacingSize(syntax_tree.AtomType.op, this.naryand.leftType, options.style).toLpUnder(options), $creationLocationd_0dea112b090073317d4: C[1605] || CT.C1605}), new line.LineElement.new({child: dart.nullCheck(childBuildResults[S.$_get](2)).widget, trailingMargin: 0.0, $creationLocationd_0dea112b090073317d4: C[1609] || CT.C1609})]), $creationLocationd_0dea112b090073317d4: C[1613] || CT.C1613});
      return new syntax_tree.BuildResult.new({widget: widget, options: options, italic: dart.nullCheck(childBuildResults[S.$_get](2)).italic});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[78], 178, 53, "options");
      return T$.JSArrayOfMathOptions().of([options.havingStyle(style$0['MathStyleExt|sub'](options.style)), options.havingStyle(style$0['MathStyleExt|sup'](options.style)), options]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNodeN().of([this.lowerLimit, this.upperLimit, this.naryand]);
    }
    get leftType() {
      return syntax_tree.AtomType.op;
    }
    get rightType() {
      return this.naryand.rightType;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[78], 194, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[78], 194, 64, "newOptions");
      return oldOptions.sizeMultiplier != newOptions.sizeMultiplier;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNodeN().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[78], 198, 58, "newChildren");
      return new nary_op.NaryOperatorNode.new({operator: this.operator, lowerLimit: newChildren[S.$_get](0), upperLimit: newChildren[S.$_get](1), naryand: dart.nullCheck(newChildren[S.$_get](2)), limits: this.limits, allowLargeOp: this.allowLargeOp});
    }
    toJson() {
      let t62;
      t62 = super.toJson();
      return (() => {
        t62[S.$addAll]((() => {
          let t63 = new (T$.IdentityMapOfString$ObjectN()).new();
          t63[S.$_set]("operator", unicode_literal.unicodeLiteral(this.operator));
          if (this.upperLimit != null) t63[S.$_set]("upperLimit", dart.nullCheck(this.upperLimit).toJson());
          if (this.lowerLimit != null) t63[S.$_set]("lowerLimit", dart.nullCheck(this.lowerLimit).toJson());
          t63[S.$_set]("naryand", this.naryand.toJson());
          if (this.limits != null) t63[S.$_set]("limits", this.limits);
          if (this.allowLargeOp !== true) t63[S.$_set]("allowLargeOp", this.allowLargeOp);
          return t63;
        })());
        return t62;
      })();
    }
  };
  (nary_op.NaryOperatorNode.new = function(opts) {
    let operator = opts && 'operator' in opts ? opts.operator : null;
    if (operator == null) dart.nullFailed(I[78], 43, 19, "operator");
    let lowerLimit = opts && 'lowerLimit' in opts ? opts.lowerLimit : null;
    let upperLimit = opts && 'upperLimit' in opts ? opts.upperLimit : null;
    let naryand = opts && 'naryand' in opts ? opts.naryand : null;
    if (naryand == null) dart.nullFailed(I[78], 46, 19, "naryand");
    let limits = opts && 'limits' in opts ? opts.limits : null;
    let allowLargeOp = opts && 'allowLargeOp' in opts ? opts.allowLargeOp : true;
    if (allowLargeOp == null) dart.nullFailed(I[78], 48, 10, "allowLargeOp");
    this[S.operator] = operator;
    this[S.lowerLimit] = lowerLimit;
    this[S.upperLimit] = upperLimit;
    this[S.naryand] = naryand;
    this[S.limits$1] = limits;
    this[S.allowLargeOp] = allowLargeOp;
    nary_op.NaryOperatorNode.__proto__.new.call(this);
    ;
  }).prototype = nary_op.NaryOperatorNode.prototype;
  dart.addTypeTests(nary_op.NaryOperatorNode);
  dart.addTypeCaches(nary_op.NaryOperatorNode);
  dart.setMethodSignature(nary_op.NaryOperatorNode, () => ({
    __proto__: dart.getMethods(nary_op.NaryOperatorNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(dart.nullable(syntax_tree.EquationRowNode)), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(nary_op.NaryOperatorNode, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(nary_op.NaryOperatorNode, () => ({
    __proto__: dart.getGetters(nary_op.NaryOperatorNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(nary_op.NaryOperatorNode, I[79]);
  dart.setFieldSignature(nary_op.NaryOperatorNode, () => ({
    __proto__: dart.getFields(nary_op.NaryOperatorNode.__proto__),
    operator: dart.finalFieldType(core.String),
    lowerLimit: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    upperLimit: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    naryand: dart.finalFieldType(syntax_tree.EquationRowNode),
    limits: dart.finalFieldType(dart.nullable(core.bool)),
    allowLargeOp: dart.finalFieldType(core.bool)
  }));
  dart.defineLazy(nary_op, {
    /*nary_op._naryDefaultLimit*/get _naryDefaultLimit() {
      return C[1616] || CT.C1616;
    },
    /*nary_op._stashedOvalNaryOperator*/get _stashedOvalNaryOperator() {
      return C[1617] || CT.C1617;
    }
  }, false);
  multiscripts._ScriptPos = class _ScriptPos extends core.Object {
    toString() {
      return this[S._name$13];
    }
  };
  (multiscripts._ScriptPos.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[80], 24, 6, "index");
    if (_name == null) dart.nullFailed(I[80], 24, 6, "_name");
    this.index = index;
    this[S._name$13] = _name;
    ;
  }).prototype = multiscripts._ScriptPos.prototype;
  dart.addTypeTests(multiscripts._ScriptPos);
  dart.addTypeCaches(multiscripts._ScriptPos);
  dart.setLibraryUri(multiscripts._ScriptPos, I[81]);
  dart.setFieldSignature(multiscripts._ScriptPos, () => ({
    __proto__: dart.getFields(multiscripts._ScriptPos.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$13]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(multiscripts._ScriptPos, ['toString']);
  multiscripts._ScriptPos.base = C[1618] || CT.C1618;
  multiscripts._ScriptPos.sub = C[1619] || CT.C1619;
  multiscripts._ScriptPos.sup = C[1620] || CT.C1620;
  multiscripts._ScriptPos.presub = C[1621] || CT.C1621;
  multiscripts._ScriptPos.presup = C[1622] || CT.C1622;
  multiscripts._ScriptPos.values = C[1623] || CT.C1623;
  multiscripts.Multiscripts = class Multiscripts extends framework.StatelessWidget {
    get alignPostscripts() {
      return this[S.alignPostscripts];
    }
    set alignPostscripts(value) {
      super.alignPostscripts = value;
    }
    get isBaseCharacterBox() {
      return this[S.isBaseCharacterBox];
    }
    set isBaseCharacterBox(value) {
      super.isBaseCharacterBox = value;
    }
    get baseResult() {
      return this[S.baseResult];
    }
    set baseResult(value) {
      super.baseResult = value;
    }
    get subResult() {
      return this[S.subResult];
    }
    set subResult(value) {
      super.subResult = value;
    }
    get supResult() {
      return this[S.supResult];
    }
    set supResult(value) {
      super.supResult = value;
    }
    get presubResult() {
      return this[S.presubResult];
    }
    set presubResult(value) {
      super.presubResult = value;
    }
    get presupResult() {
      return this[S.presupResult];
    }
    set presupResult(value) {
      super.presupResult = value;
    }
    build(context) {
      let t63, t63$, t63$0, t63$1;
      if (context == null) dart.nullFailed(I[80], 54, 29, "context");
      return new (T$.CustomLayoutOf_ScriptPos()).new({delegate: new multiscripts.MultiscriptsLayoutDelegate.new({alignPostscripts: this.alignPostscripts, italic: this.baseResult.italic, isBaseCharacterBox: this.isBaseCharacterBox, baseOptions: this.baseResult.options, subOptions: (t63 = this.subResult, t63 == null ? null : t63.options), supOptions: (t63$ = this.supResult, t63$ == null ? null : t63$.options), presubOptions: (t63$0 = this.presubResult, t63$0 == null ? null : t63$0.options), presupOptions: (t63$1 = this.presupResult, t63$1 == null ? null : t63$1.options)}), children: (() => {
          let t63 = T$.JSArrayOfWidget().of([new (T$.CustomLayoutIdOf_ScriptPos()).new({id: multiscripts._ScriptPos.base, child: this.baseResult.widget, $creationLocationd_0dea112b090073317d4: C[1624] || CT.C1624})]);
          if (this.subResult != null) t63[S.$add](new (T$.CustomLayoutIdOf_ScriptPos()).new({id: multiscripts._ScriptPos.sub, child: dart.nullCheck(this.subResult).widget, $creationLocationd_0dea112b090073317d4: C[1628] || CT.C1628}));
          if (this.supResult != null) t63[S.$add](new (T$.CustomLayoutIdOf_ScriptPos()).new({id: multiscripts._ScriptPos.sup, child: dart.nullCheck(this.supResult).widget, $creationLocationd_0dea112b090073317d4: C[1632] || CT.C1632}));
          if (this.presubResult != null) t63[S.$add](new (T$.CustomLayoutIdOf_ScriptPos()).new({id: multiscripts._ScriptPos.presub, child: dart.nullCheck(this.presubResult).widget, $creationLocationd_0dea112b090073317d4: C[1636] || CT.C1636}));
          if (this.presupResult != null) t63[S.$add](new (T$.CustomLayoutIdOf_ScriptPos()).new({id: multiscripts._ScriptPos.presup, child: dart.nullCheck(this.presupResult).widget, $creationLocationd_0dea112b090073317d4: C[1640] || CT.C1640}));
          return t63;
        })(), $creationLocationd_0dea112b090073317d4: C[1644] || CT.C1644});
    }
  };
  (multiscripts.Multiscripts.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignPostscripts = opts && 'alignPostscripts' in opts ? opts.alignPostscripts : false;
    if (alignPostscripts == null) dart.nullFailed(I[80], 35, 10, "alignPostscripts");
    let isBaseCharacterBox = opts && 'isBaseCharacterBox' in opts ? opts.isBaseCharacterBox : null;
    if (isBaseCharacterBox == null) dart.nullFailed(I[80], 36, 19, "isBaseCharacterBox");
    let baseResult = opts && 'baseResult' in opts ? opts.baseResult : null;
    if (baseResult == null) dart.nullFailed(I[80], 37, 19, "baseResult");
    let subResult = opts && 'subResult' in opts ? opts.subResult : null;
    let supResult = opts && 'supResult' in opts ? opts.supResult : null;
    let presubResult = opts && 'presubResult' in opts ? opts.presubResult : null;
    let presupResult = opts && 'presupResult' in opts ? opts.presupResult : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.alignPostscripts] = alignPostscripts;
    this[S.isBaseCharacterBox] = isBaseCharacterBox;
    this[S.baseResult] = baseResult;
    this[S.subResult] = subResult;
    this[S.supResult] = supResult;
    this[S.presubResult] = presubResult;
    this[S.presupResult] = presupResult;
    multiscripts.Multiscripts.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = multiscripts.Multiscripts.prototype;
  dart.addTypeTests(multiscripts.Multiscripts);
  dart.addTypeCaches(multiscripts.Multiscripts);
  dart.setMethodSignature(multiscripts.Multiscripts, () => ({
    __proto__: dart.getMethods(multiscripts.Multiscripts.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(multiscripts.Multiscripts, I[81]);
  dart.setFieldSignature(multiscripts.Multiscripts, () => ({
    __proto__: dart.getFields(multiscripts.Multiscripts.__proto__),
    alignPostscripts: dart.finalFieldType(core.bool),
    isBaseCharacterBox: dart.finalFieldType(core.bool),
    baseResult: dart.finalFieldType(syntax_tree.BuildResult),
    subResult: dart.finalFieldType(dart.nullable(syntax_tree.BuildResult)),
    supResult: dart.finalFieldType(dart.nullable(syntax_tree.BuildResult)),
    presubResult: dart.finalFieldType(dart.nullable(syntax_tree.BuildResult)),
    presupResult: dart.finalFieldType(dart.nullable(syntax_tree.BuildResult))
  }));
  multiscripts.MultiscriptsLayoutDelegate = class MultiscriptsLayoutDelegate extends custom_layout.IntrinsicLayoutDelegate$(multiscripts._ScriptPos) {
    get alignPostscripts() {
      return this[S.alignPostscripts$1];
    }
    set alignPostscripts(value) {
      super.alignPostscripts = value;
    }
    get italic() {
      return this[S.italic];
    }
    set italic(value) {
      super.italic = value;
    }
    get isBaseCharacterBox() {
      return this[S.isBaseCharacterBox$1];
    }
    set isBaseCharacterBox(value) {
      super.isBaseCharacterBox = value;
    }
    get baseOptions() {
      return this[S.baseOptions$1];
    }
    set baseOptions(value) {
      super.baseOptions = value;
    }
    get subOptions() {
      return this[S.subOptions];
    }
    set subOptions(value) {
      super.subOptions = value;
    }
    get supOptions() {
      return this[S.supOptions];
    }
    set supOptions(value) {
      super.supOptions = value;
    }
    get presubOptions() {
      return this[S.presubOptions];
    }
    set presubOptions(value) {
      super.presubOptions = value;
    }
    get presupOptions() {
      return this[S.presupOptions];
    }
    set presupOptions(value) {
      super.presupOptions = value;
    }
    get baselineDistance() {
      return this[S.baselineDistance];
    }
    set baselineDistance(value) {
      this[S.baselineDistance] = value;
    }
    computeDistanceToActualBaseline(baseline, childrenTable) {
      if (baseline == null) dart.nullFailed(I[80], 122, 24, "baseline");
      T$.MapOf_ScriptPos$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[80], 122, 61, "childrenTable");
      return this.baselineDistance;
    }
    performHorizontalIntrinsicLayout(opts) {
      let childrenWidths = opts && 'childrenWidths' in opts ? opts.childrenWidths : null;
      T$.MapOf_ScriptPos$double().as(childrenWidths);
      if (childrenWidths == null) dart.nullFailed(I[80], 133, 38, "childrenWidths");
      let isComputingIntrinsics = opts && 'isComputingIntrinsics' in opts ? opts.isComputingIntrinsics : false;
      if (isComputingIntrinsics == null) dart.nullFailed(I[80], 134, 10, "isComputingIntrinsics");
      let baseSize = dart.nullCheck(childrenWidths[S.$_get](multiscripts._ScriptPos.base));
      let subSize = childrenWidths[S.$_get](multiscripts._ScriptPos.sub);
      let supSize = childrenWidths[S.$_get](multiscripts._ScriptPos.sup);
      let presubSize = childrenWidths[S.$_get](multiscripts._ScriptPos.presub);
      let presupSize = childrenWidths[S.$_get](multiscripts._ScriptPos.presup);
      let scriptSpace = size$['MeasurementExtOnNum|get#pt'](0.5).toLpUnder(this.baseOptions);
      let extendedSubSize = subSize != null ? dart.notNull(subSize) + dart.notNull(scriptSpace) : 0.0;
      let extendedSupSize = supSize != null ? dart.notNull(supSize) + dart.notNull(scriptSpace) : 0.0;
      let extendedPresubSize = presubSize != null ? dart.notNull(presubSize) + dart.notNull(scriptSpace) : 0.0;
      let extendedPresupSize = presupSize != null ? dart.notNull(presupSize) + dart.notNull(scriptSpace) : 0.0;
      let postscriptWidth = math.max(core.double, extendedSupSize, -dart.notNull(dart.test(this.alignPostscripts) ? 0.0 : this.italic) + extendedSubSize);
      let prescriptWidth = math.max(core.double, extendedPresubSize, extendedPresupSize);
      let fullSize = postscriptWidth + prescriptWidth + baseSize;
      return new (T$.AxisConfigurationOf_ScriptPos()).new({size: fullSize, offsetTable: (() => {
          let t64 = new (T$.LinkedMapOf_ScriptPos$double()).new();
          t64[S.$_set](multiscripts._ScriptPos.base, prescriptWidth);
          t64[S.$_set](multiscripts._ScriptPos.sub, prescriptWidth + baseSize - dart.notNull(dart.test(this.alignPostscripts) ? 0.0 : this.italic));
          t64[S.$_set](multiscripts._ScriptPos.sup, prescriptWidth + baseSize);
          if (presubSize != null) t64[S.$_set](multiscripts._ScriptPos.presub, prescriptWidth - dart.notNull(presubSize));
          if (presupSize != null) t64[S.$_set](multiscripts._ScriptPos.presup, prescriptWidth - dart.notNull(presupSize));
          return t64;
        })()});
    }
    performVerticalIntrinsicLayout(opts) {
      let childrenHeights = opts && 'childrenHeights' in opts ? opts.childrenHeights : null;
      T$.MapOf_ScriptPos$double().as(childrenHeights);
      if (childrenHeights == null) dart.nullFailed(I[80], 174, 38, "childrenHeights");
      let childrenBaselines = opts && 'childrenBaselines' in opts ? opts.childrenBaselines : null;
      T$.MapOf_ScriptPos$double().as(childrenBaselines);
      if (childrenBaselines == null) dart.nullFailed(I[80], 175, 38, "childrenBaselines");
      let isComputingIntrinsics = opts && 'isComputingIntrinsics' in opts ? opts.isComputingIntrinsics : false;
      if (isComputingIntrinsics == null) dart.nullFailed(I[80], 176, 10, "isComputingIntrinsics");
      let baseSize = dart.nullCheck(childrenHeights[S.$_get](multiscripts._ScriptPos.base));
      let subSize = childrenHeights[S.$_get](multiscripts._ScriptPos.sub);
      let supSize = childrenHeights[S.$_get](multiscripts._ScriptPos.sup);
      let presubSize = childrenHeights[S.$_get](multiscripts._ScriptPos.presub);
      let presupSize = childrenHeights[S.$_get](multiscripts._ScriptPos.presup);
      let baseHeight = dart.nullCheck(childrenBaselines[S.$_get](multiscripts._ScriptPos.base));
      let subHeight = childrenBaselines[S.$_get](multiscripts._ScriptPos.sub);
      let supHeight = childrenBaselines[S.$_get](multiscripts._ScriptPos.sup);
      let presubHeight = childrenBaselines[S.$_get](multiscripts._ScriptPos.presub);
      let presupHeight = childrenBaselines[S.$_get](multiscripts._ScriptPos.presup);
      let postscriptRes = multiscripts.calculateUV({base: new multiscripts._ScriptUvConf.new(baseSize, baseHeight, this.baseOptions), sub: subSize != null ? new multiscripts._ScriptUvConf.new(subSize, dart.nullCheck(subHeight), dart.nullCheck(this.subOptions)) : null, sup: supSize != null ? new multiscripts._ScriptUvConf.new(supSize, dart.nullCheck(supHeight), dart.nullCheck(this.supOptions)) : null, isBaseCharacterBox: this.isBaseCharacterBox});
      let prescriptRes = multiscripts.calculateUV({base: new multiscripts._ScriptUvConf.new(baseSize, baseHeight, this.baseOptions), sub: presubSize != null ? new multiscripts._ScriptUvConf.new(presubSize, dart.nullCheck(presubHeight), dart.nullCheck(this.presubOptions)) : null, sup: presupSize != null ? new multiscripts._ScriptUvConf.new(presupSize, dart.nullCheck(presupHeight), dart.nullCheck(this.presupOptions)) : null, isBaseCharacterBox: this.isBaseCharacterBox});
      let subShift = postscriptRes.item2;
      let supShift = postscriptRes.item1;
      let presubShift = prescriptRes.item2;
      let presupShift = prescriptRes.item1;
      let height = iterable_extensions['NumIterableExtension|get#max'](core.double, (() => {
        let t65 = T$.JSArrayOfdouble().of([baseHeight]);
        if (subHeight != null) t65[S.$add](dart.notNull(subHeight) - dart.notNull(subShift));
        if (supHeight != null) t65[S.$add](dart.notNull(supHeight) + dart.notNull(supShift));
        if (presubHeight != null) t65[S.$add](dart.notNull(presubHeight) - dart.notNull(presubShift));
        if (presupHeight != null) t65[S.$add](dart.notNull(presupHeight) + dart.notNull(presupShift));
        return t65;
      })());
      let depth = iterable_extensions['NumIterableExtension|get#max'](core.double, (() => {
        let t66 = T$.JSArrayOfdouble().of([baseSize - baseHeight]);
        if (subHeight != null) t66[S.$add](dart.nullCheck(subSize) - dart.notNull(subHeight) + dart.notNull(subShift));
        if (supHeight != null) t66[S.$add](dart.nullCheck(supSize) - dart.notNull(supHeight) - dart.notNull(supShift));
        if (presubHeight != null) t66[S.$add](dart.nullCheck(presubSize) - dart.notNull(presubHeight) + dart.notNull(presubShift));
        if (presupHeight != null) t66[S.$add](dart.nullCheck(presupSize) - dart.notNull(presupHeight) - dart.notNull(presupShift));
        return t66;
      })());
      if (!dart.test(isComputingIntrinsics)) {
        this.baselineDistance = height;
      }
      return new (T$.AxisConfigurationOf_ScriptPos()).new({size: dart.notNull(height) + dart.notNull(depth), offsetTable: (() => {
          let t67 = new (T$.LinkedMapOf_ScriptPos$double()).new();
          t67[S.$_set](multiscripts._ScriptPos.base, dart.notNull(height) - baseHeight);
          if (subHeight != null) t67[S.$_set](multiscripts._ScriptPos.sub, dart.notNull(height) + dart.notNull(subShift) - dart.notNull(subHeight));
          if (supHeight != null) t67[S.$_set](multiscripts._ScriptPos.sup, dart.notNull(height) - dart.notNull(supShift) - dart.notNull(supHeight));
          if (presubHeight != null) t67[S.$_set](multiscripts._ScriptPos.presub, dart.notNull(height) + dart.notNull(presubShift) - dart.notNull(presubHeight));
          if (presupHeight != null) t67[S.$_set](multiscripts._ScriptPos.presup, dart.notNull(height) - dart.notNull(presupShift) - dart.notNull(presupHeight));
          return t67;
        })()});
    }
  };
  (multiscripts.MultiscriptsLayoutDelegate.new = function(opts) {
    let alignPostscripts = opts && 'alignPostscripts' in opts ? opts.alignPostscripts : null;
    if (alignPostscripts == null) dart.nullFailed(I[80], 108, 19, "alignPostscripts");
    let italic = opts && 'italic' in opts ? opts.italic : null;
    if (italic == null) dart.nullFailed(I[80], 109, 19, "italic");
    let isBaseCharacterBox = opts && 'isBaseCharacterBox' in opts ? opts.isBaseCharacterBox : null;
    if (isBaseCharacterBox == null) dart.nullFailed(I[80], 110, 19, "isBaseCharacterBox");
    let baseOptions = opts && 'baseOptions' in opts ? opts.baseOptions : null;
    if (baseOptions == null) dart.nullFailed(I[80], 111, 19, "baseOptions");
    let subOptions = opts && 'subOptions' in opts ? opts.subOptions : null;
    let supOptions = opts && 'supOptions' in opts ? opts.supOptions : null;
    let presubOptions = opts && 'presubOptions' in opts ? opts.presubOptions : null;
    let presupOptions = opts && 'presupOptions' in opts ? opts.presupOptions : null;
    this[S.baselineDistance] = 0.0;
    this[S.alignPostscripts$1] = alignPostscripts;
    this[S.italic] = italic;
    this[S.isBaseCharacterBox$1] = isBaseCharacterBox;
    this[S.baseOptions$1] = baseOptions;
    this[S.subOptions] = subOptions;
    this[S.supOptions] = supOptions;
    this[S.presubOptions] = presubOptions;
    this[S.presupOptions] = presupOptions;
    multiscripts.MultiscriptsLayoutDelegate.__proto__.new.call(this);
    ;
  }).prototype = multiscripts.MultiscriptsLayoutDelegate.prototype;
  dart.addTypeTests(multiscripts.MultiscriptsLayoutDelegate);
  dart.addTypeCaches(multiscripts.MultiscriptsLayoutDelegate);
  dart.setMethodSignature(multiscripts.MultiscriptsLayoutDelegate, () => ({
    __proto__: dart.getMethods(multiscripts.MultiscriptsLayoutDelegate.__proto__),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline, dart.nullable(core.Object)]),
    performHorizontalIntrinsicLayout: dart.fnType(custom_layout.AxisConfiguration$(multiscripts._ScriptPos), [], {childrenWidths: dart.nullable(core.Object), isComputingIntrinsics: core.bool}, {}),
    performVerticalIntrinsicLayout: dart.fnType(custom_layout.AxisConfiguration$(multiscripts._ScriptPos), [], {childrenBaselines: dart.nullable(core.Object), childrenHeights: dart.nullable(core.Object), isComputingIntrinsics: core.bool}, {})
  }));
  dart.setLibraryUri(multiscripts.MultiscriptsLayoutDelegate, I[81]);
  dart.setFieldSignature(multiscripts.MultiscriptsLayoutDelegate, () => ({
    __proto__: dart.getFields(multiscripts.MultiscriptsLayoutDelegate.__proto__),
    alignPostscripts: dart.finalFieldType(core.bool),
    italic: dart.finalFieldType(core.double),
    isBaseCharacterBox: dart.finalFieldType(core.bool),
    baseOptions: dart.finalFieldType(options$.MathOptions),
    subOptions: dart.finalFieldType(dart.nullable(options$.MathOptions)),
    supOptions: dart.finalFieldType(dart.nullable(options$.MathOptions)),
    presubOptions: dart.finalFieldType(dart.nullable(options$.MathOptions)),
    presupOptions: dart.finalFieldType(dart.nullable(options$.MathOptions)),
    baselineDistance: dart.fieldType(core.double)
  }));
  multiscripts._ScriptUvConf = class _ScriptUvConf extends core.Object {
    get fullHeight() {
      return this[S.fullHeight];
    }
    set fullHeight(value) {
      super.fullHeight = value;
    }
    get baseline() {
      return this[S.baseline];
    }
    set baseline(value) {
      super.baseline = value;
    }
    get options() {
      return this[S.options$2];
    }
    set options(value) {
      super.options = value;
    }
  };
  (multiscripts._ScriptUvConf.new = function(fullHeight, baseline, options) {
    if (fullHeight == null) dart.nullFailed(I[80], 258, 28, "fullHeight");
    if (baseline == null) dart.nullFailed(I[80], 258, 45, "baseline");
    if (options == null) dart.nullFailed(I[80], 258, 60, "options");
    this[S.fullHeight] = fullHeight;
    this[S.baseline] = baseline;
    this[S.options$2] = options;
    ;
  }).prototype = multiscripts._ScriptUvConf.prototype;
  dart.addTypeTests(multiscripts._ScriptUvConf);
  dart.addTypeCaches(multiscripts._ScriptUvConf);
  dart.setLibraryUri(multiscripts._ScriptUvConf, I[81]);
  dart.setFieldSignature(multiscripts._ScriptUvConf, () => ({
    __proto__: dart.getFields(multiscripts._ScriptUvConf.__proto__),
    fullHeight: dart.finalFieldType(core.double),
    baseline: dart.finalFieldType(core.double),
    options: dart.finalFieldType(options$.MathOptions)
  }));
  multiscripts.calculateUV = function calculateUV(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[80], 262, 26, "base");
    let sub = opts && 'sub' in opts ? opts.sub : null;
    let sup = opts && 'sup' in opts ? opts.sup : null;
    let isBaseCharacterBox = opts && 'isBaseCharacterBox' in opts ? opts.isBaseCharacterBox : null;
    if (isBaseCharacterBox == null) dart.nullFailed(I[80], 265, 17, "isBaseCharacterBox");
    let metrics = base.options.fontMetrics;
    let baseOptions = base.options;
    let h = base.baseline;
    let d = dart.notNull(base.fullHeight) - dart.notNull(h);
    let u = 0.0;
    let v = 0.0;
    if (sub != null) {
      let r = size$['MeasurementExtOnNum|get#cssEm'](sub.options.fontMetrics.subDrop).toLpUnder(sub.options);
      v = dart.test(isBaseCharacterBox) ? 0.0 : d + dart.notNull(r);
    }
    if (sup != null) {
      let q = size$['MeasurementExtOnNum|get#cssEm'](sup.options.fontMetrics.supDrop).toLpUnder(sup.options);
      u = dart.test(isBaseCharacterBox) ? 0.0 : dart.notNull(h) - dart.notNull(q);
    }
    if (sup == null && sub != null) {
      let hx = sub.baseline;
      v = math.max(core.double, v, math.max(core.double, size$['MeasurementExtOnNum|get#cssEm'](metrics.sub1).toLpUnder(baseOptions), dart.notNull(hx) - 0.8 * dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](metrics.xHeight).toLpUnder(baseOptions))));
    } else if (sup != null) {
      let dx = dart.notNull(sup.fullHeight) - dart.notNull(sup.baseline);
      let p = size$['MeasurementExtOnNum|get#cssEm'](baseOptions.style == style$0.MathStyle.display ? metrics.sup1 : dart.test(style$0['MathStyleExt|get#cramped'](baseOptions.style)) ? metrics.sup3 : metrics.sup2).toLpUnder(baseOptions);
      u = math.max(core.double, u, math.max(core.double, p, dx + 0.25 * dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](metrics.xHeight).toLpUnder(baseOptions))));
      if (sub != null) {
        v = math.max(core.double, v, size$['MeasurementExtOnNum|get#cssEm'](metrics.sub2).toLpUnder(baseOptions));
        let theta = size$['MeasurementExtOnNum|get#cssEm'](metrics.defaultRuleThickness).toLpUnder(baseOptions);
        let hy = sub.baseline;
        if (u - dx - (dart.notNull(hy) - v) < 4 * dart.notNull(theta)) {
          v = 4 * dart.notNull(theta) - u + dx + dart.notNull(hy);
          let psi = 0.8 * dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](metrics.xHeight).toLpUnder(baseOptions)) - (u - dx);
          if (psi > 0) {
            u = u + psi;
            v = v - psi;
          }
        }
      }
    }
    return new (T$.Tuple2Ofdouble$double()).new(u, v);
  };
  multiscripts$.MultiscriptsNode = class MultiscriptsNode extends syntax_tree.SlotableNode$(dart.nullable(syntax_tree.EquationRowNode)) {
    get alignPostscripts() {
      return this[S.alignPostscripts$2];
    }
    set alignPostscripts(value) {
      super.alignPostscripts = value;
    }
    get base() {
      return this[S.base$3];
    }
    set base(value) {
      super.base = value;
    }
    get sub() {
      return this[S.sub$1];
    }
    set sub(value) {
      super.sub = value;
    }
    get sup() {
      return this[S.sup$1];
    }
    set sup(value) {
      super.sup = value;
    }
    get presub() {
      return this[S.presub$1];
    }
    set presub(value) {
      super.presub = value;
    }
    get presup() {
      return this[S.presup$1];
    }
    set presup(value) {
      super.presup = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[82], 46, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[82], 46, 51, "childBuildResults");
      return new syntax_tree.BuildResult.new({options: options, widget: new multiscripts.Multiscripts.new({alignPostscripts: this.alignPostscripts, isBaseCharacterBox: this.base.flattenedChildList[S.$length] === 1 && symbol$.SymbolNode.is(this.base.flattenedChildList[S.$_get](0)), baseResult: dart.nullCheck(childBuildResults[S.$_get](0)), subResult: childBuildResults[S.$_get](1), supResult: childBuildResults[S.$_get](2), presubResult: childBuildResults[S.$_get](3), presupResult: childBuildResults[S.$_get](4), $creationLocationd_0dea112b090073317d4: C[1648] || CT.C1648})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[82], 62, 53, "options");
      let subOptions = options.havingStyle(style$0['MathStyleExt|sub'](options.style));
      let supOptions = options.havingStyle(style$0['MathStyleExt|sup'](options.style));
      return T$.JSArrayOfMathOptions().of([options, subOptions, supOptions, subOptions, supOptions]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNodeN().of([this.base, this.sub, this.sup, this.presub, this.presup]);
    }
    get leftType() {
      return this.presub == null && this.presup == null ? this.base.leftType : syntax_tree.AtomType.ord;
    }
    get rightType() {
      return this.sub == null && this.sup == null ? this.base.rightType : syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[82], 80, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[82], 80, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNodeN().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[82], 84, 58, "newChildren");
      return new multiscripts$.MultiscriptsNode.new({alignPostscripts: this.alignPostscripts, base: dart.nullCheck(newChildren[S.$_get](0)), sub: newChildren[S.$_get](1), sup: newChildren[S.$_get](2), presub: newChildren[S.$_get](3), presup: newChildren[S.$_get](4)});
    }
    toJson() {
      let t70, t70$, t70$0, t70$1, t68;
      t68 = super.toJson();
      return (() => {
        t68[S.$addAll]((() => {
          let t69 = new (T$.IdentityMapOfString$ObjectN()).new();
          t69[S.$_set]("base", this.base.toJson());
          if (this.sub != null) t69[S.$_set]("sub", (t70 = this.sub, t70 == null ? null : t70.toJson()));
          if (this.sup != null) t69[S.$_set]("sup", (t70$ = this.sup, t70$ == null ? null : t70$.toJson()));
          if (this.presub != null) t69[S.$_set]("presub", (t70$0 = this.presub, t70$0 == null ? null : t70$0.toJson()));
          if (this.presup != null) t69[S.$_set]("presup", (t70$1 = this.presup, t70$1 == null ? null : t70$1.toJson()));
          return t69;
        })());
        return t68;
      })();
    }
  };
  (multiscripts$.MultiscriptsNode.new = function(opts) {
    let alignPostscripts = opts && 'alignPostscripts' in opts ? opts.alignPostscripts : false;
    if (alignPostscripts == null) dart.nullFailed(I[82], 36, 10, "alignPostscripts");
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[82], 37, 19, "base");
    let sub = opts && 'sub' in opts ? opts.sub : null;
    let sup = opts && 'sup' in opts ? opts.sup : null;
    let presub = opts && 'presub' in opts ? opts.presub : null;
    let presup = opts && 'presup' in opts ? opts.presup : null;
    this[S.alignPostscripts$2] = alignPostscripts;
    this[S.base$3] = base;
    this[S.sub$1] = sub;
    this[S.sup$1] = sup;
    this[S.presub$1] = presub;
    this[S.presup$1] = presup;
    multiscripts$.MultiscriptsNode.__proto__.new.call(this);
    ;
  }).prototype = multiscripts$.MultiscriptsNode.prototype;
  dart.addTypeTests(multiscripts$.MultiscriptsNode);
  dart.addTypeCaches(multiscripts$.MultiscriptsNode);
  dart.setMethodSignature(multiscripts$.MultiscriptsNode, () => ({
    __proto__: dart.getMethods(multiscripts$.MultiscriptsNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(dart.nullable(syntax_tree.EquationRowNode)), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(multiscripts$.MultiscriptsNode, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(multiscripts$.MultiscriptsNode, () => ({
    __proto__: dart.getGetters(multiscripts$.MultiscriptsNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(multiscripts$.MultiscriptsNode, I[83]);
  dart.setFieldSignature(multiscripts$.MultiscriptsNode, () => ({
    __proto__: dart.getFields(multiscripts$.MultiscriptsNode.__proto__),
    alignPostscripts: dart.finalFieldType(core.bool),
    base: dart.finalFieldType(syntax_tree.EquationRowNode),
    sub: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    sup: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    presub: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode)),
    presup: dart.finalFieldType(dart.nullable(syntax_tree.EquationRowNode))
  }));
  delimiter.DelimiterConf = class DelimiterConf extends core.Object {
    get font() {
      return this[S.font$1];
    }
    set font(value) {
      super.font = value;
    }
    get style() {
      return this[S.style];
    }
    set style(value) {
      super.style = value;
    }
  };
  (delimiter.DelimiterConf.new = function(font, style) {
    if (font == null) dart.nullFailed(I[84], 13, 28, "font");
    if (style == null) dart.nullFailed(I[84], 13, 39, "style");
    this[S.font$1] = font;
    this[S.style] = style;
    ;
  }).prototype = delimiter.DelimiterConf.prototype;
  dart.addTypeTests(delimiter.DelimiterConf);
  dart.addTypeCaches(delimiter.DelimiterConf);
  dart.setLibraryUri(delimiter.DelimiterConf, I[85]);
  dart.setFieldSignature(delimiter.DelimiterConf, () => ({
    __proto__: dart.getFields(delimiter.DelimiterConf.__proto__),
    font: dart.finalFieldType(options$.FontOptions),
    style: dart.finalFieldType(style$0.MathStyle)
  }));
  delimiter.getHeightForDelim = function getHeightForDelim(opts) {
    let t70, t69, t69$;
    let delim = opts && 'delim' in opts ? opts.delim : null;
    if (delim == null) dart.nullFailed(I[84], 49, 19, "delim");
    let fontName = opts && 'fontName' in opts ? opts.fontName : null;
    if (fontName == null) dart.nullFailed(I[84], 50, 19, "fontName");
    let style = opts && 'style' in opts ? opts.style : null;
    if (style == null) dart.nullFailed(I[84], 51, 22, "style");
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[84], 52, 24, "options");
    let char = (t69$ = (t69 = symbols$.symbolRenderConfigs[S.$_get](delim), t69 == null ? null : (t70 = t69.math, t70 == null ? null : t70.replaceChar)), t69$ == null ? delim : t69$);
    let metrics = font_metrics$.getCharacterMetrics({character: char, fontName: fontName, mode: types.Mode.math});
    if (metrics == null) {
      dart.throw(new core.StateError.new("Illegal delimiter char " + dart.str(delim) + "(" + dart.str(unicode_literal.unicodeLiteral(delim)) + ") appeared in AST"));
    }
    let fullHeight = dart.notNull(metrics.height) + dart.notNull(metrics.depth);
    let newOptions = options.havingStyle(style);
    return size$['MeasurementExtOnNum|get#cssEm'](fullHeight).toLpUnder(newOptions);
  };
  dart.defineLazy(delimiter, {
    /*delimiter.mainRegular*/get mainRegular() {
      return C[259] || CT.C259;
    },
    /*delimiter.size1Regular*/get size1Regular() {
      return C[1517] || CT.C1517;
    },
    /*delimiter.size2Regular*/get size2Regular() {
      return C[1519] || CT.C1519;
    },
    /*delimiter.size3Regular*/get size3Regular() {
      return C[1521] || CT.C1521;
    },
    /*delimiter.size4Regular*/get size4Regular() {
      return C[1523] || CT.C1523;
    },
    /*delimiter.stackNeverDelimiterSequence*/get stackNeverDelimiterSequence() {
      return C[1657] || CT.C1657;
    },
    /*delimiter.stackAlwaysDelimiterSequence*/get stackAlwaysDelimiterSequence() {
      return C[1660] || CT.C1660;
    },
    /*delimiter.stackLargeDelimiterSequence*/get stackLargeDelimiterSequence() {
      return C[1657] || CT.C1657;
    }
  }, false);
  left_right.LeftRightNode = class LeftRightNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get leftDelim() {
      return this[S.leftDelim];
    }
    set leftDelim(value) {
      super.leftDelim = value;
    }
    get rightDelim() {
      return this[S.rightDelim];
    }
    set rightDelim(value) {
      super.rightDelim = value;
    }
    get body() {
      return this[S.body$3];
    }
    set body(value) {
      super.body = value;
    }
    get middle() {
      return this[S.middle];
    }
    set middle(value) {
      super.middle = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[86], 45, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[86], 45, 47, "childBuildResults");
      let numElements = 2 + dart.notNull(this.body[S.$length]) + dart.notNull(this.middle[S.$length]);
      let a = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options);
      let childWidgets = T$.ListOfLineElement().generate(numElements, dart.fn(index => {
        if (index == null) dart.nullFailed(I[86], 49, 54, "index");
        if (index[S.$modulo](2) === 0) {
          return new line.LineElement.new({customCrossSize: dart.fn((height, depth) => {
              if (height == null) dart.nullFailed(I[86], 53, 29, "height");
              if (depth == null) dart.nullFailed(I[86], 53, 37, "depth");
              let delta = math.max(core.double, dart.notNull(height) - dart.notNull(a), dart.notNull(depth) + dart.notNull(a));
              let delimeterFullHeight = math.max(core.double, delta / 500 * 901, 2 * delta - dart.notNull(left_right.delimiterShorfall.toLpUnder(options)));
              return new box.BoxConstraints.new({minHeight: delimeterFullHeight});
            }, T$.doubleAnddoubleToBoxConstraints()), trailingMargin: index === numElements - 1 ? 0.0 : spacing$.getSpacingSize(index === 0 ? syntax_tree.AtomType.open : syntax_tree.AtomType.rel, this.body[S.$_get](((dart.notNull(index) + 1) / 2)[S.$truncate]()).leftType, options.style).toLpUnder(options), child: new layout_builder_baseline.LayoutBuilderPreserveBaseline.new({builder: dart.fn((context, constraints) => {
                if (context == null) dart.nullFailed(I[86], 65, 23, "context");
                if (constraints == null) dart.nullFailed(I[86], 65, 32, "constraints");
                return left_right.buildCustomSizedDelimWidget(index === 0 ? this.leftDelim : index === numElements - 1 ? this.rightDelim : this.middle[S.$_get]((dart.notNull(index) / 2)[S.$truncate]() - 1), constraints.minHeight, options);
              }, T$.BuildContextAndBoxConstraintsToWidget()), $creationLocationd_0dea112b090073317d4: C[1662] || CT.C1662}), $creationLocationd_0dea112b090073317d4: C[1665] || CT.C1665});
        } else {
          return new line.LineElement.new({trailingMargin: spacing$.getSpacingSize(this.body[S.$_get]((dart.notNull(index) / 2)[S.$truncate]()).rightType, index === numElements - 2 ? syntax_tree.AtomType.close : syntax_tree.AtomType.rel, options.style).toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get]((dart.notNull(index) / 2)[S.$truncate]())).widget, $creationLocationd_0dea112b090073317d4: C[1670] || CT.C1670});
        }
      }, T$.intToLineElement()), {growable: false});
      return new syntax_tree.BuildResult.new({options: options, widget: new line.Line.new({children: childWidgets, $creationLocationd_0dea112b090073317d4: C[1674] || CT.C1674})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[86], 97, 53, "options");
      return T$.ListOfMathOptions().filled(this.body[S.$length], options, {growable: false});
    }
    computeChildren() {
      return this.body;
    }
    get leftType() {
      return syntax_tree.AtomType.open;
    }
    get rightType() {
      return syntax_tree.AtomType.close;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[86], 110, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[86], 110, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[86], 114, 54, "newChildren");
      return new left_right.LeftRightNode.new({leftDelim: this.leftDelim, rightDelim: this.rightDelim, body: newChildren, middle: this.middle});
    }
    toJson() {
      let t69;
      t69 = super.toJson();
      return (() => {
        t69[S.$addAll]((() => {
          let t70 = new (T$.IdentityMapOfString$ObjectN()).new();
          t70[S.$_set]("body", this.body[S.$map](T$.MapOfString$ObjectN(), dart.fn(e => {
            if (e == null) dart.nullFailed(I[86], 125, 25, "e");
            return e.toJson();
          }, T$.EquationRowNodeToMapOfString$ObjectN())));
          t70[S.$_set]("leftDelim", this.leftDelim);
          t70[S.$_set]("rightDelim", this.rightDelim);
          if (dart.test(this.middle[S.$isNotEmpty])) t70[S.$_set]("middle", this.middle);
          return t70;
        })());
        return t69;
      })();
    }
  };
  (left_right.LeftRightNode.new = function(opts) {
    let leftDelim = opts && 'leftDelim' in opts ? opts.leftDelim : null;
    let rightDelim = opts && 'rightDelim' in opts ? opts.rightDelim : null;
    let body = opts && 'body' in opts ? opts.body : null;
    if (body == null) dart.nullFailed(I[86], 38, 19, "body");
    let middle = opts && 'middle' in opts ? opts.middle : C[1661] || CT.C1661;
    if (middle == null) dart.nullFailed(I[86], 39, 10, "middle");
    this[S.leftDelim] = leftDelim;
    this[S.rightDelim] = rightDelim;
    this[S.body$3] = body;
    this[S.middle] = middle;
    if (!dart.test(body[S.$isNotEmpty])) dart.assertFailed(null, I[86], 40, 16, "body.isNotEmpty");
    if (!(middle[S.$length] === dart.notNull(body[S.$length]) - 1)) dart.assertFailed(null, I[86], 41, 16, "middle.length == body.length - 1");
    left_right.LeftRightNode.__proto__.new.call(this);
    ;
  }).prototype = left_right.LeftRightNode.prototype;
  dart.addTypeTests(left_right.LeftRightNode);
  dart.addTypeCaches(left_right.LeftRightNode);
  dart.setMethodSignature(left_right.LeftRightNode, () => ({
    __proto__: dart.getMethods(left_right.LeftRightNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(left_right.LeftRightNode, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(left_right.LeftRightNode, () => ({
    __proto__: dart.getGetters(left_right.LeftRightNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(left_right.LeftRightNode, I[87]);
  dart.setFieldSignature(left_right.LeftRightNode, () => ({
    __proto__: dart.getFields(left_right.LeftRightNode.__proto__),
    leftDelim: dart.finalFieldType(dart.nullable(core.String)),
    rightDelim: dart.finalFieldType(dart.nullable(core.String)),
    body: dart.finalFieldType(core.List$(syntax_tree.EquationRowNode)),
    middle: dart.finalFieldType(core.List$(dart.nullable(core.String)))
  }));
  left_right.StackDelimiterConf = class StackDelimiterConf extends core.Object {
    get top() {
      return this[S.top];
    }
    set top(value) {
      super.top = value;
    }
    get middle() {
      return this[S.middle$1];
    }
    set middle(value) {
      super.middle = value;
    }
    get repeat() {
      return this[S.repeat];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get bottom() {
      return this[S.bottom];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get font() {
      return this[S.font$2];
    }
    set font(value) {
      super.font = value;
    }
  };
  (left_right.StackDelimiterConf.new = function(opts) {
    let top = opts && 'top' in opts ? opts.top : null;
    if (top == null) dart.nullFailed(I[86], 285, 19, "top");
    let middle = opts && 'middle' in opts ? opts.middle : null;
    let repeat = opts && 'repeat' in opts ? opts.repeat : null;
    if (repeat == null) dart.nullFailed(I[86], 287, 19, "repeat");
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    if (bottom == null) dart.nullFailed(I[86], 288, 19, "bottom");
    let font = opts && 'font' in opts ? opts.font : C[1523] || CT.C1523;
    if (font == null) dart.nullFailed(I[86], 289, 10, "font");
    this[S.top] = top;
    this[S.middle$1] = middle;
    this[S.repeat] = repeat;
    this[S.bottom] = bottom;
    this[S.font$2] = font;
    ;
  }).prototype = left_right.StackDelimiterConf.prototype;
  dart.addTypeTests(left_right.StackDelimiterConf);
  dart.addTypeCaches(left_right.StackDelimiterConf);
  dart.setLibraryUri(left_right.StackDelimiterConf, I[87]);
  dart.setFieldSignature(left_right.StackDelimiterConf, () => ({
    __proto__: dart.getFields(left_right.StackDelimiterConf.__proto__),
    top: dart.finalFieldType(core.String),
    middle: dart.finalFieldType(dart.nullable(core.String)),
    repeat: dart.finalFieldType(core.String),
    bottom: dart.finalFieldType(core.String),
    font: dart.finalFieldType(options$.FontOptions)
  }));
  left_right.buildCustomSizedDelimWidget = function buildCustomSizedDelimWidget(delim, minDelimiterHeight, options) {
    if (minDelimiterHeight == null) dart.nullFailed(I[86], 173, 27, "minDelimiterHeight");
    if (options == null) dart.nullFailed(I[86], 173, 59, "options");
    if (delim == null) {
      let axisHeight = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.xHeight).toLpUnder(options);
      return new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: axisHeight, child: new container.Container.new({height: minDelimiterHeight, width: constants.nullDelimiterSpace.toLpUnder(options), $creationLocationd_0dea112b090073317d4: C[1677] || CT.C1677}), $creationLocationd_0dea112b090073317d4: C[1681] || CT.C1681});
    }
    let sequence = null;
    if (dart.test(left_right.stackNeverDelimiters.contains(delim))) {
      sequence = delimiter.stackNeverDelimiterSequence;
    } else if (dart.test(left_right.stackLargeDelimiters.contains(delim))) {
      sequence = delimiter.stackLargeDelimiterSequence;
    } else {
      sequence = delimiter.stackAlwaysDelimiterSequence;
    }
    let delimConf = iterable_extensions$['IterableExtension|firstWhereOrNull'](delimiter.DelimiterConf, sequence, dart.fn(element => {
      if (element == null) dart.nullFailed(I[86], 195, 46, "element");
      return dart.notNull(delimiter.getHeightForDelim({delim: delim, fontName: element.font.fontName, style: element.style, options: options})) > dart.notNull(minDelimiterHeight);
    }, T$.DelimiterConfTobool()));
    if (dart.test(left_right.stackNeverDelimiters.contains(delim))) {
      delimConf == null ? delimConf = sequence[S.$last] : null;
    }
    if (delimConf != null) {
      let axisHeight = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options);
      return new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: axisHeight, child: make_symbol.makeChar(delim, delimConf.font, make_symbol.lookupChar(delim, delimConf.font, types.Mode.math), options), $creationLocationd_0dea112b090073317d4: C[1686] || CT.C1686});
    } else {
      return left_right.makeStackedDelim(delim, minDelimiterHeight, types.Mode.math, options);
    }
  };
  left_right.makeStackedDelim = function makeStackedDelim(delim, minDelimiterHeight, mode, options) {
    if (delim == null) dart.nullFailed(I[86], 221, 12, "delim");
    if (minDelimiterHeight == null) dart.nullFailed(I[86], 221, 26, "minDelimiterHeight");
    if (mode == null) dart.nullFailed(I[86], 221, 51, "mode");
    if (options == null) dart.nullFailed(I[86], 221, 69, "options");
    let conf = dart.nullCheck(left_right.stackDelimiterConfs[S.$_get](delim));
    let topMetrics = dart.nullCheck(make_symbol.lookupChar(conf.top, conf.font, types.Mode.math));
    let repeatMetrics = dart.nullCheck(make_symbol.lookupChar(conf.repeat, conf.font, types.Mode.math));
    let bottomMetrics = dart.nullCheck(make_symbol.lookupChar(conf.bottom, conf.font, types.Mode.math));
    let topHeight = size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(topMetrics.height) + dart.notNull(topMetrics.depth)).toLpUnder(options);
    let repeatHeight = size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(repeatMetrics.height) + dart.notNull(repeatMetrics.depth)).toLpUnder(options);
    let bottomHeight = size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(bottomMetrics.height) + dart.notNull(bottomMetrics.depth)).toLpUnder(options);
    let middleHeight = 0.0;
    let middleFactor = 1;
    let middleMetrics = null;
    if (conf.middle != null) {
      middleMetrics = dart.nullCheck(make_symbol.lookupChar(dart.nullCheck(conf.middle), conf.font, types.Mode.math));
      middleHeight = size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(middleMetrics.height) + dart.notNull(middleMetrics.depth)).toLpUnder(options);
      middleFactor = 2;
    }
    let minHeight = dart.notNull(topHeight) + dart.notNull(bottomHeight) + dart.notNull(middleHeight);
    let repeatCount = math.max(core.num, 0, (dart.notNull(minDelimiterHeight) - minHeight) / (dart.notNull(repeatHeight) * middleFactor))[S.$ceil]();
    let axisHeight = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options);
    return new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: axisHeight, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, mainAxisAlignment: flex.MainAxisAlignment.start, mainAxisSize: flex.MainAxisSize.min, children: (() => {
          let t70 = T$.JSArrayOfWidget().of([make_symbol.makeChar(conf.top, conf.font, topMetrics, options)]);
          for (let i = 0; i < repeatCount; i = i + 1)
            t70[S.$add](make_symbol.makeChar(conf.repeat, conf.font, repeatMetrics, options));
          if (conf.middle != null) t70[S.$add](make_symbol.makeChar(dart.nullCheck(conf.middle), conf.font, dart.nullCheck(middleMetrics), options));
          if (conf.middle != null) for (let i = 0; i < repeatCount; i = i + 1)
            t70[S.$add](make_symbol.makeChar(conf.repeat, conf.font, repeatMetrics, options));
          t70[S.$add](make_symbol.makeChar(conf.bottom, conf.font, bottomMetrics, options));
          return t70;
        })(), $creationLocationd_0dea112b090073317d4: C[1691] || CT.C1691}), $creationLocationd_0dea112b090073317d4: C[1697] || CT.C1697});
  };
  dart.defineLazy(left_right, {
    /*left_right.delimiterFactor*/get delimiterFactor() {
      return 901;
    },
    /*left_right.delimiterShorfall*/get delimiterShorfall() {
      return C[1702] || CT.C1702;
    },
    /*left_right.stackLargeDelimiters*/get stackLargeDelimiters() {
      return C[1703] || CT.C1703;
    },
    /*left_right.stackAlwaysDelimiters*/get stackAlwaysDelimiters() {
      return C[1704] || CT.C1704;
    },
    /*left_right.stackNeverDelimiters*/get stackNeverDelimiters() {
      return C[1705] || CT.C1705;
    },
    /*left_right.size4Font*/get size4Font() {
      return C[1523] || CT.C1523;
    },
    /*left_right.size1Font*/get size1Font() {
      return C[1517] || CT.C1517;
    },
    /*left_right.stackDelimiterConfs*/get stackDelimiterConfs() {
      return C[1706] || CT.C1706;
    }
  }, false);
  spacing$.getSpacingSize = function getSpacingSize(left, right, style) {
    let t71, t71$, t71$0;
    if (left == null) dart.nullFailed(I[88], 84, 37, "left");
    if (right == null) dart.nullFailed(I[88], 84, 52, "right");
    if (style == null) dart.nullFailed(I[88], 84, 69, "style");
    t71$0 = dart.test(style$0['MathStyleExt|<='](style, style$0.MathStyle.script)) ? (t71 = spacing$._tightSpacings[S.$_get](left), t71 == null ? null : t71[S.$_get](right)) : (t71$ = spacing$._spacings[S.$_get](left), t71$ == null ? null : t71$[S.$_get](right));
    return t71$0 == null ? size$.Measurement.zero : t71$0;
  };
  dart.defineLazy(spacing$, {
    /*spacing$.thinspace*/get thinspace() {
      return C[1730] || CT.C1730;
    },
    /*spacing$.mediumspace*/get mediumspace() {
      return C[1732] || CT.C1732;
    },
    /*spacing$.thickspace*/get thickspace() {
      return C[1733] || CT.C1733;
    },
    /*spacing$._spacings*/get _spacings() {
      return C[1734] || CT.C1734;
    },
    /*spacing$._tightSpacings*/get _tightSpacings() {
      return C[1744] || CT.C1744;
    }
  }, false);
  $function.FunctionNode = class FunctionNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get functionName() {
      return this[S.functionName];
    }
    set functionName(value) {
      super.functionName = value;
    }
    get argument() {
      return this[S.argument];
    }
    set argument(value) {
      super.argument = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[89], 23, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[89], 23, 51, "childBuildResults");
      return new syntax_tree.BuildResult.new({options: options, widget: new line.Line.new({children: T$.JSArrayOfWidget().of([new line.LineElement.new({trailingMargin: spacing$.getSpacingSize(syntax_tree.AtomType.op, this.argument.leftType, options.style).toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get](0)).widget, $creationLocationd_0dea112b090073317d4: C[1747] || CT.C1747}), new line.LineElement.new({trailingMargin: 0.0, child: dart.nullCheck(childBuildResults[S.$_get](1)).widget, $creationLocationd_0dea112b090073317d4: C[1751] || CT.C1751})]), $creationLocationd_0dea112b090073317d4: C[1755] || CT.C1755})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[89], 41, 53, "options");
      return T$.ListOfMathOptions().filled(2, options, {growable: false});
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.functionName, this.argument]);
    }
    get leftType() {
      return syntax_tree.AtomType.op;
    }
    get rightType() {
      return this.argument.rightType;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[89], 54, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[89], 54, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[89], 58, 53, "newChildren");
      return this.copyWith({functionName: newChildren[S.$_get](0), argument: newChildren[S.$_get](2)});
    }
    toJson() {
      let t71;
      t71 = super.toJson();
      return (() => {
        t71[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["functionName", this.functionName.toJson(), "argument", this.argument.toJson()]));
        return t71;
      })();
    }
    copyWith(opts) {
      let t71, t71$;
      let functionName = opts && 'functionName' in opts ? opts.functionName : null;
      let argument = opts && 'argument' in opts ? opts.argument : null;
      return new $function.FunctionNode.new({functionName: (t71 = functionName, t71 == null ? this.functionName : t71), argument: (t71$ = argument, t71$ == null ? this.argument : t71$)});
    }
  };
  ($function.FunctionNode.new = function(opts) {
    let functionName = opts && 'functionName' in opts ? opts.functionName : null;
    if (functionName == null) dart.nullFailed(I[89], 17, 19, "functionName");
    let argument = opts && 'argument' in opts ? opts.argument : null;
    if (argument == null) dart.nullFailed(I[89], 18, 19, "argument");
    this[S.functionName] = functionName;
    this[S.argument] = argument;
    $function.FunctionNode.__proto__.new.call(this);
    ;
  }).prototype = $function.FunctionNode.prototype;
  dart.addTypeTests($function.FunctionNode);
  dart.addTypeCaches($function.FunctionNode);
  dart.setMethodSignature($function.FunctionNode, () => ({
    __proto__: dart.getMethods($function.FunctionNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType($function.FunctionNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType($function.FunctionNode, [], {argument: dart.nullable(syntax_tree.EquationRowNode), functionName: dart.nullable(syntax_tree.EquationRowNode)}, {})
  }));
  dart.setGetterSignature($function.FunctionNode, () => ({
    __proto__: dart.getGetters($function.FunctionNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri($function.FunctionNode, I[90]);
  dart.setFieldSignature($function.FunctionNode, () => ({
    __proto__: dart.getFields($function.FunctionNode.__proto__),
    functionName: dart.finalFieldType(syntax_tree.EquationRowNode),
    argument: dart.finalFieldType(syntax_tree.EquationRowNode)
  }));
  frac$.FracNode = class FracNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get numerator() {
      return this[S.numerator];
    }
    set numerator(value) {
      super.numerator = value;
    }
    get denominator() {
      return this[S.denominator];
    }
    set denominator(value) {
      super.denominator = value;
    }
    get barSize() {
      return this[S.barSize];
    }
    set barSize(value) {
      super.barSize = value;
    }
    get continued() {
      return this[S.continued];
    }
    set continued(value) {
      super.continued = value;
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.numerator, this.denominator]);
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[91], 41, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[91], 41, 51, "childBuildResults");
      return new syntax_tree.BuildResult.new({options: options, widget: new (T$.CustomLayoutOf_FracPos()).new({delegate: new frac$.FracLayoutDelegate.new({barSize: this.barSize, options: options}), children: T$.JSArrayOfWidget().of([new (T$.CustomLayoutIdOf_FracPos()).new({id: frac$._FracPos.numer, child: dart.nullCheck(childBuildResults[S.$_get](0)).widget, $creationLocationd_0dea112b090073317d4: C[1758] || CT.C1758}), new (T$.CustomLayoutIdOf_FracPos()).new({id: frac$._FracPos.denom, child: dart.nullCheck(childBuildResults[S.$_get](1)).widget, $creationLocationd_0dea112b090073317d4: C[1762] || CT.C1762})]), $creationLocationd_0dea112b090073317d4: C[1766] || CT.C1766})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[91], 63, 53, "options");
      return T$.JSArrayOfMathOptions().of([options.havingStyle(style$0['MathStyleExt|fracNum'](options.style)), options.havingStyle(style$0['MathStyleExt|fracDen'](options.style))]);
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[91], 69, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[91], 69, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[91], 73, 49, "newChildren");
      return new frac$.FracNode.new({numerator: newChildren[S.$_get](0), denominator: newChildren[S.$_get](1), barSize: this.barSize});
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    toJson() {
      let t71;
      t71 = super.toJson();
      return (() => {
        t71[S.$addAll]((() => {
          let t72 = new (T$.IdentityMapOfString$ObjectN()).new();
          t72[S.$_set]("numerator", this.numerator.toJson());
          t72[S.$_set]("denominator", this.denominator.toJson());
          if (this.barSize != null) t72[S.$_set]("barSize", dart.toString(this.barSize));
          if (dart.test(this.continued)) t72[S.$_set]("continued", this.continued);
          return t72;
        })());
        return t71;
      })();
    }
  };
  (frac$.FracNode.new = function(opts) {
    let numerator = opts && 'numerator' in opts ? opts.numerator : null;
    if (numerator == null) dart.nullFailed(I[91], 30, 19, "numerator");
    let denominator = opts && 'denominator' in opts ? opts.denominator : null;
    if (denominator == null) dart.nullFailed(I[91], 31, 19, "denominator");
    let barSize = opts && 'barSize' in opts ? opts.barSize : null;
    let continued = opts && 'continued' in opts ? opts.continued : false;
    if (continued == null) dart.nullFailed(I[91], 33, 10, "continued");
    this[S.numerator] = numerator;
    this[S.denominator] = denominator;
    this[S.barSize] = barSize;
    this[S.continued] = continued;
    frac$.FracNode.__proto__.new.call(this);
    ;
  }).prototype = frac$.FracNode.prototype;
  dart.addTypeTests(frac$.FracNode);
  dart.addTypeCaches(frac$.FracNode);
  dart.setMethodSignature(frac$.FracNode, () => ({
    __proto__: dart.getMethods(frac$.FracNode.__proto__),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(frac$.FracNode, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(frac$.FracNode, () => ({
    __proto__: dart.getGetters(frac$.FracNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(frac$.FracNode, I[92]);
  dart.setFieldSignature(frac$.FracNode, () => ({
    __proto__: dart.getFields(frac$.FracNode.__proto__),
    numerator: dart.finalFieldType(syntax_tree.EquationRowNode),
    denominator: dart.finalFieldType(syntax_tree.EquationRowNode),
    barSize: dart.finalFieldType(dart.nullable(size$.Measurement)),
    continued: dart.finalFieldType(core.bool)
  }));
  frac$._FracPos = class _FracPos extends core.Object {
    toString() {
      return this[S._name$14];
    }
  };
  (frac$._FracPos.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[91], 96, 6, "index");
    if (_name == null) dart.nullFailed(I[91], 96, 6, "_name");
    this.index = index;
    this[S._name$14] = _name;
    ;
  }).prototype = frac$._FracPos.prototype;
  dart.addTypeTests(frac$._FracPos);
  dart.addTypeCaches(frac$._FracPos);
  dart.setLibraryUri(frac$._FracPos, I[92]);
  dart.setFieldSignature(frac$._FracPos, () => ({
    __proto__: dart.getFields(frac$._FracPos.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$14]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(frac$._FracPos, ['toString']);
  frac$._FracPos.numer = C[1770] || CT.C1770;
  frac$._FracPos.denom = C[1771] || CT.C1771;
  frac$._FracPos.values = C[1772] || CT.C1772;
  frac$.FracLayoutDelegate = class FracLayoutDelegate extends custom_layout.IntrinsicLayoutDelegate$(frac$._FracPos) {
    get barSize() {
      return this[S.barSize$1];
    }
    set barSize(value) {
      super.barSize = value;
    }
    get options() {
      return this[S.options$3];
    }
    set options(value) {
      super.options = value;
    }
    get theta() {
      return this[S.theta];
    }
    set theta(value) {
      this[S.theta] = value;
    }
    get height() {
      return this[S.height$1];
    }
    set height(value) {
      this[S.height$1] = value;
    }
    get a() {
      return this[S.a];
    }
    set a(value) {
      this[S.a] = value;
    }
    get width() {
      return this[S.width$3];
    }
    set width(value) {
      this[S.width$3] = value;
    }
    get barLength() {
      return this[S.barLength];
    }
    set barLength(value) {
      this[S.barLength] = value;
    }
    computeDistanceToActualBaseline(baseline, childrenTable) {
      if (baseline == null) dart.nullFailed(I[91], 118, 18, "baseline");
      T$.MapOf_FracPos$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[91], 119, 30, "childrenTable");
      return this.height;
    }
    performHorizontalIntrinsicLayout(opts) {
      let childrenWidths = opts && 'childrenWidths' in opts ? opts.childrenWidths : null;
      T$.MapOf_FracPos$double().as(childrenWidths);
      if (childrenWidths == null) dart.nullFailed(I[91], 125, 36, "childrenWidths");
      let isComputingIntrinsics = opts && 'isComputingIntrinsics' in opts ? opts.isComputingIntrinsics : false;
      if (isComputingIntrinsics == null) dart.nullFailed(I[91], 126, 10, "isComputingIntrinsics");
      let numerSize = dart.nullCheck(childrenWidths[S.$_get](frac$._FracPos.numer));
      let denomSize = dart.nullCheck(childrenWidths[S.$_get](frac$._FracPos.denom));
      let barLength = math.max(core.double, numerSize, denomSize);
      let nullDelimiterWidth = size$['MeasurementExtOnNum|get#cssEm'](0.12).toLpUnder(this.options);
      let width = barLength + 2 * dart.notNull(nullDelimiterWidth);
      if (!dart.test(isComputingIntrinsics)) {
        this.barLength = barLength;
        this.width = width;
      }
      return new (T$.AxisConfigurationOf_FracPos()).new({size: width, offsetTable: new (T$.LinkedMapOf_FracPos$double()).from([frac$._FracPos.numer, 0.5 * (width - numerSize), frac$._FracPos.denom, 0.5 * (width - denomSize)])});
    }
    performVerticalIntrinsicLayout(opts) {
      let t72, t72$;
      let childrenHeights = opts && 'childrenHeights' in opts ? opts.childrenHeights : null;
      T$.MapOf_FracPos$double().as(childrenHeights);
      if (childrenHeights == null) dart.nullFailed(I[91], 150, 36, "childrenHeights");
      let childrenBaselines = opts && 'childrenBaselines' in opts ? opts.childrenBaselines : null;
      T$.MapOf_FracPos$double().as(childrenBaselines);
      if (childrenBaselines == null) dart.nullFailed(I[91], 151, 36, "childrenBaselines");
      let isComputingIntrinsics = opts && 'isComputingIntrinsics' in opts ? opts.isComputingIntrinsics : false;
      if (isComputingIntrinsics == null) dart.nullFailed(I[91], 152, 10, "isComputingIntrinsics");
      let numerSize = dart.nullCheck(childrenHeights[S.$_get](frac$._FracPos.numer));
      let denomSize = dart.nullCheck(childrenHeights[S.$_get](frac$._FracPos.denom));
      let numerHeight = dart.nullCheck(childrenBaselines[S.$_get](frac$._FracPos.numer));
      let denomHeight = dart.nullCheck(childrenBaselines[S.$_get](frac$._FracPos.denom));
      let metrics = this.options.fontMetrics;
      let xi8 = size$['MeasurementExtOnNum|get#cssEm'](metrics.defaultRuleThickness).toLpUnder(this.options);
      let theta = (t72$ = (t72 = this.barSize, t72 == null ? null : t72.toLpUnder(this.options)), t72$ == null ? xi8 : t72$);
      let u = size$['MeasurementExtOnNum|get#cssEm'](dart.test(style$0['MathStyleExt|>'](this.options.style, style$0.MathStyle.text)) ? metrics.num1 : theta !== 0 ? metrics.num2 : metrics.num3).toLpUnder(this.options);
      let v = size$['MeasurementExtOnNum|get#cssEm'](dart.test(style$0['MathStyleExt|>'](this.options.style, style$0.MathStyle.text)) ? metrics.denom1 : metrics.denom2).toLpUnder(this.options);
      let a = size$['MeasurementExtOnNum|get#cssEm'](metrics.axisHeight).toLpUnder(this.options);
      let hx = numerHeight;
      let dx = numerSize - numerHeight;
      let hz = denomHeight;
      let dz = denomSize - denomHeight;
      if (theta === 0) {
        let phi = dart.test(style$0['MathStyleExt|>'](this.options.style, style$0.MathStyle.text)) ? 7 * dart.notNull(xi8) : 3 * dart.notNull(xi8);
        let psi = dart.notNull(u) - dx - (hz - dart.notNull(v));
        if (psi < phi) {
          u = dart.notNull(u) + 0.5 * (phi - psi);
          v = dart.notNull(v) + 0.5 * (phi - psi);
        }
      } else {
        let phi = dart.test(style$0['MathStyleExt|>'](this.options.style, style$0.MathStyle.text)) ? 3 * dart.notNull(theta) : theta;
        if (dart.notNull(u) - dx - dart.notNull(a) - 0.5 * dart.notNull(theta) < dart.notNull(phi)) {
          u = dart.notNull(phi) + dx + dart.notNull(a) + 0.5 * dart.notNull(theta);
        }
        if (dart.notNull(a) - 0.5 * dart.notNull(theta) - hz + dart.notNull(v) < dart.notNull(phi)) {
          v = dart.notNull(phi) + hz - dart.notNull(a) + 0.5 * dart.notNull(theta);
        }
      }
      let height = hx + dart.notNull(u);
      let depth = dz + dart.notNull(v);
      if (!dart.test(isComputingIntrinsics)) {
        this.height = height;
        this.theta = theta;
        this.a = a;
      }
      return new (T$.AxisConfigurationOf_FracPos()).new({size: height + depth, offsetTable: new (T$.LinkedMapOf_FracPos$double()).from([frac$._FracPos.numer, height - dart.notNull(u) - hx, frac$._FracPos.denom, height + dart.notNull(v) - hz])});
    }
    additionalPaint(context, offset) {
      let t72;
      if (context == null) dart.nullFailed(I[91], 211, 40, "context");
      if (offset == null) dart.nullFailed(I[91], 211, 56, "offset");
      if (this.theta !== 0) {
        let paint = (t72 = ui.Paint.new(), (() => {
          t72.color = this.options.color;
          t72.strokeWidth = this.theta;
          return t72;
        })());
        context.canvas.drawLine(new ui.Offset.new(0.5 * (dart.notNull(this.width) - dart.notNull(this.barLength)), dart.notNull(this.height) - dart.notNull(this.a))['+'](offset), new ui.Offset.new(0.5 * (dart.notNull(this.width) + dart.notNull(this.barLength)), dart.notNull(this.height) - dart.notNull(this.a))['+'](offset), paint);
      }
    }
  };
  (frac$.FracLayoutDelegate.new = function(opts) {
    let barSize = opts && 'barSize' in opts ? opts.barSize : null;
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[91], 107, 19, "options");
    this[S.theta] = 0.0;
    this[S.height$1] = 0.0;
    this[S.a] = 0.0;
    this[S.width$3] = 0.0;
    this[S.barLength] = 0.0;
    this[S.barSize$1] = barSize;
    this[S.options$3] = options;
    frac$.FracLayoutDelegate.__proto__.new.call(this);
    ;
  }).prototype = frac$.FracLayoutDelegate.prototype;
  dart.addTypeTests(frac$.FracLayoutDelegate);
  dart.addTypeCaches(frac$.FracLayoutDelegate);
  dart.setMethodSignature(frac$.FracLayoutDelegate, () => ({
    __proto__: dart.getMethods(frac$.FracLayoutDelegate.__proto__),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline, dart.nullable(core.Object)]),
    performHorizontalIntrinsicLayout: dart.fnType(custom_layout.AxisConfiguration$(frac$._FracPos), [], {childrenWidths: dart.nullable(core.Object), isComputingIntrinsics: core.bool}, {}),
    performVerticalIntrinsicLayout: dart.fnType(custom_layout.AxisConfiguration$(frac$._FracPos), [], {childrenBaselines: dart.nullable(core.Object), childrenHeights: dart.nullable(core.Object), isComputingIntrinsics: core.bool}, {})
  }));
  dart.setLibraryUri(frac$.FracLayoutDelegate, I[92]);
  dart.setFieldSignature(frac$.FracLayoutDelegate, () => ({
    __proto__: dart.getFields(frac$.FracLayoutDelegate.__proto__),
    barSize: dart.finalFieldType(dart.nullable(size$.Measurement)),
    options: dart.finalFieldType(options$.MathOptions),
    theta: dart.fieldType(core.double),
    height: dart.fieldType(core.double),
    a: dart.fieldType(core.double),
    width: dart.fieldType(core.double),
    barLength: dart.fieldType(core.double)
  }));
  const _is_CustomLayoutParentData_default = Symbol('_is_CustomLayoutParentData_default');
  custom_layout.CustomLayoutParentData$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    class CustomLayoutParentData extends box.ContainerBoxParentData$(box.RenderBox) {
      get id() {
        return this[S.id];
      }
      set id(value) {
        this[S.id] = TN().as(value);
      }
      toString() {
        return dart.str(super.toString()) + "; id=" + dart.str(this.id);
      }
    }
    (CustomLayoutParentData.new = function() {
      this[S.id] = null;
      CustomLayoutParentData.__proto__.new.call(this);
      ;
    }).prototype = CustomLayoutParentData.prototype;
    dart.addTypeTests(CustomLayoutParentData);
    CustomLayoutParentData.prototype[_is_CustomLayoutParentData_default] = true;
    dart.addTypeCaches(CustomLayoutParentData);
    dart.setLibraryUri(CustomLayoutParentData, I[61]);
    dart.setFieldSignature(CustomLayoutParentData, () => ({
      __proto__: dart.getFields(CustomLayoutParentData.__proto__),
      id: dart.fieldType(dart.nullable(T))
    }));
    dart.defineExtensionMethods(CustomLayoutParentData, ['toString']);
    return CustomLayoutParentData;
  });
  custom_layout.CustomLayoutParentData = custom_layout.CustomLayoutParentData$();
  dart.addTypeTests(custom_layout.CustomLayoutParentData, _is_CustomLayoutParentData_default);
  const _is_CustomLayoutId_default = Symbol('_is_CustomLayoutId_default');
  custom_layout.CustomLayoutId$ = dart.generic(T => {
    var ValueKeyOfT = () => (ValueKeyOfT = dart.constFn(key.ValueKey$(T)))();
    var DiagnosticsPropertyOfT = () => (DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var CustomLayoutOfT = () => (CustomLayoutOfT = dart.constFn(custom_layout.CustomLayout$(T)))();
    class CustomLayoutId extends framework.ParentDataWidget$(custom_layout.CustomLayoutParentData$(T)) {
      get id() {
        return this[S.id$1];
      }
      set id(value) {
        super.id = value;
      }
      applyParentData(renderObject) {
        if (renderObject == null) dart.nullFailed(I[60], 53, 37, "renderObject");
        if (!custom_layout.CustomLayoutParentData.is(renderObject.parentData)) dart.assertFailed(null, I[60], 54, 12, "renderObject.parentData is CustomLayoutParentData");
        let parentData = custom_layout.CustomLayoutParentData.as(renderObject.parentData);
        if (!dart.equals(parentData.id, this.id)) {
          parentData.id = this.id;
          let targetParent = renderObject.parent;
          if (object.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
        }
      }
      debugFillProperties(properties) {
        if (properties == null) dart.nullFailed(I[60], 64, 56, "properties");
        super.debugFillProperties(properties);
        properties.add(new (DiagnosticsPropertyOfT()).new("id", this.id));
      }
      get debugTypicalAncestorWidgetClass() {
        return get_type_of.getTypeOf(CustomLayoutOfT());
      }
    }
    (CustomLayoutId.new = function(opts) {
      let t72;
      let key = opts && 'key' in opts ? opts.key : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[60], 46, 21, "child");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[S.id$1] = id;
      if (!(id != null)) dart.assertFailed(null, I[60], 47, 17, "id != null");
      CustomLayoutId.__proto__.new.call(this, {key: (t72 = key, t72 == null ? new (ValueKeyOfT()).new(id) : t72), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = CustomLayoutId.prototype;
    dart.addTypeTests(CustomLayoutId);
    CustomLayoutId.prototype[_is_CustomLayoutId_default] = true;
    dart.addTypeCaches(CustomLayoutId);
    dart.setMethodSignature(CustomLayoutId, () => ({
      __proto__: dart.getMethods(CustomLayoutId.__proto__),
      applyParentData: dart.fnType(dart.void, [object.RenderObject])
    }));
    dart.setGetterSignature(CustomLayoutId, () => ({
      __proto__: dart.getGetters(CustomLayoutId.__proto__),
      debugTypicalAncestorWidgetClass: core.Type
    }));
    dart.setLibraryUri(CustomLayoutId, I[61]);
    dart.setFieldSignature(CustomLayoutId, () => ({
      __proto__: dart.getFields(CustomLayoutId.__proto__),
      id: dart.finalFieldType(T)
    }));
    return CustomLayoutId;
  });
  custom_layout.CustomLayoutId = custom_layout.CustomLayoutId$();
  dart.addTypeTests(custom_layout.CustomLayoutId, _is_CustomLayoutId_default);
  const _is_CustomLayout_default = Symbol('_is_CustomLayout_default');
  custom_layout.CustomLayout$ = dart.generic(T => {
    var RenderCustomLayoutOfT = () => (RenderCustomLayoutOfT = dart.constFn(custom_layout.RenderCustomLayout$(T)))();
    class CustomLayout extends framework.MultiChildRenderObjectWidget {
      get delegate() {
        return this[S.delegate$1];
      }
      set delegate(value) {
        super.delegate = value;
      }
      createRenderObject(context) {
        if (context == null) dart.nullFailed(I[60], 87, 57, "context");
        return new (RenderCustomLayoutOfT()).new({delegate: this.delegate});
      }
      updateRenderObject(context, renderObject) {
        if (context == null) dart.nullFailed(I[60], 92, 20, "context");
        custom_layout.RenderCustomLayout.as(renderObject);
        if (renderObject == null) dart.nullFailed(I[60], 92, 48, "renderObject");
        renderObject.delegate = this.delegate;
      }
    }
    (CustomLayout.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      if (delegate == null) dart.nullFailed(I[60], 79, 19, "delegate");
      let children = opts && 'children' in opts ? opts.children : null;
      if (children == null) dart.nullFailed(I[60], 80, 27, "children");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[S.delegate$1] = delegate;
      CustomLayout.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = CustomLayout.prototype;
    dart.addTypeTests(CustomLayout);
    CustomLayout.prototype[_is_CustomLayout_default] = true;
    dart.addTypeCaches(CustomLayout);
    dart.setMethodSignature(CustomLayout, () => ({
      __proto__: dart.getMethods(CustomLayout.__proto__),
      createRenderObject: dart.fnType(custom_layout.RenderCustomLayout$(T), [framework.BuildContext])
    }));
    dart.setLibraryUri(CustomLayout, I[61]);
    dart.setFieldSignature(CustomLayout, () => ({
      __proto__: dart.getFields(CustomLayout.__proto__),
      delegate: dart.finalFieldType(custom_layout.CustomLayoutDelegate$(T))
    }));
    return CustomLayout;
  });
  custom_layout.CustomLayout = custom_layout.CustomLayout$();
  dart.addTypeTests(custom_layout.CustomLayout, _is_CustomLayout_default);
  const _is_RenderCustomLayout_default = Symbol('_is_RenderCustomLayout_default');
  custom_layout.RenderCustomLayout$ = dart.generic(T => {
    var CustomLayoutParentDataOfT = () => (CustomLayoutParentDataOfT = dart.constFn(custom_layout.CustomLayoutParentData$(T)))();
    var CustomLayoutDelegateOfT = () => (CustomLayoutDelegateOfT = dart.constFn(custom_layout.CustomLayoutDelegate$(T)))();
    var LinkedMapOfT$RenderBox = () => (LinkedMapOfT$RenderBox = dart.constFn(_js_helper.LinkedMap$(T, box.RenderBox)))();
    const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
    (RenderBox_ContainerRenderObjectMixin$36.new = function() {
      object.ContainerRenderObjectMixin$(box.RenderBox, custom_layout.CustomLayoutParentData)[dart.mixinNew].call(this);
      RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
    }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
    dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(box.RenderBox, custom_layout.CustomLayoutParentData));
    const RenderBox_RenderBoxContainerDefaultsMixin$36 = class RenderBox_RenderBoxContainerDefaultsMixin extends RenderBox_ContainerRenderObjectMixin$36 {};
    (RenderBox_RenderBoxContainerDefaultsMixin$36.new = function() {
      RenderBox_RenderBoxContainerDefaultsMixin$36.__proto__.new.call(this);
    }).prototype = RenderBox_RenderBoxContainerDefaultsMixin$36.prototype;
    dart.applyMixin(RenderBox_RenderBoxContainerDefaultsMixin$36, box.RenderBoxContainerDefaultsMixin$(box.RenderBox, custom_layout.CustomLayoutParentData));
    class RenderCustomLayout extends RenderBox_RenderBoxContainerDefaultsMixin$36 {
      setupParentData(child) {
        box.RenderBox.as(child);
        if (child == null) dart.nullFailed(I[60], 109, 34, "child");
        if (!CustomLayoutParentDataOfT().is(child.parentData)) {
          child.parentData = new (CustomLayoutParentDataOfT()).new();
        }
      }
      get delegate() {
        return this[S._delegate];
      }
      set delegate(newDelegate) {
        CustomLayoutDelegateOfT().as(newDelegate);
        if (newDelegate == null) dart.nullFailed(I[60], 118, 40, "newDelegate");
        if (!dart.equals(this[S._delegate], newDelegate)) {
          this.markNeedsLayout();
        }
        this[S._delegate] = newDelegate;
      }
      get childrenTable() {
        let res = new (LinkedMapOfT$RenderBox()).new();
        let child = this.firstChild;
        while (child != null) {
          let childParentData = CustomLayoutParentDataOfT().as(child.parentData);
          if (!dart.test(dart.fn(() => {
            if (childParentData.id == null) {
              dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Every child of a RenderCustomLayout must have an ID " + "in its parent data."), dart.nullCheck(child).describeForError("The following child has no ID")])));
            }
            if (dart.test(res[S.$containsKey](childParentData.id))) {
              dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Every child of a RenderCustomLayout must have a unique ID."), dart.nullCheck(child).describeForError("The following child has a ID of " + dart.str(childParentData.id)), dart.nullCheck(res[S.$_get](dart.nullCheck(childParentData.id))).describeForError("While the following child has the same ID")])));
            }
            return true;
          }, T$.VoidTobool())())) dart.assertFailed(null, I[60], 130, 14, "() {\r\n        if (childParentData.id == null) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Every child of a RenderCustomLayout must have an ID '\r\n                'in its parent data.'),\r\n            child!.describeForError('The following child has no ID'),\r\n          ]);\r\n        }\r\n        if (res.containsKey(childParentData.id)) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary(\r\n                'Every child of a RenderCustomLayout must have a unique ID.'),\r\n            child!.describeForError(\r\n                'The following child has a ID of ${childParentData.id}'),\r\n            res[childParentData.id!]!\r\n                .describeForError('While the following child has the same ID')\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
          res[S.$_set](dart.nullCheck(childParentData.id), child);
          child = childParentData.nextSibling;
        }
        return res;
      }
      computeMinIntrinsicWidth(height) {
        if (height == null) dart.nullFailed(I[60], 157, 42, "height");
        return this.delegate.getIntrinsicSize({sizingDirection: basic_types.Axis.horizontal, max: false, extent: height, childSize: dart.fn((child, extent) => {
            if (child == null) dart.nullFailed(I[60], 161, 29, "child");
            if (extent == null) dart.nullFailed(I[60], 161, 43, "extent");
            return child.getMinIntrinsicWidth(extent);
          }, T$.RenderBoxAnddoubleTodouble()), childrenTable: this.childrenTable});
      }
      computeMaxIntrinsicWidth(height) {
        if (height == null) dart.nullFailed(I[60], 166, 42, "height");
        return this.delegate.getIntrinsicSize({sizingDirection: basic_types.Axis.horizontal, max: true, extent: height, childSize: dart.fn((child, extent) => {
            if (child == null) dart.nullFailed(I[60], 170, 29, "child");
            if (extent == null) dart.nullFailed(I[60], 170, 43, "extent");
            return child.getMaxIntrinsicWidth(extent);
          }, T$.RenderBoxAnddoubleTodouble()), childrenTable: this.childrenTable});
      }
      computeMinIntrinsicHeight(width) {
        if (width == null) dart.nullFailed(I[60], 175, 43, "width");
        return this.delegate.getIntrinsicSize({sizingDirection: basic_types.Axis.vertical, max: false, extent: width, childSize: dart.fn((child, extent) => {
            if (child == null) dart.nullFailed(I[60], 179, 29, "child");
            if (extent == null) dart.nullFailed(I[60], 179, 43, "extent");
            return child.getMinIntrinsicHeight(extent);
          }, T$.RenderBoxAnddoubleTodouble()), childrenTable: this.childrenTable});
      }
      computeMaxIntrinsicHeight(width) {
        if (width == null) dart.nullFailed(I[60], 184, 43, "width");
        return this.delegate.getIntrinsicSize({sizingDirection: basic_types.Axis.vertical, max: true, extent: width, childSize: dart.fn((child, extent) => {
            if (child == null) dart.nullFailed(I[60], 188, 29, "child");
            if (extent == null) dart.nullFailed(I[60], 188, 43, "extent");
            return child.getMaxIntrinsicHeight(extent);
          }, T$.RenderBoxAnddoubleTodouble()), childrenTable: this.childrenTable});
      }
      computeDistanceToActualBaseline(baseline) {
        if (baseline == null) dart.nullFailed(I[60], 193, 56, "baseline");
        return this.delegate.computeDistanceToActualBaseline(baseline, this.childrenTable);
      }
      performLayout() {
        let size = this.delegate.performLayout(this.constraints, this.childrenTable);
        this.size = this.constraints.constrain(size);
      }
      paint(context, offset) {
        if (context == null) dart.nullFailed(I[60], 203, 30, "context");
        if (offset == null) dart.nullFailed(I[60], 203, 46, "offset");
        this.defaultPaint(context, offset);
        this.delegate.additionalPaint(context, offset);
      }
      hitTestChildren(result, opts) {
        if (result == null) dart.nullFailed(I[60], 209, 41, "result");
        let position = opts && 'position' in opts ? opts.position : null;
        if (position == null) dart.nullFailed(I[60], 209, 66, "position");
        return this.defaultHitTestChildren(result, {position: position});
      }
    }
    (RenderCustomLayout.new = function(opts) {
      let children = opts && 'children' in opts ? opts.children : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      if (delegate == null) dart.nullFailed(I[60], 103, 38, "delegate");
      this[S._delegate] = delegate;
      RenderCustomLayout.__proto__.new.call(this);
      this.addAll(children);
    }).prototype = RenderCustomLayout.prototype;
    dart.addTypeTests(RenderCustomLayout);
    RenderCustomLayout.prototype[_is_RenderCustomLayout_default] = true;
    dart.addTypeCaches(RenderCustomLayout);
    dart.setGetterSignature(RenderCustomLayout, () => ({
      __proto__: dart.getGetters(RenderCustomLayout.__proto__),
      delegate: custom_layout.CustomLayoutDelegate$(T),
      childrenTable: core.Map$(T, box.RenderBox)
    }));
    dart.setSetterSignature(RenderCustomLayout, () => ({
      __proto__: dart.getSetters(RenderCustomLayout.__proto__),
      delegate: dart.nullable(core.Object)
    }));
    dart.setLibraryUri(RenderCustomLayout, I[61]);
    dart.setFieldSignature(RenderCustomLayout, () => ({
      __proto__: dart.getFields(RenderCustomLayout.__proto__),
      [S._delegate]: dart.fieldType(custom_layout.CustomLayoutDelegate$(T))
    }));
    return RenderCustomLayout;
  });
  custom_layout.RenderCustomLayout = custom_layout.RenderCustomLayout$();
  dart.addTypeTests(custom_layout.RenderCustomLayout, _is_RenderCustomLayout_default);
  const _is_AxisConfiguration_default = Symbol('_is_AxisConfiguration_default');
  custom_layout.AxisConfiguration$ = dart.generic(T => {
    class AxisConfiguration extends core.Object {
      get size() {
        return this[S.size];
      }
      set size(value) {
        super.size = value;
      }
      get offsetTable() {
        return this[S.offsetTable];
      }
      set offsetTable(value) {
        super.offsetTable = value;
      }
    }
    (AxisConfiguration.new = function(opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      if (size == null) dart.nullFailed(I[60], 217, 19, "size");
      let offsetTable = opts && 'offsetTable' in opts ? opts.offsetTable : null;
      if (offsetTable == null) dart.nullFailed(I[60], 218, 19, "offsetTable");
      this[S.size] = size;
      this[S.offsetTable] = offsetTable;
      ;
    }).prototype = AxisConfiguration.prototype;
    dart.addTypeTests(AxisConfiguration);
    AxisConfiguration.prototype[_is_AxisConfiguration_default] = true;
    dart.addTypeCaches(AxisConfiguration);
    dart.setLibraryUri(AxisConfiguration, I[61]);
    dart.setFieldSignature(AxisConfiguration, () => ({
      __proto__: dart.getFields(AxisConfiguration.__proto__),
      size: dart.finalFieldType(core.double),
      offsetTable: dart.finalFieldType(core.Map$(T, core.double))
    }));
    return AxisConfiguration;
  });
  custom_layout.AxisConfiguration = custom_layout.AxisConfiguration$();
  dart.addTypeTests(custom_layout.AxisConfiguration, _is_AxisConfiguration_default);
  enclosure.EnclosureNode = class EnclosureNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get base() {
      return this[S.base$4];
    }
    set base(value) {
      super.base = value;
    }
    get hasBorder() {
      return this[S.hasBorder];
    }
    set hasBorder(value) {
      super.hasBorder = value;
    }
    get bordercolor() {
      return this[S.bordercolor];
    }
    set bordercolor(value) {
      super.bordercolor = value;
    }
    get backgroundcolor() {
      return this[S.backgroundcolor];
    }
    set backgroundcolor(value) {
      super.backgroundcolor = value;
    }
    get notation() {
      return this[S.notation];
    }
    set notation(value) {
      super.notation = value;
    }
    get horizontalPadding() {
      return this[S.horizontalPadding];
    }
    set horizontalPadding(value) {
      super.horizontalPadding = value;
    }
    get verticalPadding() {
      return this[S.verticalPadding];
    }
    set verticalPadding(value) {
      super.verticalPadding = value;
    }
    buildWidget(options, childBuildResults) {
      let t73, t73$;
      if (options == null) dart.nullFailed(I[93], 53, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[93], 53, 47, "childBuildResults");
      let horizontalPadding = this.horizontalPadding.toLpUnder(options);
      let verticalPadding = this.verticalPadding.toLpUnder(options);
      let widget = new basic.Stack.new({children: (() => {
          let t72 = T$.JSArrayOfWidget().of([new container.Container.new({decoration: dart.test(this.hasBorder) ? new box_decoration.BoxDecoration.new({color: this.backgroundcolor, border: box_border.Border.all({width: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.fboxrule).toLpUnder(options), color: (t73 = this.bordercolor, t73 == null ? options.color : t73)})}) : null, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: verticalPadding, horizontal: horizontalPadding}), child: dart.nullCheck(childBuildResults[S.$_get](0)).widget, $creationLocationd_0dea112b090073317d4: C[1774] || CT.C1774}), $creationLocationd_0dea112b090073317d4: C[1778] || CT.C1778})]);
          if (dart.test(this.notation[S.$contains]("updiagonalstrike"))) t72[S.$add](new basic.Positioned.new({left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
                let t73;
                if (context == null) dart.nullFailed(I[93], 87, 25, "context");
                if (constraints == null) dart.nullFailed(I[93], 87, 34, "constraints");
                return new basic.CustomPaint.new({size: constraints.biggest, painter: new enclosure.LinePainter.new({startRelativeX: 0.0, startRelativeY: 1.0, endRelativeX: 1.0, endRelativeY: 0.0, lineWidth: size$['MeasurementExtOnNum|get#cssEm'](0.046).toLpUnder(options), color: (t73 = this.bordercolor, t73 == null ? options.color : t73)}), $creationLocationd_0dea112b090073317d4: C[1782] || CT.C1782});
              }, T$.BuildContextAndBoxConstraintsToCustomPaint()), $creationLocationd_0dea112b090073317d4: C[1786] || CT.C1786}), $creationLocationd_0dea112b090073317d4: C[1789] || CT.C1789}));
          if (dart.test(this.notation[S.$contains]("downdiagnoalstrike"))) t72[S.$add](new basic.Positioned.new({left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
                let t73;
                if (context == null) dart.nullFailed(I[93], 107, 25, "context");
                if (constraints == null) dart.nullFailed(I[93], 107, 34, "constraints");
                return new basic.CustomPaint.new({size: constraints.biggest, painter: new enclosure.LinePainter.new({startRelativeX: 0.0, startRelativeY: 0.0, endRelativeX: 1.0, endRelativeY: 1.0, lineWidth: size$['MeasurementExtOnNum|get#cssEm'](0.046).toLpUnder(options), color: (t73 = this.bordercolor, t73 == null ? options.color : t73)}), $creationLocationd_0dea112b090073317d4: C[1796] || CT.C1796});
              }, T$.BuildContextAndBoxConstraintsToCustomPaint()), $creationLocationd_0dea112b090073317d4: C[1800] || CT.C1800}), $creationLocationd_0dea112b090073317d4: C[1803] || CT.C1803}));
          return t72;
        })(), $creationLocationd_0dea112b090073317d4: C[1810] || CT.C1810});
      if (dart.test(this.notation[S.$contains]("horizontalstrike"))) {
        widget = new (T$.CustomLayoutOfint()).new({delegate: new enclosure.HorizontalStrikeDelegate.new({vShift: dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.xHeight).toLpUnder(options)) / 2, ruleThickness: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.defaultRuleThickness).toLpUnder(options), color: (t73$ = this.bordercolor, t73$ == null ? options.color : t73$)}), children: T$.JSArrayOfWidget().of([new (T$.CustomLayoutIdOfint()).new({id: 0, child: widget, $creationLocationd_0dea112b090073317d4: C[1813] || CT.C1813})]), $creationLocationd_0dea112b090073317d4: C[1817] || CT.C1817});
      }
      return new syntax_tree.BuildResult.new({options: options, widget: widget});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[93], 145, 53, "options");
      return T$.JSArrayOfMathOptions().of([options]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.base]);
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[93], 157, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[93], 157, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[93], 161, 54, "newChildren");
      return new enclosure.EnclosureNode.new({base: newChildren[S.$_get](0), hasBorder: this.hasBorder, bordercolor: this.bordercolor, backgroundcolor: this.backgroundcolor, notation: this.notation, horizontalPadding: this.horizontalPadding, verticalPadding: this.verticalPadding});
    }
    toJson() {
      let t73;
      t73 = super.toJson();
      return (() => {
        t73[S.$addAll]((() => {
          let t74 = new (T$.IdentityMapOfString$ObjectN()).new();
          t74[S.$_set]("base", this.base.toJson());
          t74[S.$_set]("hasBorder", this.hasBorder);
          if (this.bordercolor != null) t74[S.$_set]("bordercolor", this.bordercolor);
          if (this.backgroundcolor != null) t74[S.$_set]("backgroundcolor", this.backgroundcolor);
          if (dart.test(this.notation[S.$isNotEmpty])) t74[S.$_set]("notation", this.notation);
          if (!dart.equals(this.horizontalPadding, size$.Measurement.zero)) t74[S.$_set]("horizontalPadding", dart.toString(this.horizontalPadding));
          if (!dart.equals(this.verticalPadding, size$.Measurement.zero)) t74[S.$_set]("verticalPadding", dart.toString(this.verticalPadding));
          return t74;
        })());
        return t73;
      })();
    }
  };
  (enclosure.EnclosureNode.new = function(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[93], 42, 19, "base");
    let hasBorder = opts && 'hasBorder' in opts ? opts.hasBorder : null;
    if (hasBorder == null) dart.nullFailed(I[93], 43, 19, "hasBorder");
    let bordercolor = opts && 'bordercolor' in opts ? opts.bordercolor : null;
    let backgroundcolor = opts && 'backgroundcolor' in opts ? opts.backgroundcolor : null;
    let notation = opts && 'notation' in opts ? opts.notation : C[1773] || CT.C1773;
    if (notation == null) dart.nullFailed(I[93], 46, 10, "notation");
    let horizontalPadding = opts && 'horizontalPadding' in opts ? opts.horizontalPadding : C[1524] || CT.C1524;
    if (horizontalPadding == null) dart.nullFailed(I[93], 47, 10, "horizontalPadding");
    let verticalPadding = opts && 'verticalPadding' in opts ? opts.verticalPadding : C[1524] || CT.C1524;
    if (verticalPadding == null) dart.nullFailed(I[93], 48, 10, "verticalPadding");
    this[S.base$4] = base;
    this[S.hasBorder] = hasBorder;
    this[S.bordercolor] = bordercolor;
    this[S.backgroundcolor] = backgroundcolor;
    this[S.notation] = notation;
    this[S.horizontalPadding] = horizontalPadding;
    this[S.verticalPadding] = verticalPadding;
    enclosure.EnclosureNode.__proto__.new.call(this);
    ;
  }).prototype = enclosure.EnclosureNode.prototype;
  dart.addTypeTests(enclosure.EnclosureNode);
  dart.addTypeCaches(enclosure.EnclosureNode);
  dart.setMethodSignature(enclosure.EnclosureNode, () => ({
    __proto__: dart.getMethods(enclosure.EnclosureNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(enclosure.EnclosureNode, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(enclosure.EnclosureNode, () => ({
    __proto__: dart.getGetters(enclosure.EnclosureNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(enclosure.EnclosureNode, I[94]);
  dart.setFieldSignature(enclosure.EnclosureNode, () => ({
    __proto__: dart.getFields(enclosure.EnclosureNode.__proto__),
    base: dart.finalFieldType(syntax_tree.EquationRowNode),
    hasBorder: dart.finalFieldType(core.bool),
    bordercolor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundcolor: dart.finalFieldType(dart.nullable(ui.Color)),
    notation: dart.finalFieldType(core.List$(core.String)),
    horizontalPadding: dart.finalFieldType(size$.Measurement),
    verticalPadding: dart.finalFieldType(size$.Measurement)
  }));
  enclosure.LinePainter = class LinePainter extends custom_paint.CustomPainter {
    get startRelativeX() {
      return this[S.startRelativeX];
    }
    set startRelativeX(value) {
      super.startRelativeX = value;
    }
    get startRelativeY() {
      return this[S.startRelativeY];
    }
    set startRelativeY(value) {
      super.startRelativeY = value;
    }
    get endRelativeX() {
      return this[S.endRelativeX];
    }
    set endRelativeX(value) {
      super.endRelativeX = value;
    }
    get endRelativeY() {
      return this[S.endRelativeY];
    }
    set endRelativeY(value) {
      super.endRelativeY = value;
    }
    get lineWidth() {
      return this[S.lineWidth];
    }
    set lineWidth(value) {
      super.lineWidth = value;
    }
    get color() {
      return this[S.color];
    }
    set color(value) {
      super.color = value;
    }
    paint(canvas, size) {
      let t74;
      if (canvas == null) dart.nullFailed(I[93], 205, 21, "canvas");
      if (size == null) dart.nullFailed(I[93], 205, 34, "size");
      canvas.drawLine(new ui.Offset.new(dart.notNull(this.startRelativeX) * dart.notNull(size.width), dart.notNull(this.startRelativeY) * dart.notNull(size.height)), new ui.Offset.new(dart.notNull(this.endRelativeX) * dart.notNull(size.width), dart.notNull(this.endRelativeY) * dart.notNull(size.height)), (t74 = ui.Paint.new(), (() => {
        t74.strokeWidth = this.lineWidth;
        t74.color = this.color;
        return t74;
      })()));
    }
    shouldRepaint(oldDelegate) {
      custom_paint.CustomPainter.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[93], 216, 36, "oldDelegate");
      return !this[S.$_equals](oldDelegate);
    }
  };
  (enclosure.LinePainter.new = function(opts) {
    let startRelativeX = opts && 'startRelativeX' in opts ? opts.startRelativeX : null;
    if (startRelativeX == null) dart.nullFailed(I[93], 196, 19, "startRelativeX");
    let startRelativeY = opts && 'startRelativeY' in opts ? opts.startRelativeY : null;
    if (startRelativeY == null) dart.nullFailed(I[93], 197, 19, "startRelativeY");
    let endRelativeX = opts && 'endRelativeX' in opts ? opts.endRelativeX : null;
    if (endRelativeX == null) dart.nullFailed(I[93], 198, 19, "endRelativeX");
    let endRelativeY = opts && 'endRelativeY' in opts ? opts.endRelativeY : null;
    if (endRelativeY == null) dart.nullFailed(I[93], 199, 19, "endRelativeY");
    let lineWidth = opts && 'lineWidth' in opts ? opts.lineWidth : null;
    if (lineWidth == null) dart.nullFailed(I[93], 200, 19, "lineWidth");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[93], 201, 19, "color");
    this[S.startRelativeX] = startRelativeX;
    this[S.startRelativeY] = startRelativeY;
    this[S.endRelativeX] = endRelativeX;
    this[S.endRelativeY] = endRelativeY;
    this[S.lineWidth] = lineWidth;
    this[S.color] = color;
    enclosure.LinePainter.__proto__.new.call(this);
    ;
  }).prototype = enclosure.LinePainter.prototype;
  dart.addTypeTests(enclosure.LinePainter);
  dart.addTypeCaches(enclosure.LinePainter);
  dart.setMethodSignature(enclosure.LinePainter, () => ({
    __proto__: dart.getMethods(enclosure.LinePainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(enclosure.LinePainter, I[94]);
  dart.setFieldSignature(enclosure.LinePainter, () => ({
    __proto__: dart.getFields(enclosure.LinePainter.__proto__),
    startRelativeX: dart.finalFieldType(core.double),
    startRelativeY: dart.finalFieldType(core.double),
    endRelativeX: dart.finalFieldType(core.double),
    endRelativeY: dart.finalFieldType(core.double),
    lineWidth: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color)
  }));
  enclosure.HorizontalStrikeDelegate = class HorizontalStrikeDelegate extends custom_layout.CustomLayoutDelegate$(core.int) {
    get ruleThickness() {
      return this[S.ruleThickness$2];
    }
    set ruleThickness(value) {
      super.ruleThickness = value;
    }
    get vShift() {
      return this[S.vShift];
    }
    set vShift(value) {
      super.vShift = value;
    }
    get color() {
      return this[S.color$1];
    }
    set color(value) {
      super.color = value;
    }
    get height() {
      return this[S.height$2];
    }
    set height(value) {
      this[S.height$2] = value;
    }
    get width() {
      return this[S.width$4];
    }
    set width(value) {
      this[S.width$4] = value;
    }
    computeDistanceToActualBaseline(baseline, childrenTable) {
      if (baseline == null) dart.nullFailed(I[93], 235, 24, "baseline");
      T$.MapOfint$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[93], 235, 54, "childrenTable");
      return this.height;
    }
    getIntrinsicSize(opts) {
      let sizingDirection = opts && 'sizingDirection' in opts ? opts.sizingDirection : null;
      if (sizingDirection == null) dart.nullFailed(I[93], 240, 19, "sizingDirection");
      let max = opts && 'max' in opts ? opts.max : null;
      if (max == null) dart.nullFailed(I[93], 241, 19, "max");
      let extent = opts && 'extent' in opts ? opts.extent : null;
      if (extent == null) dart.nullFailed(I[93], 242, 21, "extent");
      let childSize = opts && 'childSize' in opts ? opts.childSize : null;
      if (childSize == null) dart.nullFailed(I[93], 243, 62, "childSize");
      let childrenTable = opts && 'childrenTable' in opts ? opts.childrenTable : null;
      T$.MapOfint$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[93], 244, 34, "childrenTable");
      return childSize(dart.nullCheck(childrenTable[S.$_get](0)), 1 / 0);
    }
    performLayout(constraints, childrenTable) {
      if (constraints == null) dart.nullFailed(I[93], 250, 22, "constraints");
      T$.MapOfint$RenderBox().as(childrenTable);
      if (childrenTable == null) dart.nullFailed(I[93], 250, 55, "childrenTable");
      let base = dart.nullCheck(childrenTable[S.$_get](0));
      base.layout(constraints, {parentUsesSize: true});
      this.height = render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](base);
      this.width = base.size.width;
      return base.size;
    }
    additionalPaint(context, offset) {
      let t74;
      if (context == null) dart.nullFailed(I[93], 259, 40, "context");
      if (offset == null) dart.nullFailed(I[93], 259, 56, "offset");
      context.canvas.drawLine(new ui.Offset.new(offset.dx, dart.notNull(offset.dy) + dart.notNull(this.height) - dart.notNull(this.vShift)), new ui.Offset.new(dart.notNull(offset.dx) + dart.notNull(this.width), dart.notNull(offset.dy) + dart.notNull(this.height) - dart.notNull(this.vShift)), (t74 = ui.Paint.new(), (() => {
        t74.strokeWidth = this.ruleThickness;
        t74.color = this.color;
        return t74;
      })()));
    }
  };
  (enclosure.HorizontalStrikeDelegate.new = function(opts) {
    let ruleThickness = opts && 'ruleThickness' in opts ? opts.ruleThickness : null;
    if (ruleThickness == null) dart.nullFailed(I[93], 225, 19, "ruleThickness");
    let vShift = opts && 'vShift' in opts ? opts.vShift : null;
    if (vShift == null) dart.nullFailed(I[93], 226, 19, "vShift");
    let color = opts && 'color' in opts ? opts.color : null;
    if (color == null) dart.nullFailed(I[93], 227, 19, "color");
    this[S.height$2] = 0.0;
    this[S.width$4] = 0.0;
    this[S.ruleThickness$2] = ruleThickness;
    this[S.vShift] = vShift;
    this[S.color$1] = color;
    enclosure.HorizontalStrikeDelegate.__proto__.new.call(this);
    ;
  }).prototype = enclosure.HorizontalStrikeDelegate.prototype;
  dart.addTypeTests(enclosure.HorizontalStrikeDelegate);
  dart.addTypeCaches(enclosure.HorizontalStrikeDelegate);
  dart.setMethodSignature(enclosure.HorizontalStrikeDelegate, () => ({
    __proto__: dart.getMethods(enclosure.HorizontalStrikeDelegate.__proto__),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline, dart.nullable(core.Object)]),
    getIntrinsicSize: dart.fnType(core.double, [], {childSize: dart.fnType(core.double, [box.RenderBox, core.double]), childrenTable: dart.nullable(core.Object), extent: core.double, max: core.bool, sizingDirection: basic_types.Axis}, {}),
    performLayout: dart.fnType(ui.Size, [box.BoxConstraints, dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(enclosure.HorizontalStrikeDelegate, I[94]);
  dart.setFieldSignature(enclosure.HorizontalStrikeDelegate, () => ({
    __proto__: dart.getFields(enclosure.HorizontalStrikeDelegate.__proto__),
    ruleThickness: dart.finalFieldType(core.double),
    vShift: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    height: dart.fieldType(core.double),
    width: dart.fieldType(core.double)
  }));
  accent_under.AccentUnderNode = class AccentUnderNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get base() {
      return this[S.base$5];
    }
    set base(value) {
      super.base = value;
    }
    get label() {
      return this[S.label];
    }
    set label(value) {
      super.label = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[95], 28, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[95], 28, 47, "childBuildResults");
      let baseResult = dart.nullCheck(childBuildResults[S.$_get](0));
      return new syntax_tree.BuildResult.new({options: options, italic: baseResult.italic, skew: baseResult.skew, widget: new vlist.VList.new({baselineReferenceWidgetIndex: 0, children: T$.JSArrayOfWidget().of([new vlist.VListElement.new({trailingMargin: this.label === "~" ? size$['MeasurementExtOnNum|get#cssEm'](0.12).toLpUnder(options) : 0.0, child: baseResult.widget, $creationLocationd_0dea112b090073317d4: C[1821] || CT.C1821}), new vlist.VListElement.new({customCrossSize: dart.fn(width => {
                if (width == null) dart.nullFailed(I[95], 44, 31, "width");
                return new box.BoxConstraints.new({minWidth: width});
              }, T$.doubleToBoxConstraints()), child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
                  if (context == null) dart.nullFailed(I[95], 46, 25, "context");
                  if (constraints == null) dart.nullFailed(I[95], 46, 34, "constraints");
                  if (this.label === "¯") {
                    let defaultRuleThickness = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.defaultRuleThickness).toLpUnder(options);
                    return new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: 3 * dart.notNull(defaultRuleThickness)}), child: new container.Container.new({width: constraints.minWidth, height: defaultRuleThickness, color: options.color, $creationLocationd_0dea112b090073317d4: C[1825] || CT.C1825}), $creationLocationd_0dea112b090073317d4: C[1830] || CT.C1830});
                  } else {
                    let accentRenderConfig = accents.accentRenderConfigs[S.$_get](this.label);
                    if (accentRenderConfig == null || accentRenderConfig.underImageName == null) {
                      return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[1834] || CT.C1834});
                    }
                    return stretchy.strechySvgSpan(dart.nullCheck(accentRenderConfig.underImageName), constraints.minWidth, options);
                  }
                }, T$.BuildContextAndBoxConstraintsToWidget()), $creationLocationd_0dea112b090073317d4: C[1835] || CT.C1835}), $creationLocationd_0dea112b090073317d4: C[1838] || CT.C1838})]), $creationLocationd_0dea112b090073317d4: C[1842] || CT.C1842})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[95], 80, 53, "options");
      return T$.JSArrayOfMathOptions().of([options.havingCrampedStyle()]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.base]);
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[95], 93, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[95], 93, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[95], 97, 56, "newChildren");
      return this.copyWith({base: newChildren[S.$_get](0)});
    }
    toJson() {
      let t74;
      t74 = super.toJson();
      return (() => {
        t74[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["base", this.base.toJson(), "label", unicode_literal.unicodeLiteral(this.label)]));
        return t74;
      })();
    }
    copyWith(opts) {
      let t74, t74$;
      let base = opts && 'base' in opts ? opts.base : null;
      let label = opts && 'label' in opts ? opts.label : null;
      return new accent_under.AccentUnderNode.new({base: (t74 = base, t74 == null ? this.base : t74), label: (t74$ = label, t74$ == null ? this.label : t74$)});
    }
  };
  (accent_under.AccentUnderNode.new = function(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[95], 22, 19, "base");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[95], 23, 19, "label");
    this[S.base$5] = base;
    this[S.label] = label;
    accent_under.AccentUnderNode.__proto__.new.call(this);
    ;
  }).prototype = accent_under.AccentUnderNode.prototype;
  dart.addTypeTests(accent_under.AccentUnderNode);
  dart.addTypeCaches(accent_under.AccentUnderNode);
  dart.setMethodSignature(accent_under.AccentUnderNode, () => ({
    __proto__: dart.getMethods(accent_under.AccentUnderNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(accent_under.AccentUnderNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(accent_under.AccentUnderNode, [], {base: dart.nullable(syntax_tree.EquationRowNode), label: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(accent_under.AccentUnderNode, () => ({
    __proto__: dart.getGetters(accent_under.AccentUnderNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(accent_under.AccentUnderNode, I[96]);
  dart.setFieldSignature(accent_under.AccentUnderNode, () => ({
    __proto__: dart.getFields(accent_under.AccentUnderNode.__proto__),
    base: dart.finalFieldType(syntax_tree.EquationRowNode),
    label: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(font, {
    /*font.texMathFontOptions*/get texMathFontOptions() {
      return C[1846] || CT.C1846;
    },
    /*font.texTextFontOptions*/get texTextFontOptions() {
      return C[1856] || CT.C1856;
    }
  }, false);
  symbol$.SymbolNode = class SymbolNode extends syntax_tree.LeafNode {
    get symbol() {
      return this[S.symbol$2];
    }
    set symbol(value) {
      super.symbol = value;
    }
    get variantForm() {
      return this[S.variantForm$1];
    }
    set variantForm(value) {
      super.variantForm = value;
    }
    get overrideAtomType() {
      return this[S.overrideAtomType];
    }
    set overrideAtomType(value) {
      super.overrideAtomType = value;
    }
    get overrideFont() {
      return this[S$.overrideFont];
    }
    set overrideFont(value) {
      super.overrideFont = value;
    }
    get mode() {
      return this[S$.mode$5];
    }
    set mode(value) {
      super.mode = value;
    }
    get atomType() {
      let t75, t75$;
      if (!dart.test(this[S$.__SymbolNode_atomType_isSet])) {
        let t74 = (t75 = this.overrideAtomType, t75 == null ? symbol$.getDefaultAtomTypeForSymbol(this.symbol, {variantForm: this.variantForm, mode: this.mode}) : t75);
        if (dart.test(this[S$.__SymbolNode_atomType_isSet])) dart.throw(new _internal.LateError.fieldADI("atomType"));
        this[S$.__SymbolNode_atomType] = t74;
        this[S$.__SymbolNode_atomType_isSet] = true;
      }
      t75$ = this[S$.__SymbolNode_atomType];
      return t75$;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[97], 49, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[97], 49, 47, "childBuildResults");
      let expanded = this.symbol[S.$runes][S.$expand](core.String, dart.fn(code => {
        let t75, t75$;
        if (code == null) dart.nullFailed(I[97], 50, 43, "code");
        let ch = core.String.fromCharCode(code);
        t75$ = (t75 = symbols_unicode.unicodeSymbols[S.$_get](ch), t75 == null ? null : t75[S.$split](""));
        return t75$ == null ? T$.JSArrayOfString().of([ch]) : t75$;
      }, T$.intToListOfString()))[S.$toList]({growable: false});
      if (expanded[S.$length] === 1) {
        return make_symbol.makeBaseSymbol({symbol: expanded[S.$_get](0), variantForm: this.variantForm, atomType: this.atomType, overrideFont: this.overrideFont, mode: this.mode, options: options});
      } else if (dart.notNull(expanded[S.$length]) > 1) {
        if (dart.test(symbol$.isCombiningMark(expanded[S.$_get](1)))) {
          if (expanded[S.$_get](0) === "i") {
            expanded[S.$_set](0, "ı");
          } else if (expanded[S.$_get](0) === "j") {
            expanded[S.$_set](0, "ȷ");
          }
        }
        let res = this.withSymbol(expanded[S.$_get](0));
        for (let ch of expanded[S$.$skip](1)) {
          let accent = unicode_accents$.unicodeAccents[S.$_get](ch);
          if (accent == null) {
            break;
          } else {
            res = new accent$.AccentNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), label: accent, isStretchy: false, isShifty: true});
          }
        }
        return new syntax_tree.SyntaxNode.new({parent: null, value: res, pos: 0}).buildWidget(options);
      } else {
        return new syntax_tree.BuildResult.new({widget: new container.Container.new({height: 0.0, width: 0.0, $creationLocationd_0dea112b090073317d4: C[1864] || CT.C1864}), options: options, italic: 0.0});
      }
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[97], 102, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[97], 102, 64, "newOptions");
      return !dart.equals(oldOptions.mathFontOptions, newOptions.mathFontOptions) || !dart.equals(oldOptions.textFontOptions, newOptions.textFontOptions) || oldOptions.sizeMultiplier != newOptions.sizeMultiplier;
    }
    get leftType() {
      return this.atomType;
    }
    get rightType() {
      return this.atomType;
    }
    toJson() {
      let t75;
      t75 = super.toJson();
      return (() => {
        t75[S.$addAll]((() => {
          let t76 = new (T$.IdentityMapOfString$ObjectN()).new();
          t76[S.$_set]("mode", dart.toString(this.mode));
          t76[S.$_set]("symbol", unicode_literal.unicodeLiteral(this.symbol));
          if (dart.test(this.variantForm)) t76[S.$_set]("variantForm", this.variantForm);
          if (this.overrideAtomType != null) t76[S.$_set]("atomType", dart.toString(this.overrideAtomType));
          return t76;
        })());
        return t75;
      })();
    }
    withSymbol(symbol) {
      if (symbol == null) dart.nullFailed(I[97], 122, 32, "symbol");
      if (symbol == this.symbol) return this;
      return new symbol$.SymbolNode.new({symbol: symbol, variantForm: this.variantForm, overrideAtomType: this.overrideAtomType, overrideFont: this.overrideFont, mode: this.mode});
    }
  };
  (symbol$.SymbolNode.new = function(opts) {
    let symbol = opts && 'symbol' in opts ? opts.symbol : null;
    if (symbol == null) dart.nullFailed(I[97], 40, 19, "symbol");
    let variantForm = opts && 'variantForm' in opts ? opts.variantForm : false;
    if (variantForm == null) dart.nullFailed(I[97], 41, 10, "variantForm");
    let overrideAtomType = opts && 'overrideAtomType' in opts ? opts.overrideAtomType : null;
    let overrideFont = opts && 'overrideFont' in opts ? opts.overrideFont : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[124] || CT.C124;
    if (mode == null) dart.nullFailed(I[97], 44, 10, "mode");
    this[S$.__SymbolNode_atomType] = null;
    this[S$.__SymbolNode_atomType_isSet] = false;
    this[S.symbol$2] = symbol;
    this[S.variantForm$1] = variantForm;
    this[S.overrideAtomType] = overrideAtomType;
    this[S$.overrideFont] = overrideFont;
    this[S$.mode$5] = mode;
    if (!symbol[S.$isNotEmpty]) dart.assertFailed(null, I[97], 45, 15, "symbol.isNotEmpty");
    symbol$.SymbolNode.__proto__.new.call(this);
    ;
  }).prototype = symbol$.SymbolNode.prototype;
  dart.addTypeTests(symbol$.SymbolNode);
  dart.addTypeCaches(symbol$.SymbolNode);
  dart.setMethodSignature(symbol$.SymbolNode, () => ({
    __proto__: dart.getMethods(symbol$.SymbolNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    withSymbol: dart.fnType(symbol$.SymbolNode, [core.String])
  }));
  dart.setGetterSignature(symbol$.SymbolNode, () => ({
    __proto__: dart.getGetters(symbol$.SymbolNode.__proto__),
    atomType: syntax_tree.AtomType,
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(symbol$.SymbolNode, I[98]);
  dart.setFieldSignature(symbol$.SymbolNode, () => ({
    __proto__: dart.getFields(symbol$.SymbolNode.__proto__),
    symbol: dart.finalFieldType(core.String),
    variantForm: dart.finalFieldType(core.bool),
    [S$.__SymbolNode_atomType]: dart.fieldType(dart.nullable(syntax_tree.AtomType)),
    [S$.__SymbolNode_atomType_isSet]: dart.fieldType(core.bool),
    overrideAtomType: dart.finalFieldType(dart.nullable(syntax_tree.AtomType)),
    overrideFont: dart.finalFieldType(dart.nullable(options$.FontOptions)),
    mode: dart.finalFieldType(types.Mode)
  }));
  symbol$.stringToNode = function stringToNode(string, mode = C[128] || CT.C128) {
    if (string == null) dart.nullFailed(I[97], 134, 37, "string");
    if (mode == null) dart.nullFailed(I[97], 134, 51, "mode");
    return new syntax_tree.EquationRowNode.new({children: string[S.$split]("")[S.$map](symbol$.SymbolNode, dart.fn(ch => {
        if (ch == null) dart.nullFailed(I[97], 138, 17, "ch");
        return new symbol$.SymbolNode.new({symbol: ch, mode: mode});
      }, T$.StringToSymbolNode()))[S.$toList]({growable: false})});
  };
  symbol$.getDefaultAtomTypeForSymbol = function getDefaultAtomTypeForSymbol(symbol, opts) {
    let t76, t76$, t76$0, t76$1;
    if (symbol == null) dart.nullFailed(I[97], 143, 10, "symbol");
    let variantForm = opts && 'variantForm' in opts ? opts.variantForm : false;
    if (variantForm == null) dart.nullFailed(I[97], 144, 8, "variantForm");
    let mode = opts && 'mode' in opts ? opts.mode : null;
    if (mode == null) dart.nullFailed(I[97], 145, 17, "mode");
    let symbolRenderConfig = symbols$.symbolRenderConfigs[S.$_get](symbol);
    if (dart.test(variantForm)) {
      symbolRenderConfig = (t76 = symbolRenderConfig, t76 == null ? null : t76.variantForm);
    }
    let renderConfig = mode == types.Mode.math ? (t76$ = symbolRenderConfig, t76$ == null ? null : t76$.math) : (t76$0 = symbolRenderConfig, t76$0 == null ? null : t76$0.text);
    if (renderConfig != null) {
      t76$1 = renderConfig.defaultType;
      return t76$1 == null ? syntax_tree.AtomType.ord : t76$1;
    }
    if (variantForm === false && mode == types.Mode.math) {
      if (dart.test(symbols_composite.negatedOperatorSymbols[S.$containsKey](symbol))) {
        return syntax_tree.AtomType.rel;
      }
      if (dart.test(symbols_composite.compactedCompositeSymbols[S.$containsKey](symbol))) {
        return dart.nullCheck(symbols_composite.compactedCompositeSymbolTypes[S.$_get](symbol));
      }
      if (dart.test(symbols_extra.decoratedEqualSymbols.contains(symbol))) {
        return syntax_tree.AtomType.rel;
      }
    }
    return syntax_tree.AtomType.ord;
  };
  symbol$.isCombiningMark = function isCombiningMark(ch) {
    if (ch == null) dart.nullFailed(I[97], 170, 29, "ch");
    let code = ch[S.$codeUnitAt](0);
    return code >= 768 && code <= 879;
  };
  const ParentableNode__ClipChildrenMixin$36$ = class ParentableNode__ClipChildrenMixin extends syntax_tree.ParentableNode$(syntax_tree.GreenNode) {};
  (ParentableNode__ClipChildrenMixin$36$.new = function() {
    ParentableNode__ClipChildrenMixin$36$.__proto__.new.call(this);
  }).prototype = ParentableNode__ClipChildrenMixin$36$.prototype;
  dart.applyMixin(ParentableNode__ClipChildrenMixin$36$, syntax_tree._ClipChildrenMixin);
  syntax_tree.TransparentNode = class TransparentNode extends ParentableNode__ClipChildrenMixin$36$ {
    computeWidth() {
      return iterable_extensions$['IterableIntegerExtension|get#sum'](this.children[S.$map](core.int, dart.fn(child => {
        if (child == null) dart.nullFailed(I[33], 395, 39, "child");
        return child.editingWidth;
      }, T$.GreenNodeToint())));
    }
    computeChildPositions() {
      let curPos = 0;
      return T$.ListOfint().generate(dart.notNull(this.children[S.$length]) + 1, dart.fn(index => {
        if (index == null) dart.nullFailed(I[33], 400, 48, "index");
        if (index === 0) return curPos;
        return curPos = curPos + dart.notNull(this.children[S.$_get](dart.notNull(index) - 1).editingWidth);
      }, T$.intToint()), {growable: false});
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[33], 408, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[33], 408, 51, "childBuildResults");
      return new syntax_tree.BuildResult.new({widget: C[1868] || CT.C1868, options: options, results: childBuildResults[S.$expand](syntax_tree.BuildResult, dart.fn(result => {
          let t76;
          t76 = dart.nullCheck(result).results;
          return t76 == null ? T$.JSArrayOfBuildResult().of([result]) : t76;
        }, T$.BuildResultNToListOfBuildResult()))[S.$toList]({growable: false})});
    }
    get flattenedChildList() {
      let t77;
      if (!dart.test(this[S$.__TransparentNode_flattenedChildList_isSet])) {
        let t76 = this.children[S.$expand](syntax_tree.GreenNode, dart.fn(child => {
          if (child == null) dart.nullFailed(I[33], 421, 16, "child");
          return syntax_tree.TransparentNode.is(child) ? child.flattenedChildList : T$.JSArrayOfGreenNode().of([child]);
        }, T$.GreenNodeToListOfGreenNode()))[S.$toList]({growable: false});
        if (dart.test(this[S$.__TransparentNode_flattenedChildList_isSet])) dart.throw(new _internal.LateError.fieldADI("flattenedChildList"));
        this[S$.__TransparentNode_flattenedChildList] = t76;
        this[S$.__TransparentNode_flattenedChildList_isSet] = true;
      }
      t77 = this[S$.__TransparentNode_flattenedChildList];
      return t77;
    }
    get leftType() {
      let t78;
      if (!dart.test(this[S$.__TransparentNode_leftType_isSet])) {
        let t77 = this.children[S.$_get](0).leftType;
        if (dart.test(this[S$.__TransparentNode_leftType_isSet])) dart.throw(new _internal.LateError.fieldADI("leftType"));
        this[S$.__TransparentNode_leftType] = t77;
        this[S$.__TransparentNode_leftType_isSet] = true;
      }
      t78 = this[S$.__TransparentNode_leftType];
      return t78;
    }
    get rightType() {
      let t79;
      if (!dart.test(this[S$.__TransparentNode_rightType_isSet])) {
        let t78 = this.children[S.$last].rightType;
        if (dart.test(this[S$.__TransparentNode_rightType_isSet])) dart.throw(new _internal.LateError.fieldADI("rightType"));
        this[S$.__TransparentNode_rightType] = t78;
        this[S$.__TransparentNode_rightType_isSet] = true;
      }
      t79 = this[S$.__TransparentNode_rightType];
      return t79;
    }
  };
  (syntax_tree.TransparentNode.new = function() {
    this[S$.__TransparentNode_flattenedChildList] = null;
    this[S$.__TransparentNode_flattenedChildList_isSet] = false;
    this[S$.__TransparentNode_leftType] = null;
    this[S$.__TransparentNode_leftType_isSet] = false;
    this[S$.__TransparentNode_rightType] = null;
    this[S$.__TransparentNode_rightType_isSet] = false;
    syntax_tree.TransparentNode.__proto__.new.call(this);
    ;
  }).prototype = syntax_tree.TransparentNode.prototype;
  dart.addTypeTests(syntax_tree.TransparentNode);
  dart.addTypeCaches(syntax_tree.TransparentNode);
  dart.setMethodSignature(syntax_tree.TransparentNode, () => ({
    __proto__: dart.getMethods(syntax_tree.TransparentNode.__proto__),
    computeWidth: dart.fnType(core.int, []),
    computeChildPositions: dart.fnType(core.List$(core.int), []),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))])
  }));
  dart.setGetterSignature(syntax_tree.TransparentNode, () => ({
    __proto__: dart.getGetters(syntax_tree.TransparentNode.__proto__),
    flattenedChildList: core.List$(syntax_tree.GreenNode),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(syntax_tree.TransparentNode, I[34]);
  dart.setFieldSignature(syntax_tree.TransparentNode, () => ({
    __proto__: dart.getFields(syntax_tree.TransparentNode.__proto__),
    [S$.__TransparentNode_flattenedChildList]: dart.fieldType(dart.nullable(core.List$(syntax_tree.GreenNode))),
    [S$.__TransparentNode_flattenedChildList_isSet]: dart.fieldType(core.bool),
    [S$.__TransparentNode_leftType]: dart.fieldType(dart.nullable(syntax_tree.AtomType)),
    [S$.__TransparentNode_leftType_isSet]: dart.fieldType(core.bool),
    [S$.__TransparentNode_rightType]: dart.fieldType(dart.nullable(syntax_tree.AtomType)),
    [S$.__TransparentNode_rightType_isSet]: dart.fieldType(core.bool)
  }));
  style$.StyleNode = class StyleNode extends syntax_tree.TransparentNode {
    get children() {
      return this[S$.children$5];
    }
    set children(value) {
      super.children = value;
    }
    get optionsDiff() {
      return this[S$.optionsDiff];
    }
    set optionsDiff(value) {
      super.optionsDiff = value;
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[99], 17, 53, "options");
      return T$.ListOfMathOptions().filled(this.children[S.$length], options.merge(this.optionsDiff), {growable: false});
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[99], 21, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[99], 21, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfGreenNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[99], 25, 60, "newChildren");
      return this.copyWith({children: newChildren});
    }
    toJson() {
      let t76;
      t76 = super.toJson();
      return (() => {
        t76[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["children", this.children[S.$map](T$.MapOfString$ObjectN(), dart.fn(e => {
            if (e == null) dart.nullFailed(I[99], 31, 33, "e");
            return e.toJson();
          }, T$.GreenNodeToMapOfString$ObjectN()))[S.$toList]({growable: false}), "optionsDiff", dart.toString(this.optionsDiff)]));
        return t76;
      })();
    }
    copyWith(opts) {
      let t76, t76$;
      let children = opts && 'children' in opts ? opts.children : null;
      let optionsDiff = opts && 'optionsDiff' in opts ? opts.optionsDiff : null;
      return new style$.StyleNode.new({children: (t76 = children, t76 == null ? this.children : t76), optionsDiff: (t76$ = optionsDiff, t76$ == null ? this.optionsDiff : t76$)});
    }
  };
  (style$.StyleNode.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    if (children == null) dart.nullFailed(I[99], 12, 19, "children");
    let optionsDiff = opts && 'optionsDiff' in opts ? opts.optionsDiff : null;
    if (optionsDiff == null) dart.nullFailed(I[99], 13, 19, "optionsDiff");
    this[S$.children$5] = children;
    this[S$.optionsDiff] = optionsDiff;
    style$.StyleNode.__proto__.new.call(this);
    ;
  }).prototype = style$.StyleNode.prototype;
  dart.addTypeTests(style$.StyleNode);
  dart.addTypeCaches(style$.StyleNode);
  dart.setMethodSignature(style$.StyleNode, () => ({
    __proto__: dart.getMethods(style$.StyleNode.__proto__),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(syntax_tree.ParentableNode$(syntax_tree.GreenNode), [dart.nullable(core.Object)]),
    copyWith: dart.fnType(style$.StyleNode, [], {children: dart.nullable(core.List$(syntax_tree.GreenNode)), optionsDiff: dart.nullable(options$.OptionsDiff)}, {})
  }));
  dart.setLibraryUri(style$.StyleNode, I[100]);
  dart.setFieldSignature(style$.StyleNode, () => ({
    __proto__: dart.getFields(style$.StyleNode.__proto__),
    children: dart.finalFieldType(core.List$(syntax_tree.GreenNode)),
    optionsDiff: dart.finalFieldType(options$.OptionsDiff)
  }));
  over.OverNode = class OverNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get base() {
      return this[S$.base$6];
    }
    set base(value) {
      super.base = value;
    }
    get above() {
      return this[S$.above$1];
    }
    set above(value) {
      super.above = value;
    }
    get stackRel() {
      return this[S$.stackRel];
    }
    set stackRel(value) {
      super.stackRel = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[101], 32, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[101], 32, 47, "childBuildResults");
      let spacing = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing5).toLpUnder(options);
      return new syntax_tree.BuildResult.new({options: options, widget: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: spacing}), child: new vlist.VList.new({baselineReferenceWidgetIndex: 1, children: T$.JSArrayOfWidget().of([new min_dimension.MinDimension.new({minDepth: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing3).toLpUnder(options), bottomPadding: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.bigOpSpacing1).toLpUnder(options), child: dart.nullCheck(childBuildResults[S.$_get](1)).widget, $creationLocationd_0dea112b090073317d4: C[1872] || CT.C1872}), dart.nullCheck(childBuildResults[S.$_get](0)).widget]), $creationLocationd_0dea112b090073317d4: C[1877] || CT.C1877}), $creationLocationd_0dea112b090073317d4: C[1881] || CT.C1881})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[101], 57, 53, "options");
      return T$.JSArrayOfMathOptions().of([options, options.havingStyle(style$0['MathStyleExt|sup'](options.style))]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.base, this.above]);
    }
    get leftType() {
      return dart.test(this.stackRel) ? syntax_tree.AtomType.rel : syntax_tree.AtomType.ord;
    }
    get rightType() {
      return dart.test(this.stackRel) ? syntax_tree.AtomType.rel : syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[101], 76, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[101], 76, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[101], 80, 49, "newChildren");
      return this.copyWith({base: newChildren[S.$_get](0), above: newChildren[S.$_get](1)});
    }
    toJson() {
      let t79;
      t79 = super.toJson();
      return (() => {
        t79[S.$addAll]((() => {
          let t80 = new (T$.IdentityMapOfString$ObjectN()).new();
          t80[S.$_set]("base", this.base.toJson());
          t80[S.$_set]("above", this.above.toJson());
          if (this.stackRel !== false) t80[S.$_set]("stackRel", this.stackRel);
          return t80;
        })());
        return t79;
      })();
    }
    copyWith(opts) {
      let t80, t80$, t80$0;
      let base = opts && 'base' in opts ? opts.base : null;
      let above = opts && 'above' in opts ? opts.above : null;
      let stackRel = opts && 'stackRel' in opts ? opts.stackRel : null;
      return new over.OverNode.new({base: (t80 = base, t80 == null ? this.base : t80), above: (t80$ = above, t80$ == null ? this.above : t80$), stackRel: (t80$0 = stackRel, t80$0 == null ? this.stackRel : t80$0)});
    }
  };
  (over.OverNode.new = function(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[101], 24, 19, "base");
    let above = opts && 'above' in opts ? opts.above : null;
    if (above == null) dart.nullFailed(I[101], 25, 19, "above");
    let stackRel = opts && 'stackRel' in opts ? opts.stackRel : false;
    if (stackRel == null) dart.nullFailed(I[101], 26, 10, "stackRel");
    this[S$.base$6] = base;
    this[S$.above$1] = above;
    this[S$.stackRel] = stackRel;
    over.OverNode.__proto__.new.call(this);
    ;
  }).prototype = over.OverNode.prototype;
  dart.addTypeTests(over.OverNode);
  dart.addTypeCaches(over.OverNode);
  dart.setMethodSignature(over.OverNode, () => ({
    __proto__: dart.getMethods(over.OverNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(over.OverNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(over.OverNode, [], {above: dart.nullable(syntax_tree.EquationRowNode), base: dart.nullable(syntax_tree.EquationRowNode), stackRel: dart.nullable(core.bool)}, {})
  }));
  dart.setGetterSignature(over.OverNode, () => ({
    __proto__: dart.getGetters(over.OverNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(over.OverNode, I[102]);
  dart.setFieldSignature(over.OverNode, () => ({
    __proto__: dart.getFields(over.OverNode.__proto__),
    base: dart.finalFieldType(syntax_tree.EquationRowNode),
    above: dart.finalFieldType(syntax_tree.EquationRowNode),
    stackRel: dart.finalFieldType(core.bool)
  }));
  make_composite.makeRlapCompositeSymbol = function makeRlapCompositeSymbol(char1, char2, type, mode, options) {
    if (char1 == null) dart.nullFailed(I[103], 18, 10, "char1");
    if (char2 == null) dart.nullFailed(I[103], 19, 10, "char2");
    if (type == null) dart.nullFailed(I[103], 20, 12, "type");
    if (mode == null) dart.nullFailed(I[103], 21, 8, "mode");
    if (options == null) dart.nullFailed(I[103], 22, 15, "options");
    let res1 = make_symbol.makeBaseSymbol({symbol: char1, atomType: type, mode: mode, options: options});
    let res2 = make_symbol.makeBaseSymbol({symbol: char2, atomType: type, mode: mode, options: options});
    return new syntax_tree.BuildResult.new({italic: res2.italic, options: options, widget: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.baseline, textBaseline: ui.TextBaseline.alphabetic, mainAxisAlignment: flex.MainAxisAlignment.start, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new reset_dimension.ResetDimension.new({width: 0.0, horizontalAlignment: flex.CrossAxisAlignment.start, child: res1.widget, $creationLocationd_0dea112b090073317d4: C[1885] || CT.C1885}), res2.widget]), $creationLocationd_0dea112b090073317d4: C[1890] || CT.C1890})});
  };
  make_composite.makeCompactedCompositeSymbol = function makeCompactedCompositeSymbol(char1, char2, spacing, type, mode, options) {
    if (char1 == null) dart.nullFailed(I[103], 49, 10, "char1");
    if (char2 == null) dart.nullFailed(I[103], 50, 10, "char2");
    if (spacing == null) dart.nullFailed(I[103], 51, 15, "spacing");
    if (type == null) dart.nullFailed(I[103], 52, 12, "type");
    if (mode == null) dart.nullFailed(I[103], 53, 8, "mode");
    if (options == null) dart.nullFailed(I[103], 54, 15, "options");
    let res1 = make_symbol.makeBaseSymbol({symbol: char1, atomType: type, mode: mode, options: options});
    let res2 = make_symbol.makeBaseSymbol({symbol: char2, atomType: type, mode: mode, options: options});
    let widget1 = char1 !== ":" ? res1.widget : new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options), child: res1.widget, $creationLocationd_0dea112b090073317d4: C[1897] || CT.C1897});
    let widget2 = char2 !== ":" ? res2.widget : new shift_baseline.ShiftBaseline.new({relativePos: 0.5, offset: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.axisHeight).toLpUnder(options), child: res2.widget, $creationLocationd_0dea112b090073317d4: C[1902] || CT.C1902});
    return new syntax_tree.BuildResult.new({italic: res2.italic, options: options, widget: new line.Line.new({children: T$.JSArrayOfWidget().of([new line.LineElement.new({child: widget1, trailingMargin: spacing.toLpUnder(options), $creationLocationd_0dea112b090073317d4: C[1906] || CT.C1906}), widget2]), $creationLocationd_0dea112b090073317d4: C[1910] || CT.C1910})});
  };
  make_composite.makeDecoratedEqualSymbol = function makeDecoratedEqualSymbol(symbol, type, mode, options) {
    if (symbol == null) dart.nullFailed(I[103], 90, 10, "symbol");
    if (type == null) dart.nullFailed(I[103], 91, 12, "type");
    if (mode == null) dart.nullFailed(I[103], 92, 8, "mode");
    if (options == null) dart.nullFailed(I[103], 93, 15, "options");
    let decoratorSymbols = null;
    let decoratorFont = null;
    let decoratorSize = null;
    switch (symbol) {
      case "≙":
      {
        decoratorSymbols = T$.JSArrayOfString().of(["∧"]);
        decoratorSize = size$.MathSize.tiny;
        break;
      }
      case "≚":
      {
        decoratorSymbols = T$.JSArrayOfString().of(["∨"]);
        decoratorSize = size$.MathSize.tiny;
        break;
      }
      case "≛":
      {
        decoratorSymbols = T$.JSArrayOfString().of(["⋆"]);
        decoratorSize = size$.MathSize.scriptsize;
        break;
      }
      case "≝":
      {
        decoratorSymbols = T$.JSArrayOfString().of(["d", "e", "f"]);
        decoratorSize = size$.MathSize.tiny;
        decoratorFont = dart.nullCheck(font.texMathFontOptions[S.$_get]("\\mathrm"));
        break;
      }
      case "≞":
      {
        decoratorSymbols = T$.JSArrayOfString().of(["m"]);
        decoratorSize = size$.MathSize.tiny;
        decoratorFont = dart.nullCheck(font.texMathFontOptions[S.$_get]("\\mathrm"));
        break;
      }
      case "≟":
      {
        decoratorSymbols = T$.JSArrayOfString().of(["?"]);
        decoratorSize = size$.MathSize.tiny;
        break;
      }
      default:
      {
        dart.throw(new core.ArgumentError.value(unicode_literal.unicodeLiteral(symbol), "symbol", "Not a decorator character"));
      }
    }
    let decorator = new style$.StyleNode.new({children: decoratorSymbols[S.$map](symbol$.SymbolNode, dart.fn(symbol => {
        if (symbol == null) dart.nullFailed(I[103], 135, 15, "symbol");
        return new symbol$.SymbolNode.new({symbol: symbol, mode: mode});
      }, T$.StringToSymbolNode()))[S.$toList]({growable: false}), optionsDiff: new options$.OptionsDiff.new({size: decoratorSize, mathFontOptions: decoratorFont})});
    let proxyNode = new over.OverNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](new symbol$.SymbolNode.new({symbol: "=", mode: mode, overrideAtomType: type})), above: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](decorator)});
    return new syntax_tree.SyntaxNode.new({parent: null, value: proxyNode, pos: 0}).buildWidget(options);
  };
  dart.defineLazy(symbols_composite, {
    /*symbols_composite.ligatures*/get ligatures() {
      return C[1363] || CT.C1363;
    },
    /*symbols_composite.negatedOperatorSymbols*/get negatedOperatorSymbols() {
      return C[1913] || CT.C1913;
    },
    /*symbols_composite.compactedCompositeSymbols*/get compactedCompositeSymbols() {
      return C[1958] || CT.C1958;
    },
    /*symbols_composite.compactedCompositeSymbolSpacings*/get compactedCompositeSymbolSpacings() {
      return new (T$.IdentityMapOfString$Measurement()).from(["∷", size$['MeasurementExtOnNum|get#mu'](-0.9), "≔", size$['MeasurementExtOnNum|get#mu'](-1.2), "≕", size$['MeasurementExtOnNum|get#mu'](-3.2), "∹", size$['MeasurementExtOnNum|get#mu'](-3.2), "⟦", size$['MeasurementExtOnNum|get#mu'](-3.2), "⟧", size$['MeasurementExtOnNum|get#mu'](-3.2), "⦃", size$['MeasurementExtOnNum|get#mu'](-3.2), "⦄", size$['MeasurementExtOnNum|get#mu'](-3.2)]);
    },
    /*symbols_composite.compactedCompositeSymbolTypes*/get compactedCompositeSymbolTypes() {
      return new (T$.IdentityMapOfString$AtomType()).from(["∷", syntax_tree.AtomType.rel, "≔", syntax_tree.AtomType.rel, "≕", syntax_tree.AtomType.rel, "∹", syntax_tree.AtomType.rel, "⟦", syntax_tree.AtomType.open, "⟧", syntax_tree.AtomType.close, "⦃", syntax_tree.AtomType.open, "⦄", syntax_tree.AtomType.close]);
    }
  }, false);
  symbols$.SymbolId = class SymbolId extends core.Object {
    get symbol() {
      return this[S$.symbol$3];
    }
    set symbol(value) {
      super.symbol = value;
    }
    get variantForm() {
      return this[S$.variantForm$2];
    }
    set variantForm(value) {
      super.variantForm = value;
    }
    _equals(o) {
      if (o == null) return false;
      if (this === o) return true;
      return symbols$.SymbolId.is(o) && o.symbol == this.symbol && o.variantForm == this.variantForm;
    }
    get hashCode() {
      return (dart.hashCode(this.symbol) ^ dart.hashCode(this.variantForm)) >>> 0;
    }
  };
  (symbols$.SymbolId.new = function(symbol, opts) {
    if (symbol == null) dart.nullFailed(I[104], 37, 23, "symbol");
    let variantForm = opts && 'variantForm' in opts ? opts.variantForm : false;
    if (variantForm == null) dart.nullFailed(I[104], 37, 37, "variantForm");
    this[S$.symbol$3] = symbol;
    this[S$.variantForm$2] = variantForm;
    ;
  }).prototype = symbols$.SymbolId.prototype;
  dart.addTypeTests(symbols$.SymbolId);
  dart.addTypeCaches(symbols$.SymbolId);
  dart.setLibraryUri(symbols$.SymbolId, I[105]);
  dart.setFieldSignature(symbols$.SymbolId, () => ({
    __proto__: dart.getFields(symbols$.SymbolId.__proto__),
    symbol: dart.finalFieldType(core.String),
    variantForm: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(symbols$.SymbolId, ['_equals']);
  dart.defineExtensionAccessors(symbols$.SymbolId, ['hashCode']);
  symbols$.SymbolRenderConfig = class SymbolRenderConfig extends core.Object {
    get math() {
      return this[S$.math$1];
    }
    set math(value) {
      super.math = value;
    }
    get text() {
      return this[S$.text$1];
    }
    set text(value) {
      super.text = value;
    }
    get variantForm() {
      return this[S$.variantForm$3];
    }
    set variantForm(value) {
      super.variantForm = value;
    }
  };
  (symbols$.SymbolRenderConfig.new = function(opts) {
    let math = opts && 'math' in opts ? opts.math : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let variantForm = opts && 'variantForm' in opts ? opts.variantForm : null;
    this[S$.math$1] = math;
    this[S$.text$1] = text;
    this[S$.variantForm$3] = variantForm;
    ;
  }).prototype = symbols$.SymbolRenderConfig.prototype;
  dart.addTypeTests(symbols$.SymbolRenderConfig);
  dart.addTypeCaches(symbols$.SymbolRenderConfig);
  dart.setLibraryUri(symbols$.SymbolRenderConfig, I[105]);
  dart.setFieldSignature(symbols$.SymbolRenderConfig, () => ({
    __proto__: dart.getFields(symbols$.SymbolRenderConfig.__proto__),
    math: dart.finalFieldType(dart.nullable(symbols$.RenderConfig)),
    text: dart.finalFieldType(dart.nullable(symbols$.RenderConfig)),
    variantForm: dart.finalFieldType(dart.nullable(symbols$.SymbolRenderConfig))
  }));
  symbols$.RenderConfig = class RenderConfig extends core.Object {
    get replaceChar() {
      return this[S$.replaceChar];
    }
    set replaceChar(value) {
      super.replaceChar = value;
    }
    get defaultFont() {
      return this[S$.defaultFont];
    }
    set defaultFont(value) {
      super.defaultFont = value;
    }
    get defaultType() {
      return this[S$.defaultType];
    }
    set defaultType(value) {
      super.defaultType = value;
    }
  };
  (symbols$.RenderConfig.new = function(defaultType, defaultFont, replaceChar = null) {
    if (defaultFont == null) dart.nullFailed(I[104], 66, 45, "defaultFont");
    this[S$.defaultType] = defaultType;
    this[S$.defaultFont] = defaultFont;
    this[S$.replaceChar] = replaceChar;
    ;
  }).prototype = symbols$.RenderConfig.prototype;
  dart.addTypeTests(symbols$.RenderConfig);
  dart.addTypeCaches(symbols$.RenderConfig);
  dart.setLibraryUri(symbols$.RenderConfig, I[105]);
  dart.setFieldSignature(symbols$.RenderConfig, () => ({
    __proto__: dart.getFields(symbols$.RenderConfig.__proto__),
    replaceChar: dart.finalFieldType(dart.nullable(core.String)),
    defaultFont: dart.finalFieldType(options$.FontOptions),
    defaultType: dart.finalFieldType(dart.nullable(syntax_tree.AtomType))
  }));
  dart.defineLazy(symbols$, {
    /*symbols$.mainrm*/get mainrm() {
      return C[259] || CT.C259;
    },
    /*symbols$.amsrm*/get amsrm() {
      return C[263] || CT.C263;
    },
    /*symbols$.mathdefault*/get mathdefault() {
      return C[264] || CT.C264;
    },
    /*symbols$.mainit*/get mainit() {
      return C[1847] || CT.C1847;
    },
    /*symbols$.symbolRenderConfigs*/get symbolRenderConfigs() {
      return C[1967] || CT.C1967;
    }
  }, false);
  make_symbol.makeBaseSymbol = function makeBaseSymbol(opts) {
    let t80, t81, t80$, t80$0, t81$, t80$1, t80$2, t80$3, t80$4, t80$5, t80$6, t80$7, t80$8, t80$9, t80$10, t80$11, t80$12;
    let symbol = opts && 'symbol' in opts ? opts.symbol : null;
    if (symbol == null) dart.nullFailed(I[106], 17, 19, "symbol");
    let variantForm = opts && 'variantForm' in opts ? opts.variantForm : false;
    if (variantForm == null) dart.nullFailed(I[106], 18, 8, "variantForm");
    let atomType = opts && 'atomType' in opts ? opts.atomType : null;
    if (atomType == null) dart.nullFailed(I[106], 19, 21, "atomType");
    let mode = opts && 'mode' in opts ? opts.mode : null;
    if (mode == null) dart.nullFailed(I[106], 20, 17, "mode");
    let overrideFont = opts && 'overrideFont' in opts ? opts.overrideFont : null;
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[106], 22, 24, "options");
    let symbolRenderConfig = symbols$.symbolRenderConfigs[S.$_get](symbol);
    if (symbolRenderConfig != null) {
      if (dart.test(variantForm)) {
        symbolRenderConfig = symbolRenderConfig.variantForm;
      }
      let renderConfig = mode == types.Mode.math ? (t80$ = (t80 = symbolRenderConfig, t80 == null ? null : t80.math), t80$ == null ? (t81 = symbolRenderConfig, t81 == null ? null : t81.text) : t80$) : (t80$1 = (t80$0 = symbolRenderConfig, t80$0 == null ? null : t80$0.text), t80$1 == null ? (t81$ = symbolRenderConfig, t81$ == null ? null : t81$.math) : t80$1);
      let char = (t80$3 = (t80$2 = renderConfig, t80$2 == null ? null : t80$2.replaceChar), t80$3 == null ? symbol : t80$3);
      if (atomType == syntax_tree.AtomType.ord && symbol[S.$codeUnitAt](0) !== 55349) {
        let useMathFont = mode == types.Mode.math || mode == types.Mode.text && options.mathFontOptions != null;
        let font = (t80$4 = overrideFont, t80$4 == null ? useMathFont ? options.mathFontOptions : options.textFontOptions : t80$4);
        if (font != null) {
          let charMetrics = make_symbol.lookupChar(char, font, mode);
          if (charMetrics == null) {
            for (let fallback of font.fallback) {
              charMetrics = make_symbol.lookupChar(char, fallback, mode);
              if (charMetrics != null) {
                font = fallback;
                break;
              }
            }
            dart.nullCheck(font);
          }
          if (charMetrics != null) {
            let italic = size$['MeasurementExtOnNum|get#cssEm'](charMetrics.italic).toLpUnder(options);
            return new syntax_tree.BuildResult.new({options: options, italic: italic, skew: size$['MeasurementExtOnNum|get#cssEm'](charMetrics.skew).toLpUnder(options), widget: make_symbol.makeChar(symbol, font, charMetrics, options, {needItalic: mode == types.Mode.math})});
          } else if (dart.test(symbols_composite.ligatures[S.$containsKey](symbol)) && font.fontFamily === "Typewriter") {
            let expandedText = dart.nullCheck(symbols_composite.ligatures[S.$_get](symbol))[S.$split]("");
            return new syntax_tree.BuildResult.new({options: options, widget: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.baseline, textBaseline: ui.TextBaseline.alphabetic, children: expandedText[S.$map](framework.Widget, dart.fn(e => {
                  if (e == null) dart.nullFailed(I[106], 77, 25, "e");
                  return make_symbol.makeChar(e, dart.nullCheck(font), make_symbol.lookupChar(e, font, mode), options);
                }, T$.StringToWidget()))[S.$toList]({growable: false}), $creationLocationd_0dea112b090073317d4: C[2301] || CT.C2301}), italic: 0.0, skew: 0.0});
          }
        }
      }
      let defaultFont = (t80$6 = (t80$5 = renderConfig, t80$5 == null ? null : t80$5.defaultFont), t80$6 == null ? C[259] || CT.C259 : t80$6);
      let characterMetrics = font_metrics$.getCharacterMetrics({character: (t80$8 = (t80$7 = renderConfig, t80$7 == null ? null : t80$7.replaceChar), t80$8 == null ? symbol : t80$8), fontName: defaultFont.fontName, mode: types.Mode.math});
      let italic = (t80$10 = (t80$9 = characterMetrics, t80$9 == null ? null : size$['MeasurementExtOnNum|get#cssEm'](t80$9.italic).toLpUnder(options)), t80$10 == null ? 0.0 : t80$10);
      return new syntax_tree.BuildResult.new({options: options, widget: make_symbol.makeChar(char, defaultFont, characterMetrics, options, {needItalic: mode == types.Mode.math}), italic: italic, skew: (t80$12 = (t80$11 = characterMetrics, t80$11 == null ? null : size$['MeasurementExtOnNum|get#cssEm'](t80$11.skew).toLpUnder(options)), t80$12 == null ? 0.0 : t80$12)});
    } else if (mode == types.Mode.math && variantForm === false) {
      if (dart.test(symbols_composite.negatedOperatorSymbols[S.$containsKey](symbol))) {
        let chars = dart.nullCheck(symbols_composite.negatedOperatorSymbols[S.$_get](symbol));
        return make_composite.makeRlapCompositeSymbol(chars[S.$_get](0), chars[S.$_get](1), atomType, mode, options);
      } else if (dart.test(symbols_composite.compactedCompositeSymbols[S.$containsKey](symbol))) {
        let chars = dart.nullCheck(symbols_composite.compactedCompositeSymbols[S.$_get](symbol));
        let spacing = dart.nullCheck(symbols_composite.compactedCompositeSymbolSpacings[S.$_get](symbol));
        return make_composite.makeCompactedCompositeSymbol(chars[S.$_get](0), chars[S.$_get](1), spacing, atomType, mode, options);
      } else if (dart.test(symbols_extra.decoratedEqualSymbols.contains(symbol))) {
        return make_composite.makeDecoratedEqualSymbol(symbol, atomType, mode, options);
      }
    }
    return new syntax_tree.BuildResult.new({options: options, italic: 0.0, skew: 0.0, widget: make_symbol.makeChar(symbol, C[259] || CT.C259, null, options, {needItalic: mode == types.Mode.math})});
  };
  make_symbol.makeChar = function makeChar(character, font, characterMetrics, options, opts) {
    let t80, t80$, t80$0, t80$1;
    if (character == null) dart.nullFailed(I[106], 131, 24, "character");
    if (font == null) dart.nullFailed(I[106], 131, 47, "font");
    if (options == null) dart.nullFailed(I[106], 132, 53, "options");
    let needItalic = opts && 'needItalic' in opts ? opts.needItalic : false;
    if (needItalic == null) dart.nullFailed(I[106], 133, 11, "needItalic");
    let charWidget = new reset_dimension.ResetDimension.new({height: (t80 = characterMetrics, t80 == null ? null : size$['MeasurementExtOnNum|get#cssEm'](t80.height).toLpUnder(options)), depth: (t80$ = characterMetrics, t80$ == null ? null : size$['MeasurementExtOnNum|get#cssEm'](t80$.depth).toLpUnder(options)), child: new basic.RichText.new({text: new text_span.TextSpan.new({text: character, style: new text_style.TextStyle.new({fontFamily: "packages/flutter_math_fork/KaTeX_" + dart.str(font.fontFamily), fontWeight: font.fontWeight, fontStyle: font.fontShape, fontSize: size$['MeasurementExtOnNum|get#cssEm'](1.0).toLpUnder(options), color: options.color})}), softWrap: false, overflow: paragraph.TextOverflow.visible, $creationLocationd_0dea112b090073317d4: C[2306] || CT.C2306}), $creationLocationd_0dea112b090073317d4: C[2311] || CT.C2311});
    if (dart.test(needItalic)) {
      let italic = (t80$1 = (t80$0 = characterMetrics, t80$0 == null ? null : size$['MeasurementExtOnNum|get#cssEm'](t80$0.italic).toLpUnder(options)), t80$1 == null ? 0.0 : t80$1);
      return new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({right: italic}), child: charWidget, $creationLocationd_0dea112b090073317d4: C[2316] || CT.C2316});
    }
    return charWidget;
  };
  make_symbol.lookupChar = function lookupChar(char, font, mode) {
    if (char == null) dart.nullFailed(I[106], 162, 37, "char");
    if (font == null) dart.nullFailed(I[106], 162, 55, "font");
    if (mode == null) dart.nullFailed(I[106], 162, 66, "mode");
    return font_metrics$.getCharacterMetrics({character: char, fontName: font.fontName, mode: mode});
  };
  make_symbol.mathdefault = function mathdefault(value) {
    if (value == null) dart.nullFailed(I[106], 180, 32, "value");
    if (dart.test(make_symbol._numberDigitRegex.hasMatch(value[S.$_get](0))) || dart.test(make_symbol._mathitLetters.contains(value))) {
      return new options$.FontOptions.new({fontFamily: "Main", fontShape: ui.FontStyle.italic});
    } else {
      return new options$.FontOptions.new({fontFamily: "Math", fontShape: ui.FontStyle.italic});
    }
  };
  dart.defineLazy(make_symbol, {
    /*make_symbol._numberDigitRegex*/get _numberDigitRegex() {
      return core.RegExp.new("[0-9]");
    },
    /*make_symbol._mathitLetters*/get _mathitLetters() {
      return T$.LinkedHashSetOfString().from(["ı", "ȷ", "£"]);
    }
  }, false);
  stretchy._KatexImagesData = class _KatexImagesData extends core.Object {
    get paths() {
      return this[S$.paths];
    }
    set paths(value) {
      super.paths = value;
    }
    get minWidth() {
      return this[S$.minWidth];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get viewBoxHeight() {
      return this[S$.viewBoxHeight];
    }
    set viewBoxHeight(value) {
      super.viewBoxHeight = value;
    }
    get align() {
      return this[S$.align];
    }
    set align(value) {
      super.align = value;
    }
  };
  (stretchy._KatexImagesData.new = function(paths, minWidth, viewBoxHeight, align = null) {
    if (paths == null) dart.nullFailed(I[107], 15, 31, "paths");
    if (minWidth == null) dart.nullFailed(I[107], 15, 43, "minWidth");
    if (viewBoxHeight == null) dart.nullFailed(I[107], 15, 58, "viewBoxHeight");
    this[S$.paths] = paths;
    this[S$.minWidth] = minWidth;
    this[S$.viewBoxHeight] = viewBoxHeight;
    this[S$.align] = align;
    ;
  }).prototype = stretchy._KatexImagesData.prototype;
  dart.addTypeTests(stretchy._KatexImagesData);
  dart.addTypeCaches(stretchy._KatexImagesData);
  dart.setLibraryUri(stretchy._KatexImagesData, I[108]);
  dart.setFieldSignature(stretchy._KatexImagesData, () => ({
    __proto__: dart.getFields(stretchy._KatexImagesData.__proto__),
    paths: dart.finalFieldType(core.List$(core.String)),
    minWidth: dart.finalFieldType(core.double),
    viewBoxHeight: dart.finalFieldType(core.double),
    align: dart.finalFieldType(dart.nullable(alignment.Alignment))
  }));
  stretchy.strechySvgSpan = function strechySvgSpan(name, width, options) {
    if (name == null) dart.nullFailed(I[107], 97, 30, "name");
    if (width == null) dart.nullFailed(I[107], 97, 43, "width");
    if (options == null) dart.nullFailed(I[107], 97, 62, "options");
    let viewBoxWidth = 400000.0;
    if (dart.test((C[2320] || CT.C2320).contains(name))) {
      let viewBoxHeight = null;
      let pathName = null;
      let height = null;
      let effCharNum = (dart.notNull(width) / dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](1.0).toLpUnder(options)))[S.$ceil]();
      if (effCharNum > 5) {
        if (name === "widehat" || name === "widecheck") {
          viewBoxHeight = 420.0;
          viewBoxWidth = 2364.0;
          height = 0.42;
          pathName = dart.str(name) + "4";
        } else {
          viewBoxHeight = 312.0;
          viewBoxWidth = 2340.0;
          height = 0.34;
          pathName = "tilde4";
        }
      } else {
        let imgIndex = (C[2321] || CT.C2321)[S.$_get](effCharNum);
        if (name === "widehat" || name === "widecheck") {
          viewBoxWidth = (C[2322] || CT.C2322)[S.$_get](imgIndex);
          viewBoxHeight = (C[2323] || CT.C2323)[S.$_get](imgIndex);
          height = (C[2324] || CT.C2324)[S.$_get](imgIndex);
          pathName = dart.str(name) + dart.str(imgIndex);
        } else {
          viewBoxWidth = (C[2325] || CT.C2325)[S.$_get](imgIndex);
          viewBoxHeight = (C[2326] || CT.C2326)[S.$_get](imgIndex);
          height = (C[2327] || CT.C2327)[S.$_get](imgIndex);
          pathName = "tilde" + dart.str(imgIndex);
        }
      }
      height = size$['MeasurementExtOnNum|get#cssEm'](height).toLpUnder(options);
      return svg_string.svgWidgetFromPath(dart.nullCheck(svg_geomertry.svgPaths[S.$_get](pathName)), new ui.Size.new(width, height), new ui.Rect.fromLTWH(0.0, 0.0, viewBoxWidth, viewBoxHeight), options.color);
    } else {
      let data = stretchy.katexImagesData[S.$_get](name);
      if (data == null) {
        dart.throw(new core.ArgumentError.value(name, "name", "Invalid stretchy svg name"));
      }
      let height = size$['MeasurementExtOnNum|get#cssEm'](dart.notNull(data.viewBoxHeight) / 1000).toLpUnder(options);
      let numSvgChildren = data.paths[S.$length];
      let actualWidth = math.max(core.double, width, size$['MeasurementExtOnNum|get#cssEm'](data.minWidth).toLpUnder(options));
      let aligns = null;
      let widths = null;
      switch (numSvgChildren) {
        case 1:
        {
          aligns = T$.JSArrayOfAlignment().of([dart.nullCheck(data.align)]);
          widths = T$.JSArrayOfdouble().of([actualWidth]);
          break;
        }
        case 2:
        {
          aligns = C[2328] || CT.C2328;
          widths = T$.JSArrayOfdouble().of([actualWidth / 2, actualWidth / 2]);
          break;
        }
        case 3:
        {
          aligns = C[2331] || CT.C2331;
          widths = T$.JSArrayOfdouble().of([actualWidth / 4, actualWidth / 2, actualWidth / 4]);
          break;
        }
        default:
        {
          dart.throw(new core.StateError.new("Bug inside stretchy svg code"));
        }
      }
      return new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.start, mainAxisAlignment: flex.MainAxisAlignment.start, children: T$.ListOfWidget().generate(numSvgChildren, dart.fn(index => {
          if (index == null) dart.nullFailed(I[107], 174, 10, "index");
          return svg_string.svgWidgetFromPath(dart.nullCheck(svg_geomertry.svgPaths[S.$_get](data.paths[S.$_get](index))), new ui.Size.new(widths[S.$_get](index), height), new ui.Rect.fromLTWH(0.0, 0.0, viewBoxWidth, data.viewBoxHeight), options.color, {align: aligns[S.$_get](index), fit: box_fit.BoxFit.cover});
        }, T$.intToWidget()), {growable: false}), $creationLocationd_0dea112b090073317d4: C[2333] || CT.C2333});
    }
  };
  dart.defineLazy(stretchy, {
    /*stretchy.katexImagesData*/get katexImagesData() {
      return C[2338] || CT.C2338;
    },
    /*stretchy.stretchyCodePoint*/get stretchyCodePoint() {
      return C[2397] || CT.C2397;
    }
  }, false);
  $static.staticSvg = function staticSvg(name, options, opts) {
    if (name == null) dart.nullFailed(I[109], 18, 25, "name");
    if (options == null) dart.nullFailed(I[109], 18, 43, "options");
    let needBaseline = opts && 'needBaseline' in opts ? opts.needBaseline : false;
    if (needBaseline == null) dart.nullFailed(I[109], 19, 11, "needBaseline");
    let dimen = $static.svgData[S.$_get](name);
    if (dimen == null) {
      dart.throw(new core.ArgumentError.value(name, "name", "Invalid static svg name"));
    }
    let width = dimen[S.$_get](0);
    let height = dimen[S.$_get](1);
    let viewPortWidth = size$['MeasurementExtOnNum|get#cssEm'](width).toLpUnder(options);
    let viewPortHeight = size$['MeasurementExtOnNum|get#cssEm'](height).toLpUnder(options);
    let svgWidget = svg_string.svgWidgetFromPath(dart.nullCheck(svg_geomertry.svgPaths[S.$_get](name)), new ui.Size.new(viewPortWidth, viewPortHeight), new ui.Rect.fromLTWH(0.0, 0.0, 1000 * dart.notNull(width), 1000 * dart.notNull(height)), options.color);
    if (dart.test(needBaseline)) {
      return new reset_baseline.ResetBaseline.new({height: viewPortHeight, child: svgWidget, $creationLocationd_0dea112b090073317d4: C[2398] || CT.C2398});
    }
    return svgWidget;
  };
  dart.defineLazy($static, {
    /*$static.svgData*/get svgData() {
      return C[2402] || CT.C2402;
    }
  }, false);
  reset_dimension.ResetDimension = class ResetDimension extends framework.SingleChildRenderObjectWidget {
    get height() {
      return this[S$.height$3];
    }
    set height(value) {
      super.height = value;
    }
    get depth() {
      return this[S$.depth$1];
    }
    set depth(value) {
      super.depth = value;
    }
    get width() {
      return this[S$.width$5];
    }
    set width(value) {
      super.width = value;
    }
    get horizontalAlignment() {
      return this[S$.horizontalAlignment];
    }
    set horizontalAlignment(value) {
      super.horizontalAlignment = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[110], 23, 56, "context");
      return new reset_dimension.RenderResetDimension.new({layoutHeight: this.height, layoutWidth: this.width, layoutDepth: this.depth, horizontalAlignment: this.horizontalAlignment});
    }
    updateRenderObject(context, renderObject) {
      let t80;
      if (context == null) dart.nullFailed(I[110], 33, 24, "context");
      reset_dimension.RenderResetDimension.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[110], 33, 54, "renderObject");
      t80 = renderObject;
      return (() => {
        t80.layoutHeight = this.height;
        t80.layoutDepth = this.depth;
        t80.layoutWidth = this.width;
        t80.horizontalAlignment = this.horizontalAlignment;
        return t80;
      })();
    }
  };
  (reset_dimension.ResetDimension.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let depth = opts && 'depth' in opts ? opts.depth : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let horizontalAlignment = opts && 'horizontalAlignment' in opts ? opts.horizontalAlignment : C[2408] || CT.C2408;
    if (horizontalAlignment == null) dart.nullFailed(I[110], 18, 10, "horizontalAlignment");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[110], 19, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.height$3] = height;
    this[S$.depth$1] = depth;
    this[S$.width$5] = width;
    this[S$.horizontalAlignment] = horizontalAlignment;
    reset_dimension.ResetDimension.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = reset_dimension.ResetDimension.prototype;
  dart.addTypeTests(reset_dimension.ResetDimension);
  dart.addTypeCaches(reset_dimension.ResetDimension);
  dart.setMethodSignature(reset_dimension.ResetDimension, () => ({
    __proto__: dart.getMethods(reset_dimension.ResetDimension.__proto__),
    createRenderObject: dart.fnType(reset_dimension.RenderResetDimension, [framework.BuildContext])
  }));
  dart.setLibraryUri(reset_dimension.ResetDimension, I[111]);
  dart.setFieldSignature(reset_dimension.ResetDimension, () => ({
    __proto__: dart.getFields(reset_dimension.ResetDimension.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    depth: dart.finalFieldType(dart.nullable(core.double)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    horizontalAlignment: dart.finalFieldType(flex.CrossAxisAlignment)
  }));
  reset_dimension.RenderResetDimension = class RenderResetDimension extends shifted_box.RenderShiftedBox {
    get layoutHeight() {
      return this[S$._layoutHeight];
    }
    set layoutHeight(value) {
      if (this[S$._layoutHeight] != value) {
        this[S$._layoutHeight] = value;
        this.markNeedsLayout();
      }
    }
    get layoutDepth() {
      return this[S$._layoutDepth];
    }
    set layoutDepth(value) {
      if (this[S$._layoutDepth] != value) {
        this[S$._layoutDepth] = value;
        this.markNeedsLayout();
      }
    }
    get layoutWidth() {
      return this[S$._layoutWidth];
    }
    set layoutWidth(value) {
      if (this[S$._layoutWidth] != value) {
        this[S$._layoutWidth] = value;
        this.markNeedsLayout();
      }
    }
    get horizontalAlignment() {
      return this[S$._horizontalAlignment];
    }
    set horizontalAlignment(value) {
      if (value == null) dart.nullFailed(I[110], 83, 46, "value");
      if (this[S$._horizontalAlignment] != value) {
        this[S$._horizontalAlignment] = value;
        this.markNeedsLayout();
      }
    }
    computeMinIntrinsicWidth(height) {
      let t80;
      if (height == null) dart.nullFailed(I[110], 91, 42, "height");
      t80 = this.layoutWidth;
      return t80 == null ? super.computeMinIntrinsicWidth(height) : t80;
    }
    computeMaxIntrinsicWidth(height) {
      let t80;
      if (height == null) dart.nullFailed(I[110], 95, 42, "height");
      t80 = this.layoutWidth;
      return t80 == null ? super.computeMaxIntrinsicWidth(height) : t80;
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[110], 99, 43, "width");
      if (this.layoutHeight == null && this.layoutDepth == null) {
        return super.computeMinIntrinsicHeight(width);
      }
      if (this.layoutHeight != null && this.layoutDepth != null) {
        return dart.nullCheck(this.layoutHeight) + dart.nullCheck(this.layoutDepth);
      }
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[110], 110, 43, "width");
      if (this.layoutHeight == null && this.layoutDepth == null) {
        return super.computeMaxIntrinsicHeight(width);
      }
      if (this.layoutHeight != null && this.layoutDepth != null) {
        return dart.nullCheck(this.layoutHeight) + dart.nullCheck(this.layoutDepth);
      }
      return 0.0;
    }
    computeDistanceToActualBaseline(baseline) {
      let t80;
      if (baseline == null) dart.nullFailed(I[110], 121, 56, "baseline");
      t80 = this.layoutHeight;
      return t80 == null ? super.computeDistanceToActualBaseline(baseline) : t80;
    }
    performLayout() {
      let t80, t80$, t80$0;
      let child = dart.nullCheck(this.child);
      child.layout(constants.infiniteConstraint, {parentUsesSize: true});
      let childHeight = dart.nullCheck(child.getDistanceToBaseline(ui.TextBaseline.alphabetic));
      let childDepth = dart.notNull(child.size.height) - childHeight;
      let childWidth = child.size.width;
      let height = (t80 = this.layoutHeight, t80 == null ? childHeight : t80);
      let depth = (t80$ = this.layoutDepth, t80$ == null ? childDepth : t80$);
      let width = (t80$0 = this.layoutWidth, t80$0 == null ? childWidth : t80$0);
      let dx = 0.0;
      switch (this.horizontalAlignment) {
        case C[2409] || CT.C2409:
        case C[2410] || CT.C2410:
        case C[2411] || CT.C2411:
        {
          break;
        }
        case C[2412] || CT.C2412:
        {
          dx = dart.notNull(width) - dart.notNull(childWidth);
          break;
        }
        case C[2408] || CT.C2408:
        default:
        {
          dx = (dart.notNull(width) - dart.notNull(childWidth)) / 2;
          break;
        }
      }
      render_box_offset['RenderBoxOffsetExt|set#offset'](child, new ui.Offset.new(dx, dart.notNull(height) - childHeight));
      this.size = new ui.Size.new(width, dart.notNull(height) + dart.notNull(depth));
    }
  };
  (reset_dimension.RenderResetDimension.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let layoutHeight = opts && 'layoutHeight' in opts ? opts.layoutHeight : null;
    let layoutDepth = opts && 'layoutDepth' in opts ? opts.layoutDepth : null;
    let layoutWidth = opts && 'layoutWidth' in opts ? opts.layoutWidth : null;
    let horizontalAlignment = opts && 'horizontalAlignment' in opts ? opts.horizontalAlignment : C[2408] || CT.C2408;
    if (horizontalAlignment == null) dart.nullFailed(I[110], 47, 24, "horizontalAlignment");
    this[S$._layoutHeight] = layoutHeight;
    this[S$._layoutDepth] = layoutDepth;
    this[S$._layoutWidth] = layoutWidth;
    this[S$._horizontalAlignment] = horizontalAlignment;
    reset_dimension.RenderResetDimension.__proto__.new.call(this, child);
    ;
  }).prototype = reset_dimension.RenderResetDimension.prototype;
  dart.addTypeTests(reset_dimension.RenderResetDimension);
  dart.addTypeCaches(reset_dimension.RenderResetDimension);
  dart.setGetterSignature(reset_dimension.RenderResetDimension, () => ({
    __proto__: dart.getGetters(reset_dimension.RenderResetDimension.__proto__),
    layoutHeight: dart.nullable(core.double),
    layoutDepth: dart.nullable(core.double),
    layoutWidth: dart.nullable(core.double),
    horizontalAlignment: flex.CrossAxisAlignment
  }));
  dart.setSetterSignature(reset_dimension.RenderResetDimension, () => ({
    __proto__: dart.getSetters(reset_dimension.RenderResetDimension.__proto__),
    layoutHeight: dart.nullable(core.double),
    layoutDepth: dart.nullable(core.double),
    layoutWidth: dart.nullable(core.double),
    horizontalAlignment: flex.CrossAxisAlignment
  }));
  dart.setLibraryUri(reset_dimension.RenderResetDimension, I[111]);
  dart.setFieldSignature(reset_dimension.RenderResetDimension, () => ({
    __proto__: dart.getFields(reset_dimension.RenderResetDimension.__proto__),
    [S$._layoutHeight]: dart.fieldType(dart.nullable(core.double)),
    [S$._layoutDepth]: dart.fieldType(dart.nullable(core.double)),
    [S$._layoutWidth]: dart.fieldType(dart.nullable(core.double)),
    [S$._horizontalAlignment]: dart.fieldType(flex.CrossAxisAlignment)
  }));
  accent$.AccentNode = class AccentNode extends syntax_tree.SlotableNode$(syntax_tree.EquationRowNode) {
    get base() {
      return this[S$.base$7];
    }
    set base(value) {
      super.base = value;
    }
    get label() {
      return this[S$.label$1];
    }
    set label(value) {
      super.label = value;
    }
    get isStretchy() {
      return this[S$.isStretchy];
    }
    set isStretchy(value) {
      super.isStretchy = value;
    }
    get isShifty() {
      return this[S$.isShifty];
    }
    set isShifty(value) {
      super.isShifty = value;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[112], 46, 19, "options");
      if (childBuildResults == null) dart.nullFailed(I[112], 46, 47, "childBuildResults");
      let baseResult = dart.nullCheck(childBuildResults[S.$_get](0));
      let skew = dart.test(this.isShifty) ? baseResult.skew : 0.0;
      let accentWidget = null;
      if (!dart.test(this.isStretchy)) {
        let accentSymbolWidget = null;
        if (this.label === "→") {
          accentSymbolWidget = $static.staticSvg("vec", options, {needBaseline: true});
        } else {
          let accentRenderConfig = accents.accentRenderConfigs[S.$_get](this.label);
          if (accentRenderConfig == null || accentRenderConfig.overChar == null) {
            accentSymbolWidget = new container.Container.new({$creationLocationd_0dea112b090073317d4: C[2413] || CT.C2413});
          } else {
            accentSymbolWidget = make_symbol.makeBaseSymbol({symbol: dart.nullCheck(accentRenderConfig.overChar), variantForm: false, atomType: syntax_tree.AtomType.ord, mode: types.Mode.text, options: options}).widget;
          }
        }
        accentWidget = new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
            if (context == null) dart.nullFailed(I[112], 83, 19, "context");
            if (constraints == null) dart.nullFailed(I[112], 83, 28, "constraints");
            return new reset_dimension.ResetDimension.new({depth: 0.0, width: constraints.minWidth, child: new shift_baseline.ShiftBaseline.new({relativePos: 1.0, offset: -dart.notNull(size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.xHeight).toLpUnder(options)), child: accentSymbolWidget, $creationLocationd_0dea112b090073317d4: C[2414] || CT.C2414}), $creationLocationd_0dea112b090073317d4: C[2419] || CT.C2419});
          }, T$.BuildContextAndBoxConstraintsToResetDimension()), $creationLocationd_0dea112b090073317d4: C[2424] || CT.C2424});
      } else {
        accentWidget = new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
            if (context == null) dart.nullFailed(I[112], 98, 19, "context");
            if (constraints == null) dart.nullFailed(I[112], 98, 28, "constraints");
            if (this.label === "¯") {
              let defaultRuleThickness = size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.defaultRuleThickness).toLpUnder(options);
              return new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: 3 * dart.notNull(defaultRuleThickness)}), child: new container.Container.new({width: constraints.minWidth, height: defaultRuleThickness, color: options.color, $creationLocationd_0dea112b090073317d4: C[2427] || CT.C2427}), $creationLocationd_0dea112b090073317d4: C[2432] || CT.C2432});
            } else {
              let accentRenderConfig = accents.accentRenderConfigs[S.$_get](this.label);
              if (accentRenderConfig == null || accentRenderConfig.overImageName == null) {
                return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[2436] || CT.C2436});
              }
              let svgWidget = stretchy.strechySvgSpan(dart.nullCheck(accentRenderConfig.overImageName), constraints.minWidth, options);
              if (this.label === "⏞") {
                return new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: size$['MeasurementExtOnNum|get#cssEm'](0.1).toLpUnder(options)}), child: svgWidget, $creationLocationd_0dea112b090073317d4: C[2437] || CT.C2437});
              } else {
                return svgWidget;
              }
            }
          }, T$.BuildContextAndBoxConstraintsToWidget()), $creationLocationd_0dea112b090073317d4: C[2441] || CT.C2441});
      }
      return new syntax_tree.BuildResult.new({options: options, italic: baseResult.italic, skew: baseResult.skew, widget: new vlist.VList.new({baselineReferenceWidgetIndex: 1, children: T$.JSArrayOfWidget().of([new vlist.VListElement.new({customCrossSize: dart.fn(width => {
                if (width == null) dart.nullFailed(I[112], 144, 31, "width");
                return new box.BoxConstraints.new({minWidth: dart.notNull(width) - 2 * dart.notNull(skew)});
              }, T$.doubleToBoxConstraints()), hShift: skew, child: accentWidget, $creationLocationd_0dea112b090073317d4: C[2444] || CT.C2444}), new min_dimension.MinDimension.new({minHeight: size$['MeasurementExtOnNum|get#cssEm'](options.fontMetrics.xHeight).toLpUnder(options), topPadding: 0.0, child: baseResult.widget, $creationLocationd_0dea112b090073317d4: C[2449] || CT.C2449})]), $creationLocationd_0dea112b090073317d4: C[2454] || CT.C2454})});
    }
    computeChildOptions(options) {
      if (options == null) dart.nullFailed(I[112], 161, 53, "options");
      return T$.JSArrayOfMathOptions().of([options.havingCrampedStyle()]);
    }
    computeChildren() {
      return T$.JSArrayOfEquationRowNode().of([this.base]);
    }
    get leftType() {
      return syntax_tree.AtomType.ord;
    }
    get rightType() {
      return syntax_tree.AtomType.ord;
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[112], 174, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[112], 174, 64, "newOptions");
      return false;
    }
    updateChildren(newChildren) {
      T$.ListOfEquationRowNode().as(newChildren);
      if (newChildren == null) dart.nullFailed(I[112], 178, 51, "newChildren");
      return this.copyWith({base: newChildren[S.$_get](0)});
    }
    toJson() {
      let t80;
      t80 = super.toJson();
      return (() => {
        t80[S.$addAll](new (T$.IdentityMapOfString$ObjectN()).from(["base", this.base.toJson(), "label", unicode_literal.unicodeLiteral(this.label), "isStretchy", this.isStretchy, "isShifty", this.isShifty]));
        return t80;
      })();
    }
    copyWith(opts) {
      let t80, t80$, t80$0, t80$1;
      let base = opts && 'base' in opts ? opts.base : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let isStretchy = opts && 'isStretchy' in opts ? opts.isStretchy : null;
      let isShifty = opts && 'isShifty' in opts ? opts.isShifty : null;
      return new accent$.AccentNode.new({base: (t80 = base, t80 == null ? this.base : t80), label: (t80$ = label, t80$ == null ? this.label : t80$), isStretchy: (t80$0 = isStretchy, t80$0 == null ? this.isStretchy : t80$0), isShifty: (t80$1 = isShifty, t80$1 == null ? this.isShifty : t80$1)});
    }
  };
  (accent$.AccentNode.new = function(opts) {
    let base = opts && 'base' in opts ? opts.base : null;
    if (base == null) dart.nullFailed(I[112], 38, 19, "base");
    let label = opts && 'label' in opts ? opts.label : null;
    if (label == null) dart.nullFailed(I[112], 39, 19, "label");
    let isStretchy = opts && 'isStretchy' in opts ? opts.isStretchy : null;
    if (isStretchy == null) dart.nullFailed(I[112], 40, 19, "isStretchy");
    let isShifty = opts && 'isShifty' in opts ? opts.isShifty : null;
    if (isShifty == null) dart.nullFailed(I[112], 41, 19, "isShifty");
    this[S$.base$7] = base;
    this[S$.label$1] = label;
    this[S$.isStretchy] = isStretchy;
    this[S$.isShifty] = isShifty;
    accent$.AccentNode.__proto__.new.call(this);
    ;
  }).prototype = accent$.AccentNode.prototype;
  dart.addTypeTests(accent$.AccentNode);
  dart.addTypeCaches(accent$.AccentNode);
  dart.setMethodSignature(accent$.AccentNode, () => ({
    __proto__: dart.getMethods(accent$.AccentNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    computeChildOptions: dart.fnType(core.List$(options$.MathOptions), [options$.MathOptions]),
    computeChildren: dart.fnType(core.List$(syntax_tree.EquationRowNode), []),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions]),
    updateChildren: dart.fnType(accent$.AccentNode, [dart.nullable(core.Object)]),
    copyWith: dart.fnType(accent$.AccentNode, [], {base: dart.nullable(syntax_tree.EquationRowNode), isShifty: dart.nullable(core.bool), isStretchy: dart.nullable(core.bool), label: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(accent$.AccentNode, () => ({
    __proto__: dart.getGetters(accent$.AccentNode.__proto__),
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(accent$.AccentNode, I[113]);
  dart.setFieldSignature(accent$.AccentNode, () => ({
    __proto__: dart.getFields(accent$.AccentNode.__proto__),
    base: dart.finalFieldType(syntax_tree.EquationRowNode),
    label: dart.finalFieldType(core.String),
    isStretchy: dart.finalFieldType(core.bool),
    isShifty: dart.finalFieldType(core.bool)
  }));
  syntax_tree.TemporaryNode = class TemporaryNode extends syntax_tree.LeafNode {
    get mode() {
      return types.Mode.math;
    }
    buildWidget(options, childBuildResults) {
      if (options == null) dart.nullFailed(I[33], 822, 23, "options");
      if (childBuildResults == null) dart.nullFailed(I[33], 822, 51, "childBuildResults");
      return dart.throw(new core.UnsupportedError.new("Temporary node " + dart.str(this[S.$runtimeType]) + " encountered."));
    }
    get leftType() {
      return dart.throw(new core.UnsupportedError.new("Temporary node " + dart.str(this[S.$runtimeType]) + " encountered."));
    }
    get rightType() {
      return dart.throw(new core.UnsupportedError.new("Temporary node " + dart.str(this[S.$runtimeType]) + " encountered."));
    }
    shouldRebuildWidget(oldOptions, newOptions) {
      if (oldOptions == null) dart.nullFailed(I[33], 834, 40, "oldOptions");
      if (newOptions == null) dart.nullFailed(I[33], 834, 64, "newOptions");
      return dart.throw(new core.UnsupportedError.new("Temporary node " + dart.str(this[S.$runtimeType]) + " encountered."));
    }
    get editingWidth() {
      return dart.throw(new core.UnsupportedError.new("Temporary node " + dart.str(this[S.$runtimeType]) + " encountered."));
    }
  };
  (syntax_tree.TemporaryNode.new = function() {
    syntax_tree.TemporaryNode.__proto__.new.call(this);
    ;
  }).prototype = syntax_tree.TemporaryNode.prototype;
  dart.addTypeTests(syntax_tree.TemporaryNode);
  dart.addTypeCaches(syntax_tree.TemporaryNode);
  dart.setMethodSignature(syntax_tree.TemporaryNode, () => ({
    __proto__: dart.getMethods(syntax_tree.TemporaryNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions, core.List$(dart.nullable(syntax_tree.BuildResult))]),
    shouldRebuildWidget: dart.fnType(core.bool, [options$.MathOptions, options$.MathOptions])
  }));
  dart.setGetterSignature(syntax_tree.TemporaryNode, () => ({
    __proto__: dart.getGetters(syntax_tree.TemporaryNode.__proto__),
    mode: types.Mode,
    leftType: syntax_tree.AtomType,
    rightType: syntax_tree.AtomType
  }));
  dart.setLibraryUri(syntax_tree.TemporaryNode, I[34]);
  katex_base.CrNode = class CrNode extends syntax_tree.TemporaryNode {
    get newLine() {
      return this[S$.newLine];
    }
    set newLine(value) {
      super.newLine = value;
    }
    get newRow() {
      return this[S$.newRow];
    }
    set newRow(value) {
      super.newRow = value;
    }
    get size() {
      return this[S$.size$1];
    }
    set size(value) {
      super.size = value;
    }
  };
  (katex_base.CrNode.new = function(opts) {
    let newLine = opts && 'newLine' in opts ? opts.newLine : null;
    if (newLine == null) dart.nullFailed(I[114], 40, 19, "newLine");
    let newRow = opts && 'newRow' in opts ? opts.newRow : null;
    if (newRow == null) dart.nullFailed(I[114], 41, 19, "newRow");
    let size = opts && 'size' in opts ? opts.size : null;
    this[S$.newLine] = newLine;
    this[S$.newRow] = newRow;
    this[S$.size$1] = size;
    katex_base.CrNode.__proto__.new.call(this);
    ;
  }).prototype = katex_base.CrNode.prototype;
  dart.addTypeTests(katex_base.CrNode);
  dart.addTypeCaches(katex_base.CrNode);
  dart.setLibraryUri(katex_base.CrNode, I[115]);
  dart.setFieldSignature(katex_base.CrNode, () => ({
    __proto__: dart.getFields(katex_base.CrNode.__proto__),
    newLine: dart.finalFieldType(core.bool),
    newRow: dart.finalFieldType(core.bool),
    size: dart.finalFieldType(dart.nullable(size$.Measurement))
  }));
  katex_base._LeftRightRightNode = class _LeftRightRightNode extends syntax_tree.TemporaryNode {};
  (katex_base._LeftRightRightNode.new = function(opts) {
    let delim = opts && 'delim' in opts ? opts.delim : null;
    this.delim = delim;
    katex_base._LeftRightRightNode.__proto__.new.call(this);
    ;
  }).prototype = katex_base._LeftRightRightNode.prototype;
  dart.addTypeTests(katex_base._LeftRightRightNode);
  dart.addTypeCaches(katex_base._LeftRightRightNode);
  dart.setLibraryUri(katex_base._LeftRightRightNode, I[115]);
  dart.setFieldSignature(katex_base._LeftRightRightNode, () => ({
    __proto__: dart.getFields(katex_base._LeftRightRightNode.__proto__),
    delim: dart.finalFieldType(dart.nullable(core.String))
  }));
  katex_base._MiddleNode = class _MiddleNode extends syntax_tree.TemporaryNode {};
  (katex_base._MiddleNode.new = function(opts) {
    let delim = opts && 'delim' in opts ? opts.delim : null;
    this.delim = delim;
    katex_base._MiddleNode.__proto__.new.call(this);
    ;
  }).prototype = katex_base._MiddleNode.prototype;
  dart.addTypeTests(katex_base._MiddleNode);
  dart.addTypeCaches(katex_base._MiddleNode);
  dart.setLibraryUri(katex_base._MiddleNode, I[115]);
  dart.setFieldSignature(katex_base._MiddleNode, () => ({
    __proto__: dart.getFields(katex_base._MiddleNode.__proto__),
    delim: dart.finalFieldType(dart.nullable(core.String))
  }));
  katex_base._EndEnvironmentNode = class _EndEnvironmentNode extends syntax_tree.TemporaryNode {};
  (katex_base._EndEnvironmentNode.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    if (name == null) dart.nullFailed(I[116], 71, 38, "name");
    this.name = name;
    katex_base._EndEnvironmentNode.__proto__.new.call(this);
    ;
  }).prototype = katex_base._EndEnvironmentNode.prototype;
  dart.addTypeTests(katex_base._EndEnvironmentNode);
  dart.addTypeCaches(katex_base._EndEnvironmentNode);
  dart.setLibraryUri(katex_base._EndEnvironmentNode, I[115]);
  dart.setFieldSignature(katex_base._EndEnvironmentNode, () => ({
    __proto__: dart.getFields(katex_base._EndEnvironmentNode.__proto__),
    name: dart.finalFieldType(core.String)
  }));
  katex_base._accentHandler = function _accentHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[117], 136, 36, "parser");
    if (context == null) dart.nullFailed(I[117], 136, 60, "context");
    let base = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let isStretchy = !dart.test(katex_base.nonStretchyAccents.contains(context.funcName));
    let isShifty = !isStretchy || dart.test(katex_base.shiftyAccents.contains(context.funcName));
    return new accent$.AccentNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](base), label: dart.nullCheck(katex_base.accentCommandMapping[S.$_get](context.funcName)), isStretchy: isStretchy, isShifty: isShifty});
  };
  katex_base._textAccentHandler = function _textAccentHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[117], 164, 40, "parser");
    if (context == null) dart.nullFailed(I[117], 164, 64, "context");
    let base = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    if (symbol$.SymbolNode.is(base)) {
      return base.withSymbol(dart.notNull(base.symbol) + dart.nullCheck(katex_base.textUnicodeAccentMapping[S.$_get](context.funcName)));
    }
    if (syntax_tree.EquationRowNode.is(base) && base.children[S.$length] === 1) {
      let node = base.children[S.$_get](0);
      if (symbol$.SymbolNode.is(node)) {
        return node.withSymbol(dart.notNull(node.symbol) + dart.nullCheck(katex_base.textUnicodeAccentMapping[S.$_get](context.funcName)));
      }
    }
    return new accent$.AccentNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](base), label: dart.nullCheck(katex_base.accentCommandMapping[S.$_get](context.funcName)), isStretchy: false, isShifty: true});
  };
  katex_base._accentUnderHandler = function _accentUnderHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[118], 50, 41, "parser");
    if (context == null) dart.nullFailed(I[118], 50, 65, "context");
    let base = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new accent_under.AccentUnderNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](base), label: dart.nullCheck(katex_base.accentUnderMapping[S.$_get](context.funcName))});
  };
  katex_base._throwExceptionHandler = function _throwExceptionHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[119], 35, 44, "parser");
    if (context == null) dart.nullFailed(I[119], 35, 68, "context");
    dart.throw(new parse_error.ParseException.new(dart.str(context.funcName) + " valid only within array environment"));
  };
  katex_base._arrowHandler = function _arrowHandler(parser, context) {
    let t80, t80$;
    if (parser == null) dart.nullFailed(I[120], 76, 35, "parser");
    if (context == null) dart.nullFailed(I[120], 76, 59, "context");
    let below = parser.parseArgNode({mode: null, optional: true});
    let above = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new stretchy_op.StretchyOpNode.new({above: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](above), below: (t80 = below, t80 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t80)), symbol: (t80$ = katex_base.arrowCommandMapping[S.$_get](context.funcName), t80$ == null ? context.funcName : t80$)});
  };
  katex_base._breakHandler = function _breakHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[121], 31, 35, "parser");
    if (context == null) dart.nullFailed(I[121], 31, 59, "context");
    return new space.SpaceNode.new({height: size$.Measurement.zero, width: size$.Measurement.zero, breakPenalty: context.funcName === "\\nobreak" ? 10000 : 0, mode: parser.mode});
  };
  katex_base._charHandler = function _charHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[122], 7, 34, "parser");
    if (context == null) dart.nullFailed(I[122], 7, 58, "context");
    let arg = parser$.assertNodeType(syntax_tree.EquationRowNode, parser.parseArgNode({mode: null, optional: false}));
    let number = arg.children[S.$map](core.String, dart.fn(child => {
      if (child == null) dart.nullFailed(I[122], 11, 13, "child");
      return parser$.assertNodeType(symbol$.SymbolNode, child).symbol;
    }, T$.GreenNodeToString()))[S.$join]("");
    let code = core.int.tryParse(number);
    if (code == null) {
      dart.throw(new parse_error.ParseException.new("\\@char has non-numeric argument " + dart.str(number)));
    }
    return new symbol$.SymbolNode.new({symbol: core.String.fromCharCode(code), mode: parser.mode, overrideAtomType: syntax_tree.AtomType.ord});
  };
  katex_base._textcolorHandler = function _textcolorHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[123], 40, 39, "parser");
    if (context == null) dart.nullFailed(I[123], 40, 63, "context");
    let color = dart.nullCheck(parser.parseArgColor({optional: false}));
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({color: color}), children: syntax_tree['GreenNodeWrappingExt|expandEquationRow'](body)});
  };
  katex_base._colorHandler = function _colorHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[123], 49, 35, "parser");
    if (context == null) dart.nullFailed(I[123], 49, 59, "context");
    let color = parser.parseArgColor({optional: false});
    let body = parser.parseExpression({breakOnInfix: true, breakOnTokenText: context.breakOnTokenText});
    return new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({color: color}), children: body});
  };
  katex_base._crHandler = function _crHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[114], 46, 32, "parser");
    if (context == null) dart.nullFailed(I[114], 46, 56, "context");
    let size = parser.parseArgSize({optional: true});
    let newRow = context.funcName === "\\cr";
    let newLine = false;
    if (!newRow) {
      if (dart.test(parser.settings.displayMode) && dart.test(parser.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline " + "does nothing in display mode"))) {
        newLine = false;
      } else {
        newLine = true;
      }
    }
    return new katex_base.CrNode.new({newLine: newLine, newRow: newRow, size: size});
  };
  katex_base._checkDelimiter = function _checkDelimiter(delim, context) {
    if (delim == null) dart.nullFailed(I[124], 156, 35, "delim");
    if (context == null) dart.nullFailed(I[124], 156, 58, "context");
    if (symbol$.SymbolNode.is(delim)) {
      if (dart.test(katex_base._delimiterSymbols[S.$any](dart.fn(symbol => {
        if (symbol == null) dart.nullFailed(I[124], 158, 32, "symbol");
        return symbol.symbol == delim.symbol && symbol.variantForm == delim.variantForm;
      }, T$.TexSymbolConfigTobool())))) {
        if (delim.symbol === "<" || delim.symbol === "lt") {
          return "⟨";
        } else if (delim.symbol === ">" || delim.symbol === "gt") {
          return "⟩";
        } else if (delim.symbol === ".") {
          return null;
        } else {
          return delim.symbol;
        }
      } else {
        dart.throw(new parse_error.ParseException.new("Invalid delimiter '" + dart.str(delim.symbol) + "' after '" + dart.str(context.funcName) + "'"));
      }
    } else {
      dart.throw(new parse_error.ParseException.new("Invalid delimiter type '" + dart.str(dart.runtimeType(delim)) + "'"));
    }
  };
  katex_base._delimSizeHandler = function _delimSizeHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[124], 180, 39, "parser");
    if (context == null) dart.nullFailed(I[124], 180, 63, "context");
    let delimArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let delim = katex_base._checkDelimiter(delimArg, context);
    return delim == null ? new space.SpaceNode.new({height: size$.Measurement.zero, width: size$.Measurement.zero, mode: types.Mode.math}) : new symbol$.SymbolNode.new({symbol: delim, overrideAtomType: katex_base._delimiterTypes[S.$_get](context.funcName), overrideFont: new options$.FontOptions.new({fontFamily: "Size" + dart.str(katex_base._delimiterSizes[S.$_get](context.funcName))})});
  };
  katex_base._rightHandler = function _rightHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[124], 204, 35, "parser");
    if (context == null) dart.nullFailed(I[124], 204, 59, "context");
    let delimArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    return new katex_base._LeftRightRightNode.new({delim: katex_base._checkDelimiter(delimArg, context)});
  };
  katex_base._leftHandler = function _leftHandler(parser, context) {
    let t80, t80$;
    if (parser == null) dart.nullFailed(I[124], 211, 34, "parser");
    if (context == null) dart.nullFailed(I[124], 211, 58, "context");
    let leftArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let delim = katex_base._checkDelimiter(leftArg, context);
    t80 = parser;
    t80.leftrightDepth = dart.notNull(t80.leftrightDepth) + 1;
    let body = parser.parseExpression({breakOnInfix: false});
    t80$ = parser;
    t80$.leftrightDepth = dart.notNull(t80$.leftrightDepth) - 1;
    parser.expect("\\right", {consume: false});
    let rightArg = parser.parseFunction(null, null, null);
    let right = parser$.assertNodeType(katex_base._LeftRightRightNode, rightArg);
    let splittedBody = T$.JSArrayOfListOfGreenNode().of([T$.JSArrayOfGreenNode().of([])]);
    let middles = T$.JSArrayOfStringN().of([]);
    for (let element of body) {
      if (katex_base._MiddleNode.is(element)) {
        splittedBody[S.$add](T$.JSArrayOfGreenNode().of([]));
        middles[S.$add](element.delim === "." ? null : element.delim);
      } else {
        splittedBody[S.$last][S.$add](element);
      }
    }
    return new left_right.LeftRightNode.new({leftDelim: delim === "." ? null : delim, rightDelim: right.delim === "." ? null : right.delim, body: splittedBody[S.$map](syntax_tree.EquationRowNode, dart.fn(part => {
        if (part == null) dart.nullFailed(I[124], 239, 15, "part");
        return syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](part);
      }, T$.ListOfGreenNodeToEquationRowNode()))[S.$toList]({growable: false}), middle: middles});
  };
  katex_base._middleHandler = function _middleHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[124], 254, 36, "parser");
    if (context == null) dart.nullFailed(I[124], 254, 60, "context");
    let delimArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let delim = katex_base._checkDelimiter(delimArg, context);
    if (dart.notNull(parser.leftrightDepth) <= 0) {
      dart.throw(new parse_error.ParseException.new("\\middle without preceding \\left"));
    }
    let contexts = parser.argParsingContexts[S.$toList]({growable: false});
    let lastContext = contexts[S.$_get](dart.notNull(contexts[S.$length]) - 2);
    if (lastContext.funcName !== "\\left") {
      dart.throw(new parse_error.ParseException.new("\\middle must be within \\left and \\right"));
    }
    return new katex_base._MiddleNode.new({delim: delim});
  };
  katex_base._colorboxHandler = function _colorboxHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[125], 43, 38, "parser");
    if (context == null) dart.nullFailed(I[125], 43, 62, "context");
    let color = parser.parseArgColor({optional: false});
    let body = dart.nullCheck(parser.parseArgNode({mode: types.Mode.text, optional: false}));
    return new enclosure.EnclosureNode.new({backgroundcolor: color, base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body), hasBorder: false, verticalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.3), horizontalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.3)});
  };
  katex_base._fcolorboxHandler = function _fcolorboxHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[125], 57, 39, "parser");
    if (context == null) dart.nullFailed(I[125], 57, 63, "context");
    let borderColor = dart.nullCheck(parser.parseArgColor({optional: false}));
    let color = dart.nullCheck(parser.parseArgColor({optional: false}));
    let body = dart.nullCheck(parser.parseArgNode({mode: types.Mode.text, optional: false}));
    return new enclosure.EnclosureNode.new({hasBorder: true, bordercolor: borderColor, backgroundcolor: color, base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body), verticalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.3), horizontalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.3)});
  };
  katex_base._fboxHandler = function _fboxHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[125], 73, 34, "parser");
    if (context == null) dart.nullFailed(I[125], 73, 58, "context");
    let body = parser.parseArgHbox({optional: false});
    return new enclosure.EnclosureNode.new({hasBorder: true, base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body), verticalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.3), horizontalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.3)});
  };
  katex_base._cancelHandler = function _cancelHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[125], 85, 36, "parser");
    if (context == null) dart.nullFailed(I[125], 85, 60, "context");
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new enclosure.EnclosureNode.new({notation: dart.nullCheck((C[2458] || CT.C2458)[S.$_get](context.funcName)), hasBorder: false, base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body), verticalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.2), horizontalPadding: size$['MeasurementExtOnNum|get#cssEm'](0.2)});
  };
  katex_base._enviromentHandler = function _enviromentHandler(parser, context) {
    let t82, t81, t80;
    if (parser == null) dart.nullFailed(I[116], 29, 40, "parser");
    if (context == null) dart.nullFailed(I[116], 29, 64, "context");
    let nameGroup = dart.nullCheck(parser.parseArgNode({mode: types.Mode.text, optional: false}));
    if (dart.test(nameGroup.children[S.$any](dart.fn(element => !symbol$.SymbolNode.is(element), T$.GreenNodeNTobool())))) {
      dart.throw(new parse_error.ParseException.new("Invalid environment name"));
    }
    let envName = nameGroup.children[S.$map](core.String, dart.fn(node => symbol$.SymbolNode.as(node).symbol, T$.GreenNodeNToString()))[S.$join]();
    if (context.funcName === "\\begin") {
      if (!dart.test(define_environment.environments[S.$containsKey](envName))) {
        dart.throw(new parse_error.ParseException.new("No such environment: " + dart.str(envName)));
      }
      let env = dart.nullCheck(define_environment.environments[S.$_get](envName));
      let result = (t80 = env, t81 = parser, t82 = new define_environment.EnvContext.new({mode: parser.mode, envName: envName}), t80.handler(t81, t82));
      parser.expect("\\end", {consume: false});
      let endNameToken = parser.nextToken;
      let end = parser$.assertNodeType(katex_base._EndEnvironmentNode, parser.parseFunction(null, null, null));
      if (end.name != envName) {
        dart.throw(new parse_error.ParseException.new("Mismatch: \\begin{" + dart.str(envName) + "} matched by \\end{" + dart.str(end.name) + "}", endNameToken));
      }
      return result;
    } else {
      return new katex_base._EndEnvironmentNode.new({name: envName});
    }
  };
  katex_base._fontHandler = function _fontHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[126], 50, 34, "parser");
    if (context == null) dart.nullFailed(I[126], 50, 58, "context");
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    let func = dart.test(katex_base.fontAliases[S.$containsKey](context.funcName)) ? katex_base.fontAliases[S.$_get](context.funcName) : context.funcName;
    return new style$.StyleNode.new({children: syntax_tree['GreenNodeWrappingExt|expandEquationRow'](body), optionsDiff: new options$.OptionsDiff.new({mathFontOptions: font.texMathFontOptions[S.$_get](func)})});
  };
  katex_base._boldSymbolHandler = function _boldSymbolHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[126], 63, 40, "parser");
    if (context == null) dart.nullFailed(I[126], 63, 64, "context");
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new style$.StyleNode.new({children: syntax_tree['GreenNodeWrappingExt|expandEquationRow'](body), optionsDiff: new options$.OptionsDiff.new({mathFontOptions: font.texMathFontOptions[S.$_get]("\\boldsymbol")})});
  };
  katex_base._textFontHandler = function _textFontHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[126], 76, 38, "parser");
    if (context == null) dart.nullFailed(I[126], 76, 62, "context");
    let body = parser.parseExpression({breakOnInfix: true, breakOnTokenText: context.breakOnTokenText});
    let style = "\\math" + context.funcName[S.$substring](1);
    return new style$.StyleNode.new({children: body, optionsDiff: new options$.OptionsDiff.new({mathFontOptions: font.texMathFontOptions[S.$_get](style)})});
  };
  katex_base._fracHandler = function _fracHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[127], 66, 34, "parser");
    if (context == null) dart.nullFailed(I[127], 66, 58, "context");
    let numer = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    let denom = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return katex_base._internalFracHandler({funcName: context.funcName, numer: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](numer), denom: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](denom)});
  };
  katex_base._internalFracHandler = function _internalFracHandler(opts) {
    let funcName = opts && 'funcName' in opts ? opts.funcName : null;
    if (funcName == null) dart.nullFailed(I[127], 77, 19, "funcName");
    let numer = opts && 'numer' in opts ? opts.numer : null;
    if (numer == null) dart.nullFailed(I[127], 78, 28, "numer");
    let denom = opts && 'denom' in opts ? opts.denom : null;
    if (denom == null) dart.nullFailed(I[127], 79, 28, "denom");
    let hasBarLine = null;
    let leftDelim = null;
    let rightDelim = null;
    let size = null;
    switch (funcName) {
      case "\\cfrac":
      case "\\dfrac":
      case "\\frac":
      case "\\tfrac":
      {
        hasBarLine = true;
        break;
      }
      case "\\\\atopfrac":
      {
        hasBarLine = false;
        break;
      }
      case "\\dbinom":
      case "\\binom":
      case "\\tbinom":
      {
        hasBarLine = false;
        leftDelim = "(";
        rightDelim = ")";
        break;
      }
      case "\\\\bracefrac":
      {
        hasBarLine = false;
        leftDelim = "{";
        rightDelim = "}";
        break;
      }
      case "\\\\brackfrac":
      {
        hasBarLine = false;
        leftDelim = "[";
        rightDelim = "]";
        break;
      }
      default:
      {
        dart.throw(new parse_error.ParseException.new("Unrecognized genfrac command"));
      }
    }
    switch (funcName) {
      case "\\cfrac":
      case "\\dfrac":
      case "\\dbinom":
      {
        size = style$0.MathStyle.display;
        break;
      }
      case "\\tfrac":
      case "\\tbinom":
      {
        size = style$0.MathStyle.text;
        break;
      }
    }
    let res = new frac$.FracNode.new({numerator: numer, denominator: denom, barSize: dart.test(hasBarLine) ? null : size$.Measurement.zero, continued: funcName === "\\cfrac"});
    if (leftDelim != null || rightDelim != null) {
      res = new left_right.LeftRightNode.new({body: T$.JSArrayOfEquationRowNode().of([syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res)]), leftDelim: leftDelim, rightDelim: rightDelim});
    }
    if (size != null) {
      res = new style$.StyleNode.new({children: T$.JSArrayOfGreenNode().of([res]), optionsDiff: new options$.OptionsDiff.new({style: size})});
    }
    return res;
  };
  katex_base._overHandler = function _overHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[127], 149, 34, "parser");
    if (context == null) dart.nullFailed(I[127], 149, 58, "context");
    let replaceWith = null;
    switch (context.funcName) {
      case "\\over":
      {
        replaceWith = "\\frac";
        break;
      }
      case "\\choose":
      {
        replaceWith = "\\binom";
        break;
      }
      case "\\atop":
      {
        replaceWith = "\\\\atopfrac";
        break;
      }
      case "\\brace":
      {
        replaceWith = "\\\\bracefrac";
        break;
      }
      case "\\brack":
      {
        replaceWith = "\\\\brackfrac";
        break;
      }
      default:
      {
        dart.throw(new core.ArgumentError.new("Unrecognized infix genfrac command"));
      }
    }
    let numerBody = context.infixExistingArguments;
    let denomBody = parser.parseExpression({breakOnTokenText: context.breakOnTokenText, infixArgumentMode: true});
    return katex_base._internalFracHandler({funcName: replaceWith, numer: syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](numerBody), denom: syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](denomBody)});
  };
  katex_base._genfracHandler = function _genfracHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[127], 182, 37, "parser");
    if (context == null) dart.nullFailed(I[127], 182, 61, "context");
    let leftDelimArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let rightDelimArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let barSize = dart.nullCheck(parser.parseArgSize({optional: false}));
    let styleArg = dart.nullCheck(parser.parseArgNode({mode: types.Mode.text, optional: false}));
    let numer = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let denom = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let leftDelimNode = syntax_tree.EquationRowNode.is(leftDelimArg) ? leftDelimArg.children[S.$length] === 1 ? leftDelimArg.children[S.$first] : null : leftDelimArg;
    let rightDelimNode = syntax_tree.EquationRowNode.is(rightDelimArg) ? rightDelimArg.children[S.$length] === 1 ? rightDelimArg.children[S.$first] : null : rightDelimArg;
    let leftDelim = symbol$.SymbolNode.is(leftDelimNode) && leftDelimNode.atomType == syntax_tree.AtomType.open ? leftDelimNode.symbol : null;
    let rightDelim = symbol$.SymbolNode.is(rightDelimNode) && rightDelimNode.atomType == syntax_tree.AtomType.close ? rightDelimNode.symbol : null;
    let style = null;
    if (dart.test(syntax_tree['GreenNodeWrappingExt|expandEquationRow'](styleArg)[S.$isNotEmpty])) {
      let textOrd = parser$.assertNodeType(symbol$.SymbolNode, syntax_tree['GreenNodeWrappingExt|expandEquationRow'](styleArg)[S.$_get](0));
      style = core.int.tryParse(textOrd.symbol);
    }
    let res = new frac$.FracNode.new({numerator: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](numer), denominator: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](denom), barSize: barSize});
    if (leftDelim != null || rightDelim != null) {
      res = new left_right.LeftRightNode.new({body: T$.JSArrayOfEquationRowNode().of([syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res)]), leftDelim: leftDelim, rightDelim: rightDelim});
    }
    if (style != null) {
      res = new style$.StyleNode.new({children: T$.JSArrayOfGreenNode().of([res]), optionsDiff: new options$.OptionsDiff.new({style: style$0['MathStyleExtOnInt|toMathStyle'](style)})});
    }
    return res;
  };
  katex_base._aboveHandler = function _aboveHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[127], 240, 35, "parser");
    if (context == null) dart.nullFailed(I[127], 240, 59, "context");
    let numerBody = context.infixExistingArguments;
    let barSize = parser.parseArgSize({optional: false});
    let denomBody = parser.parseExpression({breakOnTokenText: context.breakOnTokenText, infixArgumentMode: true});
    return new frac$.FracNode.new({numerator: syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](numerBody), denominator: syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'](denomBody), barSize: barSize});
  };
  katex_base._aboveFracHandler = function _aboveFracHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[127], 254, 39, "parser");
    if (context == null) dart.nullFailed(I[127], 254, 63, "context");
    let numer = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    let barSize = dart.nullCheck(parser.parseArgSize({optional: false}));
    let denom = dart.nullCheck(parser.parseArgNode({mode: types.Mode.math, optional: false}));
    return new frac$.FracNode.new({numerator: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](numer), denominator: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](denom), barSize: barSize});
  };
  katex_base._horizBraceHandler = function _horizBraceHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[128], 31, 40, "parser");
    if (context == null) dart.nullFailed(I[128], 31, 64, "context");
    let base = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    let scripts = parser.parseScripts();
    let res = base;
    if (context.funcName === "\\overbrace") {
      res = new accent$.AccentNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), label: "⏞", isStretchy: true, isShifty: false});
      if (scripts.superscript != null) {
        res = new over.OverNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), above: dart.nullCheck(scripts.superscript)});
      }
      if (scripts.subscript != null) {
        res = new under.UnderNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), below: dart.nullCheck(scripts.subscript)});
      }
      return res;
    } else {
      res = new accent_under.AccentUnderNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), label: "⏟"});
      if (scripts.subscript != null) {
        res = new under.UnderNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), below: dart.nullCheck(scripts.subscript)});
      }
      if (scripts.superscript != null) {
        res = new over.OverNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](res), above: dart.nullCheck(scripts.superscript)});
      }
      return res;
    }
  };
  katex_base._kernHandler = function _kernHandler(parser, context) {
    let t80;
    if (parser == null) dart.nullFailed(I[129], 33, 34, "parser");
    if (context == null) dart.nullFailed(I[129], 33, 58, "context");
    let size = (t80 = parser.parseArgSize({optional: false}), t80 == null ? size$.Measurement.zero : t80);
    let mathFunction = context.funcName[S.$_get](1) === "m";
    let muUnit = size.unit == size$.Unit.mu;
    if (mathFunction) {
      if (!muUnit) {
        parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + dart.str(context.funcName) + " supports only mu units, " + "not " + dart.str(size.unit) + " units");
      }
      if (parser.mode != types.Mode.math) {
        parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + dart.str(context.funcName) + " works only in math mode");
      }
    } else {
      if (muUnit) {
        parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + dart.str(context.funcName) + " doesn't support mu units");
      }
    }
    return new space.SpaceNode.new({height: size$.Measurement.zero, width: size, mode: parser.mode});
  };
  katex_base._mathLeftHandler = function _mathLeftHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[130], 39, 38, "parser");
    if (context == null) dart.nullFailed(I[130], 39, 62, "context");
    let outerMode = parser.mode;
    parser.switchMode(types.Mode.math);
    let close = context.funcName === "\\(" ? "\\)" : "$";
    let body = parser.parseExpression({breakOnInfix: false, breakOnTokenText: close});
    parser.expect(close);
    parser.switchMode(outerMode);
    return new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({style: style$0.MathStyle.text}), children: body});
  };
  katex_base._mathRightHandler = function _mathRightHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[130], 55, 39, "parser");
    if (context == null) dart.nullFailed(I[130], 55, 63, "context");
    dart.throw(new parse_error.ParseException.new("Mismatched " + dart.str(context.funcName)));
  };
  katex_base._mclassHandler = function _mclassHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[131], 39, 36, "parser");
    if (context == null) dart.nullFailed(I[131], 39, 60, "context");
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new syntax_tree.EquationRowNode.new({children: syntax_tree['GreenNodeWrappingExt|expandEquationRow'](body), overrideType: (C[2463] || CT.C2463)[S.$_get](context.funcName)});
  };
  katex_base._parseNaryOperator = function _parseNaryOperator(command, parser, context) {
    let t80, t80$;
    if (command == null) dart.nullFailed(I[132], 90, 10, "command");
    if (parser == null) dart.nullFailed(I[132], 91, 13, "parser");
    if (context == null) dart.nullFailed(I[132], 92, 19, "context");
    let scriptsResult = parser.parseScripts({allowLimits: true});
    let arg = (t80 = parser.parseAtom(context.breakOnTokenText), t80 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t80));
    return new nary_op.NaryOperatorNode.new({operator: dart.nullCheck(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$_get](command)).symbol, lowerLimit: scriptsResult.subscript, upperLimit: scriptsResult.superscript, naryand: (t80$ = arg, t80$ == null ? syntax_tree.EquationRowNode.empty() : t80$), limits: scriptsResult.limits, allowLargeOp: command === "\\smallint" ? false : true});
  };
  katex_base._parseMathFunction = function _parseMathFunction(funcNameBase, parser, context, opts) {
    let t80, t80$, t80$0;
    if (funcNameBase == null) dart.nullFailed(I[132], 111, 15, "funcNameBase");
    if (parser == null) dart.nullFailed(I[132], 111, 39, "parser");
    if (context == null) dart.nullFailed(I[132], 111, 63, "context");
    let defaultLimits = opts && 'defaultLimits' in opts ? opts.defaultLimits : false;
    if (defaultLimits == null) dart.nullFailed(I[132], 112, 11, "defaultLimits");
    let scriptsResult = parser.parseScripts({allowLimits: true});
    let arg = null;
    arg = (t80$ = (t80 = parser.parseAtom(context.breakOnTokenText), t80 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t80)), t80$ == null ? syntax_tree.EquationRowNode.empty() : t80$);
    let limits = (t80$0 = scriptsResult.limits, t80$0 == null ? defaultLimits : t80$0);
    let base = syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](funcNameBase);
    if (scriptsResult.subscript == null && scriptsResult.superscript == null) {
      return new $function.FunctionNode.new({functionName: base, argument: arg});
    }
    if (dart.test(limits)) {
      let functionName = base;
      if (scriptsResult.subscript != null) {
        functionName = syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](new under.UnderNode.new({base: functionName, below: dart.nullCheck(scriptsResult.subscript)}));
      }
      if (scriptsResult.superscript != null) {
        functionName = syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](new over.OverNode.new({base: functionName, above: dart.nullCheck(scriptsResult.superscript)}));
      }
      return new $function.FunctionNode.new({functionName: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](functionName), argument: arg});
    } else {
      return new $function.FunctionNode.new({functionName: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](new multiscripts$.MultiscriptsNode.new({base: base, sub: scriptsResult.subscript, sup: scriptsResult.superscript})), argument: arg});
    }
  };
  katex_base._bigOpHandler = function _bigOpHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[132], 173, 35, "parser");
    if (context == null) dart.nullFailed(I[132], 173, 59, "context");
    let fName = context.funcName.length === 1 ? dart.nullCheck(katex_base.singleCharBigOps[S.$_get](context.funcName)) : context.funcName;
    return katex_base._parseNaryOperator(fName, parser, context);
  };
  katex_base._mathFunctionHandler = function _mathFunctionHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[132], 220, 42, "parser");
    if (context == null) dart.nullFailed(I[132], 220, 66, "context");
    return katex_base._parseMathFunction(symbol$.stringToNode(context.funcName[S.$substring](1), types.Mode.text), parser, context, {defaultLimits: false});
  };
  katex_base._mathLimitsHandler = function _mathLimitsHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[132], 239, 40, "parser");
    if (context == null) dart.nullFailed(I[132], 239, 64, "context");
    return katex_base._parseMathFunction(symbol$.stringToNode(context.funcName[S.$substring](1), types.Mode.text), parser, context, {defaultLimits: true});
  };
  katex_base._integralHandler = function _integralHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[132], 255, 38, "parser");
    if (context == null) dart.nullFailed(I[132], 255, 62, "context");
    let fName = context.funcName.length === 1 ? dart.nullCheck(katex_base.singleCharIntegrals[S.$_get](context.funcName)) : context.funcName;
    return katex_base._parseNaryOperator(fName, parser, context);
  };
  katex_base._operatorNameHandler = function _operatorNameHandler(parser, context) {
    let t80;
    if (parser == null) dart.nullFailed(I[133], 30, 42, "parser");
    if (context == null) dart.nullFailed(I[133], 30, 66, "context");
    let name = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    let scripts = parser.parseScripts({allowLimits: context.funcName === "\\operatorname*"});
    let body = (t80 = parser.parseGroup(context.funcName, {optional: false, greediness: 1, mode: null, consumeSpaces: true}), t80 == null ? syntax_tree.EquationRowNode.empty() : t80);
    name = new style$.StyleNode.new({children: syntax_tree['GreenNodeWrappingExt|expandEquationRow'](name), optionsDiff: new options$.OptionsDiff.new({mathFontOptions: font.texMathFontOptions[S.$_get]("\\mathrm")})});
    if (!dart.test(scripts.empty)) {
      if (scripts.limits === true) {
        name = scripts.superscript != null ? new over.OverNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](name), above: dart.nullCheck(scripts.superscript)}) : name;
        name = scripts.subscript != null ? new under.UnderNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](name), below: dart.nullCheck(scripts.subscript)}) : name;
      } else {
        name = new multiscripts$.MultiscriptsNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](name), sub: scripts.subscript, sup: scripts.superscript});
      }
    }
    return new $function.FunctionNode.new({functionName: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](name), argument: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body)});
  };
  katex_base._phantomHandler = function _phantomHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[134], 31, 37, "parser");
    if (context == null) dart.nullFailed(I[134], 31, 61, "context");
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new phantom.PhantomNode.new({phantomChild: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body), zeroHeight: context.funcName === "\\hphantom", zeroDepth: context.funcName === "\\hphantom", zeroWidth: context.funcName === "\\vphantom"});
  };
  katex_base._raiseBoxHandler = function _raiseBoxHandler(parser, context) {
    let t80;
    if (parser == null) dart.nullFailed(I[135], 30, 38, "parser");
    if (context == null) dart.nullFailed(I[135], 30, 62, "context");
    let dy = (t80 = parser.parseArgSize({optional: false}), t80 == null ? size$.Measurement.zero : t80);
    let body = parser.parseArgHbox({optional: false});
    return new raise_box.RaiseBoxNode.new({body: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body), dy: dy});
  };
  katex_base._ruleHandler = function _ruleHandler(parser, context) {
    let t80, t80$, t80$0;
    if (parser == null) dart.nullFailed(I[136], 30, 34, "parser");
    if (context == null) dart.nullFailed(I[136], 30, 58, "context");
    let shift = (t80 = parser.parseArgSize({optional: true}), t80 == null ? size$.Measurement.zero : t80);
    let width = (t80$ = parser.parseArgSize({optional: false}), t80$ == null ? size$.Measurement.zero : t80$);
    let height = (t80$0 = parser.parseArgSize({optional: false}), t80$0 == null ? size$.Measurement.zero : t80$0);
    return new space.SpaceNode.new({height: height, width: width, shift: shift, fill: true, mode: types.Mode.math});
  };
  katex_base._sizingHandler = function _sizingHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[137], 48, 36, "parser");
    if (context == null) dart.nullFailed(I[137], 48, 60, "context");
    let body = parser.parseExpression({breakOnInfix: false, breakOnTokenText: context.breakOnTokenText});
    return new style$.StyleNode.new({children: body, optionsDiff: new options$.OptionsDiff.new({size: size$.MathSize.values[S.$_get](katex_base._sizeFuncs[S$.$indexOf](context.funcName))})});
  };
  katex_base._sqrtHandler = function _sqrtHandler(parser, context) {
    let t80;
    if (parser == null) dart.nullFailed(I[138], 33, 34, "parser");
    if (context == null) dart.nullFailed(I[138], 33, 58, "context");
    let index = parser.parseArgNode({mode: null, optional: true});
    let body = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    return new sqrt.SqrtNode.new({index: (t80 = index, t80 == null ? null : syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](t80)), base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](body)});
  };
  katex_base._stylingHandler = function _stylingHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[139], 39, 37, "parser");
    if (context == null) dart.nullFailed(I[139], 39, 61, "context");
    let body = parser.parseExpression({breakOnInfix: true, breakOnTokenText: context.breakOnTokenText});
    let style = style$0.parseMathStyle(context.funcName[S.$substring](1, context.funcName.length - 5));
    return new style$.StyleNode.new({children: body, optionsDiff: new options$.OptionsDiff.new({style: style})});
  };
  katex_base._textHandler = function _textHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[140], 41, 34, "parser");
    if (context == null) dart.nullFailed(I[140], 41, 58, "context");
    let body = dart.nullCheck(parser.parseArgNode({mode: types.Mode.text, optional: false}));
    let fontOptions = font.texTextFontOptions[S.$_get](context.funcName);
    if (fontOptions == null) return body;
    return new style$.StyleNode.new({optionsDiff: new options$.OptionsDiff.new({textFontOptions: fontOptions}), children: syntax_tree['GreenNodeWrappingExt|expandEquationRow'](body)});
  };
  katex_base._underOverHandler = function _underOverHandler(parser, context) {
    if (parser == null) dart.nullFailed(I[141], 32, 39, "parser");
    if (context == null) dart.nullFailed(I[141], 32, 63, "context");
    let shiftedArg = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    let baseArg = dart.nullCheck(parser.parseArgNode({mode: null, optional: false}));
    if (context.funcName === "\\underset") {
      return new under.UnderNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](baseArg), below: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](shiftedArg)});
    } else {
      return new over.OverNode.new({base: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](baseArg), above: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](shiftedArg), stackRel: context.funcName === "\\stackrel"});
    }
  };
  dart.defineLazy(katex_base, {
    /*katex_base.katexBaseFunctionEntries*/get katexBaseFunctionEntries() {
      return C[2464] || CT.C2464;
    },
    /*katex_base._accentEntries*/get _accentEntries() {
      return C[2600] || CT.C2600;
    },
    /*katex_base.nonStretchyAccents*/get nonStretchyAccents() {
      return C[2601] || CT.C2601;
    },
    /*katex_base.shiftyAccents*/get shiftyAccents() {
      return C[2602] || CT.C2602;
    },
    /*katex_base.accentCommandMapping*/get accentCommandMapping() {
      return C[2603] || CT.C2603;
    },
    /*katex_base.textUnicodeAccentMapping*/get textUnicodeAccentMapping() {
      return C[2604] || CT.C2604;
    },
    /*katex_base._accentUnderEntries*/get _accentUnderEntries() {
      return C[2605] || CT.C2605;
    },
    /*katex_base.accentUnderMapping*/get accentUnderMapping() {
      return C[2606] || CT.C2606;
    },
    /*katex_base._arrayEntries*/get _arrayEntries() {
      return C[2607] || CT.C2607;
    },
    /*katex_base._arrowEntries*/get _arrowEntries() {
      return C[2608] || CT.C2608;
    },
    /*katex_base.arrowCommandMapping*/get arrowCommandMapping() {
      return C[2609] || CT.C2609;
    },
    /*katex_base._breakEntries*/get _breakEntries() {
      return C[2610] || CT.C2610;
    },
    /*katex_base._charEntries*/get _charEntries() {
      return C[2611] || CT.C2611;
    },
    /*katex_base._colorEntries*/get _colorEntries() {
      return C[2612] || CT.C2612;
    },
    /*katex_base._crEntries*/get _crEntries() {
      return C[2613] || CT.C2613;
    },
    /*katex_base._delimSizingEntries*/get _delimSizingEntries() {
      return C[2614] || CT.C2614;
    },
    /*katex_base._delimiterTypes*/get _delimiterTypes() {
      return C[2615] || CT.C2615;
    },
    /*katex_base._delimiterSizes*/get _delimiterSizes() {
      return C[2616] || CT.C2616;
    },
    /*katex_base.delimiterCommands*/get delimiterCommands() {
      return C[2617] || CT.C2617;
    },
    /*katex_base._delimiterSymbols*/get _delimiterSymbols() {
      return katex_base.delimiterCommands[S.$map](symbols.TexSymbolConfig, dart.fn(command => {
        if (command == null) dart.nullFailed(I[124], 153, 11, "command");
        return dart.nullCheck(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$_get](command));
      }, T$.StringToTexSymbolConfig()))[S.$toList]({growable: false});
    },
    /*katex_base._encloseEntries*/get _encloseEntries() {
      return C[2618] || CT.C2618;
    },
    /*katex_base._environmentEntries*/get _environmentEntries() {
      return C[2619] || CT.C2619;
    },
    /*katex_base._fontEntries*/get _fontEntries() {
      return C[2620] || CT.C2620;
    },
    /*katex_base.fontAliases*/get fontAliases() {
      return C[2621] || CT.C2621;
    },
    /*katex_base._genfracEntries*/get _genfracEntries() {
      return C[2622] || CT.C2622;
    },
    /*katex_base._horizBraceEntries*/get _horizBraceEntries() {
      return C[2623] || CT.C2623;
    },
    /*katex_base._kernEntries*/get _kernEntries() {
      return C[2624] || CT.C2624;
    },
    /*katex_base._mathEntries*/get _mathEntries() {
      return C[2625] || CT.C2625;
    },
    /*katex_base._mclassEntries*/get _mclassEntries() {
      return C[2626] || CT.C2626;
    },
    /*katex_base._opEntries*/get _opEntries() {
      return C[2627] || CT.C2627;
    },
    /*katex_base.singleCharBigOps*/get singleCharBigOps() {
      return C[2628] || CT.C2628;
    },
    /*katex_base.mathFunctions*/get mathFunctions() {
      return C[2564] || CT.C2564;
    },
    /*katex_base.mathLimits*/get mathLimits() {
      return C[2567] || CT.C2567;
    },
    /*katex_base.singleCharIntegrals*/get singleCharIntegrals() {
      return C[2629] || CT.C2629;
    },
    /*katex_base._operatorNameEntries*/get _operatorNameEntries() {
      return C[2630] || CT.C2630;
    },
    /*katex_base._phantomEntries*/get _phantomEntries() {
      return C[2631] || CT.C2631;
    },
    /*katex_base._raiseBoxEntries*/get _raiseBoxEntries() {
      return C[2632] || CT.C2632;
    },
    /*katex_base._ruleEntries*/get _ruleEntries() {
      return C[2633] || CT.C2633;
    },
    /*katex_base._sizeFuncs*/get _sizeFuncs() {
      return C[2585] || CT.C2585;
    },
    /*katex_base._sizingEntries*/get _sizingEntries() {
      return C[2634] || CT.C2634;
    },
    /*katex_base._sqrtEntries*/get _sqrtEntries() {
      return C[2635] || CT.C2635;
    },
    /*katex_base._stylingEntries*/get _stylingEntries() {
      return C[2636] || CT.C2636;
    },
    /*katex_base._textEntries*/get _textEntries() {
      return C[2637] || CT.C2637;
    },
    /*katex_base._underOverEntries*/get _underOverEntries() {
      return C[2638] || CT.C2638;
    }
  }, false);
  functions$.FunctionContext = class FunctionContext extends core.Object {
    get funcName() {
      return this[S$.funcName$1];
    }
    set funcName(value) {
      super.funcName = value;
    }
    get token() {
      return this[S$.token];
    }
    set token(value) {
      super.token = value;
    }
    get breakOnTokenText() {
      return this[S$.breakOnTokenText];
    }
    set breakOnTokenText(value) {
      super.breakOnTokenText = value;
    }
    get infixExistingArguments() {
      return this[S$.infixExistingArguments];
    }
    set infixExistingArguments(value) {
      super.infixExistingArguments = value;
    }
  };
  (functions$.FunctionContext.new = function(opts) {
    let funcName = opts && 'funcName' in opts ? opts.funcName : null;
    if (funcName == null) dart.nullFailed(I[142], 37, 19, "funcName");
    let token = opts && 'token' in opts ? opts.token : null;
    let breakOnTokenText = opts && 'breakOnTokenText' in opts ? opts.breakOnTokenText : null;
    let infixExistingArguments = opts && 'infixExistingArguments' in opts ? opts.infixExistingArguments : C[1538] || CT.C1538;
    if (infixExistingArguments == null) dart.nullFailed(I[142], 40, 10, "infixExistingArguments");
    this[S$.funcName$1] = funcName;
    this[S$.token] = token;
    this[S$.breakOnTokenText] = breakOnTokenText;
    this[S$.infixExistingArguments] = infixExistingArguments;
    ;
  }).prototype = functions$.FunctionContext.prototype;
  dart.addTypeTests(functions$.FunctionContext);
  dart.addTypeCaches(functions$.FunctionContext);
  dart.setLibraryUri(functions$.FunctionContext, I[143]);
  dart.setFieldSignature(functions$.FunctionContext, () => ({
    __proto__: dart.getFields(functions$.FunctionContext.__proto__),
    funcName: dart.finalFieldType(core.String),
    token: dart.finalFieldType(dart.nullable(token.Token)),
    breakOnTokenText: dart.finalFieldType(dart.nullable(core.String)),
    infixExistingArguments: dart.finalFieldType(core.List$(syntax_tree.GreenNode))
  }));
  const _is_FunctionSpec_default = Symbol('_is_FunctionSpec_default');
  functions$.FunctionSpec$ = dart.generic(T => {
    class FunctionSpec extends core.Object {
      get numArgs() {
        return this[S$.numArgs$1];
      }
      set numArgs(value) {
        super.numArgs = value;
      }
      get greediness() {
        return this[S$.greediness$1];
      }
      set greediness(value) {
        super.greediness = value;
      }
      get allowedInText() {
        return this[S$.allowedInText$1];
      }
      set allowedInText(value) {
        super.allowedInText = value;
      }
      get allowedInMath() {
        return this[S$.allowedInMath];
      }
      set allowedInMath(value) {
        super.allowedInMath = value;
      }
      get numOptionalArgs() {
        return this[S$.numOptionalArgs$1];
      }
      set numOptionalArgs(value) {
        super.numOptionalArgs = value;
      }
      get infix() {
        return this[S$.infix];
      }
      set infix(value) {
        super.infix = value;
      }
      get handler() {
        return this[S$.handler$1];
      }
      set handler(value) {
        super.handler = value;
      }
      get argModes() {
        return this[S$.argModes];
      }
      set argModes(value) {
        super.argModes = value;
      }
      get totalArgs() {
        return dart.notNull(this.numArgs) + dart.notNull(this.numOptionalArgs);
      }
    }
    (FunctionSpec.new = function(opts) {
      let numArgs = opts && 'numArgs' in opts ? opts.numArgs : null;
      if (numArgs == null) dart.nullFailed(I[142], 60, 19, "numArgs");
      let greediness = opts && 'greediness' in opts ? opts.greediness : 1;
      if (greediness == null) dart.nullFailed(I[142], 61, 10, "greediness");
      let allowedInText = opts && 'allowedInText' in opts ? opts.allowedInText : false;
      if (allowedInText == null) dart.nullFailed(I[142], 62, 10, "allowedInText");
      let allowedInMath = opts && 'allowedInMath' in opts ? opts.allowedInMath : true;
      if (allowedInMath == null) dart.nullFailed(I[142], 63, 10, "allowedInMath");
      let numOptionalArgs = opts && 'numOptionalArgs' in opts ? opts.numOptionalArgs : 0;
      if (numOptionalArgs == null) dart.nullFailed(I[142], 64, 10, "numOptionalArgs");
      let infix = opts && 'infix' in opts ? opts.infix : false;
      if (infix == null) dart.nullFailed(I[142], 65, 10, "infix");
      let handler = opts && 'handler' in opts ? opts.handler : null;
      if (handler == null) dart.nullFailed(I[142], 66, 19, "handler");
      let argModes = opts && 'argModes' in opts ? opts.argModes : null;
      this[S$.numArgs$1] = numArgs;
      this[S$.greediness$1] = greediness;
      this[S$.allowedInText$1] = allowedInText;
      this[S$.allowedInMath] = allowedInMath;
      this[S$.numOptionalArgs$1] = numOptionalArgs;
      this[S$.infix] = infix;
      this[S$.handler$1] = handler;
      this[S$.argModes] = argModes;
      ;
    }).prototype = FunctionSpec.prototype;
    dart.addTypeTests(FunctionSpec);
    FunctionSpec.prototype[_is_FunctionSpec_default] = true;
    dart.addTypeCaches(FunctionSpec);
    dart.setGetterSignature(FunctionSpec, () => ({
      __proto__: dart.getGetters(FunctionSpec.__proto__),
      totalArgs: core.int
    }));
    dart.setLibraryUri(FunctionSpec, I[143]);
    dart.setFieldSignature(FunctionSpec, () => ({
      __proto__: dart.getFields(FunctionSpec.__proto__),
      numArgs: dart.finalFieldType(core.int),
      greediness: dart.finalFieldType(core.int),
      allowedInText: dart.finalFieldType(core.bool),
      allowedInMath: dart.finalFieldType(core.bool),
      numOptionalArgs: dart.finalFieldType(core.int),
      infix: dart.finalFieldType(core.bool),
      handler: dart.finalFieldType(dart.fnType(T, [parser$.TexParser, functions$.FunctionContext])),
      argModes: dart.finalFieldType(dart.nullable(core.List$(dart.nullable(types.Mode))))
    }));
    return FunctionSpec;
  });
  functions$.FunctionSpec = functions$.FunctionSpec$();
  dart.addTypeTests(functions$.FunctionSpec, _is_FunctionSpec_default);
  functions$['RegisterFunctionExt|registerFunctions'] = function RegisterFunctionExt$124registerFunctions($this, entries) {
    if ($this == null) dart.nullFailed(I[142], 74, 8, "#this");
    if (entries == null) dart.nullFailed(I[142], 74, 58, "entries");
    entries[S.$forEach](dart.fn((key, value) => {
      if (key == null) dart.nullFailed(I[142], 75, 22, "key");
      if (value == null) dart.nullFailed(I[142], 75, 27, "value");
      for (let name of key) {
        $this[S.$_set](name, value);
      }
    }, T$.ListOfStringAndFunctionSpecOfGreenNodeTovoid()));
  };
  functions$['RegisterFunctionExt|get#registerFunctions'] = function RegisterFunctionExt$124get$35registerFunctions($this) {
    if ($this == null) dart.nullFailed(I[142], 74, 8, "#this");
    return dart.fn(entries => {
      if (entries == null) dart.nullFailed(I[142], 74, 58, "entries");
      return functions$['RegisterFunctionExt|registerFunctions']($this, entries);
    }, T$.MapOfListOfString$FunctionSpecOfGreenNodeTovoid());
  };
  dart.defineLazy(functions$, {
    /*functions$.functions*/get functions() {
      let t82;
      return t82 = new (T$.IdentityMapOfString$FunctionSpecOfGreenNode()).new(), (() => {
        functions$['RegisterFunctionExt|registerFunctions'](t82, katex_base.katexBaseFunctionEntries);
        functions$['RegisterFunctionExt|registerFunctions'](t82, katex_ext.katexExtFunctionEntries);
        return t82;
      })();
    }
  }, false);
  macros.MacroDefinition = class MacroDefinition extends core.Object {
    get expand() {
      return this[S$.expand];
    }
    set expand(value) {
      super.expand = value;
    }
    get unexpandable() {
      return this[S$.unexpandable];
    }
    set unexpandable(value) {
      super.unexpandable = value;
    }
    get expandable() {
      return !dart.test(this.unexpandable);
    }
  };
  (macros.MacroDefinition.new = function(expand, opts) {
    if (expand == null) dart.nullFailed(I[144], 40, 30, "expand");
    let unexpandable = opts && 'unexpandable' in opts ? opts.unexpandable : false;
    if (unexpandable == null) dart.nullFailed(I[144], 40, 44, "unexpandable");
    this[S$.expand] = expand;
    this[S$.unexpandable] = unexpandable;
    ;
  }).prototype = macros.MacroDefinition.prototype;
  (macros.MacroDefinition.fromString = function(output) {
    if (output == null) dart.nullFailed(I[144], 45, 37, "output");
    macros.MacroDefinition.new.call(this, dart.fn(context => {
      if (context == null) dart.nullFailed(I[144], 46, 15, "context");
      return macros.MacroExpansion.fromString(output, context);
    }, T$.MacroContextToMacroExpansion()));
  }).prototype = macros.MacroDefinition.prototype;
  (macros.MacroDefinition.fromCtxString = function(expand) {
    if (expand == null) dart.nullFailed(I[144], 47, 63, "expand");
    macros.MacroDefinition.new.call(this, dart.fn(context => {
      if (context == null) dart.nullFailed(I[144], 48, 15, "context");
      return macros.MacroExpansion.fromString(expand(context), context);
    }, T$.MacroContextToMacroExpansion()));
  }).prototype = macros.MacroDefinition.prototype;
  (macros.MacroDefinition.fromMacroExpansion = function(output) {
    if (output == null) dart.nullFailed(I[144], 49, 53, "output");
    macros.MacroDefinition.new.call(this, dart.fn(_ => {
      if (_ == null) dart.nullFailed(I[144], 50, 15, "_");
      return output;
    }, T$.MacroContextToMacroExpansion()), {unexpandable: output.unexpandable});
  }).prototype = macros.MacroDefinition.prototype;
  dart.addTypeTests(macros.MacroDefinition);
  dart.addTypeCaches(macros.MacroDefinition);
  dart.setGetterSignature(macros.MacroDefinition, () => ({
    __proto__: dart.getGetters(macros.MacroDefinition.__proto__),
    expandable: core.bool
  }));
  dart.setLibraryUri(macros.MacroDefinition, I[145]);
  dart.setFieldSignature(macros.MacroDefinition, () => ({
    __proto__: dart.getFields(macros.MacroDefinition.__proto__),
    expand: dart.finalFieldType(dart.fnType(macros.MacroExpansion, [macro_expander.MacroContext])),
    unexpandable: dart.finalFieldType(core.bool)
  }));
  macros.MacroExpansion = class MacroExpansion extends core.Object {
    get tokens() {
      return this[S$.tokens];
    }
    set tokens(value) {
      super.tokens = value;
    }
    get numArgs() {
      return this[S$.numArgs$2];
    }
    set numArgs(value) {
      super.numArgs = value;
    }
    get unexpandable() {
      return this[S$.unexpandable$1];
    }
    set unexpandable(value) {
      super.unexpandable = value;
    }
    static fromString(expansion, context) {
      if (expansion == null) dart.nullFailed(I[144], 65, 43, "expansion");
      if (context == null) dart.nullFailed(I[144], 65, 67, "context");
      let numArgs = 0;
      if (expansion[S.$contains]("#")) {
        let stripped = expansion[S$.$replaceAll](macros.MacroExpansion._strippedRegex, "");
        while (stripped[S.$contains]("#" + dart.str(numArgs + 1))) {
          numArgs = numArgs + 1;
        }
      }
      let bodyLexer = context.getNewLexer(expansion);
      let tokens = T$.JSArrayOfToken().of([]);
      let tok = bodyLexer.lex();
      while (tok.text !== "EOF") {
        tokens[S.$add](tok);
        tok = bodyLexer.lex();
      }
      return new macros.MacroExpansion.new({tokens: tokens[S.$reversed][S.$toList](), numArgs: numArgs});
    }
  };
  (macros.MacroExpansion.new = function(opts) {
    let tokens = opts && 'tokens' in opts ? opts.tokens : null;
    if (tokens == null) dart.nullFailed(I[144], 55, 19, "tokens");
    let numArgs = opts && 'numArgs' in opts ? opts.numArgs : null;
    if (numArgs == null) dart.nullFailed(I[144], 56, 19, "numArgs");
    let unexpandable = opts && 'unexpandable' in opts ? opts.unexpandable : false;
    if (unexpandable == null) dart.nullFailed(I[144], 57, 10, "unexpandable");
    this[S$.tokens] = tokens;
    this[S$.numArgs$2] = numArgs;
    this[S$.unexpandable$1] = unexpandable;
    ;
  }).prototype = macros.MacroExpansion.prototype;
  dart.addTypeTests(macros.MacroExpansion);
  dart.addTypeCaches(macros.MacroExpansion);
  dart.setLibraryUri(macros.MacroExpansion, I[145]);
  dart.setFieldSignature(macros.MacroExpansion, () => ({
    __proto__: dart.getFields(macros.MacroExpansion.__proto__),
    tokens: dart.finalFieldType(core.List$(token.Token)),
    numArgs: dart.finalFieldType(core.int),
    unexpandable: dart.finalFieldType(core.bool)
  }));
  dart.defineLazy(macros.MacroExpansion, {
    /*macros.MacroExpansion._strippedRegex*/get _strippedRegex() {
      return core.RegExp.new("##", {multiLine: true});
    }
  }, false);
  macros.defineMacro = function defineMacro(name, body) {
    if (name == null) dart.nullFailed(I[144], 84, 25, "name");
    if (body == null) dart.nullFailed(I[144], 84, 47, "body");
    macros.builtinMacros[S.$_set](name, body);
  };
  macros.newcommand = function newcommand(context, existsOK, nonexistsOK) {
    if (context == null) dart.nullFailed(I[144], 114, 32, "context");
    if (existsOK == null) dart.nullFailed(I[144], 114, 46, "existsOK");
    if (nonexistsOK == null) dart.nullFailed(I[144], 114, 61, "nonexistsOK");
    let arg = context.consumeArgs(1)[S.$_get](0);
    if (arg[S.$length] !== 1) {
      dart.throw(new parse_error.ParseException.new("\\newcommand's first argument must be a macro name"));
    }
    let name = arg[S.$_get](0).text;
    let exists = context.isDefined(name);
    if (dart.test(exists) && !dart.test(existsOK)) {
      dart.throw(new parse_error.ParseException.new("\\newcommand{" + dart.str(name) + "} attempting to redefine " + dart.str(name) + "; use \\renewcommand"));
    }
    if (!dart.test(exists) && !dart.test(nonexistsOK)) {
      dart.throw(new parse_error.ParseException.new("\\renewcommand{" + dart.str(name) + "} when command " + dart.str(name) + " " + "does not yet exist; use \\newcommand"));
    }
    let numArgs = 0;
    arg = context.consumeArgs(1)[S.$_get](0);
    if (arg[S.$length] === 1 && arg[S.$_get](0).text === "[") {
      let argText = "";
      let token = context.expandNextToken();
      while (token.text !== "]" && token.text !== "EOF") {
        argText = argText + dart.notNull(token.text);
        token = context.expandNextToken();
      }
      if (!dart.test(core.RegExp.new("^\\s*[0-9]+\\s*$").hasMatch(argText))) {
        dart.throw(new parse_error.ParseException.new("Invalid number of arguments: " + argText));
      }
      numArgs = core.int.parse(argText);
      arg = context.consumeArgs(1)[S.$_get](0);
    }
    context.macros.set(name, new macros.MacroDefinition.fromMacroExpansion(new macros.MacroExpansion.new({tokens: arg, numArgs: numArgs})));
    return "";
  };
  dart.defineLazy(macros, {
    /*macros.digitToNumber*/get digitToNumber() {
      return C[2639] || CT.C2639;
    },
    /*macros.latexRaiseA*/get latexRaiseA() {
      return dart.str(dart.notNull(dart.nullCheck(dart.nullCheck(font_metrics_data.fontMetricsData[S.$_get]("Main-Regular"))[S.$_get]("T"[S.$codeUnitAt](0))).height) - 0.7 * dart.notNull(dart.nullCheck(dart.nullCheck(font_metrics_data.fontMetricsData[S.$_get]("Main-Regular"))[S.$_get]("A"[S.$codeUnitAt](0))).height)) + "em";
    },
    /*macros.dotsByToken*/get dotsByToken() {
      return C[2640] || CT.C2640;
    },
    /*macros.builtinMacros*/get builtinMacros() {
      return new (T$.IdentityMapOfString$MacroDefinition()).from(["\\noexpand", new macros.MacroDefinition.new(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 237, 34, "context");
          let t = context.popToken();
          if (dart.test(context.isExpandable(t.text))) {
            t.noexpand = true;
            t.treatAsRelax = true;
          }
          return new macros.MacroExpansion.new({tokens: T$.JSArrayOfToken().of([t]), numArgs: 0});
        }, T$.MacroContextToMacroExpansion())), "\\expandafter", new macros.MacroDefinition.new(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 249, 37, "context");
          let t = context.popToken();
          context.expandOnce(true);
          return new macros.MacroExpansion.new({tokens: T$.JSArrayOfToken().of([t]), numArgs: 0});
        }, T$.MacroContextToMacroExpansion())), "\\@firstoftwo", new macros.MacroDefinition.new(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 262, 37, "context");
          let args = context.consumeArgs(2);
          return new macros.MacroExpansion.new({tokens: args[S.$_get](0), numArgs: 0});
        }, T$.MacroContextToMacroExpansion())), "\\@secondoftwo", new macros.MacroDefinition.new(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 269, 38, "context");
          let args = context.consumeArgs(2);
          return new macros.MacroExpansion.new({tokens: args[S.$_get](1), numArgs: 0});
        }, T$.MacroContextToMacroExpansion())), "\\@ifnextchar", new macros.MacroDefinition.new(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 278, 37, "context");
          let args = context.consumeArgs(3);
          context.consumeSpaces();
          let nextToken = context.future();
          if (args[S.$_get](0)[S.$length] === 1 && args[S.$_get](0)[S.$_get](0).text == nextToken.text) {
            return new macros.MacroExpansion.new({tokens: args[S.$_get](1), numArgs: 0});
          } else {
            return new macros.MacroExpansion.new({tokens: args[S.$_get](2), numArgs: 0});
          }
        }, T$.MacroContextToMacroExpansion())), "\\@ifstar", new macros.MacroDefinition.fromString("\\@ifnextchar *{\\@firstoftwo{#1}}"), "\\TextOrMath", new macros.MacroDefinition.new(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 296, 36, "context");
          let args = context.consumeArgs(2);
          if (context.mode == types.Mode.text) {
            return new macros.MacroExpansion.new({tokens: args[S.$_get](0), numArgs: 0});
          } else {
            return new macros.MacroExpansion.new({tokens: args[S.$_get](1), numArgs: 0});
          }
        }, T$.MacroContextToMacroExpansion())), "\\char", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 314, 44, "context");
          let token = context.popToken();
          let base = null;
          let number = null;
          if (token.text === "'") {
            base = 8;
            token = context.popToken();
          } else if (token.text === "\"") {
            base = 16;
            token = context.popToken();
          } else if (token.text === "`") {
            token = context.popToken();
            if (token.text[S.$_get](0) === "\\") {
              number = token.text[S.$codeUnitAt](1);
            } else if (token.text === "EOF") {
              dart.throw(new parse_error.ParseException.new("\\char` missing argument"));
            } else {
              number = token.text[S.$codeUnitAt](0);
            }
          } else {
            base = 10;
          }
          if (base != null) {
            number = macros.digitToNumber[S.$_get](token.text);
            if (number == null || dart.notNull(number) >= dart.notNull(base)) {
              dart.throw(new parse_error.ParseException.new("Invalid base-" + dart.str(base) + " digit " + dart.str(token.text)));
            }
            let digit = null;
            while ((digit = macros.digitToNumber[S.$_get](context.future().text)) != null && dart.nullCheck(digit) < dart.notNull(base)) {
              number = dart.nullCheck(number) * dart.notNull(base);
              number = dart.notNull(number) + dart.notNull(digit);
              context.popToken();
            }
          }
          return "\\@char{" + dart.str(number) + "}";
        }, T$.MacroContextToString())), "\\newcommand", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 358, 8, "context");
          return macros.newcommand(context, false, true);
        }, T$.MacroContextToString())), "\\renewcommand", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 360, 8, "context");
          return macros.newcommand(context, true, false);
        }, T$.MacroContextToString())), "\\providecommand", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 362, 8, "context");
          return macros.newcommand(context, true, true);
        }, T$.MacroContextToString())), "\\message", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 365, 47, "context");
          let arg = context.consumeArgs(1)[S.$_get](0);
          log.info(arg[S.$reversed][S.$map](core.String, dart.fn(token => {
            if (token == null) dart.nullFailed(I[144], 367, 28, "token");
            return token.text;
          }, T$.TokenToString()))[S.$join](""));
          return "";
        }, T$.MacroContextToString())), "\\errmessage", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 370, 50, "context");
          let arg = context.consumeArgs(1)[S.$_get](0);
          log.error(arg[S.$reversed][S.$map](core.String, dart.fn(token => {
            if (token == null) dart.nullFailed(I[144], 372, 29, "token");
            return token.text;
          }, T$.TokenToString()))[S.$join](""));
          return "";
        }, T$.MacroContextToString())), "\\show", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 375, 44, "context");
          let tok = context.popToken();
          let name = tok.text;
          log.info(dart.str(tok) + ", " + dart.str(context.macros.get(name)) + ", " + dart.str(functions$.functions[S.$_get](name)) + "," + dart.str(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$_get](name)) + ", " + dart.str(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.text))[S.$_get](name)));
          return "";
        }, T$.MacroContextToString())), "\\bgroup", new macros.MacroDefinition.fromString("{"), "\\egroup", new macros.MacroDefinition.fromString("}"), "\\lq", new macros.MacroDefinition.fromString("`"), "\\rq", new macros.MacroDefinition.fromString("'"), "ℬ", new macros.MacroDefinition.fromString("\\mathscr{B}"), "ℰ", new macros.MacroDefinition.fromString("\\mathscr{E}"), "ℱ", new macros.MacroDefinition.fromString("\\mathscr{F}"), "ℋ", new macros.MacroDefinition.fromString("\\mathscr{H}"), "ℐ", new macros.MacroDefinition.fromString("\\mathscr{I}"), "ℒ", new macros.MacroDefinition.fromString("\\mathscr{L}"), "ℳ", new macros.MacroDefinition.fromString("\\mathscr{M}"), "ℛ", new macros.MacroDefinition.fromString("\\mathscr{R}"), "ℭ", new macros.MacroDefinition.fromString("\\mathfrak{C}"), "ℌ", new macros.MacroDefinition.fromString("\\mathfrak{H}"), "ℨ", new macros.MacroDefinition.fromString("\\mathfrak{Z}"), "\\Bbbk", new macros.MacroDefinition.fromString("\\Bbb{k}"), "·", new macros.MacroDefinition.fromString("\\cdotp"), "\\ne", new macros.MacroDefinition.fromString("\\neq"), "≠", new macros.MacroDefinition.fromString("\\neq"), "∉", new macros.MacroDefinition.fromString("\\notin"), "⟂", new macros.MacroDefinition.fromString("\\perp"), "‼", new macros.MacroDefinition.fromString("\\mathclose{!\\mkern-0.8mu!}"), "∌", new macros.MacroDefinition.fromString("\\notni"), "⌜", new macros.MacroDefinition.fromString("\\ulcorner"), "⌝", new macros.MacroDefinition.fromString("\\urcorner"), "⌞", new macros.MacroDefinition.fromString("\\llcorner"), "⌟", new macros.MacroDefinition.fromString("\\lrcorner"), "©", new macros.MacroDefinition.fromString("\\copyright"), "®", new macros.MacroDefinition.fromString("\\textregistered"), "️", new macros.MacroDefinition.fromString("\\textregistered"), "\\ulcorner", new macros.MacroDefinition.fromString("\\@ulcorner"), "\\urcorner", new macros.MacroDefinition.fromString("\\@urcorner"), "\\llcorner", new macros.MacroDefinition.fromString("\\@llcorner"), "\\lrcorner", new macros.MacroDefinition.fromString("\\@lrcorner"), "\\vdots", new macros.MacroDefinition.fromString("\\mathord{\\varvdots\\rule{0pt}{15pt}}"), "⋮", new macros.MacroDefinition.fromString("\\vdots"), "\\varGamma", new macros.MacroDefinition.fromString("\\mathit{\\Gamma}"), "\\varDelta", new macros.MacroDefinition.fromString("\\mathit{\\Delta}"), "\\varTheta", new macros.MacroDefinition.fromString("\\mathit{\\Theta}"), "\\varLambda", new macros.MacroDefinition.fromString("\\mathit{\\Lambda}"), "\\varXi", new macros.MacroDefinition.fromString("\\mathit{\\Xi}"), "\\varPi", new macros.MacroDefinition.fromString("\\mathit{\\Pi}"), "\\varSigma", new macros.MacroDefinition.fromString("\\mathit{\\Sigma}"), "\\varUpsilon", new macros.MacroDefinition.fromString("\\mathit{\\Upsilon}"), "\\varPhi", new macros.MacroDefinition.fromString("\\mathit{\\Phi}"), "\\varPsi", new macros.MacroDefinition.fromString("\\mathit{\\Psi}"), "\\varOmega", new macros.MacroDefinition.fromString("\\mathit{\\Omega}"), "\\substack", new macros.MacroDefinition.fromString("\\begin{subarray}{c}#1\\end{subarray}"), "\\boxed", new macros.MacroDefinition.fromString("\\fbox{$\\displaystyle{#1}$}"), "\\iff", new macros.MacroDefinition.fromString("\\DOTSB\\;\\Longleftrightarrow\\;"), "\\implies", new macros.MacroDefinition.fromString("\\DOTSB\\;\\Longrightarrow\\;"), "\\impliedby", new macros.MacroDefinition.fromString("\\DOTSB\\;\\Longleftarrow\\;"), "\\dots", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 520, 44, "context");
          let thedots = "\\dotso";
          let next = context.expandAfterFuture().text;
          if (dart.test(macros.dotsByToken[S.$containsKey](next))) {
            thedots = dart.nullCheck(macros.dotsByToken[S.$_get](next));
          } else if (next.length >= 4 && next[S.$substring](0, 4) === "\\not") {
            thedots = "\\dotsb";
          } else if (dart.test(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$containsKey](next))) {
            let command = dart.nullCheck(dart.nullCheck(symbols.texSymbolCommandConfigs[S.$_get](types.Mode.math))[S.$_get](next));
            if (command.type == syntax_tree.AtomType.bin || command.type == syntax_tree.AtomType.rel) {
              thedots = "\\dotsb";
            }
          }
          return thedots;
        }, T$.MacroContextToString())), "\\dotso", new macros.MacroDefinition.fromString("\\ldots"), "\\dotsc", new macros.MacroDefinition.fromString("\\ldots"), "\\cdots", new macros.MacroDefinition.fromString("\\@cdots"), "\\dotsb", new macros.MacroDefinition.fromString("\\cdots"), "\\dotsm", new macros.MacroDefinition.fromString("\\cdots"), "\\dotsi", new macros.MacroDefinition.fromString("\\!\\cdots"), "\\dotsx", new macros.MacroDefinition.fromString("\\ldots\\,"), "\\DOTSI", new macros.MacroDefinition.fromString("\\relax"), "\\DOTSB", new macros.MacroDefinition.fromString("\\relax"), "\\DOTSX", new macros.MacroDefinition.fromString("\\relax"), "\\tmspace", new macros.MacroDefinition.fromString("\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"), "\\,", new macros.MacroDefinition.fromString("\\tmspace+{3mu}{.1667em}"), "\\thinspace", new macros.MacroDefinition.fromString("\\,"), "\\>", new macros.MacroDefinition.fromString("\\mskip{4mu}"), "\\:", new macros.MacroDefinition.fromString("\\tmspace+{4mu}{.2222em}"), "\\medspace", new macros.MacroDefinition.fromString("\\:"), "\\;", new macros.MacroDefinition.fromString("\\tmspace+{5mu}{.2777em}"), "\\thickspace", new macros.MacroDefinition.fromString("\\;"), "\\!", new macros.MacroDefinition.fromString("\\tmspace-{3mu}{.1667em}"), "\\negthinspace", new macros.MacroDefinition.fromString("\\!"), "\\negmedspace", new macros.MacroDefinition.fromString("\\tmspace-{4mu}{.2222em}"), "\\negthickspace", new macros.MacroDefinition.fromString("\\tmspace-{5mu}{.277em}"), "\\enspace", new macros.MacroDefinition.fromString("\\kern.5em "), "\\enskip", new macros.MacroDefinition.fromString("\\hskip.5em\\relax"), "\\quad", new macros.MacroDefinition.fromString("\\hskip1em\\relax"), "\\qquad", new macros.MacroDefinition.fromString("\\hskip2em\\relax"), "\\tag", new macros.MacroDefinition.fromString("\\@ifstar\\tag@literal\\tag@paren"), "\\tag@paren", new macros.MacroDefinition.fromString("\\tag@literal{({#1})}"), "\\tag@literal", new macros.MacroDefinition.fromCtxString(dart.fn(context => {
          if (context == null) dart.nullFailed(I[144], 610, 51, "context");
          if (context.macros.get("\\df@tag") != null) {
            dart.throw(new parse_error.ParseException.new("Multiple \\tag"));
          }
          return "\\gdef\\df@tag{\\text{#1}}";
        }, T$.MacroContextToString())), "\\bmod", new macros.MacroDefinition.fromString("\\mskip5mu" + "\\mathbin{\\rm mod}" + "\\mskip5mu"), "\\pod", new macros.MacroDefinition.fromString("\\allowbreak" + "\\mkern8mu(#1)"), "\\pmod", new macros.MacroDefinition.fromString("\\pod{{\\rm mod}\\mkern6mu#1}"), "\\mod", new macros.MacroDefinition.fromString("\\allowbreak" + "\\mkern18mu{\\rm mod}\\,\\,#1"), "\\\\", new macros.MacroDefinition.fromString("\\newline"), "\\TeX", new macros.MacroDefinition.fromString("\\textrm{" + "T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX" + "}"), "\\LaTeX", new macros.MacroDefinition.fromString("\\textrm{" + "L\\kern-.36em\\raisebox{" + dart.str(macros.latexRaiseA) + "}{\\scriptstyle A}" + "\\kern-.15em\\TeX}"), "\\KaTeX", new macros.MacroDefinition.fromString("\\textrm{" + "K\\kern-.17em\\raisebox{" + dart.str(macros.latexRaiseA) + "}{\\scriptstyle A}" + "\\kern-.15em\\TeX}"), "\\hspace", new macros.MacroDefinition.fromString("\\hskip #1\\relax"), "\\ordinarycolon", new macros.MacroDefinition.fromString(":"), "\\vcentcolon", new macros.MacroDefinition.fromString("\\mathrel{\\mathop\\ordinarycolon}"), "∷", new macros.MacroDefinition.fromString("\\dblcolon"), "∹", new macros.MacroDefinition.fromString("\\eqcolon"), "≔", new macros.MacroDefinition.fromString("\\coloneqq"), "≕", new macros.MacroDefinition.fromString("\\eqqcolon"), "\\ratio", new macros.MacroDefinition.fromString("\\vcentcolon"), "\\coloncolon", new macros.MacroDefinition.fromString("\\dblcolon"), "\\colonequals", new macros.MacroDefinition.fromString("\\coloneqq"), "\\equalscolon", new macros.MacroDefinition.fromString("\\eqqcolon"), "\\minuscolon", new macros.MacroDefinition.fromString("\\eqcolon"), "\\limsup", new macros.MacroDefinition.fromString("\\DOTSB\\operatorname*{lim\\,sup}"), "\\liminf", new macros.MacroDefinition.fromString("\\DOTSB\\operatorname*{lim\\,inf}"), "\\darr", new macros.MacroDefinition.fromString("\\downarrow"), "\\dArr", new macros.MacroDefinition.fromString("\\Downarrow"), "\\Darr", new macros.MacroDefinition.fromString("\\Downarrow"), "\\lang", new macros.MacroDefinition.fromString("\\langle"), "\\rang", new macros.MacroDefinition.fromString("\\rangle"), "\\uarr", new macros.MacroDefinition.fromString("\\uparrow"), "\\uArr", new macros.MacroDefinition.fromString("\\Uparrow"), "\\Uarr", new macros.MacroDefinition.fromString("\\Uparrow"), "\\N", new macros.MacroDefinition.fromString("\\mathbb{N}"), "\\R", new macros.MacroDefinition.fromString("\\mathbb{R}"), "\\Z", new macros.MacroDefinition.fromString("\\mathbb{Z}"), "\\alef", new macros.MacroDefinition.fromString("\\aleph"), "\\alefsym", new macros.MacroDefinition.fromString("\\aleph"), "\\Alpha", new macros.MacroDefinition.fromString("\\mathrm{A}"), "\\Beta", new macros.MacroDefinition.fromString("\\mathrm{B}"), "\\bull", new macros.MacroDefinition.fromString("\\bullet"), "\\Chi", new macros.MacroDefinition.fromString("\\mathrm{X}"), "\\clubs", new macros.MacroDefinition.fromString("\\clubsuit"), "\\cnums", new macros.MacroDefinition.fromString("\\mathbb{C}"), "\\Complex", new macros.MacroDefinition.fromString("\\mathbb{C}"), "\\Dagger", new macros.MacroDefinition.fromString("\\ddagger"), "\\diamonds", new macros.MacroDefinition.fromString("\\diamondsuit"), "\\empty", new macros.MacroDefinition.fromString("\\emptyset"), "\\Epsilon", new macros.MacroDefinition.fromString("\\mathrm{E}"), "\\Eta", new macros.MacroDefinition.fromString("\\mathrm{H}"), "\\exist", new macros.MacroDefinition.fromString("\\exists"), "\\harr", new macros.MacroDefinition.fromString("\\leftrightarrow"), "\\hArr", new macros.MacroDefinition.fromString("\\Leftrightarrow"), "\\Harr", new macros.MacroDefinition.fromString("\\Leftrightarrow"), "\\hearts", new macros.MacroDefinition.fromString("\\heartsuit"), "\\image", new macros.MacroDefinition.fromString("\\Im"), "\\infin", new macros.MacroDefinition.fromString("\\infty"), "\\Iota", new macros.MacroDefinition.fromString("\\mathrm{I}"), "\\isin", new macros.MacroDefinition.fromString("\\in"), "\\Kappa", new macros.MacroDefinition.fromString("\\mathrm{K}"), "\\larr", new macros.MacroDefinition.fromString("\\leftarrow"), "\\lArr", new macros.MacroDefinition.fromString("\\Leftarrow"), "\\Larr", new macros.MacroDefinition.fromString("\\Leftarrow"), "\\lrarr", new macros.MacroDefinition.fromString("\\leftrightarrow"), "\\lrArr", new macros.MacroDefinition.fromString("\\Leftrightarrow"), "\\Lrarr", new macros.MacroDefinition.fromString("\\Leftrightarrow"), "\\Mu", new macros.MacroDefinition.fromString("\\mathrm{M}"), "\\natnums", new macros.MacroDefinition.fromString("\\mathbb{N}"), "\\Nu", new macros.MacroDefinition.fromString("\\mathrm{N}"), "\\Omicron", new macros.MacroDefinition.fromString("\\mathrm{O}"), "\\plusmn", new macros.MacroDefinition.fromString("\\pm"), "\\rarr", new macros.MacroDefinition.fromString("\\rightarrow"), "\\rArr", new macros.MacroDefinition.fromString("\\Rightarrow"), "\\Rarr", new macros.MacroDefinition.fromString("\\Rightarrow"), "\\real", new macros.MacroDefinition.fromString("\\Re"), "\\reals", new macros.MacroDefinition.fromString("\\mathbb{R}"), "\\Reals", new macros.MacroDefinition.fromString("\\mathbb{R}"), "\\Rho", new macros.MacroDefinition.fromString("\\mathrm{P}"), "\\sdot", new macros.MacroDefinition.fromString("\\cdot"), "\\sect", new macros.MacroDefinition.fromString("\\S"), "\\spades", new macros.MacroDefinition.fromString("\\spadesuit"), "\\sub", new macros.MacroDefinition.fromString("\\subset"), "\\sube", new macros.MacroDefinition.fromString("\\subseteq"), "\\supe", new macros.MacroDefinition.fromString("\\supseteq"), "\\Tau", new macros.MacroDefinition.fromString("\\mathrm{T}"), "\\thetasym", new macros.MacroDefinition.fromString("\\vartheta"), "\\weierp", new macros.MacroDefinition.fromString("\\wp"), "\\Zeta", new macros.MacroDefinition.fromString("\\mathrm{Z}"), "\\argmin", new macros.MacroDefinition.fromString("\\DOTSB\\operatorname*{arg\\,min}"), "\\argmax", new macros.MacroDefinition.fromString("\\DOTSB\\operatorname*{arg\\,max}"), "\\plim", new macros.MacroDefinition.fromString("\\DOTSB\\operatorname*{plim}\\limits"), "\\bra", new macros.MacroDefinition.fromString("\\mathinner{\\langle{#1}|}"), "\\ket", new macros.MacroDefinition.fromString("\\mathinner{|{#1}\\rangle}"), "\\braket", new macros.MacroDefinition.fromString("\\mathinner{\\langle{#1}\\rangle}"), "\\Bra", new macros.MacroDefinition.fromString("\\left\\langle#1\\right|"), "\\Ket", new macros.MacroDefinition.fromString("\\left|#1\\right\\rangle"), "\\blue", new macros.MacroDefinition.fromString("\\textcolor{##6495ed}{#1}"), "\\orange", new macros.MacroDefinition.fromString("\\textcolor{##ffa500}{#1}"), "\\pink", new macros.MacroDefinition.fromString("\\textcolor{##ff00af}{#1}"), "\\red", new macros.MacroDefinition.fromString("\\textcolor{##df0030}{#1}"), "\\green", new macros.MacroDefinition.fromString("\\textcolor{##28ae7b}{#1}"), "\\gray", new macros.MacroDefinition.fromString("\\textcolor{gray}{#1}"), "\\purple", new macros.MacroDefinition.fromString("\\textcolor{##9d38bd}{#1}"), "\\blueA", new macros.MacroDefinition.fromString("\\textcolor{##ccfaff}{#1}"), "\\blueB", new macros.MacroDefinition.fromString("\\textcolor{##80f6ff}{#1}"), "\\blueC", new macros.MacroDefinition.fromString("\\textcolor{##63d9ea}{#1}"), "\\blueD", new macros.MacroDefinition.fromString("\\textcolor{##11accd}{#1}"), "\\blueE", new macros.MacroDefinition.fromString("\\textcolor{##0c7f99}{#1}"), "\\tealA", new macros.MacroDefinition.fromString("\\textcolor{##94fff5}{#1}"), "\\tealB", new macros.MacroDefinition.fromString("\\textcolor{##26edd5}{#1}"), "\\tealC", new macros.MacroDefinition.fromString("\\textcolor{##01d1c1}{#1}"), "\\tealD", new macros.MacroDefinition.fromString("\\textcolor{##01a995}{#1}"), "\\tealE", new macros.MacroDefinition.fromString("\\textcolor{##208170}{#1}"), "\\greenA", new macros.MacroDefinition.fromString("\\textcolor{##b6ffb0}{#1}"), "\\greenB", new macros.MacroDefinition.fromString("\\textcolor{##8af281}{#1}"), "\\greenC", new macros.MacroDefinition.fromString("\\textcolor{##74cf70}{#1}"), "\\greenD", new macros.MacroDefinition.fromString("\\textcolor{##1fab54}{#1}"), "\\greenE", new macros.MacroDefinition.fromString("\\textcolor{##0d923f}{#1}"), "\\goldA", new macros.MacroDefinition.fromString("\\textcolor{##ffd0a9}{#1}"), "\\goldB", new macros.MacroDefinition.fromString("\\textcolor{##ffbb71}{#1}"), "\\goldC", new macros.MacroDefinition.fromString("\\textcolor{##ff9c39}{#1}"), "\\goldD", new macros.MacroDefinition.fromString("\\textcolor{##e07d10}{#1}"), "\\goldE", new macros.MacroDefinition.fromString("\\textcolor{##a75a05}{#1}"), "\\redA", new macros.MacroDefinition.fromString("\\textcolor{##fca9a9}{#1}"), "\\redB", new macros.MacroDefinition.fromString("\\textcolor{##ff8482}{#1}"), "\\redC", new macros.MacroDefinition.fromString("\\textcolor{##f9685d}{#1}"), "\\redD", new macros.MacroDefinition.fromString("\\textcolor{##e84d39}{#1}"), "\\redE", new macros.MacroDefinition.fromString("\\textcolor{##bc2612}{#1}"), "\\maroonA", new macros.MacroDefinition.fromString("\\textcolor{##ffbde0}{#1}"), "\\maroonB", new macros.MacroDefinition.fromString("\\textcolor{##ff92c6}{#1}"), "\\maroonC", new macros.MacroDefinition.fromString("\\textcolor{##ed5fa6}{#1}"), "\\maroonD", new macros.MacroDefinition.fromString("\\textcolor{##ca337c}{#1}"), "\\maroonE", new macros.MacroDefinition.fromString("\\textcolor{##9e034e}{#1}"), "\\purpleA", new macros.MacroDefinition.fromString("\\textcolor{##ddd7ff}{#1}"), "\\purpleB", new macros.MacroDefinition.fromString("\\textcolor{##c6b9fc}{#1}"), "\\purpleC", new macros.MacroDefinition.fromString("\\textcolor{##aa87ff}{#1}"), "\\purpleD", new macros.MacroDefinition.fromString("\\textcolor{##7854ab}{#1}"), "\\purpleE", new macros.MacroDefinition.fromString("\\textcolor{##543b78}{#1}"), "\\mintA", new macros.MacroDefinition.fromString("\\textcolor{##f5f9e8}{#1}"), "\\mintB", new macros.MacroDefinition.fromString("\\textcolor{##edf2df}{#1}"), "\\mintC", new macros.MacroDefinition.fromString("\\textcolor{##e0e5cc}{#1}"), "\\grayA", new macros.MacroDefinition.fromString("\\textcolor{##f6f7f7}{#1}"), "\\grayB", new macros.MacroDefinition.fromString("\\textcolor{##f0f1f2}{#1}"), "\\grayC", new macros.MacroDefinition.fromString("\\textcolor{##e3e5e6}{#1}"), "\\grayD", new macros.MacroDefinition.fromString("\\textcolor{##d6d8da}{#1}"), "\\grayE", new macros.MacroDefinition.fromString("\\textcolor{##babec2}{#1}"), "\\grayF", new macros.MacroDefinition.fromString("\\textcolor{##888d93}{#1}"), "\\grayG", new macros.MacroDefinition.fromString("\\textcolor{##626569}{#1}"), "\\grayH", new macros.MacroDefinition.fromString("\\textcolor{##3b3e40}{#1}"), "\\grayI", new macros.MacroDefinition.fromString("\\textcolor{##21242c}{#1}"), "\\kaBlue", new macros.MacroDefinition.fromString("\\textcolor{##314453}{#1}"), "\\kaGreen", new macros.MacroDefinition.fromString("\\textcolor{##71B307}{#1}")]);
    }
  }, false);
  settings.Strict = class Strict extends core.Object {
    toString() {
      return this[S._name$6];
    }
  };
  (settings.Strict.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[146], 31, 6, "index");
    if (_name == null) dart.nullFailed(I[146], 31, 6, "_name");
    this.index = index;
    this[S._name$6] = _name;
    ;
  }).prototype = settings.Strict.prototype;
  dart.addTypeTests(settings.Strict);
  dart.addTypeCaches(settings.Strict);
  dart.setLibraryUri(settings.Strict, I[147]);
  dart.setFieldSignature(settings.Strict, () => ({
    __proto__: dart.getFields(settings.Strict.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$6]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(settings.Strict, ['toString']);
  settings.Strict.ignore = C[122] || CT.C122;
  settings.Strict.warn = C[121] || CT.C121;
  settings.Strict.error = C[123] || CT.C123;
  settings.Strict.function = C[2641] || CT.C2641;
  settings.Strict.values = C[2642] || CT.C2642;
  settings.TexParserSettings = class TexParserSettings extends core.Object {
    get displayMode() {
      return this[S$.displayMode];
    }
    set displayMode(value) {
      super.displayMode = value;
    }
    get throwOnError() {
      return this[S$.throwOnError];
    }
    set throwOnError(value) {
      super.throwOnError = value;
    }
    get macros() {
      return this[S$.macros$1];
    }
    set macros(value) {
      super.macros = value;
    }
    get maxExpand() {
      return this[S$.maxExpand];
    }
    set maxExpand(value) {
      super.maxExpand = value;
    }
    get strict() {
      return this[S$.strict$1];
    }
    set strict(value) {
      super.strict = value;
    }
    get strictFun() {
      return this[S$.strictFun$1];
    }
    set strictFun(value) {
      super.strictFun = value;
    }
    get globalGroup() {
      return this[S$.globalGroup];
    }
    set globalGroup(value) {
      super.globalGroup = value;
    }
    get colorIsTextColor() {
      return this[S$.colorIsTextColor];
    }
    set colorIsTextColor(value) {
      super.colorIsTextColor = value;
    }
    reportNonstrict(errorCode, errorMsg, token = null) {
      let t82, t82$;
      if (errorCode == null) dart.nullFailed(I[146], 84, 31, "errorCode");
      if (errorMsg == null) dart.nullFailed(I[146], 84, 49, "errorMsg");
      let strict = this.strict != settings.Strict.function ? this.strict : (t82$ = (t82 = this.strictFun, t82 == null ? null : t82(errorCode, errorMsg, token)), t82$ == null ? settings.Strict.warn : t82$);
      switch (strict) {
        case C[122] || CT.C122:
        {
          return;
        }
        case C[123] || CT.C123:
        {
          dart.throw(new parse_error.ParseException.new("LaTeX-incompatible input and strict mode is set to 'error': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]", token));
        }
        case C[121] || CT.C121:
        {
          log.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]");
          break;
        }
        default:
        {
          log.warn("LaTeX-incompatible input and strict mode is set to " + "unrecognized '" + dart.str(strict) + "': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]");
        }
      }
    }
    useStrictBehavior(errorCode, errorMsg, token = null) {
      if (errorCode == null) dart.nullFailed(I[146], 106, 33, "errorCode");
      if (errorMsg == null) dart.nullFailed(I[146], 106, 51, "errorMsg");
      let strict = this.strict;
      if (strict == settings.Strict.function) {
        try {
          strict = dart.nullCheck(this.strictFun)(errorCode, errorMsg, token);
        } catch (e) {
          let ex = dart.getThrown(e);
          if (core.Object.is(ex)) {
            strict = settings.Strict.error;
          } else
            throw e;
        }
      }
      switch (strict) {
        case C[122] || CT.C122:
        {
          return false;
        }
        case C[123] || CT.C123:
        {
          return true;
        }
        case C[121] || CT.C121:
        {
          log.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]");
          return false;
        }
        default:
        {
          log.warn("LaTeX-incompatible input and strict mode is set to " + "unrecognized '" + dart.str(strict) + "': " + dart.str(errorMsg) + " [" + dart.str(errorCode) + "]");
          return false;
        }
      }
    }
  };
  (settings.TexParserSettings.new = function(opts) {
    let displayMode = opts && 'displayMode' in opts ? opts.displayMode : false;
    if (displayMode == null) dart.nullFailed(I[146], 72, 10, "displayMode");
    let throwOnError = opts && 'throwOnError' in opts ? opts.throwOnError : true;
    if (throwOnError == null) dart.nullFailed(I[146], 73, 10, "throwOnError");
    let macros = opts && 'macros' in opts ? opts.macros : C[138] || CT.C138;
    if (macros == null) dart.nullFailed(I[146], 74, 10, "macros");
    let maxExpand = opts && 'maxExpand' in opts ? opts.maxExpand : 1000;
    if (maxExpand == null) dart.nullFailed(I[146], 75, 10, "maxExpand");
    let strict = opts && 'strict' in opts ? opts.strict : C[121] || CT.C121;
    if (strict == null) dart.nullFailed(I[146], 76, 12, "strict");
    let strictFun = opts && 'strictFun' in opts ? opts.strictFun : null;
    let globalGroup = opts && 'globalGroup' in opts ? opts.globalGroup : false;
    if (globalGroup == null) dart.nullFailed(I[146], 78, 10, "globalGroup");
    let colorIsTextColor = opts && 'colorIsTextColor' in opts ? opts.colorIsTextColor : false;
    if (colorIsTextColor == null) dart.nullFailed(I[146], 79, 10, "colorIsTextColor");
    this[S$.displayMode] = displayMode;
    this[S$.throwOnError] = throwOnError;
    this[S$.macros$1] = macros;
    this[S$.maxExpand] = maxExpand;
    this[S$.strictFun$1] = strictFun;
    this[S$.globalGroup] = globalGroup;
    this[S$.colorIsTextColor] = colorIsTextColor;
    this[S$.strict$1] = strictFun == null ? strict : settings.Strict.function;
    ;
  }).prototype = settings.TexParserSettings.prototype;
  dart.addTypeTests(settings.TexParserSettings);
  dart.addTypeCaches(settings.TexParserSettings);
  dart.setMethodSignature(settings.TexParserSettings, () => ({
    __proto__: dart.getMethods(settings.TexParserSettings.__proto__),
    reportNonstrict: dart.fnType(dart.void, [core.String, core.String], [dart.nullable(token.Token)]),
    useStrictBehavior: dart.fnType(core.bool, [core.String, core.String], [dart.nullable(token.Token)])
  }));
  dart.setLibraryUri(settings.TexParserSettings, I[147]);
  dart.setFieldSignature(settings.TexParserSettings, () => ({
    __proto__: dart.getFields(settings.TexParserSettings.__proto__),
    displayMode: dart.finalFieldType(core.bool),
    throwOnError: dart.finalFieldType(core.bool),
    macros: dart.finalFieldType(core.Map$(core.String, macros.MacroDefinition)),
    maxExpand: dart.finalFieldType(core.int),
    strict: dart.finalFieldType(settings.Strict),
    strictFun: dart.finalFieldType(dart.nullable(dart.fnType(settings.Strict, [core.String, core.String, dart.nullable(token.Token)]))),
    globalGroup: dart.finalFieldType(core.bool),
    colorIsTextColor: dart.finalFieldType(core.bool)
  }));
  lexer.LexerInterface = class LexerInterface extends core.Object {};
  (lexer.LexerInterface.new = function() {
    ;
  }).prototype = lexer.LexerInterface.prototype;
  dart.addTypeTests(lexer.LexerInterface);
  dart.addTypeCaches(lexer.LexerInterface);
  dart.setLibraryUri(lexer.LexerInterface, I[148]);
  dart.defineLazy(lexer.LexerInterface, {
    /*lexer.LexerInterface.tokenRegex*/get tokenRegex() {
      return core.RegExp.new(lexer.tokenRegexString, {multiLine: true});
    }
  }, false);
  lexer.Lexer = class Lexer extends core.Object {
    get input() {
      return this[S$.input$1];
    }
    set input(value) {
      super.input = value;
    }
    get settings() {
      return this[S$.settings$2];
    }
    set settings(value) {
      super.settings = value;
    }
    get catCodes() {
      return this[S$.catCodes];
    }
    set catCodes(value) {
      super.catCodes = value;
    }
    get pos() {
      return this[S$.pos];
    }
    set pos(value) {
      this[S$.pos] = value;
    }
    get it() {
      return this[S$.it];
    }
    set it(value) {
      super.it = value;
    }
    lex() {
      let t84;
      if (this.pos === this.input.length) {
        return new token.Token.new("EOF", new source_location.SourceLocation.new(this, this.pos, this.pos));
      }
      let hasMatch = this.it.moveNext();
      if (!dart.test(hasMatch)) {
        dart.throw(new parse_error.ParseException.new("Unexpected character: '" + this.input[S.$_get](this.pos) + "'", new token.Token.new(this.input[S.$_get](this.pos), new source_location.SourceLocation.new(this, this.pos, dart.notNull(this.pos) + 1))));
      }
      let match = this.it.current;
      if (match.start != this.pos) {
        dart.throw(new parse_error.ParseException.new("Unexpected character: '" + this.input[S.$_get](this.pos) + "'", new token.Token.new(this.input[S.$_get](this.pos), new source_location.SourceLocation.new(this, this.pos, dart.notNull(this.pos) + 1))));
      }
      this.pos = match.end;
      let text = (t84 = match._get(2), t84 == null ? " " : t84);
      if (text === "%") {
        let nlIndex = this.input[S$.$indexOf]("\n", this.it.current.end);
        if (nlIndex === -1) {
          this.pos = this.input.length;
          while (dart.test(this.it.moveNext())) {
            this.pos = this.it.current.end;
          }
          this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would " + "fail because of commenting the end of math mode (e.g. $)");
        } else {
          while (dart.notNull(this.it.current.end) < nlIndex + 1) {
            let canMoveNext = this.it.moveNext();
            if (dart.test(canMoveNext)) {
              this.pos = this.it.current.end;
            } else {
              break;
            }
          }
        }
        return this.lex();
      }
      let controlMatch = lexer.controlWordWhitespaceRegex.firstMatch(text);
      if (controlMatch != null) {
        text = dart.nullCheck(controlMatch.group(1));
      }
      return new token.Token.new(text, new source_location.SourceLocation.new(this, match.start, match.end));
    }
  };
  (lexer.Lexer.new = function(input, settings) {
    if (input == null) dart.nullFailed(I[149], 57, 14, "input");
    if (settings == null) dart.nullFailed(I[149], 57, 26, "settings");
    this[S$.catCodes] = new (T$.IdentityMapOfString$int()).from(["%", 14]);
    this[S$.pos] = 0;
    this[S$.input$1] = input;
    this[S$.settings$2] = settings;
    this[S$.it] = lexer.Lexer.tokenRegex.allMatches(input)[S.$iterator];
    ;
  }).prototype = lexer.Lexer.prototype;
  dart.addTypeTests(lexer.Lexer);
  dart.addTypeCaches(lexer.Lexer);
  lexer.Lexer[dart.implements] = () => [lexer.LexerInterface];
  dart.setMethodSignature(lexer.Lexer, () => ({
    __proto__: dart.getMethods(lexer.Lexer.__proto__),
    lex: dart.fnType(token.Token, [])
  }));
  dart.setLibraryUri(lexer.Lexer, I[148]);
  dart.setFieldSignature(lexer.Lexer, () => ({
    __proto__: dart.getFields(lexer.Lexer.__proto__),
    input: dart.finalFieldType(core.String),
    settings: dart.finalFieldType(settings.TexParserSettings),
    catCodes: dart.finalFieldType(core.Map$(core.String, core.int)),
    pos: dart.fieldType(core.int),
    it: dart.finalFieldType(core.Iterator$(core.RegExpMatch))
  }));
  dart.defineLazy(lexer.Lexer, {
    /*lexer.Lexer.tokenRegex*/get tokenRegex() {
      return core.RegExp.new(lexer.tokenRegexString, {multiLine: true});
    }
  }, false);
  dart.defineLazy(lexer, {
    /*lexer.spaceRegexString*/get spaceRegexString() {
      return "[ \r\n\t]";
    },
    /*lexer.controlWordRegexString*/get controlWordRegexString() {
      return "\\\\[a-zA-Z@]+";
    },
    /*lexer.controlSymbolRegexString*/get controlSymbolRegexString() {
      return "\\\\[^\ud800-\udfff]";
    },
    /*lexer.controlWordWhitespaceRegexString*/get controlWordWhitespaceRegexString() {
      return "\\\\[a-zA-Z@]+[ \r\n\t]*";
    },
    /*lexer.controlWordWhitespaceRegex*/get controlWordWhitespaceRegex() {
      return core.RegExp.new("^(" + "\\\\[a-zA-Z@]+" + ")" + "[ \r\n\t]" + "*$");
    },
    /*lexer.combiningDiacriticalMarkString*/get combiningDiacriticalMarkString() {
      return "[̀-ͯ]";
    },
    /*lexer.combiningDiacriticalMarksEndRegex*/get combiningDiacriticalMarksEndRegex() {
      return core.RegExp.new("[̀-ͯ]" + "+$");
    },
    /*lexer.tokenRegexString*/get tokenRegexString() {
      return "([ \r\n\t]+)|([!-\\[\\]-‧‪-퟿豈-￿][̀-ͯ]*|[\ud800-\udbff][\udc00-\udfff][̀-ͯ]*|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\operatorname\\*|\\\\[a-zA-Z@]+[ \r\n\t]*|\\\\[^\ud800-\udfff])";
    }
  }, false);
  source_location.SourceLocation = class SourceLocation extends core.Object {
    get lexer() {
      return this[S$.lexer$1];
    }
    set lexer(value) {
      super.lexer = value;
    }
    get start() {
      return this[S$.start];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S$.end];
    }
    set end(value) {
      super.end = value;
    }
    static range(first, second = null) {
      if (first == null) dart.nullFailed(I[150], 33, 38, "first");
      if (second == null) {
        return first.loc;
      } else if (first.loc == null || second.loc == null || !dart.equals(dart.nullCheck(first.loc).lexer, dart.nullCheck(second.loc).lexer)) {
        return null;
      } else {
        return new source_location.SourceLocation.new(dart.nullCheck(first.loc).lexer, dart.nullCheck(first.loc).start, dart.nullCheck(second.loc).end);
      }
    }
  };
  (source_location.SourceLocation.new = function(lexer, start, end) {
    if (lexer == null) dart.nullFailed(I[150], 31, 23, "lexer");
    if (start == null) dart.nullFailed(I[150], 31, 35, "start");
    if (end == null) dart.nullFailed(I[150], 31, 47, "end");
    this[S$.lexer$1] = lexer;
    this[S$.start] = start;
    this[S$.end] = end;
    ;
  }).prototype = source_location.SourceLocation.prototype;
  dart.addTypeTests(source_location.SourceLocation);
  dart.addTypeCaches(source_location.SourceLocation);
  dart.setLibraryUri(source_location.SourceLocation, I[151]);
  dart.setFieldSignature(source_location.SourceLocation, () => ({
    __proto__: dart.getFields(source_location.SourceLocation.__proto__),
    lexer: dart.finalFieldType(lexer.LexerInterface),
    start: dart.finalFieldType(core.int),
    end: dart.finalFieldType(core.int)
  }));
  token.Token = class Token extends core.Object {
    get text() {
      return this[S$.text$2];
    }
    set text(value) {
      this[S$.text$2] = value;
    }
    get loc() {
      return this[S$.loc];
    }
    set loc(value) {
      this[S$.loc] = value;
    }
    get noexpand() {
      return this[S$.noexpand];
    }
    set noexpand(value) {
      this[S$.noexpand] = value;
    }
    get treatAsRelax() {
      return this[S$.treatAsRelax];
    }
    set treatAsRelax(value) {
      this[S$.treatAsRelax] = value;
    }
    static range(startToken, endToken, text) {
      if (startToken == null) dart.nullFailed(I[152], 33, 28, "startToken");
      if (endToken == null) dart.nullFailed(I[152], 33, 46, "endToken");
      if (text == null) dart.nullFailed(I[152], 33, 63, "text");
      return new token.Token.new(text, source_location.SourceLocation.range(startToken, endToken));
    }
  };
  (token.Token.new = function(text, loc = null) {
    if (text == null) dart.nullFailed(I[152], 31, 14, "text");
    this[S$.noexpand] = false;
    this[S$.treatAsRelax] = false;
    this[S$.text$2] = text;
    this[S$.loc] = loc;
    ;
  }).prototype = token.Token.prototype;
  dart.addTypeTests(token.Token);
  dart.addTypeCaches(token.Token);
  dart.setLibraryUri(token.Token, I[153]);
  dart.setFieldSignature(token.Token, () => ({
    __proto__: dart.getFields(token.Token.__proto__),
    text: dart.fieldType(core.String),
    loc: dart.fieldType(dart.nullable(source_location.SourceLocation)),
    noexpand: dart.fieldType(core.bool),
    treatAsRelax: dart.fieldType(core.bool)
  }));
  parse_error.ParseException = class ParseException extends core.Object {
    get position() {
      return this[S$.position$1];
    }
    set position(value) {
      this[S$.position$1] = value;
    }
    get message() {
      return this[S$.message];
    }
    set message(value) {
      this[S$.message] = value;
    }
    get token() {
      return this[S$.token$1];
    }
    set token(value) {
      this[S$.token$1] = value;
    }
    get messageWithType() {
      return "Parser Error: " + dart.str(this.message);
    }
  };
  (parse_error.ParseException.new = function(message, token = null) {
    let t84;
    if (message == null) dart.nullFailed(I[154], 37, 25, "message");
    this[S$.position$1] = null;
    this[S$.token$1] = token;
    this[S$.message] = dart.str(message);
    let loc = (t84 = this.token, t84 == null ? null : t84.loc);
    if (loc != null && dart.notNull(loc.start) <= dart.notNull(loc.end)) {
      let input = loc.lexer.input;
      let start = loc.start;
      this.position = start;
      let end = loc.end;
      if (start === input.length) {
        message = dart.str(message) + " at end of input: ";
      } else {
        message = dart.str(message) + " at position " + dart.str(dart.notNull(start) + 1) + ": ";
      }
      let underlined = input[S.$substring](start, end)[S$.$replaceAllMapped](core.RegExp.new("[^]"), dart.fn(match => {
        if (match == null) dart.nullFailed(I[154], 53, 46, "match");
        return dart.str(match._get(0)) + "̲";
      }, T$.MatchToString()));
      if (dart.notNull(start) > 15) {
        message = dart.str(message) + "…" + input[S.$substring](dart.notNull(start) - 15, start) + underlined;
      } else {
        message = dart.str(message) + input[S.$substring](0, start) + underlined;
      }
      if (dart.notNull(end) + 15 < input.length) {
        message = dart.str(message) + input[S.$substring](end, dart.notNull(end) + 15) + "…";
      } else {
        message = dart.str(message) + input[S.$substring](end);
      }
    }
  }).prototype = parse_error.ParseException.prototype;
  dart.addTypeTests(parse_error.ParseException);
  dart.addTypeCaches(parse_error.ParseException);
  parse_error.ParseException[dart.implements] = () => [exception$.FlutterMathException];
  dart.setGetterSignature(parse_error.ParseException, () => ({
    __proto__: dart.getGetters(parse_error.ParseException.__proto__),
    messageWithType: core.String
  }));
  dart.setLibraryUri(parse_error.ParseException, I[155]);
  dart.setFieldSignature(parse_error.ParseException, () => ({
    __proto__: dart.getFields(parse_error.ParseException.__proto__),
    position: dart.fieldType(dart.nullable(core.int)),
    message: dart.fieldType(core.String),
    token: dart.fieldType(dart.nullable(token.Token))
  }));
  selectable.SelectableMath = class SelectableMath extends framework.StatelessWidget {
    get ast() {
      return this[S$.ast$1];
    }
    set ast(value) {
      super.ast = value;
    }
    get autofocus() {
      return this[S$.autofocus];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get cursorColor() {
      return this[S$.cursorColor];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get cursorRadius() {
      return this[S$.cursorRadius];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorWidth() {
      return this[S$.cursorWidth];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[S$.cursorHeight];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get dragStartBehavior() {
      return this[S$.dragStartBehavior$2];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get enableInteractiveSelection() {
      return this[S$.enableInteractiveSelection];
    }
    set enableInteractiveSelection(value) {
      super.enableInteractiveSelection = value;
    }
    get focusNode() {
      return this[S$.focusNode];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get mathStyle() {
      return this[S$.mathStyle$1];
    }
    set mathStyle(value) {
      super.mathStyle = value;
    }
    get logicalPpi() {
      return this[S$.logicalPpi$1];
    }
    set logicalPpi(value) {
      super.logicalPpi = value;
    }
    get onErrorFallback() {
      return this[S$.onErrorFallback$1];
    }
    set onErrorFallback(value) {
      super.onErrorFallback = value;
    }
    get options() {
      return this[S$.options$4];
    }
    set options(value) {
      super.options = value;
    }
    get parseException() {
      return this[S$.parseException];
    }
    set parseException(value) {
      super.parseException = value;
    }
    get showCursor() {
      return this[S$.showCursor];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get textScaleFactor() {
      return this[S$.textScaleFactor$1];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get textSelectionControls() {
      return this[S$.textSelectionControls];
    }
    set textSelectionControls(value) {
      super.textSelectionControls = value;
    }
    get textStyle() {
      return this[S$.textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get toolbarOptions() {
      return this[S$.toolbarOptions];
    }
    set toolbarOptions(value) {
      super.toolbarOptions = value;
    }
    static tex(expression, opts) {
      if (expression == null) dart.nullFailed(I[156], 172, 12, "expression");
      let key = opts && 'key' in opts ? opts.key : null;
      let settings = opts && 'settings' in opts ? opts.settings : C[137] || CT.C137;
      if (settings == null) dart.nullFailed(I[156], 174, 23, "settings");
      let options = opts && 'options' in opts ? opts.options : null;
      let onErrorFallback = opts && 'onErrorFallback' in opts ? opts.onErrorFallback : C[2643] || CT.C2643;
      if (onErrorFallback == null) dart.nullFailed(I[156], 176, 21, "onErrorFallback");
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      if (autofocus == null) dart.nullFailed(I[156], 177, 10, "autofocus");
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
      let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
      if (cursorWidth == null) dart.nullFailed(I[156], 180, 12, "cursorWidth");
      let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[0] || CT.C0;
      if (dragStartBehavior == null) dart.nullFailed(I[156], 182, 23, "dragStartBehavior");
      let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
      if (enableInteractiveSelection == null) dart.nullFailed(I[156], 183, 10, "enableInteractiveSelection");
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let mathStyle = opts && 'mathStyle' in opts ? opts.mathStyle : C[104] || CT.C104;
      if (mathStyle == null) dart.nullFailed(I[156], 185, 15, "mathStyle");
      let logicalPpi = opts && 'logicalPpi' in opts ? opts.logicalPpi : null;
      let showCursor = opts && 'showCursor' in opts ? opts.showCursor : false;
      if (showCursor == null) dart.nullFailed(I[156], 187, 10, "showCursor");
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let textSelectionControls = opts && 'textSelectionControls' in opts ? opts.textSelectionControls : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let toolbarOptions = opts && 'toolbarOptions' in opts ? opts.toolbarOptions : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      let ast = null;
      let parseError = null;
      try {
        ast = new syntax_tree.SyntaxTree.new({greenRoot: new parser$.TexParser.new(expression, settings).parse()});
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (parse_error.ParseException.is(ex)) {
          let e = ex;
          parseError = e;
        } else if (core.Object.is(ex)) {
          let e = ex;
          parseError = new parse_error.ParseException.new("Unsanitized parse exception detected: " + dart.str(e) + "." + "Please report this error with correponding input.");
        } else
          throw e$;
      }
      return new selectable.SelectableMath.new({key: key, ast: ast, autofocus: autofocus, cursorColor: cursorColor, cursorRadius: cursorRadius, cursorWidth: cursorWidth, cursorHeight: cursorHeight, dragStartBehavior: dragStartBehavior, enableInteractiveSelection: enableInteractiveSelection, focusNode: focusNode, mathStyle: mathStyle, logicalPpi: logicalPpi, onErrorFallback: onErrorFallback, options: options, parseException: parseError, showCursor: showCursor, textScaleFactor: textScaleFactor, textSelectionControls: textSelectionControls, textStyle: textStyle, toolbarOptions: toolbarOptions, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    build(context) {
      let t86, t86$, t86$0, t88, t88$, t88$0, t88$1, t88$2, t88$3;
      if (context == null) dart.nullFailed(I[156], 227, 29, "context");
      if (this.parseException != null) {
        t86 = dart.nullCheck(this.parseException);
        return this.onErrorFallback(t86);
      }
      let effectiveTextStyle = this.textStyle;
      if (effectiveTextStyle == null || dart.test(effectiveTextStyle.inherit)) {
        effectiveTextStyle = text.DefaultTextStyle.of(context).style.merge(this.textStyle);
      }
      if (dart.test(media_query.MediaQuery.boldTextOverride(context))) {
        effectiveTextStyle = effectiveTextStyle.merge(C[139] || CT.C139);
      }
      let textScaleFactor = (t86$ = this.textScaleFactor, t86$ == null ? media_query.MediaQuery.textScaleFactorOf(context) : t86$);
      let options = (t86$0 = this.options, t86$0 == null ? options$.MathOptions.new({style: this.mathStyle, fontSize: dart.nullCheck(effectiveTextStyle.fontSize) * dart.notNull(textScaleFactor), mathFontOptions: !dart.equals(effectiveTextStyle.fontWeight, ui.FontWeight.normal) ? new options$.FontOptions.new({fontWeight: dart.nullCheck(effectiveTextStyle.fontWeight)}) : null, logicalPpi: this.logicalPpi, color: dart.nullCheck(effectiveTextStyle.color)}) : t86$0);
      try {
        dart.nullCheck(this.ast).buildWidget(options);
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (exception$.BuildException.is(ex)) {
          let e = ex;
          t88$ = e;
          return this.onErrorFallback(t88$);
        } else if (core.Object.is(ex)) {
          let e = ex;
          t88 = new exception$.BuildException.new("Unsanitized build exception detected: " + dart.str(e) + "." + "Please report this error with correponding input.");
          return this.onErrorFallback(t88);
        } else
          throw e$;
      }
      let theme = theme$.Theme.of(context);
      let selectionTheme = text_selection_theme.TextSelectionTheme.of(context);
      let textSelectionControls = this.textSelectionControls;
      let paintCursorAboveText = null;
      let cursorOpacityAnimates = null;
      let cursorOffset = null;
      let cursorColor = this.cursorColor;
      let selectionColor = null;
      let cursorRadius = this.cursorRadius;
      let forcePressEnabled = null;
      switch (theme.platform) {
        case C[63] || CT.C63:
        case C[64] || CT.C64:
        {
          forcePressEnabled = true;
          textSelectionControls == null ? textSelectionControls = text_selection$.cupertinoTextSelectionControls : null;
          paintCursorAboveText = true;
          cursorOpacityAnimates = true;
          cursorColor == null ? cursorColor = (t88$0 = selectionTheme.cursorColor, t88$0 == null ? theme$0.CupertinoTheme.of(context).primaryColor : t88$0) : null;
          selectionColor = (t88$1 = selectionTheme.selectionColor, t88$1 == null ? theme$0.CupertinoTheme.of(context).primaryColor : t88$1);
          cursorRadius == null ? cursorRadius = C[2645] || CT.C2645 : null;
          cursorOffset = new ui.Offset.new(-2 / dart.notNull(media_query.MediaQuery.of(context).devicePixelRatio), 0.0);
          break;
        }
        case C[65] || CT.C65:
        case C[66] || CT.C66:
        case C[67] || CT.C67:
        case C[68] || CT.C68:
        {
          forcePressEnabled = false;
          textSelectionControls == null ? textSelectionControls = text_selection$0.materialTextSelectionControls : null;
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          cursorColor == null ? cursorColor = (t88$2 = selectionTheme.cursorColor, t88$2 == null ? theme.colorScheme.primary : t88$2) : null;
          selectionColor = (t88$3 = selectionTheme.selectionColor, t88$3 == null ? theme.colorScheme.primary : t88$3);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return new basic.RepaintBoundary.new({child: new selectable.InternalSelectableMath.new({ast: dart.nullCheck(this.ast), autofocus: this.autofocus, cursorColor: cursorColor, cursorOffset: cursorOffset, cursorOpacityAnimates: cursorOpacityAnimates, cursorRadius: cursorRadius, cursorWidth: this.cursorWidth, cursorHeight: this.cursorHeight, dragStartBehavior: this.dragStartBehavior, enableInteractiveSelection: this.enableInteractiveSelection, focusNode: this.focusNode, forcePressEnabled: forcePressEnabled, options: options, paintCursorAboveText: paintCursorAboveText, selectionColor: selectionColor, showCursor: this.showCursor, textSelectionControls: textSelectionControls, toolbarOptions: this.toolbarOptions, $creationLocationd_0dea112b090073317d4: C[2646] || CT.C2646}), $creationLocationd_0dea112b090073317d4: C[2666] || CT.C2666});
    }
    static defaultOnErrorFallback(error) {
      if (error == null) dart.nullFailed(I[156], 336, 61, "error");
      return math$.Math.defaultOnErrorFallback(error);
    }
  };
  (selectable.SelectableMath.new = function(opts) {
    let t84;
    let key = opts && 'key' in opts ? opts.key : null;
    let ast = opts && 'ast' in opts ? opts.ast : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[156], 47, 10, "autofocus");
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
    if (cursorWidth == null) dart.nullFailed(I[156], 50, 10, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[0] || CT.C0;
    if (dragStartBehavior == null) dart.nullFailed(I[156], 52, 10, "dragStartBehavior");
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    if (enableInteractiveSelection == null) dart.nullFailed(I[156], 53, 10, "enableInteractiveSelection");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let mathStyle = opts && 'mathStyle' in opts ? opts.mathStyle : C[104] || CT.C104;
    if (mathStyle == null) dart.nullFailed(I[156], 55, 10, "mathStyle");
    let logicalPpi = opts && 'logicalPpi' in opts ? opts.logicalPpi : null;
    let onErrorFallback = opts && 'onErrorFallback' in opts ? opts.onErrorFallback : C[2643] || CT.C2643;
    if (onErrorFallback == null) dart.nullFailed(I[156], 57, 10, "onErrorFallback");
    let options = opts && 'options' in opts ? opts.options : null;
    let parseException = opts && 'parseException' in opts ? opts.parseException : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : false;
    if (showCursor == null) dart.nullFailed(I[156], 60, 10, "showCursor");
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let textSelectionControls = opts && 'textSelectionControls' in opts ? opts.textSelectionControls : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let toolbarOptions = opts && 'toolbarOptions' in opts ? opts.toolbarOptions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.ast$1] = ast;
    this[S$.autofocus] = autofocus;
    this[S$.cursorColor] = cursorColor;
    this[S$.cursorRadius] = cursorRadius;
    this[S$.cursorWidth] = cursorWidth;
    this[S$.cursorHeight] = cursorHeight;
    this[S$.dragStartBehavior$2] = dragStartBehavior;
    this[S$.enableInteractiveSelection] = enableInteractiveSelection;
    this[S$.focusNode] = focusNode;
    this[S$.mathStyle$1] = mathStyle;
    this[S$.logicalPpi$1] = logicalPpi;
    this[S$.onErrorFallback$1] = onErrorFallback;
    this[S$.options$4] = options;
    this[S$.parseException] = parseException;
    this[S$.showCursor] = showCursor;
    this[S$.textScaleFactor$1] = textScaleFactor;
    this[S$.textSelectionControls] = textSelectionControls;
    this[S$.textStyle$1] = textStyle;
    if (!(ast != null || parseException != null)) dart.assertFailed(null, I[156], 65, 16, "ast != null || parseException != null");
    this[S$.toolbarOptions] = (t84 = toolbarOptions, t84 == null ? C[2644] || CT.C2644 : t84);
    selectable.SelectableMath.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = selectable.SelectableMath.prototype;
  dart.addTypeTests(selectable.SelectableMath);
  dart.addTypeCaches(selectable.SelectableMath);
  dart.setMethodSignature(selectable.SelectableMath, () => ({
    __proto__: dart.getMethods(selectable.SelectableMath.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(selectable.SelectableMath, I[157]);
  dart.setFieldSignature(selectable.SelectableMath, () => ({
    __proto__: dart.getFields(selectable.SelectableMath.__proto__),
    ast: dart.finalFieldType(dart.nullable(syntax_tree.SyntaxTree)),
    autofocus: dart.finalFieldType(core.bool),
    cursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    cursorRadius: dart.finalFieldType(dart.nullable(ui.Radius)),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    enableInteractiveSelection: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    mathStyle: dart.finalFieldType(style$0.MathStyle),
    logicalPpi: dart.finalFieldType(dart.nullable(core.double)),
    onErrorFallback: dart.finalFieldType(dart.fnType(framework.Widget, [exception$.FlutterMathException])),
    options: dart.finalFieldType(dart.nullable(options$.MathOptions)),
    parseException: dart.finalFieldType(dart.nullable(parse_error.ParseException)),
    showCursor: dart.finalFieldType(core.bool),
    textScaleFactor: dart.finalFieldType(dart.nullable(core.double)),
    textSelectionControls: dart.finalFieldType(dart.nullable(text_selection.TextSelectionControls)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    toolbarOptions: dart.finalFieldType(editable_text.ToolbarOptions)
  }));
  selectable.InternalSelectableMath = class InternalSelectableMath extends framework.StatefulWidget {
    get ast() {
      return this[S$.ast$2];
    }
    set ast(value) {
      super.ast = value;
    }
    get autofocus() {
      return this[S$.autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get cursorColor() {
      return this[S$.cursorColor$1];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get cursorOffset() {
      return this[S$.cursorOffset];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get cursorOpacityAnimates() {
      return this[S$.cursorOpacityAnimates];
    }
    set cursorOpacityAnimates(value) {
      super.cursorOpacityAnimates = value;
    }
    get cursorRadius() {
      return this[S$.cursorRadius$1];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorWidth() {
      return this[S$.cursorWidth$1];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[S$.cursorHeight$1];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get dragStartBehavior() {
      return this[S$.dragStartBehavior$3];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get enableInteractiveSelection() {
      return this[S$.enableInteractiveSelection$1];
    }
    set enableInteractiveSelection(value) {
      super.enableInteractiveSelection = value;
    }
    get focusNode() {
      return this[S$.focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get forcePressEnabled() {
      return this[S$.forcePressEnabled];
    }
    set forcePressEnabled(value) {
      super.forcePressEnabled = value;
    }
    get hintingColor() {
      return this[S$.hintingColor];
    }
    set hintingColor(value) {
      super.hintingColor = value;
    }
    get options() {
      return this[S$.options$5];
    }
    set options(value) {
      super.options = value;
    }
    get paintCursorAboveText() {
      return this[S$.paintCursorAboveText];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get selectionColor() {
      return this[S$.selectionColor];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get showCursor() {
      return this[S$.showCursor$1];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get textSelectionControls() {
      return this[S$.textSelectionControls$1];
    }
    set textSelectionControls(value) {
      super.textSelectionControls = value;
    }
    get toolbarOptions() {
      return this[S$.toolbarOptions$1];
    }
    set toolbarOptions(value) {
      super.toolbarOptions = value;
    }
    createState() {
      return new selectable.InternalSelectableMathState.new();
    }
  };
  (selectable.InternalSelectableMath.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ast = opts && 'ast' in opts ? opts.ast : null;
    if (ast == null) dart.nullFailed(I[156], 344, 19, "ast");
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    if (autofocus == null) dart.nullFailed(I[156], 345, 10, "autofocus");
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(I[156], 346, 19, "cursorColor");
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let cursorOpacityAnimates = opts && 'cursorOpacityAnimates' in opts ? opts.cursorOpacityAnimates : false;
    if (cursorOpacityAnimates == null) dart.nullFailed(I[156], 348, 10, "cursorOpacityAnimates");
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
    if (cursorWidth == null) dart.nullFailed(I[156], 350, 10, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[0] || CT.C0;
    if (dragStartBehavior == null) dart.nullFailed(I[156], 352, 10, "dragStartBehavior");
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    if (enableInteractiveSelection == null) dart.nullFailed(I[156], 353, 10, "enableInteractiveSelection");
    let forcePressEnabled = opts && 'forcePressEnabled' in opts ? opts.forcePressEnabled : false;
    if (forcePressEnabled == null) dart.nullFailed(I[156], 354, 10, "forcePressEnabled");
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let hintingColor = opts && 'hintingColor' in opts ? opts.hintingColor : null;
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[156], 357, 19, "options");
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : false;
    if (paintCursorAboveText == null) dart.nullFailed(I[156], 358, 10, "paintCursorAboveText");
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : false;
    if (showCursor == null) dart.nullFailed(I[156], 360, 10, "showCursor");
    let textSelectionControls = opts && 'textSelectionControls' in opts ? opts.textSelectionControls : null;
    if (textSelectionControls == null) dart.nullFailed(I[156], 361, 19, "textSelectionControls");
    let toolbarOptions = opts && 'toolbarOptions' in opts ? opts.toolbarOptions : null;
    if (toolbarOptions == null) dart.nullFailed(I[156], 362, 19, "toolbarOptions");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.ast$2] = ast;
    this[S$.autofocus$1] = autofocus;
    this[S$.cursorColor$1] = cursorColor;
    this[S$.cursorOffset] = cursorOffset;
    this[S$.cursorOpacityAnimates] = cursorOpacityAnimates;
    this[S$.cursorRadius$1] = cursorRadius;
    this[S$.cursorWidth$1] = cursorWidth;
    this[S$.cursorHeight$1] = cursorHeight;
    this[S$.dragStartBehavior$3] = dragStartBehavior;
    this[S$.enableInteractiveSelection$1] = enableInteractiveSelection;
    this[S$.forcePressEnabled] = forcePressEnabled;
    this[S$.focusNode$1] = focusNode;
    this[S$.hintingColor] = hintingColor;
    this[S$.options$5] = options;
    this[S$.paintCursorAboveText] = paintCursorAboveText;
    this[S$.selectionColor] = selectionColor;
    this[S$.showCursor$1] = showCursor;
    this[S$.textSelectionControls$1] = textSelectionControls;
    this[S$.toolbarOptions$1] = toolbarOptions;
    selectable.InternalSelectableMath.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = selectable.InternalSelectableMath.prototype;
  dart.addTypeTests(selectable.InternalSelectableMath);
  dart.addTypeCaches(selectable.InternalSelectableMath);
  dart.setMethodSignature(selectable.InternalSelectableMath, () => ({
    __proto__: dart.getMethods(selectable.InternalSelectableMath.__proto__),
    createState: dart.fnType(selectable.InternalSelectableMathState, [])
  }));
  dart.setLibraryUri(selectable.InternalSelectableMath, I[157]);
  dart.setFieldSignature(selectable.InternalSelectableMath, () => ({
    __proto__: dart.getFields(selectable.InternalSelectableMath.__proto__),
    ast: dart.finalFieldType(syntax_tree.SyntaxTree),
    autofocus: dart.finalFieldType(core.bool),
    cursorColor: dart.finalFieldType(ui.Color),
    cursorOffset: dart.finalFieldType(dart.nullable(ui.Offset)),
    cursorOpacityAnimates: dart.finalFieldType(core.bool),
    cursorRadius: dart.finalFieldType(dart.nullable(ui.Radius)),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    enableInteractiveSelection: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    forcePressEnabled: dart.finalFieldType(core.bool),
    hintingColor: dart.finalFieldType(dart.nullable(ui.Color)),
    options: dart.finalFieldType(options$.MathOptions),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCursor: dart.finalFieldType(core.bool),
    textSelectionControls: dart.finalFieldType(text_selection.TextSelectionControls),
    toolbarOptions: dart.finalFieldType(editable_text.ToolbarOptions)
  }));
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(selectable.InternalSelectableMath) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(selectable.InternalSelectableMath));
  const State_FocusManagerMixin$36 = class State_FocusManagerMixin extends State_AutomaticKeepAliveClientMixin$36 {};
  (State_FocusManagerMixin$36.new = function() {
    focus_manager$.FocusManagerMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_FocusManagerMixin$36.__proto__.new.call(this);
  }).prototype = State_FocusManagerMixin$36.prototype;
  dart.applyMixin(State_FocusManagerMixin$36, focus_manager$.FocusManagerMixin$(selectable.InternalSelectableMath));
  const State_SelectionManagerMixin$36 = class State_SelectionManagerMixin extends State_FocusManagerMixin$36 {};
  (State_SelectionManagerMixin$36.new = function() {
    selection_manager.SelectionManagerMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_SelectionManagerMixin$36.__proto__.new.call(this);
  }).prototype = State_SelectionManagerMixin$36.prototype;
  dart.applyMixin(State_SelectionManagerMixin$36, selection_manager.SelectionManagerMixin$(selectable.InternalSelectableMath));
  const State_SelectionOverlayManagerMixin$36 = class State_SelectionOverlayManagerMixin extends State_SelectionManagerMixin$36 {};
  (State_SelectionOverlayManagerMixin$36.new = function() {
    overlay_manager.SelectionOverlayManagerMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_SelectionOverlayManagerMixin$36.__proto__.new.call(this);
  }).prototype = State_SelectionOverlayManagerMixin$36.prototype;
  dart.applyMixin(State_SelectionOverlayManagerMixin$36, overlay_manager.SelectionOverlayManagerMixin$(selectable.InternalSelectableMath));
  const State_WebSelectionControlsManagerMixin$36 = class State_WebSelectionControlsManagerMixin extends State_SelectionOverlayManagerMixin$36 {};
  (State_WebSelectionControlsManagerMixin$36.new = function() {
    web_selection_manager.WebSelectionControlsManagerMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_WebSelectionControlsManagerMixin$36.__proto__.new.call(this);
  }).prototype = State_WebSelectionControlsManagerMixin$36.prototype;
  dart.applyMixin(State_WebSelectionControlsManagerMixin$36, web_selection_manager.WebSelectionControlsManagerMixin$(selectable.InternalSelectableMath));
  const State_SingleTickerProviderStateMixin$36$ = class State_SingleTickerProviderStateMixin extends State_WebSelectionControlsManagerMixin$36 {};
  (State_SingleTickerProviderStateMixin$36$.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$, ticker_provider.SingleTickerProviderStateMixin$(selectable.InternalSelectableMath));
  const State_CursorTimerManagerMixin$36 = class State_CursorTimerManagerMixin extends State_SingleTickerProviderStateMixin$36$ {};
  (State_CursorTimerManagerMixin$36.new = function() {
    cursor_timer_manager.CursorTimerManagerMixin$(selectable.InternalSelectableMath)[dart.mixinNew].call(this);
    State_CursorTimerManagerMixin$36.__proto__.new.call(this);
  }).prototype = State_CursorTimerManagerMixin$36.prototype;
  dart.applyMixin(State_CursorTimerManagerMixin$36, cursor_timer_manager.CursorTimerManagerMixin$(selectable.InternalSelectableMath));
  selectable.InternalSelectableMathState = class InternalSelectableMathState extends State_CursorTimerManagerMixin$36 {
    get textSelectionControls() {
      return this.widget.textSelectionControls;
    }
    get focusNode() {
      let t89, t88;
      t88 = this.widget.focusNode;
      return t88 == null ? (t89 = this[S$._focusNode], t89 == null ? this[S$._focusNode] = new focus_manager.FocusNode.new() : t89) : t88;
    }
    get showCursor() {
      return this.widget.showCursor;
    }
    get cursorOpacityAnimates() {
      return this.widget.cursorOpacityAnimates;
    }
    get dragStartBehavior() {
      return this.widget.dragStartBehavior;
    }
    get controller() {
      let t88;
      return dart.test(this[S$.__InternalSelectableMathState_controller_isSet]) ? (t88 = this[S$.__InternalSelectableMathState_controller], t88) : dart.throw(new _internal.LateError.fieldNI("controller"));
    }
    set controller(t88) {
      if (t88 == null) dart.nullFailed(I[156], 429, 23, "null");
      this[S$.__InternalSelectableMathState_controller_isSet] = true;
      this[S$.__InternalSelectableMathState_controller] = t88;
    }
    get [S$._oldFocusNode$3]() {
      let t89;
      return dart.test(this[S$.__InternalSelectableMathState__oldFocusNode_isSet]) ? (t89 = this[S$.__InternalSelectableMathState__oldFocusNode], t89) : dart.throw(new _internal.LateError.fieldNI("_oldFocusNode"));
    }
    set [S$._oldFocusNode$3](t89) {
      if (t89 == null) dart.nullFailed(I[156], 431, 18, "null");
      this[S$.__InternalSelectableMathState__oldFocusNode_isSet] = true;
      this[S$.__InternalSelectableMathState__oldFocusNode] = t89;
    }
    initState() {
      let t90;
      this.controller = new controller.MathController.new({ast: this.widget.ast});
      this[S$._oldFocusNode$3] = (t90 = this.focusNode, (() => {
        t90.addListener(dart.bind(this, 'updateKeepAlive'));
        return t90;
      })());
      super.initState();
    }
    didUpdateWidget(oldWidget) {
      let t90;
      selectable.InternalSelectableMath.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[156], 441, 47, "oldWidget");
      if (!dart.equals(this.widget.ast, this.controller.ast)) {
        this.controller = new controller.MathController.new({ast: this.widget.ast});
      }
      if (!dart.equals(this[S$._oldFocusNode$3], this.focusNode)) {
        this[S$._oldFocusNode$3].removeListener(dart.bind(this, 'updateKeepAlive'));
        this[S$._oldFocusNode$3] = (t90 = this.focusNode, (() => {
          t90.addListener(dart.bind(this, 'updateKeepAlive'));
          return t90;
        })());
      }
      super.didUpdateWidget(oldWidget);
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!dart.test(this[S$._didAutoFocus]) && dart.test(this.widget.autofocus)) {
        this[S$._didAutoFocus] = true;
        dart.nullCheck(binding.SchedulerBinding.instance).addPostFrameCallback(dart.fn(_ => {
          if (_ == null) dart.nullFailed(I[156], 459, 56, "_");
          if (dart.test(this.mounted)) {
            focus_scope.FocusScope.of(this.context).autofocus(dart.nullCheck(this.widget.focusNode));
          }
        }, T$.DurationTovoid()));
      }
    }
    dispose() {
      this[S$._oldFocusNode$3].removeListener(dart.bind(this, 'updateKeepAlive'));
      super.dispose();
      this.controller.dispose();
    }
    onSelectionChanged(selection, cause) {
      if (selection == null) dart.nullFailed(I[156], 475, 21, "selection");
      switch (theme$.Theme.of(this.context).platform) {
        case C[63] || CT.C63:
        case C[64] || CT.C64:
        {
          if (cause == text_input.SelectionChangedCause.longPress) {
            this.bringIntoView(selection.base);
          }
          return;
        }
        case C[65] || CT.C65:
        case C[66] || CT.C66:
        case C[67] || CT.C67:
        case C[68] || CT.C68:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[156], 491, 29, "context");
      super.build(context);
      let child = this.controller.ast.buildWidget(this.widget.options);
      return this.selectionGestureDetectorBuilder.buildGestureDetector({child: new basic.MouseRegion.new({cursor: mouse_cursor.SystemMouseCursors.text, child: new basic.CompositedTransformTarget.new({link: this.toolbarLayerLink, child: new provider.MultiProvider.new({providers: T$.JSArrayOfSingleChildWidget().of([new (T$.ProviderOfFlutterMathMode()).value({value: mode$.FlutterMathMode.select, $creationLocationd_0dea112b090073317d4: C[2669] || CT.C2669}), new (T$.ChangeNotifierProviderOfMathController()).value({value: this.controller, $creationLocationd_0dea112b090073317d4: C[2672] || CT.C2672}), new (T$.ProxyProviderOfMathController$TextSelection()).new({create: dart.fn(context => {
                    if (context == null) dart.nullFailed(I[156], 506, 26, "context");
                    return C[158] || CT.C158;
                  }, T$.BuildContextToTextSelection()), update: dart.fn((context, value, previous) => {
                    if (context == null) dart.nullFailed(I[156], 507, 26, "context");
                    if (value == null) dart.nullFailed(I[156], 507, 35, "value");
                    return value.selection;
                  }, T$.BuildContextAndMathControllerAndTextSelectionNToTextSelection()), $creationLocationd_0dea112b090073317d4: C[2675] || CT.C2675}), new (T$.ProviderOfSelectionStyle()).value({value: new selectable.SelectionStyle.new({cursorColor: this.widget.cursorColor, cursorOffset: this.widget.cursorOffset, cursorRadius: this.widget.cursorRadius, cursorWidth: this.widget.cursorWidth, cursorHeight: this.widget.cursorHeight, selectionColor: this.widget.selectionColor, paintCursorAboveText: this.widget.paintCursorAboveText}), $creationLocationd_0dea112b090073317d4: C[2679] || CT.C2679}), new (T$.ProviderOfTuple2OfLayerLink$LayerLink()).value({value: new (T$.Tuple2OfLayerLink$LayerLink()).new(this.startHandleLayerLink, this.endHandleLayerLink), $creationLocationd_0dea112b090073317d4: C[2682] || CT.C2682}), new (T$.ProviderOfWrapperOfAnimationController()).value({value: new (T$.WrapperOfAnimationController()).new(this.cursorBlinkOpacityController), $creationLocationd_0dea112b090073317d4: C[2685] || CT.C2685})]), child: child, $creationLocationd_0dea112b090073317d4: C[2688] || CT.C2688}), $creationLocationd_0dea112b090073317d4: C[2692] || CT.C2692}), $creationLocationd_0dea112b090073317d4: C[2696] || CT.C2696})});
    }
    get wantKeepAlive() {
      return this.hasFocus;
    }
    get copyEnabled() {
      return this.widget.toolbarOptions.copy;
    }
    get cutEnabled() {
      return false;
    }
    get pasteEnabled() {
      return false;
    }
    get selectAllEnabled() {
      return this.widget.toolbarOptions.selectAll;
    }
    get forcePressEnabled() {
      return this.widget.forcePressEnabled;
    }
    get selectionEnabled() {
      return this.widget.enableInteractiveSelection;
    }
    get preferredLineHeight() {
      return this.widget.options.fontSize;
    }
    bringIntoView(position) {
      if (position == null) dart.nullFailed(I[156], 559, 35, "position");
    }
    userUpdateTextEditingValue(value, cause) {
      if (value == null) dart.nullFailed(I[156], 563, 24, "value");
      if (cause == null) dart.nullFailed(I[156], 563, 53, "cause");
    }
  };
  (selectable.InternalSelectableMathState.new = function() {
    this[S$._focusNode] = null;
    this[S$.__InternalSelectableMathState_controller] = null;
    this[S$.__InternalSelectableMathState_controller_isSet] = false;
    this[S$.__InternalSelectableMathState__oldFocusNode] = null;
    this[S$.__InternalSelectableMathState__oldFocusNode_isSet] = false;
    this[S$._didAutoFocus] = false;
    selectable.InternalSelectableMathState.__proto__.new.call(this);
    ;
  }).prototype = selectable.InternalSelectableMathState.prototype;
  dart.addTypeTests(selectable.InternalSelectableMathState);
  dart.addTypeCaches(selectable.InternalSelectableMathState);
  dart.setMethodSignature(selectable.InternalSelectableMathState, () => ({
    __proto__: dart.getMethods(selectable.InternalSelectableMathState.__proto__),
    onSelectionChanged: dart.fnType(dart.void, [text_editing.TextSelection, dart.nullable(text_input.SelectionChangedCause)]),
    bringIntoView: dart.fnType(dart.void, [ui.TextPosition]),
    userUpdateTextEditingValue: dart.fnType(dart.void, [text_input.TextEditingValue, text_input.SelectionChangedCause])
  }));
  dart.setGetterSignature(selectable.InternalSelectableMathState, () => ({
    __proto__: dart.getGetters(selectable.InternalSelectableMathState.__proto__),
    textSelectionControls: text_selection.TextSelectionControls,
    focusNode: focus_manager.FocusNode,
    showCursor: core.bool,
    cursorOpacityAnimates: core.bool,
    dragStartBehavior: recognizer.DragStartBehavior,
    controller: controller.MathController,
    [S$._oldFocusNode$3]: focus_manager.FocusNode,
    wantKeepAlive: core.bool,
    copyEnabled: core.bool,
    cutEnabled: core.bool,
    pasteEnabled: core.bool,
    selectAllEnabled: core.bool,
    forcePressEnabled: core.bool,
    selectionEnabled: core.bool,
    preferredLineHeight: core.double
  }));
  dart.setSetterSignature(selectable.InternalSelectableMathState, () => ({
    __proto__: dart.getSetters(selectable.InternalSelectableMathState.__proto__),
    controller: controller.MathController,
    [S$._oldFocusNode$3]: focus_manager.FocusNode
  }));
  dart.setLibraryUri(selectable.InternalSelectableMathState, I[157]);
  dart.setFieldSignature(selectable.InternalSelectableMathState, () => ({
    __proto__: dart.getFields(selectable.InternalSelectableMathState.__proto__),
    [S$._focusNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [S$.__InternalSelectableMathState_controller]: dart.fieldType(dart.nullable(controller.MathController)),
    [S$.__InternalSelectableMathState_controller_isSet]: dart.fieldType(core.bool),
    [S$.__InternalSelectableMathState__oldFocusNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
    [S$.__InternalSelectableMathState__oldFocusNode_isSet]: dart.fieldType(core.bool),
    [S$._didAutoFocus]: dart.fieldType(core.bool)
  }));
  selectable.SelectionStyle = class SelectionStyle extends core.Object {
    get cursorColor() {
      return this[S$.cursorColor$2];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get cursorOffset() {
      return this[S$.cursorOffset$1];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get cursorRadius() {
      return this[S$.cursorRadius$2];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorWidth() {
      return this[S$.cursorWidth$2];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[S$.cursorHeight$2];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get hintingColor() {
      return this[S$.hintingColor$1];
    }
    set hintingColor(value) {
      super.hintingColor = value;
    }
    get paintCursorAboveText() {
      return this[S$.paintCursorAboveText$1];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get selectionColor() {
      return this[S$.selectionColor$1];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get showCursor() {
      return this[S$.showCursor$2];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    _equals(o) {
      if (o == null) return false;
      if (this === o) return true;
      return selectable.SelectionStyle.is(o) && dart.equals(o.cursorColor, this.cursorColor) && dart.equals(o.cursorOffset, this.cursorOffset) && dart.equals(o.cursorRadius, this.cursorRadius) && o.cursorWidth == this.cursorWidth && o.cursorHeight == this.cursorHeight && dart.equals(o.hintingColor, this.hintingColor) && o.paintCursorAboveText == this.paintCursorAboveText && dart.equals(o.selectionColor, this.selectionColor) && o.showCursor == this.showCursor;
    }
    get hashCode() {
      return ui.hashValues(this.cursorColor, this.cursorOffset, this.cursorRadius, this.cursorWidth, this.cursorHeight, this.hintingColor, this.paintCursorAboveText, this.selectionColor, this.showCursor);
    }
  };
  (selectable.SelectionStyle.new = function(opts) {
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(I[156], 578, 19, "cursorColor");
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 1;
    if (cursorWidth == null) dart.nullFailed(I[156], 581, 10, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let hintingColor = opts && 'hintingColor' in opts ? opts.hintingColor : null;
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : false;
    if (paintCursorAboveText == null) dart.nullFailed(I[156], 584, 10, "paintCursorAboveText");
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : false;
    if (showCursor == null) dart.nullFailed(I[156], 586, 10, "showCursor");
    this[S$.cursorColor$2] = cursorColor;
    this[S$.cursorOffset$1] = cursorOffset;
    this[S$.cursorRadius$2] = cursorRadius;
    this[S$.cursorWidth$2] = cursorWidth;
    this[S$.cursorHeight$2] = cursorHeight;
    this[S$.hintingColor$1] = hintingColor;
    this[S$.paintCursorAboveText$1] = paintCursorAboveText;
    this[S$.selectionColor$1] = selectionColor;
    this[S$.showCursor$2] = showCursor;
    ;
  }).prototype = selectable.SelectionStyle.prototype;
  dart.addTypeTests(selectable.SelectionStyle);
  dart.addTypeCaches(selectable.SelectionStyle);
  dart.setLibraryUri(selectable.SelectionStyle, I[157]);
  dart.setFieldSignature(selectable.SelectionStyle, () => ({
    __proto__: dart.getFields(selectable.SelectionStyle.__proto__),
    cursorColor: dart.finalFieldType(ui.Color),
    cursorOffset: dart.finalFieldType(dart.nullable(ui.Offset)),
    cursorRadius: dart.finalFieldType(dart.nullable(ui.Radius)),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    hintingColor: dart.finalFieldType(dart.nullable(ui.Color)),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCursor: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(selectable.SelectionStyle, ['_equals']);
  dart.defineExtensionAccessors(selectable.SelectionStyle, ['hashCode']);
  dart.defineLazy(selectable, {
    /*selectable.defaultSelection*/get defaultSelection() {
      return C[158] || CT.C158;
    }
  }, false);
  line_editable.EditableLine = class EditableLine extends framework.MultiChildRenderObjectWidget {
    get crossAxisAlignment() {
      return this[S$.crossAxisAlignment];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get cursorBlinkOpacityController() {
      return this[S$.cursorBlinkOpacityController];
    }
    set cursorBlinkOpacityController(value) {
      super.cursorBlinkOpacityController = value;
    }
    get cursorColor() {
      return this[S$.cursorColor$3];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get cursorOffset() {
      return this[S$.cursorOffset$2];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get cursorOpacityAnimates() {
      return this[S$.cursorOpacityAnimates$1];
    }
    set cursorOpacityAnimates(value) {
      super.cursorOpacityAnimates = value;
    }
    get cursorRadius() {
      return this[S$.cursorRadius$3];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorWidth() {
      return this[S$.cursorWidth$3];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorHeight() {
      return this[S$.cursorHeight$3];
    }
    set cursorHeight(value) {
      super.cursorHeight = value;
    }
    get devicePixelRatio() {
      return this[S$.devicePixelRatio];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get hintingColor() {
      return this[S$.hintingColor$2];
    }
    set hintingColor(value) {
      super.hintingColor = value;
    }
    get minDepth() {
      return this[S$.minDepth];
    }
    set minDepth(value) {
      super.minDepth = value;
    }
    get minHeight() {
      return this[S$.minHeight];
    }
    set minHeight(value) {
      super.minHeight = value;
    }
    get node() {
      return this[S$.node];
    }
    set node(value) {
      super.node = value;
    }
    get paintCursorAboveText() {
      return this[S$.paintCursorAboveText$2];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get preferredLineHeight() {
      return this[S$.preferredLineHeight];
    }
    set preferredLineHeight(value) {
      super.preferredLineHeight = value;
    }
    get selection() {
      return this[S$.selection$1];
    }
    set selection(value) {
      super.selection = value;
    }
    get selectionColor() {
      return this[S$.selectionColor$2];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get showCursor() {
      return this[S$.showCursor$3];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get startHandleLayerLink() {
      return this[S$.startHandleLayerLink$3];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[S$.endHandleLayerLink$3];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get textBaseline() {
      return this[S$.textBaseline];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get textDirection() {
      return this[S$.textDirection];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get [S$._needTextDirection]() {
      return true;
    }
    getEffectiveTextDirection(context) {
      let t90;
      if (context == null) dart.nullFailed(I[158], 87, 57, "context");
      t90 = this.textDirection;
      return t90 == null ? dart.test(this[S$._needTextDirection]) ? basic.Directionality.of(context) : null : t90;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[158], 91, 54, "context");
      return new line_editable.RenderEditableLine.new({crossAxisAlignment: this.crossAxisAlignment, cursorBlinkOpacityController: this.cursorBlinkOpacityController, cursorColor: this.cursorColor, cursorOffset: this.cursorOffset, cursorRadius: this.cursorRadius, cursorWidth: this.cursorWidth, cursorHeight: this.cursorHeight, devicePixelRatio: this.devicePixelRatio, hintingColor: this.hintingColor, minDepth: this.minDepth, minHeight: this.minHeight, node: this.node, paintCursorAboveText: this.paintCursorAboveText, preferredLineHeight: this.preferredLineHeight, selection: this.selection, selectionColor: this.selectionColor, showCursor: this.showCursor, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, textBaseline: this.textBaseline, textDirection: this.getEffectiveTextDirection(context)});
    }
    updateRenderObject(context, renderObject) {
      let t90;
      if (context == null) dart.nullFailed(I[158], 118, 24, "context");
      line_editable.RenderEditableLine.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[158], 118, 52, "renderObject");
      t90 = renderObject;
      return (() => {
        t90.crossAxisAlignment = this.crossAxisAlignment;
        t90.cursorBlinkOpacityController = this.cursorBlinkOpacityController;
        t90.cursorColor = this.cursorColor;
        t90.cursorOffset = this.cursorOffset;
        t90.cursorRadius = this.cursorRadius;
        t90.cursorWidth = this.cursorWidth;
        t90.cursorHeight = this.cursorHeight;
        t90.devicePixelRatio = this.devicePixelRatio;
        t90.hintingColor = this.hintingColor;
        t90.minDepth = this.minDepth;
        t90.minHeight = this.minHeight;
        t90.node = this.node;
        t90.paintCursorAboveText = this.paintCursorAboveText;
        t90.preferredLineHeight = this.preferredLineHeight;
        t90.selection = this.selection;
        t90.selectionColor = this.selectionColor;
        t90.showCursor = this.showCursor;
        t90.startHandleLayerLink = this.startHandleLayerLink;
        t90.endHandleLayerLink = this.endHandleLayerLink;
        t90.textBaseline = this.textBaseline;
        t90.textDirection = this.getEffectiveTextDirection(context);
        return t90;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[158], 143, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.EnumPropertyOfTextBaseline()).new("textBaseline", this.textBaseline, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfCrossAxisAlignment()).new("crossAxisAlignment", this.crossAxisAlignment));
      properties.add(new (T$.EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
    }
  };
  (line_editable.EditableLine.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[2411] || CT.C2411;
    if (crossAxisAlignment == null) dart.nullFailed(I[158], 15, 10, "crossAxisAlignment");
    let cursorBlinkOpacityController = opts && 'cursorBlinkOpacityController' in opts ? opts.cursorBlinkOpacityController : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(I[158], 17, 19, "cursorColor");
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let cursorOpacityAnimates = opts && 'cursorOpacityAnimates' in opts ? opts.cursorOpacityAnimates : false;
    if (cursorOpacityAnimates == null) dart.nullFailed(I[158], 19, 10, "cursorOpacityAnimates");
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 1;
    if (cursorWidth == null) dart.nullFailed(I[158], 21, 10, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : 1;
    if (devicePixelRatio == null) dart.nullFailed(I[158], 23, 10, "devicePixelRatio");
    let hintingColor = opts && 'hintingColor' in opts ? opts.hintingColor : null;
    let minDepth = opts && 'minDepth' in opts ? opts.minDepth : 0;
    if (minDepth == null) dart.nullFailed(I[158], 25, 10, "minDepth");
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    if (minHeight == null) dart.nullFailed(I[158], 26, 10, "minHeight");
    let node = opts && 'node' in opts ? opts.node : null;
    if (node == null) dart.nullFailed(I[158], 27, 19, "node");
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : false;
    if (paintCursorAboveText == null) dart.nullFailed(I[158], 28, 10, "paintCursorAboveText");
    let preferredLineHeight = opts && 'preferredLineHeight' in opts ? opts.preferredLineHeight : null;
    if (preferredLineHeight == null) dart.nullFailed(I[158], 29, 19, "preferredLineHeight");
    let selection = opts && 'selection' in opts ? opts.selection : C[158] || CT.C158;
    if (selection == null) dart.nullFailed(I[158], 30, 10, "selection");
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : false;
    if (showCursor == null) dart.nullFailed(I[158], 32, 10, "showCursor");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : C[2700] || CT.C2700;
    if (textBaseline == null) dart.nullFailed(I[158], 35, 10, "textBaseline");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let children = opts && 'children' in opts ? opts.children : C[2701] || CT.C2701;
    if (children == null) dart.nullFailed(I[158], 37, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.crossAxisAlignment] = crossAxisAlignment;
    this[S$.cursorBlinkOpacityController] = cursorBlinkOpacityController;
    this[S$.cursorColor$3] = cursorColor;
    this[S$.cursorOffset$2] = cursorOffset;
    this[S$.cursorOpacityAnimates$1] = cursorOpacityAnimates;
    this[S$.cursorRadius$3] = cursorRadius;
    this[S$.cursorWidth$3] = cursorWidth;
    this[S$.cursorHeight$3] = cursorHeight;
    this[S$.devicePixelRatio] = devicePixelRatio;
    this[S$.hintingColor$2] = hintingColor;
    this[S$.minDepth] = minDepth;
    this[S$.minHeight] = minHeight;
    this[S$.node] = node;
    this[S$.paintCursorAboveText$2] = paintCursorAboveText;
    this[S$.preferredLineHeight] = preferredLineHeight;
    this[S$.selection$1] = selection;
    this[S$.selectionColor$2] = selectionColor;
    this[S$.showCursor$3] = showCursor;
    this[S$.startHandleLayerLink$3] = startHandleLayerLink;
    this[S$.endHandleLayerLink$3] = endHandleLayerLink;
    this[S$.textBaseline] = textBaseline;
    this[S$.textDirection] = textDirection;
    line_editable.EditableLine.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = line_editable.EditableLine.prototype;
  dart.addTypeTests(line_editable.EditableLine);
  dart.addTypeCaches(line_editable.EditableLine);
  dart.setMethodSignature(line_editable.EditableLine, () => ({
    __proto__: dart.getMethods(line_editable.EditableLine.__proto__),
    getEffectiveTextDirection: dart.fnType(dart.nullable(ui.TextDirection), [framework.BuildContext]),
    createRenderObject: dart.fnType(line_editable.RenderEditableLine, [framework.BuildContext])
  }));
  dart.setGetterSignature(line_editable.EditableLine, () => ({
    __proto__: dart.getGetters(line_editable.EditableLine.__proto__),
    [S$._needTextDirection]: core.bool
  }));
  dart.setLibraryUri(line_editable.EditableLine, I[159]);
  dart.setFieldSignature(line_editable.EditableLine, () => ({
    __proto__: dart.getFields(line_editable.EditableLine.__proto__),
    crossAxisAlignment: dart.finalFieldType(flex.CrossAxisAlignment),
    cursorBlinkOpacityController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
    cursorColor: dart.finalFieldType(ui.Color),
    cursorOffset: dart.finalFieldType(dart.nullable(ui.Offset)),
    cursorOpacityAnimates: dart.finalFieldType(core.bool),
    cursorRadius: dart.finalFieldType(dart.nullable(ui.Radius)),
    cursorWidth: dart.finalFieldType(core.double),
    cursorHeight: dart.finalFieldType(dart.nullable(core.double)),
    devicePixelRatio: dart.finalFieldType(core.double),
    hintingColor: dart.finalFieldType(dart.nullable(ui.Color)),
    minDepth: dart.finalFieldType(core.double),
    minHeight: dart.finalFieldType(core.double),
    node: dart.finalFieldType(syntax_tree.EquationRowNode),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    preferredLineHeight: dart.finalFieldType(core.double),
    selection: dart.finalFieldType(text_editing.TextSelection),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCursor: dart.finalFieldType(core.bool),
    startHandleLayerLink: dart.finalFieldType(dart.nullable(layer.LayerLink)),
    endHandleLayerLink: dart.finalFieldType(dart.nullable(layer.LayerLink)),
    textBaseline: dart.finalFieldType(ui.TextBaseline),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection))
  }));
  line.LineParentData = class LineParentData extends box.ContainerBoxParentData$(box.RenderBox) {
    get canBreakBefore() {
      return this[S$.canBreakBefore];
    }
    set canBreakBefore(value) {
      this[S$.canBreakBefore] = value;
    }
    get customCrossSize() {
      return this[S$.customCrossSize];
    }
    set customCrossSize(value) {
      this[S$.customCrossSize] = value;
    }
    get trailingMargin() {
      return this[S$.trailingMargin];
    }
    set trailingMargin(value) {
      this[S$.trailingMargin] = value;
    }
    get alignerOrSpacer() {
      return this[S$.alignerOrSpacer$1];
    }
    set alignerOrSpacer(value) {
      this[S$.alignerOrSpacer$1] = value;
    }
    toString() {
      return dart.str(super.toString()) + "; canBreakBefore = " + dart.str(this.canBreakBefore) + "; customSize = " + dart.str(this.customCrossSize != null) + "; trailingMargin = " + dart.str(this.trailingMargin) + "; alignerOrSpacer = " + dart.str(this.alignerOrSpacer);
    }
  };
  (line.LineParentData.new = function() {
    this[S$.canBreakBefore] = false;
    this[S$.customCrossSize] = null;
    this[S$.trailingMargin] = 0.0;
    this[S$.alignerOrSpacer$1] = false;
    line.LineParentData.__proto__.new.call(this);
    ;
  }).prototype = line.LineParentData.prototype;
  dart.addTypeTests(line.LineParentData);
  dart.addTypeCaches(line.LineParentData);
  dart.setLibraryUri(line.LineParentData, I[161]);
  dart.setFieldSignature(line.LineParentData, () => ({
    __proto__: dart.getFields(line.LineParentData.__proto__),
    canBreakBefore: dart.fieldType(core.bool),
    customCrossSize: dart.fieldType(dart.nullable(dart.fnType(box.BoxConstraints, [core.double, core.double]))),
    trailingMargin: dart.fieldType(core.double),
    alignerOrSpacer: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(line.LineParentData, ['toString']);
  const RenderBox_ContainerRenderObjectMixin$36$ = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36$.new = function() {
    object.ContainerRenderObjectMixin$(box.RenderBox, line.LineParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36$.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36$, object.ContainerRenderObjectMixin$(box.RenderBox, line.LineParentData));
  const RenderBox_RenderBoxContainerDefaultsMixin$36$ = class RenderBox_RenderBoxContainerDefaultsMixin extends RenderBox_ContainerRenderObjectMixin$36$ {};
  (RenderBox_RenderBoxContainerDefaultsMixin$36$.new = function() {
    RenderBox_RenderBoxContainerDefaultsMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_RenderBoxContainerDefaultsMixin$36$.prototype;
  dart.applyMixin(RenderBox_RenderBoxContainerDefaultsMixin$36$, box.RenderBoxContainerDefaultsMixin$(box.RenderBox, line.LineParentData));
  const RenderBox_DebugOverflowIndicatorMixin$36$ = class RenderBox_DebugOverflowIndicatorMixin extends RenderBox_RenderBoxContainerDefaultsMixin$36$ {};
  (RenderBox_DebugOverflowIndicatorMixin$36$.new = function() {
    debug_overflow_indicator.DebugOverflowIndicatorMixin[dart.mixinNew].call(this);
    RenderBox_DebugOverflowIndicatorMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_DebugOverflowIndicatorMixin$36$.prototype;
  dart.applyMixin(RenderBox_DebugOverflowIndicatorMixin$36$, debug_overflow_indicator.DebugOverflowIndicatorMixin);
  line.RenderLine = class RenderLine extends RenderBox_DebugOverflowIndicatorMixin$36$ {
    get maxHeightAboveBaseline() {
      return this[S$.maxHeightAboveBaseline];
    }
    set maxHeightAboveBaseline(value) {
      this[S$.maxHeightAboveBaseline] = value;
    }
    get maxHeightAboveEndBaseline() {
      return this[S$.maxHeightAboveEndBaseline];
    }
    set maxHeightAboveEndBaseline(value) {
      this[S$.maxHeightAboveEndBaseline] = value;
    }
    get alignColWidth() {
      return this[S$.alignColWidth];
    }
    set alignColWidth(value) {
      this[S$.alignColWidth] = value;
    }
    get crossAxisAlignment() {
      return this[S$._crossAxisAlignment];
    }
    set crossAxisAlignment(value) {
      if (value == null) dart.nullFailed(I[160], 170, 45, "value");
      if (this[S$._crossAxisAlignment] != value) {
        this[S$._crossAxisAlignment] = value;
        this.markNeedsLayout();
      }
    }
    get minDepth() {
      return this[S$._minDepth];
    }
    set minDepth(value) {
      if (value == null) dart.nullFailed(I[160], 179, 23, "value");
      if (this[S$._minDepth] != value) {
        this[S$._minDepth] = value;
        this.markNeedsLayout();
      }
    }
    get minHeight() {
      return this[S$._minHeight];
    }
    set minHeight(value) {
      if (value == null) dart.nullFailed(I[160], 188, 24, "value");
      if (this[S$._minHeight] != value) {
        this[S$._minHeight] = value;
        this.markNeedsLayout();
      }
    }
    get textBaseline() {
      return this[S$._textBaseline];
    }
    set textBaseline(value) {
      if (value == null) dart.nullFailed(I[160], 197, 33, "value");
      if (this[S$._textBaseline] != value) {
        this[S$._textBaseline] = value;
        this.markNeedsLayout();
      }
    }
    get textDirection() {
      return this[S$._textDirection];
    }
    set textDirection(value) {
      if (this[S$._textDirection] != value) {
        this[S$._textDirection] = value;
        this.markNeedsLayout();
      }
    }
    get [S$._debugHasNecessaryDirections]() {
      if (!(this.textDirection != null)) dart.assertFailed("Horizontal " + dart.str(this[S.$runtimeType]) + " has a null textDirection, so the alignment cannot be resolved.", I[160], 214, 12, "textDirection != null");
      return true;
    }
    get [S$._hasOverflow]() {
      return dart.nullCheck(this[S$._overflow]) > 1e-10;
    }
    setupParentData(child) {
      box.RenderBox.as(child);
      if (child == null) dart.nullFailed(I[160], 223, 34, "child");
      if (!line.LineParentData.is(child.parentData)) {
        child.parentData = new line.LineParentData.new();
      }
    }
    [S$._getIntrinsicSize](opts) {
      let sizingDirection = opts && 'sizingDirection' in opts ? opts.sizingDirection : null;
      if (sizingDirection == null) dart.nullFailed(I[160], 230, 19, "sizingDirection");
      let extent = opts && 'extent' in opts ? opts.extent : null;
      if (extent == null) dart.nullFailed(I[160], 232, 9, "extent");
      let childSize = opts && 'childSize' in opts ? opts.childSize : null;
      if (childSize == null) dart.nullFailed(I[160], 234, 9, "childSize");
      if (sizingDirection == basic_types.Axis.horizontal) {
        let inflexibleSpace = 0.0;
        let child = this.firstChild;
        while (child != null) {
          inflexibleSpace = inflexibleSpace + dart.notNull(childSize(child, extent));
          let childParentData = line.LineParentData.as(child.parentData);
          child = childParentData.nextSibling;
        }
        return inflexibleSpace;
      } else {
        let maxCrossSize = 0.0;
        let child = this.firstChild;
        while (child != null) {
          let childMainSize = child.getMaxIntrinsicWidth(1 / 0);
          let crossSize = childSize(child, childMainSize);
          maxCrossSize = math.max(core.double, maxCrossSize, crossSize);
          let childParentData = line.LineParentData.as(child.parentData);
          child = childParentData.nextSibling;
        }
        return maxCrossSize;
      }
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[160], 267, 42, "height");
      return this[S$._getIntrinsicSize]({sizingDirection: basic_types.Axis.horizontal, extent: height, childSize: dart.fn((child, extent) => {
          if (child == null) dart.nullFailed(I[160], 270, 31, "child");
          if (extent == null) dart.nullFailed(I[160], 270, 45, "extent");
          return child.getMinIntrinsicWidth(extent);
        }, T$.RenderBoxAnddoubleTodouble())});
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(I[160], 275, 42, "height");
      return this[S$._getIntrinsicSize]({sizingDirection: basic_types.Axis.horizontal, extent: height, childSize: dart.fn((child, extent) => {
          if (child == null) dart.nullFailed(I[160], 278, 31, "child");
          if (extent == null) dart.nullFailed(I[160], 278, 45, "extent");
          return child.getMaxIntrinsicWidth(extent);
        }, T$.RenderBoxAnddoubleTodouble())});
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[160], 283, 43, "width");
      return this[S$._getIntrinsicSize]({sizingDirection: basic_types.Axis.vertical, extent: width, childSize: dart.fn((child, extent) => {
          if (child == null) dart.nullFailed(I[160], 286, 31, "child");
          if (extent == null) dart.nullFailed(I[160], 286, 45, "extent");
          return child.getMinIntrinsicHeight(extent);
        }, T$.RenderBoxAnddoubleTodouble())});
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(I[160], 291, 43, "width");
      return this[S$._getIntrinsicSize]({sizingDirection: basic_types.Axis.vertical, extent: width, childSize: dart.fn((child, extent) => {
          if (child == null) dart.nullFailed(I[160], 294, 31, "child");
          if (extent == null) dart.nullFailed(I[160], 294, 45, "extent");
          return child.getMaxIntrinsicHeight(extent);
        }, T$.RenderBoxAnddoubleTodouble())});
    }
    computeDistanceToActualBaseline(baseline) {
      if (baseline == null) dart.nullFailed(I[160], 303, 55, "baseline");
      if (!!dart.test(this.debugNeedsLayout)) dart.assertFailed(null, I[160], 304, 12, "!debugNeedsLayout");
      return this.maxHeightAboveBaseline;
    }
    get caretOffsets() {
      let t90;
      return dart.test(this[S$.__RenderLine_caretOffsets_isSet]) ? (t90 = this[S$.__RenderLine_caretOffsets], t90) : dart.throw(new _internal.LateError.fieldNI("caretOffsets"));
    }
    set caretOffsets(t90) {
      if (t90 == null) dart.nullFailed(I[160], 309, 21, "null");
      this[S$.__RenderLine_caretOffsets_isSet] = true;
      this[S$.__RenderLine_caretOffsets] = t90;
    }
    performLayout() {
      let t91, t91$;
      if (!dart.test(this[S$._debugHasNecessaryDirections])) dart.assertFailed(null, I[160], 315, 12, "_debugHasNecessaryDirections");
      this.maxHeightAboveBaseline = 0.0;
      let maxDepthBelowBaseline = 0.0;
      let child = this.firstChild;
      let relativeChildren = T$.JSArrayOfRenderBox().of([]);
      let alignerAndSpacers = T$.JSArrayOfRenderBox().of([]);
      while (child != null) {
        let childParentData = line.LineParentData.as(child.parentData);
        if (childParentData.customCrossSize != null) {
          relativeChildren[S.$add](child);
        } else if (dart.test(childParentData.alignerOrSpacer)) {
          alignerAndSpacers[S.$add](child);
        } else {
          child.layout(constants.infiniteConstraint, {parentUsesSize: true});
          let distance = dart.nullCheck(child.getDistanceToBaseline(this.textBaseline));
          this.maxHeightAboveBaseline = math.max(core.double, this.maxHeightAboveBaseline, distance);
          maxDepthBelowBaseline = math.max(core.double, maxDepthBelowBaseline, dart.notNull(child.size.height) - distance);
        }
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, I[160], 338, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
      for (let child of relativeChildren) {
        let childParentData = line.LineParentData.as(child.parentData);
        if (!(childParentData.customCrossSize != null)) dart.assertFailed(null, I[160], 345, 14, "childParentData.customCrossSize != null");
        child.layout(dart.nullCheck(childParentData.customCrossSize)(this.maxHeightAboveBaseline, maxDepthBelowBaseline), {parentUsesSize: true});
        let distance = dart.nullCheck(child.getDistanceToBaseline(this.textBaseline));
        this.maxHeightAboveBaseline = math.max(core.double, this.maxHeightAboveBaseline, distance);
        maxDepthBelowBaseline = math.max(core.double, maxDepthBelowBaseline, dart.notNull(child.size.height) - distance);
      }
      this.maxHeightAboveBaseline = math.max(core.double, this.maxHeightAboveBaseline, this.minHeight);
      maxDepthBelowBaseline = math.max(core.double, maxDepthBelowBaseline, this.minDepth);
      child = this.firstChild;
      let mainPos = 0.0;
      let lastColPosition = mainPos;
      let colWidths = T$.JSArrayOfdouble().of([]);
      this.caretOffsets = T$.JSArrayOfdouble().of([mainPos]);
      while (child != null) {
        let childParentData = line.LineParentData.as(child.parentData);
        if (dart.test(childParentData.alignerOrSpacer)) {
          child.layout(new box.BoxConstraints.tightFor({width: 0.0}), {parentUsesSize: true});
          colWidths[S.$add](mainPos - lastColPosition);
          lastColPosition = mainPos;
        }
        childParentData.offset = new ui.Offset.new(mainPos, dart.notNull(this.maxHeightAboveBaseline) - dart.notNull(render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](child)));
        mainPos = mainPos + (dart.notNull(child.size.width) + dart.notNull(childParentData.trailingMargin));
        this.caretOffsets[S.$add](mainPos);
        child = childParentData.nextSibling;
      }
      colWidths[S.$add](mainPos - lastColPosition);
      this.size = this.constraints.constrain(new ui.Size.new(mainPos, dart.notNull(this.maxHeightAboveBaseline) + maxDepthBelowBaseline));
      this[S$._overflow] = mainPos - dart.notNull(this.size.width);
      if (dart.test(alignerAndSpacers[S.$isEmpty])) return;
      if (this.alignColWidth == null) {
        this.alignColWidth = colWidths;
        return;
      }
      let alignColWidth = (t91 = T$.ListOfdouble().of(dart.nullCheck(this.alignColWidth), {growable: false}), (() => {
        t91[S.$_set](0, colWidths[S.$first]);
        return t91;
      })());
      this.alignColWidth = alignColWidth;
      let aligner = true;
      let index = 0;
      for (let alignerOrSpacer of alignerAndSpacers) {
        if (aligner) {
          alignerOrSpacer.layout(new box.BoxConstraints.tightFor({width: 0.0}), {parentUsesSize: true});
        } else {
          alignerOrSpacer.layout(new box.BoxConstraints.tightFor({width: dart.notNull(alignColWidth[S.$_get](index)) + dart.notNull(index + 1 < dart.notNull(alignColWidth[S.$length]) - 1 ? alignColWidth[S.$_get](index + 1) : 0) - dart.notNull(colWidths[S.$_get](index)) - dart.notNull(index + 1 < dart.notNull(colWidths[S.$length]) - 1 ? colWidths[S.$_get](index + 1) : 0)}), {parentUsesSize: true});
        }
        aligner = !aligner;
        index = index + 1;
      }
      child = this.firstChild;
      mainPos = 0.0;
      t91$ = this.caretOffsets;
      (() => {
        t91$[S.$clear]();
        t91$[S.$add](mainPos);
        return t91$;
      })();
      while (child != null) {
        let childParentData = line.LineParentData.as(child.parentData);
        childParentData.offset = new ui.Offset.new(mainPos, dart.notNull(this.maxHeightAboveBaseline) - dart.notNull(render_box_offset['RenderBoxOffsetExt|get#layoutHeight'](child)));
        mainPos = mainPos + (dart.notNull(child.size.width) + dart.notNull(childParentData.trailingMargin));
        this.caretOffsets[S.$add](mainPos);
        child = childParentData.nextSibling;
      }
      this.size = this.constraints.constrain(new ui.Size.new(mainPos, dart.notNull(this.maxHeightAboveBaseline) + maxDepthBelowBaseline));
      this[S$._overflow] = mainPos - dart.notNull(this.size.width);
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(I[160], 464, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(I[160], 464, 66, "position");
      return this.defaultHitTestChildren(result, {position: position});
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(I[160], 488, 30, "context");
      if (offset == null) dart.nullFailed(I[160], 488, 46, "offset");
      if (!dart.test(this[S$._hasOverflow])) {
        this.defaultPaint(context, offset);
        return;
      }
      if (dart.test(this.size.isEmpty)) return;
      context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), dart.bind(this, 'defaultPaint'));
      if (!dart.test(dart.fn(() => {
        let debugOverflowHints = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorDescription.new("The edge of the " + dart.str(this[S.$runtimeType]) + " that is overflowing has been marked " + "in the rendering with a yellow and black striped pattern. This is " + "usually caused by the contents being too big for the " + dart.str(this[S.$runtimeType]) + "."), new assertions.ErrorHint.new("Consider applying a flex factor (e.g. using an Expanded widget) to " + "force the children of the " + dart.str(this[S.$runtimeType]) + " to fit within the available " + "space instead of being sized to their natural size."), new assertions.ErrorHint.new("This is considered an error condition because it indicates that there " + "is content that cannot be seen. If the content is legitimately bigger " + "than the available space, consider clipping it with a ClipRect widget " + "before putting it in the flex, or using a scrollable container rather " + "than a Flex, like a ListView.")]);
        let overflowChildRect = null;
        overflowChildRect = new ui.Rect.fromLTWH(0.0, 0.0, dart.notNull(this.size.width) + dart.nullCheck(this[S$._overflow]), 0.0);
        this.paintOverflowIndicator(context, offset, ui.Offset.zero['&'](this.size), overflowChildRect, {overflowHints: debugOverflowHints});
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[160], 498, 12, "() {\r\n      // Only set this if it's null to save work. It gets reset to null if the\r\n      // _direction changes.\r\n      final debugOverflowHints = <DiagnosticsNode>[\r\n        ErrorDescription(\r\n          'The edge of the $runtimeType that is overflowing has been marked '\r\n          'in the rendering with a yellow and black striped pattern. This is '\r\n          'usually caused by the contents being too big for the $runtimeType.',\r\n        ),\r\n        ErrorHint(\r\n          'Consider applying a flex factor (e.g. using an Expanded widget) to '\r\n          'force the children of the $runtimeType to fit within the available '\r\n          'space instead of being sized to their natural size.',\r\n        ),\r\n        ErrorHint(\r\n          'This is considered an error condition because it indicates that there '\r\n          'is content that cannot be seen. If the content is legitimately bigger '\r\n          'than the available space, consider clipping it with a ClipRect widget '\r\n          'before putting it in the flex, or using a scrollable container rather '\r\n          'than a Flex, like a ListView.',\r\n        ),\r\n      ];\r\n\r\n      // Simulate a child rect that overflows by the right amount. This child\r\n      // rect is never used for drawing, just for determining the overflow\r\n      // location and amount.\r\n      Rect overflowChildRect;\r\n      overflowChildRect = Rect.fromLTWH(0.0, 0.0, size.width + _overflow!, 0.0);\r\n\r\n      paintOverflowIndicator(\r\n          context, offset, Offset.zero & size, overflowChildRect,\r\n          overflowHints: debugOverflowHints);\r\n      return true;\r\n    }()");
    }
    describeApproximatePaintClip(child) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(I[160], 535, 51, "child");
      return dart.test(this[S$._hasOverflow]) ? ui.Offset.zero['&'](this.size) : null;
    }
    toStringShort() {
      let header = super.toStringShort();
      if (this[S$._overflow] != null && dart.test(this[S$._hasOverflow])) header = dart.notNull(header) + " OVERFLOWING";
      return header;
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[160], 546, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.EnumPropertyOfCrossAxisAlignment()).new("crossAxisAlignment", this.crossAxisAlignment));
      properties.add(new (T$.EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfTextBaseline()).new("textBaseline", this.textBaseline, {defaultValue: null}));
    }
  };
  (line.RenderLine.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[2411] || CT.C2411;
    if (crossAxisAlignment == null) dart.nullFailed(I[160], 155, 24, "crossAxisAlignment");
    let minDepth = opts && 'minDepth' in opts ? opts.minDepth : 0;
    if (minDepth == null) dart.nullFailed(I[160], 156, 12, "minDepth");
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    if (minHeight == null) dart.nullFailed(I[160], 157, 12, "minHeight");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : C[2700] || CT.C2700;
    if (textBaseline == null) dart.nullFailed(I[160], 158, 18, "textBaseline");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : C[31] || CT.C31;
    this[S$._overflow] = null;
    this[S$.maxHeightAboveBaseline] = 0.0;
    this[S$.maxHeightAboveEndBaseline] = 0.0;
    this[S$.__RenderLine_caretOffsets] = null;
    this[S$.__RenderLine_caretOffsets_isSet] = false;
    this[S$.alignColWidth] = null;
    this[S$._crossAxisAlignment] = crossAxisAlignment;
    this[S$._minDepth] = minDepth;
    this[S$._minHeight] = minHeight;
    this[S$._textBaseline] = textBaseline;
    this[S$._textDirection] = textDirection;
    line.RenderLine.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = line.RenderLine.prototype;
  dart.addTypeTests(line.RenderLine);
  dart.addTypeCaches(line.RenderLine);
  dart.setMethodSignature(line.RenderLine, () => ({
    __proto__: dart.getMethods(line.RenderLine.__proto__),
    [S$._getIntrinsicSize]: dart.fnType(core.double, [], {}, {childSize: dart.fnType(core.double, [box.RenderBox, core.double]), extent: core.double, sizingDirection: basic_types.Axis}),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline])
  }));
  dart.setGetterSignature(line.RenderLine, () => ({
    __proto__: dart.getGetters(line.RenderLine.__proto__),
    crossAxisAlignment: flex.CrossAxisAlignment,
    minDepth: core.double,
    minHeight: core.double,
    textBaseline: ui.TextBaseline,
    textDirection: dart.nullable(ui.TextDirection),
    [S$._debugHasNecessaryDirections]: core.bool,
    [S$._hasOverflow]: core.bool,
    caretOffsets: core.List$(core.double)
  }));
  dart.setSetterSignature(line.RenderLine, () => ({
    __proto__: dart.getSetters(line.RenderLine.__proto__),
    crossAxisAlignment: flex.CrossAxisAlignment,
    minDepth: core.double,
    minHeight: core.double,
    textBaseline: ui.TextBaseline,
    textDirection: dart.nullable(ui.TextDirection),
    caretOffsets: core.List$(core.double)
  }));
  dart.setLibraryUri(line.RenderLine, I[161]);
  dart.setFieldSignature(line.RenderLine, () => ({
    __proto__: dart.getFields(line.RenderLine.__proto__),
    [S$._crossAxisAlignment]: dart.fieldType(flex.CrossAxisAlignment),
    [S$._minDepth]: dart.fieldType(core.double),
    [S$._minHeight]: dart.fieldType(core.double),
    [S$._textBaseline]: dart.fieldType(ui.TextBaseline),
    [S$._textDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [S$._overflow]: dart.fieldType(dart.nullable(core.double)),
    maxHeightAboveBaseline: dart.fieldType(core.double),
    maxHeightAboveEndBaseline: dart.fieldType(core.double),
    [S$.__RenderLine_caretOffsets]: dart.fieldType(dart.nullable(core.List$(core.double))),
    [S$.__RenderLine_caretOffsets_isSet]: dart.fieldType(core.bool),
    alignColWidth: dart.fieldType(dart.nullable(core.List$(core.double)))
  }));
  line_editable.RenderEditableLine = class RenderEditableLine extends line.RenderLine {
    get node() {
      return this[S$.node$1];
    }
    set node(value) {
      this[S$.node$1] = value;
    }
    get preferredLineHeight() {
      return this[S$.preferredLineHeight$1];
    }
    set preferredLineHeight(value) {
      this[S$.preferredLineHeight$1] = value;
    }
    get cursorBlinkOpacityController() {
      return this[S$._cursorBlinkOpacityController];
    }
    set cursorBlinkOpacityController(value) {
      let t90, t90$;
      if (!dart.equals(this[S$._cursorBlinkOpacityController], value)) {
        t90 = this[S$._cursorBlinkOpacityController];
        t90 == null ? null : t90.removeListener(dart.bind(this, 'onCursorOpacityChanged'));
        this[S$._cursorBlinkOpacityController] = value;
        t90$ = this[S$._cursorBlinkOpacityController];
        t90$ == null ? null : t90$.addListener(dart.bind(this, 'onCursorOpacityChanged'));
        this.markNeedsPaint();
      }
    }
    onCursorOpacityChanged() {
      if (dart.test(this.showCursor) && dart.test(this.selection.isCollapsed) && dart.test(this.isSelectionInRange)) {
        this.markNeedsPaint();
      }
    }
    get cursorColor() {
      return this[S$._cursorColor];
    }
    set cursorColor(value) {
      if (value == null) dart.nullFailed(I[158], 224, 25, "value");
      if (!dart.equals(this[S$._cursorColor], value)) {
        this[S$._cursorColor] = value;
        this.markNeedsPaint();
      }
    }
    get cursorOffset() {
      return this[S$._cursorOffset];
    }
    set cursorOffset(value) {
      if (!dart.equals(this[S$._cursorOffset], value)) {
        this[S$._cursorOffset] = value;
        this.markNeedsPaint();
      }
    }
    get cursorRadius() {
      return this[S$._cursorRadius];
    }
    set cursorRadius(value) {
      if (!dart.equals(this[S$._cursorRadius], value)) {
        this[S$._cursorRadius] = value;
        this.markNeedsPaint();
      }
    }
    get cursorWidth() {
      return this[S$._cursorWidth];
    }
    set cursorWidth(value) {
      if (value == null) dart.nullFailed(I[158], 255, 26, "value");
      if (this[S$._cursorWidth] != value) {
        this[S$._cursorWidth] = value;
        this.markNeedsPaint();
      }
    }
    get cursorHeight() {
      let t90;
      t90 = this[S$._cursorHeight];
      return t90 == null ? this.preferredLineHeight : t90;
    }
    set cursorHeight(value) {
      if (this[S$._cursorHeight] != value) {
        this[S$._cursorHeight] = value;
        this.markNeedsPaint();
      }
    }
    get devicePixelRatio() {
      return this[S$._devicePixelRatio];
    }
    set devicePixelRatio(value) {
      if (value == null) dart.nullFailed(I[158], 281, 31, "value");
      if (this[S$._devicePixelRatio] != value) {
        this[S$._devicePixelRatio] = value;
        this.markNeedsPaint();
      }
    }
    get hintingColor() {
      return this[S$._hintingColor];
    }
    set hintingColor(value) {
      if (!dart.equals(this[S$._hintingColor], value)) {
        this[S$._hintingColor] = value;
        this.markNeedsPaint();
      }
    }
    get paintCursorAboveText() {
      return this[S$._paintCursorAboveText];
    }
    set paintCursorAboveText(value) {
      if (value == null) dart.nullFailed(I[158], 302, 33, "value");
      if (this[S$._paintCursorAboveText] != value) {
        this[S$._paintCursorAboveText] = value;
        this.markNeedsPaint();
      }
    }
    get selection() {
      return this[S$._selection$2];
    }
    set selection(value) {
      if (value == null) dart.nullFailed(I[158], 313, 31, "value");
      if (!dart.equals(this[S$._selection$2], value)) {
        this[S$._selection$2] = value;
        this.markNeedsPaint();
      }
    }
    get selectionColor() {
      return this[S$._selectionColor];
    }
    set selectionColor(value) {
      if (!dart.equals(this[S$._selectionColor], value)) {
        this[S$._selectionColor] = value;
        this.markNeedsPaint();
      }
    }
    get showCursor() {
      return this[S$._showCursor];
    }
    set showCursor(value) {
      if (value == null) dart.nullFailed(I[158], 333, 23, "value");
      if (this[S$._showCursor] != value) {
        this[S$._showCursor] = value;
        this.markNeedsPaint();
      }
    }
    get startHandleLayerLink() {
      return this[S$._startHandleLayerLink];
    }
    set startHandleLayerLink(value) {
      if (!dart.equals(this[S$._startHandleLayerLink], value)) {
        this[S$._startHandleLayerLink] = value;
        this.markNeedsPaint();
      }
    }
    get endHandleLayerLink() {
      return this[S$._endHandleLayerLink];
    }
    set endHandleLayerLink(value) {
      if (!dart.equals(this[S$._endHandleLayerLink], value)) {
        this[S$._endHandleLayerLink] = value;
        this.markNeedsPaint();
      }
    }
    get isSelectionInRange() {
      return dart.notNull(this[S$._selection$2].end) >= 0 && dart.notNull(this[S$._selection$2].start) <= dart.notNull(this.childCount);
    }
    getCaretIndexForPoint(globalOffset) {
      if (globalOffset == null) dart.nullFailed(I[158], 361, 36, "globalOffset");
      let localOffset = this.globalToLocal(globalOffset);
      let minDist = 1 / 0;
      let minPosition = 0;
      for (let i = 0; i < dart.notNull(this.caretOffsets[S.$length]); i = i + 1) {
        let dist = (dart.notNull(this.caretOffsets[S.$_get](i)) - dart.notNull(localOffset.dx))[S.$abs]();
        if (dist <= minDist) {
          minDist = dist;
          minPosition = i;
        }
      }
      return minPosition;
    }
    getNearestLeftCaretIndexForPoint(globalOffset) {
      if (globalOffset == null) dart.nullFailed(I[158], 376, 47, "globalOffset");
      let localOffset = this.globalToLocal(globalOffset);
      let index = 0;
      while (index < dart.notNull(this.caretOffsets[S.$length]) && dart.notNull(this.caretOffsets[S.$_get](index)) <= dart.notNull(localOffset.dx)) {
        index = index + 1;
      }
      return math.max(core.int, 0, index - 1);
    }
    getEndpointForCaretIndex(index) {
      if (index == null) dart.nullFailed(I[158], 386, 39, "index");
      let dx = this.caretOffsets[S.$_get](num_extension['IntExt|clampInt'](index, 0, dart.notNull(this.caretOffsets[S.$length]) - 1));
      let dy = this.size.height;
      return this.localToGlobal(new ui.Offset.new(dx, dy));
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[158], 393, 27, "position");
      return true;
    }
    paint(context, offset) {
      let t90, t90$;
      if (context == null) dart.nullFailed(I[158], 396, 30, "context");
      if (offset == null) dart.nullFailed(I[158], 396, 46, "offset");
      if (dart.test(this.isSelectionInRange)) {
        let startOffset = this.caretOffsets[S.$_get](math.max(core.int, 0, this.selection.start));
        let endOffset = this.caretOffsets[S.$_get](math.min(core.int, this.childCount, this.selection.end));
        if (dart.test(this[S$._selection$2].isCollapsed)) {
          if (this[S$._hintingColor] != null) {
            context.canvas.drawRect(offset['&'](this.size), (t90 = ui.Paint.new(), (() => {
              t90.style = ui.PaintingStyle.fill;
              t90.color = dart.nullCheck(this[S$._hintingColor]);
              return t90;
            })()));
          }
        } else if (this[S$._selectionColor] != null) {
          context.canvas.drawRect(new ui.Rect.fromLTRB(startOffset, 0.0, endOffset, this.size.height).shift(offset), (t90$ = ui.Paint.new(), (() => {
            t90$.style = ui.PaintingStyle.fill;
            t90$.color = dart.nullCheck(this[S$._selectionColor]);
            return t90$;
          })()));
        }
        if (this.startHandleLayerLink != null) {
          context.pushLayer(new layer.LeaderLayer.new({link: dart.nullCheck(this.startHandleLayerLink), offset: new ui.Offset.new(startOffset, this.size.height)['+'](offset)}), C[2702] || CT.C2702, ui.Offset.zero);
        }
        if (this.endHandleLayerLink != null) {
          context.pushLayer(new layer.LeaderLayer.new({link: dart.nullCheck(this.endHandleLayerLink), offset: new ui.Offset.new(endOffset, this.size.height)['+'](offset)}), C[2702] || CT.C2702, ui.Offset.zero);
        }
      }
      if (dart.test(this[S$._paintCursorAboveText])) {
        super.paint(context, offset);
      }
      if (dart.test(this.showCursor) && dart.test(this[S$._selection$2].isCollapsed) && dart.test(this.isSelectionInRange)) {
        let cursorOffset = this.caretOffsets[S.$_get](this.selection.baseOffset);
        this[S$._paintCaret](context.canvas, new ui.Offset.new(cursorOffset, this.size.height)['+'](offset));
      }
      if (!dart.test(this[S$._paintCursorAboveText])) {
        super.paint(context, offset);
      }
      return;
    }
    [S$._paintCaret](canvas, baselineOffset) {
      let t91, t91$, t90;
      if (canvas == null) dart.nullFailed(I[158], 462, 27, "canvas");
      if (baselineOffset == null) dart.nullFailed(I[158], 462, 42, "baselineOffset");
      let paint = (t90 = ui.Paint.new(), (() => {
        t90.color = this[S$._cursorColor].withOpacity((t91$ = (t91 = this[S$._cursorBlinkOpacityController], t91 == null ? null : t91.value), t91$ == null ? 0.0 : t91$));
        return t90;
      })());
      let _caretPrototype = null;
      switch (platform.defaultTargetPlatform) {
        case C[63] || CT.C63:
        case C[64] || CT.C64:
        {
          _caretPrototype = new ui.Rect.fromLTWH(0.0, 0.0, this[S$._cursorWidth], dart.notNull(this.cursorHeight) + 2);
          break;
        }
        case C[65] || CT.C65:
        case C[66] || CT.C66:
        case C[67] || CT.C67:
        case C[68] || CT.C68:
        {
          _caretPrototype = new ui.Rect.fromLTWH(0.0, 0.0, this[S$._cursorWidth], this.cursorHeight);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let caretRect = _caretPrototype.shift(baselineOffset).shift(new ui.Offset.new(0.0, -0.9 * dart.notNull(this.cursorHeight)));
      if (this[S$._cursorOffset] != null) {
        caretRect = caretRect.shift(dart.nullCheck(this[S$._cursorOffset]));
      }
      caretRect = caretRect.shift(this[S$._getPixelPerfectCursorOffset](caretRect));
      if (this[S$._cursorRadius] == null) {
        canvas.drawRect(caretRect, paint);
      } else {
        let caretRRect = new ui.RRect.fromRectAndRadius(caretRect, dart.nullCheck(this[S$._cursorRadius]));
        canvas.drawRRect(caretRRect, paint);
      }
    }
    [S$._getPixelPerfectCursorOffset](caretRect) {
      if (caretRect == null) dart.nullFailed(I[158], 543, 44, "caretRect");
      let caretPosition = this.localToGlobal(caretRect.topLeft);
      let pixelMultiple = 1.0 / dart.notNull(this[S$._devicePixelRatio]);
      let pixelPerfectOffsetX = caretPosition.dx[S$.$isFinite] ? (dart.notNull(caretPosition.dx) / pixelMultiple)[S$.$round]() * pixelMultiple - dart.notNull(caretPosition.dx) : 0.0;
      let pixelPerfectOffsetY = caretPosition.dy[S$.$isFinite] ? (dart.notNull(caretPosition.dy) / pixelMultiple)[S$.$round]() * pixelMultiple - dart.notNull(caretPosition.dy) : 0.0;
      return new ui.Offset.new(pixelPerfectOffsetX, pixelPerfectOffsetY);
    }
  };
  (line_editable.RenderEditableLine.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[2411] || CT.C2411;
    if (crossAxisAlignment == null) dart.nullFailed(I[158], 157, 24, "crossAxisAlignment");
    let cursorBlinkOpacityController = opts && 'cursorBlinkOpacityController' in opts ? opts.cursorBlinkOpacityController : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    if (cursorColor == null) dart.nullFailed(I[158], 159, 20, "cursorColor");
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 1;
    if (cursorWidth == null) dart.nullFailed(I[158], 162, 12, "cursorWidth");
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : 1;
    if (devicePixelRatio == null) dart.nullFailed(I[158], 164, 12, "devicePixelRatio");
    let hintingColor = opts && 'hintingColor' in opts ? opts.hintingColor : null;
    let minDepth = opts && 'minDepth' in opts ? opts.minDepth : 0;
    if (minDepth == null) dart.nullFailed(I[158], 166, 12, "minDepth");
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    if (minHeight == null) dart.nullFailed(I[158], 167, 12, "minHeight");
    let node = opts && 'node' in opts ? opts.node : null;
    if (node == null) dart.nullFailed(I[158], 168, 19, "node");
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : false;
    if (paintCursorAboveText == null) dart.nullFailed(I[158], 169, 10, "paintCursorAboveText");
    let preferredLineHeight = opts && 'preferredLineHeight' in opts ? opts.preferredLineHeight : null;
    if (preferredLineHeight == null) dart.nullFailed(I[158], 170, 19, "preferredLineHeight");
    let selection = opts && 'selection' in opts ? opts.selection : C[158] || CT.C158;
    if (selection == null) dart.nullFailed(I[158], 171, 19, "selection");
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : false;
    if (showCursor == null) dart.nullFailed(I[158], 173, 10, "showCursor");
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : C[2700] || CT.C2700;
    if (textBaseline == null) dart.nullFailed(I[158], 176, 18, "textBaseline");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : C[31] || CT.C31;
    this[S$.node$1] = node;
    this[S$.preferredLineHeight$1] = preferredLineHeight;
    this[S$._cursorBlinkOpacityController] = cursorBlinkOpacityController;
    this[S$._cursorColor] = cursorColor;
    this[S$._cursorOffset] = cursorOffset;
    this[S$._cursorRadius] = cursorRadius;
    this[S$._cursorWidth] = cursorWidth;
    this[S$._cursorHeight] = cursorHeight;
    this[S$._devicePixelRatio] = devicePixelRatio;
    this[S$._hintingColor] = hintingColor;
    this[S$._paintCursorAboveText] = paintCursorAboveText;
    this[S$._selection$2] = selection;
    this[S$._selectionColor] = selectionColor;
    this[S$._showCursor] = showCursor;
    this[S$._startHandleLayerLink] = startHandleLayerLink;
    this[S$._endHandleLayerLink] = endHandleLayerLink;
    line_editable.RenderEditableLine.__proto__.new.call(this, {children: children, crossAxisAlignment: crossAxisAlignment, minDepth: minDepth, minHeight: minHeight, textBaseline: textBaseline, textDirection: textDirection});
    ;
  }).prototype = line_editable.RenderEditableLine.prototype;
  dart.addTypeTests(line_editable.RenderEditableLine);
  dart.addTypeCaches(line_editable.RenderEditableLine);
  dart.setMethodSignature(line_editable.RenderEditableLine, () => ({
    __proto__: dart.getMethods(line_editable.RenderEditableLine.__proto__),
    onCursorOpacityChanged: dart.fnType(dart.void, []),
    getCaretIndexForPoint: dart.fnType(core.int, [ui.Offset]),
    getNearestLeftCaretIndexForPoint: dart.fnType(core.int, [ui.Offset]),
    getEndpointForCaretIndex: dart.fnType(ui.Offset, [core.int]),
    [S$._paintCaret]: dart.fnType(dart.void, [ui.Canvas, ui.Offset]),
    [S$._getPixelPerfectCursorOffset]: dart.fnType(ui.Offset, [ui.Rect])
  }));
  dart.setGetterSignature(line_editable.RenderEditableLine, () => ({
    __proto__: dart.getGetters(line_editable.RenderEditableLine.__proto__),
    cursorBlinkOpacityController: dart.nullable(animation_controller.AnimationController),
    cursorColor: ui.Color,
    cursorOffset: dart.nullable(ui.Offset),
    cursorRadius: dart.nullable(ui.Radius),
    cursorWidth: core.double,
    cursorHeight: core.double,
    devicePixelRatio: core.double,
    hintingColor: dart.nullable(ui.Color),
    paintCursorAboveText: core.bool,
    selection: text_editing.TextSelection,
    selectionColor: dart.nullable(ui.Color),
    showCursor: core.bool,
    startHandleLayerLink: dart.nullable(layer.LayerLink),
    endHandleLayerLink: dart.nullable(layer.LayerLink),
    isSelectionInRange: core.bool
  }));
  dart.setSetterSignature(line_editable.RenderEditableLine, () => ({
    __proto__: dart.getSetters(line_editable.RenderEditableLine.__proto__),
    cursorBlinkOpacityController: dart.nullable(animation_controller.AnimationController),
    cursorColor: ui.Color,
    cursorOffset: dart.nullable(ui.Offset),
    cursorRadius: dart.nullable(ui.Radius),
    cursorWidth: core.double,
    cursorHeight: dart.nullable(core.double),
    devicePixelRatio: core.double,
    hintingColor: dart.nullable(ui.Color),
    paintCursorAboveText: core.bool,
    selection: text_editing.TextSelection,
    selectionColor: dart.nullable(ui.Color),
    showCursor: core.bool,
    startHandleLayerLink: dart.nullable(layer.LayerLink),
    endHandleLayerLink: dart.nullable(layer.LayerLink)
  }));
  dart.setLibraryUri(line_editable.RenderEditableLine, I[159]);
  dart.setFieldSignature(line_editable.RenderEditableLine, () => ({
    __proto__: dart.getFields(line_editable.RenderEditableLine.__proto__),
    [S$._cursorBlinkOpacityController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$._cursorColor]: dart.fieldType(ui.Color),
    [S$._cursorOffset]: dart.fieldType(dart.nullable(ui.Offset)),
    [S$._cursorRadius]: dart.fieldType(dart.nullable(ui.Radius)),
    [S$._cursorWidth]: dart.fieldType(core.double),
    [S$._cursorHeight]: dart.fieldType(dart.nullable(core.double)),
    [S$._devicePixelRatio]: dart.fieldType(core.double),
    [S$._hintingColor]: dart.fieldType(dart.nullable(ui.Color)),
    node: dart.fieldType(syntax_tree.EquationRowNode),
    [S$._paintCursorAboveText]: dart.fieldType(core.bool),
    preferredLineHeight: dart.fieldType(core.double),
    [S$._selection$2]: dart.fieldType(text_editing.TextSelection),
    [S$._selectionColor]: dart.fieldType(dart.nullable(ui.Color)),
    [S$._showCursor]: dart.fieldType(core.bool),
    [S$._startHandleLayerLink]: dart.fieldType(dart.nullable(layer.LayerLink)),
    [S$._endHandleLayerLink]: dart.fieldType(dart.nullable(layer.LayerLink))
  }));
  line_editable.emptyPaintFunction = function emptyPaintFunction(context, offset) {
    if (context == null) dart.nullFailed(I[158], 558, 41, "context");
    if (offset == null) dart.nullFailed(I[158], 558, 57, "offset");
  };
  dart.defineLazy(constants, {
    /*constants.infiniteConstraint*/get infiniteConstraint() {
      return C[2703] || CT.C2703;
    },
    /*constants.nullDelimiterSpace*/get nullDelimiterSpace() {
      return C[2704] || CT.C2704;
    }
  }, false);
  line.LineElement = class LineElement extends framework.ParentDataWidget$(line.LineParentData) {
    get canBreakBefore() {
      return this[S$.canBreakBefore$1];
    }
    set canBreakBefore(value) {
      super.canBreakBefore = value;
    }
    get customCrossSize() {
      return this[S$.customCrossSize$1];
    }
    set customCrossSize(value) {
      super.customCrossSize = value;
    }
    get trailingMargin() {
      return this[S$.trailingMargin$1];
    }
    set trailingMargin(value) {
      super.trailingMargin = value;
    }
    get alignerOrSpacer() {
      return this[S$.alignerOrSpacer$2];
    }
    set alignerOrSpacer(value) {
      super.alignerOrSpacer = value;
    }
    applyParentData(renderObject) {
      if (renderObject == null) dart.nullFailed(I[160], 42, 37, "renderObject");
      if (!line.LineParentData.is(renderObject.parentData)) dart.assertFailed(null, I[160], 43, 12, "renderObject.parentData is LineParentData");
      let parentData = line.LineParentData.as(renderObject.parentData);
      let needsLayout = false;
      if (parentData.canBreakBefore != this.canBreakBefore) {
        parentData.canBreakBefore = this.canBreakBefore;
        needsLayout = true;
      }
      if (!dart.equals(parentData.customCrossSize, this.customCrossSize)) {
        parentData.customCrossSize = this.customCrossSize;
        needsLayout = true;
      }
      if (parentData.trailingMargin != this.trailingMargin) {
        parentData.trailingMargin = this.trailingMargin;
        needsLayout = true;
      }
      if (parentData.alignerOrSpacer != this.alignerOrSpacer) {
        parentData.alignerOrSpacer = this.alignerOrSpacer;
        needsLayout = true;
      }
      if (needsLayout) {
        let targetParent = renderObject.parent;
        if (object.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[160], 74, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("canBreakBefore", {value: this.canBreakBefore, ifTrue: "allow breaking before"}));
      properties.add(new diagnostics.FlagProperty.new("customSize", {value: this.customCrossSize != null, ifTrue: "using relative size"}));
      properties.add(new diagnostics.DoubleProperty.new("trailingMargin", this.trailingMargin));
      properties.add(new diagnostics.FlagProperty.new("alignerOrSpacer", {value: this.alignerOrSpacer, ifTrue: "is a alignment symbol"}));
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(line.Line);
    }
  };
  (line.LineElement.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let canBreakBefore = opts && 'canBreakBefore' in opts ? opts.canBreakBefore : false;
    if (canBreakBefore == null) dart.nullFailed(I[160], 34, 10, "canBreakBefore");
    let customCrossSize = opts && 'customCrossSize' in opts ? opts.customCrossSize : null;
    let trailingMargin = opts && 'trailingMargin' in opts ? opts.trailingMargin : 0;
    if (trailingMargin == null) dart.nullFailed(I[160], 36, 10, "trailingMargin");
    let alignerOrSpacer = opts && 'alignerOrSpacer' in opts ? opts.alignerOrSpacer : false;
    if (alignerOrSpacer == null) dart.nullFailed(I[160], 37, 10, "alignerOrSpacer");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[160], 38, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.canBreakBefore$1] = canBreakBefore;
    this[S$.customCrossSize$1] = customCrossSize;
    this[S$.trailingMargin$1] = trailingMargin;
    this[S$.alignerOrSpacer$2] = alignerOrSpacer;
    line.LineElement.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = line.LineElement.prototype;
  dart.addTypeTests(line.LineElement);
  dart.addTypeCaches(line.LineElement);
  dart.setMethodSignature(line.LineElement, () => ({
    __proto__: dart.getMethods(line.LineElement.__proto__),
    applyParentData: dart.fnType(dart.void, [object.RenderObject])
  }));
  dart.setGetterSignature(line.LineElement, () => ({
    __proto__: dart.getGetters(line.LineElement.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(line.LineElement, I[161]);
  dart.setFieldSignature(line.LineElement, () => ({
    __proto__: dart.getFields(line.LineElement.__proto__),
    canBreakBefore: dart.finalFieldType(core.bool),
    customCrossSize: dart.finalFieldType(dart.nullable(dart.fnType(box.BoxConstraints, [core.double, core.double]))),
    trailingMargin: dart.finalFieldType(core.double),
    alignerOrSpacer: dart.finalFieldType(core.bool)
  }));
  line.Line = class Line extends framework.MultiChildRenderObjectWidget {
    get crossAxisAlignment() {
      return this[S$.crossAxisAlignment$1];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get minDepth() {
      return this[S$.minDepth$1];
    }
    set minDepth(value) {
      super.minDepth = value;
    }
    get minHeight() {
      return this[S$.minHeight$1];
    }
    set minHeight(value) {
      super.minHeight = value;
    }
    get textBaseline() {
      return this[S$.textBaseline$1];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get textDirection() {
      return this[S$.textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get [S$._needTextDirection$1]() {
      return true;
    }
    getEffectiveTextDirection(context) {
      let t91;
      if (context == null) dart.nullFailed(I[160], 114, 57, "context");
      t91 = this.textDirection;
      return t91 == null ? dart.test(this[S$._needTextDirection$1]) ? basic.Directionality.of(context) : null : t91;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[160], 118, 46, "context");
      return new line.RenderLine.new({crossAxisAlignment: this.crossAxisAlignment, minDepth: this.minDepth, minHeight: this.minHeight, textBaseline: this.textBaseline, textDirection: this.getEffectiveTextDirection(context)});
    }
    updateRenderObject(context, renderObject) {
      let t91;
      if (context == null) dart.nullFailed(I[160], 127, 40, "context");
      line.RenderLine.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[160], 127, 60, "renderObject");
      t91 = renderObject;
      return (() => {
        t91.crossAxisAlignment = this.crossAxisAlignment;
        t91.minDepth = this.minDepth;
        t91.minHeight = this.minHeight;
        t91.textBaseline = this.textBaseline;
        t91.textDirection = this.getEffectiveTextDirection(context);
        return t91;
      })();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[160], 136, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new (T$.EnumPropertyOfTextBaseline()).new("textBaseline", this.textBaseline, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfCrossAxisAlignment()).new("crossAxisAlignment", this.crossAxisAlignment));
      properties.add(new (T$.EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
    }
  };
  (line.Line.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C[2411] || CT.C2411;
    if (crossAxisAlignment == null) dart.nullFailed(I[160], 93, 10, "crossAxisAlignment");
    let minDepth = opts && 'minDepth' in opts ? opts.minDepth : 0;
    if (minDepth == null) dart.nullFailed(I[160], 94, 10, "minDepth");
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    if (minHeight == null) dart.nullFailed(I[160], 95, 10, "minHeight");
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : C[2700] || CT.C2700;
    if (textBaseline == null) dart.nullFailed(I[160], 96, 10, "textBaseline");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let children = opts && 'children' in opts ? opts.children : C[2701] || CT.C2701;
    if (children == null) dart.nullFailed(I[160], 98, 18, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.crossAxisAlignment$1] = crossAxisAlignment;
    this[S$.minDepth$1] = minDepth;
    this[S$.minHeight$1] = minHeight;
    this[S$.textBaseline$1] = textBaseline;
    this[S$.textDirection$1] = textDirection;
    line.Line.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = line.Line.prototype;
  dart.addTypeTests(line.Line);
  dart.addTypeCaches(line.Line);
  dart.setMethodSignature(line.Line, () => ({
    __proto__: dart.getMethods(line.Line.__proto__),
    getEffectiveTextDirection: dart.fnType(dart.nullable(ui.TextDirection), [framework.BuildContext]),
    createRenderObject: dart.fnType(line.RenderLine, [framework.BuildContext])
  }));
  dart.setGetterSignature(line.Line, () => ({
    __proto__: dart.getGetters(line.Line.__proto__),
    [S$._needTextDirection$1]: core.bool
  }));
  dart.setLibraryUri(line.Line, I[161]);
  dart.setFieldSignature(line.Line, () => ({
    __proto__: dart.getFields(line.Line.__proto__),
    crossAxisAlignment: dart.finalFieldType(flex.CrossAxisAlignment),
    minDepth: dart.finalFieldType(core.double),
    minHeight: dart.finalFieldType(core.double),
    textBaseline: dart.finalFieldType(ui.TextBaseline),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection))
  }));
  syntax_tree.SyntaxTree = class SyntaxTree extends core.Object {
    get greenRoot() {
      return this[S$.greenRoot];
    }
    set greenRoot(value) {
      super.greenRoot = value;
    }
    get root() {
      let t92;
      if (!dart.test(this[S$.__SyntaxTree_root_isSet])) {
        let t91 = new syntax_tree.SyntaxNode.new({parent: null, value: this.greenRoot, pos: -1});
        if (dart.test(this[S$.__SyntaxTree_root_isSet])) dart.throw(new _internal.LateError.fieldADI("root"));
        this[S$.__SyntaxTree_root] = t91;
        this[S$.__SyntaxTree_root_isSet] = true;
      }
      t92 = this[S$.__SyntaxTree_root];
      return t92;
    }
    replaceNode(pos, newNode) {
      if (pos == null) dart.nullFailed(I[33], 42, 37, "pos");
      if (newNode == null) dart.nullFailed(I[33], 42, 52, "newNode");
      if (pos.value == newNode) {
        return this;
      }
      if (pos == this.root) {
        return new syntax_tree.SyntaxTree.new({greenRoot: syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'](newNode)});
      }
      let posParent = pos.parent;
      if (posParent == null) {
        dart.throw(new core.ArgumentError.new("The replaced node is not the root of this tree but has no parent"));
      }
      return this.replaceNode(posParent, posParent.value.updateChildren(posParent.children[S.$map](T$.GreenNodeN(), dart.fn(child => {
        let t92;
        return child == pos ? newNode : (t92 = child, t92 == null ? null : t92.value);
      }, T$.SyntaxNodeNToGreenNodeN()))[S.$toList]({growable: false})));
    }
    findNodesAtPosition(position) {
      if (position == null) dart.nullFailed(I[33], 61, 44, "position");
      let curr = this.root;
      let res = T$.JSArrayOfSyntaxNode().of([]);
      while (true) {
        res[S.$add](curr);
        let next = iterable_extensions$['IterableExtension|firstWhereOrNull'](T$.SyntaxNodeN(), curr.children, dart.fn(child => child == null ? false : dart.notNull(child.range.start) <= dart.notNull(position) && dart.notNull(child.range.end) >= dart.notNull(position), T$.SyntaxNodeNTobool()));
        if (next == null) break;
        curr = next;
      }
      return res;
    }
    findNodeManagesPosition(position) {
      if (position == null) dart.nullFailed(I[33], 75, 47, "position");
      let curr = this.root;
      let lastEqRow = syntax_tree.EquationRowNode.as(this.root.value);
      while (true) {
        let next = iterable_extensions$['IterableExtension|firstWhereOrNull'](T$.SyntaxNodeN(), curr.children, dart.fn(child => child == null ? false : dart.notNull(child.range.start) <= dart.notNull(position) && dart.notNull(child.range.end) >= dart.notNull(position), T$.SyntaxNodeNTobool()));
        if (next == null) break;
        if (syntax_tree.EquationRowNode.is(next.value)) {
          lastEqRow = syntax_tree.EquationRowNode.as(next.value);
        }
        curr = next;
      }
      return lastEqRow;
    }
    findLowestCommonRowNode(position1, position2) {
      if (position1 == null) dart.nullFailed(I[33], 94, 47, "position1");
      if (position2 == null) dart.nullFailed(I[33], 94, 62, "position2");
      let redNodes1 = this.findNodesAtPosition(position1);
      let redNodes2 = this.findNodesAtPosition(position2);
      for (let index = math.min(core.int, redNodes1[S.$length], redNodes2[S.$length]) - 1; index >= 0; index = index - 1) {
        let node1 = redNodes1[S.$_get](index).value;
        let node2 = redNodes2[S.$_get](index).value;
        if (dart.equals(node1, node2) && syntax_tree.EquationRowNode.is(node1)) {
          return node1;
        }
      }
      return this.greenRoot;
    }
    findSelectedNodes(position1, position2) {
      if (position1 == null) dart.nullFailed(I[33], 109, 41, "position1");
      if (position2 == null) dart.nullFailed(I[33], 109, 56, "position2");
      let rowNode = this.findLowestCommonRowNode(position1, position2);
      let localPos1 = dart.notNull(position1) - dart.notNull(rowNode.pos);
      let localPos2 = dart.notNull(position2) - dart.notNull(rowNode.pos);
      return rowNode.clipChildrenBetween(localPos1, localPos2).children;
    }
    buildWidget(options) {
      if (options == null) dart.nullFailed(I[33], 118, 34, "options");
      return this.root.buildWidget(options).widget;
    }
  };
  (syntax_tree.SyntaxTree.new = function(opts) {
    let greenRoot = opts && 'greenRoot' in opts ? opts.greenRoot : null;
    if (greenRoot == null) dart.nullFailed(I[33], 31, 19, "greenRoot");
    this[S$.__SyntaxTree_root] = null;
    this[S$.__SyntaxTree_root_isSet] = false;
    this[S$.greenRoot] = greenRoot;
    ;
  }).prototype = syntax_tree.SyntaxTree.prototype;
  dart.addTypeTests(syntax_tree.SyntaxTree);
  dart.addTypeCaches(syntax_tree.SyntaxTree);
  dart.setMethodSignature(syntax_tree.SyntaxTree, () => ({
    __proto__: dart.getMethods(syntax_tree.SyntaxTree.__proto__),
    replaceNode: dart.fnType(syntax_tree.SyntaxTree, [syntax_tree.SyntaxNode, syntax_tree.GreenNode]),
    findNodesAtPosition: dart.fnType(core.List$(syntax_tree.SyntaxNode), [core.int]),
    findNodeManagesPosition: dart.fnType(syntax_tree.EquationRowNode, [core.int]),
    findLowestCommonRowNode: dart.fnType(syntax_tree.EquationRowNode, [core.int, core.int]),
    findSelectedNodes: dart.fnType(core.List$(syntax_tree.GreenNode), [core.int, core.int]),
    buildWidget: dart.fnType(framework.Widget, [options$.MathOptions])
  }));
  dart.setGetterSignature(syntax_tree.SyntaxTree, () => ({
    __proto__: dart.getGetters(syntax_tree.SyntaxTree.__proto__),
    root: syntax_tree.SyntaxNode
  }));
  dart.setLibraryUri(syntax_tree.SyntaxTree, I[34]);
  dart.setFieldSignature(syntax_tree.SyntaxTree, () => ({
    __proto__: dart.getFields(syntax_tree.SyntaxTree.__proto__),
    greenRoot: dart.finalFieldType(syntax_tree.EquationRowNode),
    [S$.__SyntaxTree_root]: dart.fieldType(dart.nullable(syntax_tree.SyntaxNode)),
    [S$.__SyntaxTree_root_isSet]: dart.fieldType(core.bool)
  }));
  syntax_tree.SyntaxNode = class SyntaxNode extends core.Object {
    get parent() {
      return this[S$.parent];
    }
    set parent(value) {
      super.parent = value;
    }
    get value() {
      return this[S$.value];
    }
    set value(value) {
      super.value = value;
    }
    get pos() {
      return this[S$.pos$1];
    }
    set pos(value) {
      super.pos = value;
    }
    get children() {
      let t93;
      if (!dart.test(this[S$.__SyntaxNode_children_isSet])) {
        let t92 = T$.ListOfSyntaxNodeN().generate(this.value.children[S.$length], dart.fn(index => {
          if (index == null) dart.nullFailed(I[33], 142, 8, "index");
          return this.value.children[S.$_get](index) != null ? new syntax_tree.SyntaxNode.new({parent: this, value: dart.nullCheck(this.value.children[S.$_get](index)), pos: dart.notNull(this.pos) + dart.notNull(this.value.childPositions[S.$_get](index))}) : null;
        }, T$.intToSyntaxNodeN()), {growable: false});
        if (dart.test(this[S$.__SyntaxNode_children_isSet])) dart.throw(new _internal.LateError.fieldADI("children"));
        this[S$.__SyntaxNode_children] = t92;
        this[S$.__SyntaxNode_children_isSet] = true;
      }
      t93 = this[S$.__SyntaxNode_children];
      return t93;
    }
    get range() {
      let t94;
      if (!dart.test(this[S$.__SyntaxNode_range_isSet])) {
        let t93 = this.value.getRange(this.pos);
        if (dart.test(this[S$.__SyntaxNode_range_isSet])) dart.throw(new _internal.LateError.fieldADI("range"));
        this[S$.__SyntaxNode_range] = t93;
        this[S$.__SyntaxNode_range_isSet] = true;
      }
      t94 = this[S$.__SyntaxNode_range];
      return t94;
    }
    get width() {
      return this.value.editingWidth;
    }
    get capturedCursor() {
      return this.value.capturedCursor;
    }
    buildWidget(options) {
      if (options == null) dart.nullFailed(I[33], 168, 39, "options");
      if (T$.PositionDependentMixinOfGreenNode().is(this.value)) {
        T$.PositionDependentMixinOfGreenNode().as(this.value).updatePos(this.pos);
      }
      if (this.value[S._oldOptions] != null && dart.equals(options, this.value[S._oldOptions])) {
        return dart.nullCheck(this.value[S._oldBuildResult]);
      }
      let childOptions = this.value.computeChildOptions(options);
      let newChildBuildResults = this[S$._buildChildWidgets](childOptions);
      let bypassRebuild = this.value[S._oldOptions] != null && !dart.test(this.value.shouldRebuildWidget(dart.nullCheck(this.value[S._oldOptions]), options)) && dart.test(collections.listEquals(T$.BuildResultN(), newChildBuildResults, this.value[S._oldChildBuildResults]));
      this.value[S._oldOptions] = options;
      this.value[S._oldChildBuildResults] = newChildBuildResults;
      return bypassRebuild ? dart.nullCheck(this.value[S._oldBuildResult]) : this.value[S._oldBuildResult] = this.value.buildWidget(options, newChildBuildResults);
    }
    [S$._buildChildWidgets](childOptions) {
      if (childOptions == null) dart.nullFailed(I[33], 192, 59, "childOptions");
      if (!(this.children[S.$length] == childOptions[S.$length])) dart.assertFailed(null, I[33], 193, 12, "children.length == childOptions.length");
      if (dart.test(this.children[S.$isEmpty])) return C[2706] || CT.C2706;
      return T$.ListOfBuildResultN().generate(this.children[S.$length], dart.fn(index => {
        let t94;
        if (index == null) dart.nullFailed(I[33], 196, 10, "index");
        t94 = this.children[S.$_get](index);
        return t94 == null ? null : t94.buildWidget(childOptions[S.$_get](index));
      }, T$.intToBuildResultN()), {growable: false});
    }
  };
  (syntax_tree.SyntaxNode.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(I[33], 135, 19, "value");
    let pos = opts && 'pos' in opts ? opts.pos : null;
    if (pos == null) dart.nullFailed(I[33], 136, 19, "pos");
    this[S$.__SyntaxNode_children] = null;
    this[S$.__SyntaxNode_children_isSet] = false;
    this[S$.__SyntaxNode_range] = null;
    this[S$.__SyntaxNode_range_isSet] = false;
    this[S$.parent] = parent;
    this[S$.value] = value;
    this[S$.pos$1] = pos;
    ;
  }).prototype = syntax_tree.SyntaxNode.prototype;
  dart.addTypeTests(syntax_tree.SyntaxNode);
  dart.addTypeCaches(syntax_tree.SyntaxNode);
  dart.setMethodSignature(syntax_tree.SyntaxNode, () => ({
    __proto__: dart.getMethods(syntax_tree.SyntaxNode.__proto__),
    buildWidget: dart.fnType(syntax_tree.BuildResult, [options$.MathOptions]),
    [S$._buildChildWidgets]: dart.fnType(core.List$(dart.nullable(syntax_tree.BuildResult)), [core.List$(options$.MathOptions)])
  }));
  dart.setGetterSignature(syntax_tree.SyntaxNode, () => ({
    __proto__: dart.getGetters(syntax_tree.SyntaxNode.__proto__),
    children: core.List$(dart.nullable(syntax_tree.SyntaxNode)),
    range: ui.TextRange,
    width: core.int,
    capturedCursor: core.int
  }));
  dart.setLibraryUri(syntax_tree.SyntaxNode, I[34]);
  dart.setFieldSignature(syntax_tree.SyntaxNode, () => ({
    __proto__: dart.getFields(syntax_tree.SyntaxNode.__proto__),
    parent: dart.finalFieldType(dart.nullable(syntax_tree.SyntaxNode)),
    value: dart.finalFieldType(syntax_tree.GreenNode),
    pos: dart.finalFieldType(core.int),
    [S$.__SyntaxNode_children]: dart.fieldType(dart.nullable(core.List$(dart.nullable(syntax_tree.SyntaxNode)))),
    [S$.__SyntaxNode_children_isSet]: dart.fieldType(core.bool),
    [S$.__SyntaxNode_range]: dart.fieldType(dart.nullable(ui.TextRange)),
    [S$.__SyntaxNode_range_isSet]: dart.fieldType(core.bool)
  }));
  syntax_tree.AtomType = class AtomType extends core.Object {
    toString() {
      return this[S._name$9];
    }
  };
  (syntax_tree.AtomType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[33], 801, 6, "index");
    if (_name == null) dart.nullFailed(I[33], 801, 6, "_name");
    this.index = index;
    this[S._name$9] = _name;
    ;
  }).prototype = syntax_tree.AtomType.prototype;
  dart.addTypeTests(syntax_tree.AtomType);
  dart.addTypeCaches(syntax_tree.AtomType);
  dart.setLibraryUri(syntax_tree.AtomType, I[34]);
  dart.setFieldSignature(syntax_tree.AtomType, () => ({
    __proto__: dart.getFields(syntax_tree.AtomType.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$9]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(syntax_tree.AtomType, ['toString']);
  syntax_tree.AtomType.ord = C[1239] || CT.C1239;
  syntax_tree.AtomType.op = C[185] || CT.C185;
  syntax_tree.AtomType.bin = C[183] || CT.C183;
  syntax_tree.AtomType.rel = C[179] || CT.C179;
  syntax_tree.AtomType.open = C[184] || CT.C184;
  syntax_tree.AtomType.close = C[180] || CT.C180;
  syntax_tree.AtomType.punct = C[181] || CT.C181;
  syntax_tree.AtomType.inner = C[1736] || CT.C1736;
  syntax_tree.AtomType.spacing = C[1743] || CT.C1743;
  syntax_tree.AtomType.values = C[2707] || CT.C2707;
  syntax_tree.BuildResult = class BuildResult extends core.Object {
    get widget() {
      return this[S$.widget];
    }
    set widget(value) {
      super.widget = value;
    }
    get options() {
      return this[S$.options$6];
    }
    set options(value) {
      super.options = value;
    }
    get italic() {
      return this[S$.italic$1];
    }
    set italic(value) {
      super.italic = value;
    }
    get skew() {
      return this[S$.skew];
    }
    set skew(value) {
      super.skew = value;
    }
    get results() {
      return this[S$.results];
    }
    set results(value) {
      super.results = value;
    }
  };
  (syntax_tree.BuildResult.new = function(opts) {
    let widget = opts && 'widget' in opts ? opts.widget : null;
    if (widget == null) dart.nullFailed(I[33], 849, 19, "widget");
    let options = opts && 'options' in opts ? opts.options : null;
    if (options == null) dart.nullFailed(I[33], 850, 19, "options");
    let italic = opts && 'italic' in opts ? opts.italic : 0;
    if (italic == null) dart.nullFailed(I[33], 851, 10, "italic");
    let skew = opts && 'skew' in opts ? opts.skew : 0;
    if (skew == null) dart.nullFailed(I[33], 852, 10, "skew");
    let results = opts && 'results' in opts ? opts.results : null;
    this[S$.widget] = widget;
    this[S$.options$6] = options;
    this[S$.italic$1] = italic;
    this[S$.skew] = skew;
    this[S$.results] = results;
    ;
  }).prototype = syntax_tree.BuildResult.prototype;
  dart.addTypeTests(syntax_tree.BuildResult);
  dart.addTypeCaches(syntax_tree.BuildResult);
  dart.setLibraryUri(syntax_tree.BuildResult, I[34]);
  dart.setFieldSignature(syntax_tree.BuildResult, () => ({
    __proto__: dart.getFields(syntax_tree.BuildResult.__proto__),
    widget: dart.finalFieldType(framework.Widget),
    options: dart.finalFieldType(options$.MathOptions),
    italic: dart.finalFieldType(core.double),
    skew: dart.finalFieldType(core.double),
    results: dart.finalFieldType(dart.nullable(core.List$(syntax_tree.BuildResult)))
  }));
  syntax_tree._NodeSpacingConf = class _NodeSpacingConf extends core.Object {};
  (syntax_tree._NodeSpacingConf.new = function(leftType, rightType, options, spacingAfter) {
    if (leftType == null) dart.nullFailed(I[33], 882, 10, "leftType");
    if (rightType == null) dart.nullFailed(I[33], 883, 10, "rightType");
    if (options == null) dart.nullFailed(I[33], 884, 10, "options");
    if (spacingAfter == null) dart.nullFailed(I[33], 885, 10, "spacingAfter");
    this.leftType = leftType;
    this.rightType = rightType;
    this.options = options;
    this.spacingAfter = spacingAfter;
    ;
  }).prototype = syntax_tree._NodeSpacingConf.prototype;
  dart.addTypeTests(syntax_tree._NodeSpacingConf);
  dart.addTypeCaches(syntax_tree._NodeSpacingConf);
  dart.setLibraryUri(syntax_tree._NodeSpacingConf, I[34]);
  dart.setFieldSignature(syntax_tree._NodeSpacingConf, () => ({
    __proto__: dart.getFields(syntax_tree._NodeSpacingConf.__proto__),
    leftType: dart.fieldType(syntax_tree.AtomType),
    rightType: dart.fieldType(syntax_tree.AtomType),
    options: dart.fieldType(options$.MathOptions),
    spacingAfter: dart.fieldType(core.double)
  }));
  syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow'] = function GreenNodeWrappingExt$124wrapWithEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 725, 19, "#this");
    if (syntax_tree.EquationRowNode.is($this)) {
      return syntax_tree.EquationRowNode.as($this);
    }
    return new syntax_tree.EquationRowNode.new({children: T$.JSArrayOfGreenNode().of([$this])});
  };
  syntax_tree['GreenNodeWrappingExt|get#wrapWithEquationRow'] = function GreenNodeWrappingExt$124get$35wrapWithEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 725, 19, "#this");
    return dart.fn(() => syntax_tree['GreenNodeWrappingExt|wrapWithEquationRow']($this), T$.VoidToEquationRowNode());
  };
  syntax_tree['GreenNodeWrappingExt|expandEquationRow'] = function GreenNodeWrappingExt$124expandEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 734, 19, "#this");
    if (syntax_tree.EquationRowNode.is($this)) {
      return syntax_tree.EquationRowNode.as($this).children;
    }
    return T$.JSArrayOfGreenNode().of([$this]);
  };
  syntax_tree['GreenNodeWrappingExt|get#expandEquationRow'] = function GreenNodeWrappingExt$124get$35expandEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 734, 19, "#this");
    return dart.fn(() => syntax_tree['GreenNodeWrappingExt|expandEquationRow']($this), T$.VoidToListOfGreenNode());
  };
  syntax_tree['GreenNodeWrappingExt|unwrapEquationRow'] = function GreenNodeWrappingExt$124unwrapEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 744, 13, "#this");
    if (syntax_tree.EquationRowNode.is($this)) {
      if ($this.children[S.$length] === 1) {
        return syntax_tree.EquationRowNode.as($this).children[S.$_get](0);
      }
      dart.throw(new core.ArgumentError.new("Unwrap equation row failed due to multiple children inside"));
    }
    return $this;
  };
  syntax_tree['GreenNodeWrappingExt|get#unwrapEquationRow'] = function GreenNodeWrappingExt$124get$35unwrapEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 744, 13, "#this");
    return dart.fn(() => syntax_tree['GreenNodeWrappingExt|unwrapEquationRow']($this), T$.VoidToGreenNode());
  };
  syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow'] = function GreenNodeListWrappingExt$124wrapWithEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 761, 19, "#this");
    if ($this[S.$length] === 1 && syntax_tree.EquationRowNode.is($this[S.$_get](0))) {
      return syntax_tree.EquationRowNode.as($this[S.$_get](0));
    }
    return new syntax_tree.EquationRowNode.new({children: $this});
  };
  syntax_tree['GreenNodeListWrappingExt|get#wrapWithEquationRow'] = function GreenNodeListWrappingExt$124get$35wrapWithEquationRow($this) {
    if ($this == null) dart.nullFailed(I[33], 761, 19, "#this");
    return dart.fn(() => syntax_tree['GreenNodeListWrappingExt|wrapWithEquationRow']($this), T$.VoidToEquationRowNode());
  };
  syntax_tree._traverseNonSpaceNodes = function _traverseNonSpaceNodes(childTypeList, callback) {
    if (childTypeList == null) dart.nullFailed(I[33], 858, 26, "childTypeList");
    if (callback == null) dart.nullFailed(I[33], 859, 65, "callback");
    let prev = null;
    for (let child of childTypeList) {
      if (child.leftType == syntax_tree.AtomType.spacing || child.rightType == syntax_tree.AtomType.spacing) {
        continue;
      }
      callback(prev, child);
      prev = child;
    }
    if (prev != null) {
      callback(prev, null);
    }
  };
  dart.defineLazy(font_metrics_data, {
    /*font_metrics_data.fontMetricsData*/get fontMetricsData() {
      return C[2708] || CT.C2708;
    }
  }, false);
  style$0.MathStyle = class MathStyle extends core.Object {
    toString() {
      return this[S._name$4];
    }
  };
  (style$0.MathStyle.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[162], 6, 6, "index");
    if (_name == null) dart.nullFailed(I[162], 6, 6, "_name");
    this.index = index;
    this[S._name$4] = _name;
    ;
  }).prototype = style$0.MathStyle.prototype;
  dart.addTypeTests(style$0.MathStyle);
  dart.addTypeCaches(style$0.MathStyle);
  dart.setLibraryUri(style$0.MathStyle, I[163]);
  dart.setFieldSignature(style$0.MathStyle, () => ({
    __proto__: dart.getFields(style$0.MathStyle.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$4]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(style$0.MathStyle, ['toString']);
  style$0.MathStyle.display = C[104] || CT.C104;
  style$0.MathStyle.displayCramped = C[3864] || CT.C3864;
  style$0.MathStyle.text = C[105] || CT.C105;
  style$0.MathStyle.textCramped = C[3865] || CT.C3865;
  style$0.MathStyle.script = C[106] || CT.C106;
  style$0.MathStyle.scriptCramped = C[3866] || CT.C3866;
  style$0.MathStyle.scriptscript = C[107] || CT.C107;
  style$0.MathStyle.scriptscriptCramped = C[3867] || CT.C3867;
  style$0.MathStyle.values = C[3868] || CT.C3868;
  style$0.MathStyleDiff = class MathStyleDiff extends core.Object {
    toString() {
      return this[S._name$4];
    }
  };
  (style$0.MathStyleDiff.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[162], 17, 6, "index");
    if (_name == null) dart.nullFailed(I[162], 17, 6, "_name");
    this.index = index;
    this[S._name$4] = _name;
    ;
  }).prototype = style$0.MathStyleDiff.prototype;
  dart.addTypeTests(style$0.MathStyleDiff);
  dart.addTypeCaches(style$0.MathStyleDiff);
  dart.setLibraryUri(style$0.MathStyleDiff, I[163]);
  dart.setFieldSignature(style$0.MathStyleDiff, () => ({
    __proto__: dart.getFields(style$0.MathStyleDiff.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$4]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(style$0.MathStyleDiff, ['toString']);
  style$0.MathStyleDiff.sub = C[3869] || CT.C3869;
  style$0.MathStyleDiff.sup = C[3870] || CT.C3870;
  style$0.MathStyleDiff.fracNum = C[3871] || CT.C3871;
  style$0.MathStyleDiff.fracDen = C[3872] || CT.C3872;
  style$0.MathStyleDiff.cramp = C[3873] || CT.C3873;
  style$0.MathStyleDiff.text = C[3874] || CT.C3874;
  style$0.MathStyleDiff.uncramp = C[3875] || CT.C3875;
  style$0.MathStyleDiff.values = C[3876] || CT.C3876;
  style$0.parseMathStyle = function parseMathStyle(string) {
    if (string == null) dart.nullFailed(I[162], 27, 34, "string");
    return (C[3877] || CT.C3877)[S.$_get](string);
  };
  style$0['MathStyleExt|get#cramped'] = function MathStyleExt$124get$35cramped($this) {
    if ($this == null) dart.nullFailed(I[162], 41, 12, "#this");
    return $this.index[S$.$isEven];
  };
  style$0['MathStyleExt|get#size'] = function MathStyleExt$124get$35size($this) {
    if ($this == null) dart.nullFailed(I[162], 42, 11, "#this");
    return (dart.notNull($this.index) / 2)[S.$truncate]();
  };
  style$0['MathStyleExt|reduce'] = function MathStyleExt$124reduce($this, diff) {
    if ($this == null) dart.nullFailed(I[162], 44, 13, "#this");
    return diff == null ? $this : style$0.MathStyle.values[S.$_get](style$0['MathStyleExt|_reduceTable'][S.$_get](diff.index)[S.$_get]($this.index));
  };
  style$0['MathStyleExt|get#reduce'] = function MathStyleExt$124get$35reduce($this) {
    if ($this == null) dart.nullFailed(I[162], 44, 13, "#this");
    return dart.fn(diff => style$0['MathStyleExt|reduce']($this, diff), T$.MathStyleDiffNToMathStyle());
  };
  style$0['MathStyleExt|sup'] = function MathStyleExt$124sup($this) {
    if ($this == null) dart.nullFailed(I[162], 57, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.sup);
  };
  style$0['MathStyleExt|get#sup'] = function MathStyleExt$124get$35sup($this) {
    if ($this == null) dart.nullFailed(I[162], 57, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|sup']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|sub'] = function MathStyleExt$124sub($this) {
    if ($this == null) dart.nullFailed(I[162], 58, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.sub);
  };
  style$0['MathStyleExt|get#sub'] = function MathStyleExt$124get$35sub($this) {
    if ($this == null) dart.nullFailed(I[162], 58, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|sub']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|fracNum'] = function MathStyleExt$124fracNum($this) {
    if ($this == null) dart.nullFailed(I[162], 59, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.fracNum);
  };
  style$0['MathStyleExt|get#fracNum'] = function MathStyleExt$124get$35fracNum($this) {
    if ($this == null) dart.nullFailed(I[162], 59, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|fracNum']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|fracDen'] = function MathStyleExt$124fracDen($this) {
    if ($this == null) dart.nullFailed(I[162], 60, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.fracDen);
  };
  style$0['MathStyleExt|get#fracDen'] = function MathStyleExt$124get$35fracDen($this) {
    if ($this == null) dart.nullFailed(I[162], 60, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|fracDen']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|cramp'] = function MathStyleExt$124cramp($this) {
    if ($this == null) dart.nullFailed(I[162], 61, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.cramp);
  };
  style$0['MathStyleExt|get#cramp'] = function MathStyleExt$124get$35cramp($this) {
    if ($this == null) dart.nullFailed(I[162], 61, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|cramp']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|atLeastText'] = function MathStyleExt$124atLeastText($this) {
    if ($this == null) dart.nullFailed(I[162], 62, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.text);
  };
  style$0['MathStyleExt|get#atLeastText'] = function MathStyleExt$124get$35atLeastText($this) {
    if ($this == null) dart.nullFailed(I[162], 62, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|atLeastText']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|uncramp'] = function MathStyleExt$124uncramp($this) {
    if ($this == null) dart.nullFailed(I[162], 63, 13, "#this");
    return style$0['MathStyleExt|reduce']($this, style$0.MathStyleDiff.uncramp);
  };
  style$0['MathStyleExt|get#uncramp'] = function MathStyleExt$124get$35uncramp($this) {
    if ($this == null) dart.nullFailed(I[162], 63, 13, "#this");
    return dart.fn(() => style$0['MathStyleExt|uncramp']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExt|>'] = function MathStyleExt$124$62($this, other) {
    if ($this == null) dart.nullFailed(I[162], 68, 17, "#this");
    if (other == null) dart.nullFailed(I[162], 68, 29, "other");
    return dart.notNull($this.index) < dart.notNull(other.index);
  };
  style$0['MathStyleExt|<'] = function MathStyleExt$124$60($this, other) {
    if ($this == null) dart.nullFailed(I[162], 69, 17, "#this");
    if (other == null) dart.nullFailed(I[162], 69, 29, "other");
    return dart.notNull($this.index) > dart.notNull(other.index);
  };
  style$0['MathStyleExt|>='] = function MathStyleExt$124$62$61($this, other) {
    if ($this == null) dart.nullFailed(I[162], 70, 17, "#this");
    if (other == null) dart.nullFailed(I[162], 70, 30, "other");
    return dart.notNull($this.index) <= dart.notNull(other.index);
  };
  style$0['MathStyleExt|<='] = function MathStyleExt$124$60$61($this, other) {
    if ($this == null) dart.nullFailed(I[162], 71, 17, "#this");
    if (other == null) dart.nullFailed(I[162], 71, 30, "other");
    return dart.notNull($this.index) >= dart.notNull(other.index);
  };
  style$0['MathStyleExt|isTight'] = function MathStyleExt$124isTight($this) {
    if ($this == null) dart.nullFailed(I[162], 72, 8, "#this");
    return dart.notNull(style$0['MathStyleExt|get#size']($this)) >= 2;
  };
  style$0['MathStyleExt|get#isTight'] = function MathStyleExt$124get$35isTight($this) {
    if ($this == null) dart.nullFailed(I[162], 72, 8, "#this");
    return dart.fn(() => style$0['MathStyleExt|isTight']($this), T$.VoidTobool());
  };
  style$0['MathStyleExtOnInt|toMathStyle'] = function MathStyleExtOnInt$124toMathStyle($this) {
    if ($this == null) dart.nullFailed(I[162], 76, 13, "#this");
    return style$0.MathStyle.values[S.$_get]((dart.notNull($this) * 2)[S.$clamp](0, 6)[S$.$toInt]());
  };
  style$0['MathStyleExtOnInt|get#toMathStyle'] = function MathStyleExtOnInt$124get$35toMathStyle($this) {
    if ($this == null) dart.nullFailed(I[162], 76, 13, "#this");
    return dart.fn(() => style$0['MathStyleExtOnInt|toMathStyle']($this), T$.VoidToMathStyle());
  };
  style$0['MathStyleExtOnSize|underStyle'] = function MathStyleExtOnSize$124underStyle($this, style) {
    if ($this == null) dart.nullFailed(I[162], 81, 12, "#this");
    if (style == null) dart.nullFailed(I[162], 81, 33, "style");
    if (dart.test(style$0['MathStyleExt|>='](style, style$0.MathStyle.textCramped))) {
      return $this;
    }
    return size$.MathSize.values[S.$_get](dart.notNull(style$0['MathStyleExtOnSize|_sizeStyleMap'][S.$_get]($this.index)[S.$_get](dart.notNull(style$0['MathStyleExt|get#size'](style)) - 1)) - 1);
  };
  style$0['MathStyleExtOnSize|get#underStyle'] = function MathStyleExtOnSize$124get$35underStyle($this) {
    if ($this == null) dart.nullFailed(I[162], 81, 12, "#this");
    return dart.fn(style => {
      if (style == null) dart.nullFailed(I[162], 81, 33, "style");
      return style$0['MathStyleExtOnSize|underStyle']($this, style);
    }, T$.MathStyleToMathSize());
  };
  dart.defineLazy(style$0, {
    /*style$0['MathStyleExt|_reduceTable']*/get ['MathStyleExt|_reduceTable']() {
      return C[3878] || CT.C3878;
    },
    /*style$0['MathStyleExtOnSize|_sizeStyleMap']*/get ['MathStyleExtOnSize|_sizeStyleMap']() {
      return C[3886] || CT.C3886;
    }
  }, false);
  size$.Unit = class Unit extends core.Object {
    toString() {
      return this[S._name$5];
    }
  };
  (size$.Unit.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[164], 11, 6, "index");
    if (_name == null) dart.nullFailed(I[164], 11, 6, "_name");
    this.index = index;
    this[S._name$5] = _name;
    ;
  }).prototype = size$.Unit.prototype;
  dart.addTypeTests(size$.Unit);
  dart.addTypeCaches(size$.Unit);
  dart.setLibraryUri(size$.Unit, I[165]);
  dart.setFieldSignature(size$.Unit, () => ({
    __proto__: dart.getFields(size$.Unit.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$5]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(size$.Unit, ['toString']);
  size$.Unit.pt = C[1525] || CT.C1525;
  size$.Unit.mm = C[3898] || CT.C3898;
  size$.Unit.cm = C[3899] || CT.C3899;
  size$.Unit.inches = C[3900] || CT.C3900;
  size$.Unit.bp = C[3901] || CT.C3901;
  size$.Unit.pc = C[3902] || CT.C3902;
  size$.Unit.dd = C[3903] || CT.C3903;
  size$.Unit.cc = C[3904] || CT.C3904;
  size$.Unit.nd = C[3905] || CT.C3905;
  size$.Unit.nc = C[3906] || CT.C3906;
  size$.Unit.sp = C[3907] || CT.C3907;
  size$.Unit.px = C[3908] || CT.C3908;
  size$.Unit.ex = C[3909] || CT.C3909;
  size$.Unit.em = C[3910] || CT.C3910;
  size$.Unit.mu = C[1731] || CT.C1731;
  size$.Unit.lp = C[3911] || CT.C3911;
  size$.Unit.cssEm = C[2705] || CT.C2705;
  size$.Unit.values = C[3912] || CT.C3912;
  size$.Measurement = class Measurement extends core.Object {
    get value() {
      return this[S$.value$1];
    }
    set value(value) {
      super.value = value;
    }
    get unit() {
      return this[S$.unit];
    }
    set unit(value) {
      super.unit = value;
    }
    toLpUnder(options) {
      if (options == null) dart.nullFailed(I[164], 113, 32, "options");
      if (this.unit == size$.Unit.lp) return this.value;
      if (size$['UnitExt|get#toPt'](this.unit) != null) {
        return dart.notNull(this.value) * dart.nullCheck(size$['UnitExt|get#toPt'](this.unit)) / dart.nullCheck(size$['UnitExt|get#toPt'](size$.Unit.inches)) * dart.notNull(options.logicalPpi);
      }
      switch (this.unit) {
        case C[2705] || CT.C2705:
        {
          return dart.notNull(this.value) * dart.notNull(options.fontSize) * dart.notNull(options.sizeMultiplier);
        }
        case C[1731] || CT.C1731:
        {
          return dart.notNull(this.value) * dart.notNull(options.fontSize) * dart.notNull(options.fontMetrics.cssEmPerMu) * dart.notNull(options.sizeMultiplier);
        }
        case C[3909] || CT.C3909:
        {
          return dart.notNull(this.value) * dart.notNull(options.fontSize) * dart.notNull(options.fontMetrics.xHeight) * dart.notNull(options.havingStyle(style$0['MathStyleExt|atLeastText'](options.style)).sizeMultiplier);
        }
        case C[3910] || CT.C3910:
        {
          return dart.notNull(this.value) * dart.notNull(options.fontSize) * dart.notNull(options.fontMetrics.quad) * dart.notNull(options.havingStyle(style$0['MathStyleExt|atLeastText'](options.style)).sizeMultiplier);
        }
        default:
        {
          dart.throw(new core.ArgumentError.new("Invalid unit: '" + dart.str(dart.toString(this.unit)) + "'"));
        }
      }
    }
    toCssEmUnder(options) {
      if (options == null) dart.nullFailed(I[164], 144, 35, "options");
      return dart.notNull(this.toLpUnder(options)) / dart.notNull(options.fontSize);
    }
    toString() {
      return dart.str(this.value) + dart.str(size$['UnitExt|get#name'](this.unit));
    }
  };
  (size$.Measurement.new = function(opts) {
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(I[164], 111, 36, "value");
    let unit = opts && 'unit' in opts ? opts.unit : null;
    if (unit == null) dart.nullFailed(I[164], 111, 57, "unit");
    this[S$.value$1] = value;
    this[S$.unit] = unit;
    ;
  }).prototype = size$.Measurement.prototype;
  dart.addTypeTests(size$.Measurement);
  dart.addTypeCaches(size$.Measurement);
  dart.setMethodSignature(size$.Measurement, () => ({
    __proto__: dart.getMethods(size$.Measurement.__proto__),
    toLpUnder: dart.fnType(core.double, [options$.MathOptions]),
    toCssEmUnder: dart.fnType(core.double, [options$.MathOptions])
  }));
  dart.setLibraryUri(size$.Measurement, I[165]);
  dart.setFieldSignature(size$.Measurement, () => ({
    __proto__: dart.getFields(size$.Measurement.__proto__),
    value: dart.finalFieldType(core.double),
    unit: dart.finalFieldType(size$.Unit)
  }));
  dart.defineExtensionMethods(size$.Measurement, ['toString']);
  dart.defineLazy(size$.Measurement, {
    /*size$.Measurement.zero*/get zero() {
      return C[1524] || CT.C1524;
    }
  }, false);
  size$.MathSize = class MathSize extends core.Object {
    toString() {
      return this[S._name$5];
    }
  };
  (size$.MathSize.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[164], 173, 6, "index");
    if (_name == null) dart.nullFailed(I[164], 173, 6, "_name");
    this.index = index;
    this[S._name$5] = _name;
    ;
  }).prototype = size$.MathSize.prototype;
  dart.addTypeTests(size$.MathSize);
  dart.addTypeCaches(size$.MathSize);
  dart.setLibraryUri(size$.MathSize, I[165]);
  dart.setFieldSignature(size$.MathSize, () => ({
    __proto__: dart.getFields(size$.MathSize.__proto__),
    index: dart.finalFieldType(core.int),
    [S._name$5]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(size$.MathSize, ['toString']);
  size$.MathSize.tiny = C[109] || CT.C109;
  size$.MathSize.size2 = C[110] || CT.C110;
  size$.MathSize.scriptsize = C[111] || CT.C111;
  size$.MathSize.footnotesize = C[112] || CT.C112;
  size$.MathSize.small = C[113] || CT.C113;
  size$.MathSize.normalsize = C[114] || CT.C114;
  size$.MathSize.large = C[115] || CT.C115;
  size$.MathSize.Large = C[116] || CT.C116;
  size$.MathSize.LARGE = C[117] || CT.C117;
  size$.MathSize.huge = C[118] || CT.C118;
  size$.MathSize.HUGE = C[119] || CT.C119;
  size$.MathSize.values = C[3913] || CT.C3913;
  size$['UnitExt|get#toPt'] = function UnitExt$124get$35toPt($this) {
    if ($this == null) dart.nullFailed(I[164], 61, 15, "#this");
    return size$['UnitExt|_ptPerUnit'][S.$_get]($this);
  };
  size$['UnitExt|get#name'] = function UnitExt$124get$35name($this) {
    if ($this == null) dart.nullFailed(I[164], 63, 14, "#this");
    return dart.nullCheck((C[3914] || CT.C3914)[S.$_get]($this));
  };
  size$['UnitExt|parse'] = function UnitExt$124parse(unit) {
    if (unit == null) dart.nullFailed(I[164], 83, 29, "unit");
    return size$['UnitExtOnString|parseUnit'](unit);
  };
  size$['UnitExtOnString|parseUnit'] = function UnitExtOnString$124parseUnit($this) {
    if ($this == null) dart.nullFailed(I[164], 87, 9, "#this");
    return (C[3915] || CT.C3915)[S.$_get]($this);
  };
  size$['UnitExtOnString|get#parseUnit'] = function UnitExtOnString$124get$35parseUnit($this) {
    if ($this == null) dart.nullFailed(I[164], 87, 9, "#this");
    return dart.fn(() => size$['UnitExtOnString|parseUnit']($this), T$.VoidToUnitN());
  };
  size$['MeasurementExtOnNum|get#pt'] = function MeasurementExtOnNum$124get$35pt($this) {
    if ($this == null) dart.nullFailed(I[164], 154, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.pt});
  };
  size$['MeasurementExtOnNum|get#mm'] = function MeasurementExtOnNum$124get$35mm($this) {
    if ($this == null) dart.nullFailed(I[164], 155, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.mm});
  };
  size$['MeasurementExtOnNum|get#cm'] = function MeasurementExtOnNum$124get$35cm($this) {
    if ($this == null) dart.nullFailed(I[164], 156, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.cm});
  };
  size$['MeasurementExtOnNum|get#inches'] = function MeasurementExtOnNum$124get$35inches($this) {
    if ($this == null) dart.nullFailed(I[164], 157, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.inches});
  };
  size$['MeasurementExtOnNum|get#bp'] = function MeasurementExtOnNum$124get$35bp($this) {
    if ($this == null) dart.nullFailed(I[164], 158, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.bp});
  };
  size$['MeasurementExtOnNum|get#pc'] = function MeasurementExtOnNum$124get$35pc($this) {
    if ($this == null) dart.nullFailed(I[164], 159, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.pc});
  };
  size$['MeasurementExtOnNum|get#dd'] = function MeasurementExtOnNum$124get$35dd($this) {
    if ($this == null) dart.nullFailed(I[164], 160, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.dd});
  };
  size$['MeasurementExtOnNum|get#cc'] = function MeasurementExtOnNum$124get$35cc($this) {
    if ($this == null) dart.nullFailed(I[164], 161, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.cc});
  };
  size$['MeasurementExtOnNum|get#nd'] = function MeasurementExtOnNum$124get$35nd($this) {
    if ($this == null) dart.nullFailed(I[164], 162, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.nd});
  };
  size$['MeasurementExtOnNum|get#nc'] = function MeasurementExtOnNum$124get$35nc($this) {
    if ($this == null) dart.nullFailed(I[164], 163, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.nc});
  };
  size$['MeasurementExtOnNum|get#sp'] = function MeasurementExtOnNum$124get$35sp($this) {
    if ($this == null) dart.nullFailed(I[164], 164, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.sp});
  };
  size$['MeasurementExtOnNum|get#px'] = function MeasurementExtOnNum$124get$35px($this) {
    if ($this == null) dart.nullFailed(I[164], 165, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.px});
  };
  size$['MeasurementExtOnNum|get#ex'] = function MeasurementExtOnNum$124get$35ex($this) {
    if ($this == null) dart.nullFailed(I[164], 166, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.ex});
  };
  size$['MeasurementExtOnNum|get#em'] = function MeasurementExtOnNum$124get$35em($this) {
    if ($this == null) dart.nullFailed(I[164], 167, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.em});
  };
  size$['MeasurementExtOnNum|get#mu'] = function MeasurementExtOnNum$124get$35mu($this) {
    if ($this == null) dart.nullFailed(I[164], 168, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.mu});
  };
  size$['MeasurementExtOnNum|get#lp'] = function MeasurementExtOnNum$124get$35lp($this) {
    if ($this == null) dart.nullFailed(I[164], 169, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.lp});
  };
  size$['MeasurementExtOnNum|get#cssEm'] = function MeasurementExtOnNum$124get$35cssEm($this) {
    if ($this == null) dart.nullFailed(I[164], 170, 19, "#this");
    return new size$.Measurement.new({value: $this, unit: size$.Unit.cssEm});
  };
  size$['SizeModeExt|get#sizeMultiplier'] = function SizeModeExt$124get$35sizeMultiplier($this) {
    if ($this == null) dart.nullFailed(I[164], 188, 14, "#this");
    return (C[3916] || CT.C3916)[S.$_get]($this.index);
  };
  dart.defineLazy(size$, {
    /*size$['UnitExt|_ptPerUnit']*/get ['UnitExt|_ptPerUnit']() {
      return C[3917] || CT.C3917;
    }
  }, false);
  font_metrics$.CharacterMetrics = class CharacterMetrics extends core.Object {
    get depth() {
      return this[S$.depth$2];
    }
    set depth(value) {
      super.depth = value;
    }
    get height() {
      return this[S$.height$4];
    }
    set height(value) {
      super.height = value;
    }
    get italic() {
      return this[S$.italic$2];
    }
    set italic(value) {
      super.italic = value;
    }
    get skew() {
      return this[S$.skew$1];
    }
    set skew(value) {
      super.skew = value;
    }
    get width() {
      return this[S$.width$6];
    }
    set width(value) {
      super.width = value;
    }
  };
  (font_metrics$.CharacterMetrics.new = function(depth, height, italic, skew, width) {
    if (depth == null) dart.nullFailed(I[166], 188, 10, "depth");
    if (height == null) dart.nullFailed(I[166], 189, 10, "height");
    if (italic == null) dart.nullFailed(I[166], 190, 10, "italic");
    if (skew == null) dart.nullFailed(I[166], 191, 10, "skew");
    if (width == null) dart.nullFailed(I[166], 192, 10, "width");
    this[S$.depth$2] = depth;
    this[S$.height$4] = height;
    this[S$.italic$2] = italic;
    this[S$.skew$1] = skew;
    this[S$.width$6] = width;
    ;
  }).prototype = font_metrics$.CharacterMetrics.prototype;
  dart.addTypeTests(font_metrics$.CharacterMetrics);
  dart.addTypeCaches(font_metrics$.CharacterMetrics);
  dart.setLibraryUri(font_metrics$.CharacterMetrics, I[167]);
  dart.setFieldSignature(font_metrics$.CharacterMetrics, () => ({
    __proto__: dart.getFields(font_metrics$.CharacterMetrics.__proto__),
    depth: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    italic: dart.finalFieldType(core.double),
    skew: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double)
  }));
  font_metrics$.getCharacterMetrics = function getCharacterMetrics(opts) {
    let t152;
    let character = opts && 'character' in opts ? opts.character : null;
    if (character == null) dart.nullFailed(I[166], 199, 22, "character");
    let fontName = opts && 'fontName' in opts ? opts.fontName : null;
    if (fontName == null) dart.nullFailed(I[166], 199, 49, "fontName");
    let mode = opts && 'mode' in opts ? opts.mode : null;
    if (mode == null) dart.nullFailed(I[166], 199, 73, "mode");
    let metricsMapFont = font_metrics$.metricsMap[S.$_get](fontName);
    if (metricsMapFont == null) {
      dart.throw(core.Exception.new("Font metrics not found for font: " + dart.str(fontName) + "."));
    }
    let ch = character[S.$codeUnitAt](0);
    if (dart.test(metricsMapFont[S.$containsKey](ch))) {
      return metricsMapFont[S.$_get](ch);
    }
    let extraCh = (t152 = font_metrics$.extraCharacterMap[S.$_get](character[S.$_get](0)), t152 == null ? null : t152[S.$codeUnitAt](0));
    if (extraCh != null) {
      return metricsMapFont[S.$_get](ch);
    }
    if (mode == types.Mode.text && dart.test(unicode_scripts.supportedCodepoint(ch))) {
      return metricsMapFont[S.$_get](77);
    }
    return null;
  };
  font_metrics$.getGlobalMetrics = function getGlobalMetrics(size) {
    if (size == null) dart.nullFailed(I[166], 228, 39, "size");
    switch (size) {
      case C[109] || CT.C109:
      case C[110] || CT.C110:
      {
        return font_metrics$.scriptscriptFontMetrics;
      }
      case C[111] || CT.C111:
      case C[112] || CT.C112:
      {
        return font_metrics$.scriptFontMetrics;
      }
      case C[113] || CT.C113:
      case C[114] || CT.C114:
      case C[115] || CT.C115:
      case C[116] || CT.C116:
      case C[117] || CT.C117:
      case C[118] || CT.C118:
      case C[119] || CT.C119:
      {
        return font_metrics$.textFontMetrics;
      }
      default:
      {
        dart.throw(new core.ArgumentError.new(size));
      }
    }
  };
  dart.defineLazy(font_metrics$, {
    /*font_metrics$.sigmasAndXis*/get sigmasAndXis() {
      return C[3918] || CT.C3918;
    },
    /*font_metrics$.textFontMetrics*/get textFontMetrics() {
      return dart.nullCheck(font_metrics.FontMetrics.fromMap(font_metrics$.sigmasAndXis[S.$map](core.String, core.double, dart.fn((key, value) => {
        if (key == null) dart.nullFailed(I[166], 95, 23, "key");
        if (value == null) dart.nullFailed(I[166], 95, 28, "value");
        return new (T$.MapEntryOfString$double()).__(key, value[S.$_get](0));
      }, T$.StringAndListOfdoubleToMapEntryOfString$double()))));
    },
    /*font_metrics$.scriptFontMetrics*/get scriptFontMetrics() {
      return dart.nullCheck(font_metrics.FontMetrics.fromMap(font_metrics$.sigmasAndXis[S.$map](core.String, core.double, dart.fn((key, value) => {
        if (key == null) dart.nullFailed(I[166], 98, 23, "key");
        if (value == null) dart.nullFailed(I[166], 98, 28, "value");
        return new (T$.MapEntryOfString$double()).__(key, value[S.$_get](1));
      }, T$.StringAndListOfdoubleToMapEntryOfString$double()))));
    },
    /*font_metrics$.scriptscriptFontMetrics*/get scriptscriptFontMetrics() {
      return dart.nullCheck(font_metrics.FontMetrics.fromMap(font_metrics$.sigmasAndXis[S.$map](core.String, core.double, dart.fn((key, value) => {
        if (key == null) dart.nullFailed(I[166], 101, 23, "key");
        if (value == null) dart.nullFailed(I[166], 101, 28, "value");
        return new (T$.MapEntryOfString$double()).__(key, value[S.$_get](2));
      }, T$.StringAndListOfdoubleToMapEntryOfString$double()))));
    },
    /*font_metrics$.extraCharacterMap*/get extraCharacterMap() {
      return C[3946] || CT.C3946;
    },
    /*font_metrics$.metricsMap*/get metricsMap() {
      return font_metrics_data.fontMetricsData;
    }
  }, false);
  options$.MathOptions = class MathOptions extends core.Object {
    get style() {
      return this[S$.style$1];
    }
    set style(value) {
      super.style = value;
    }
    get color() {
      return this[S$.color$2];
    }
    set color(value) {
      super.color = value;
    }
    get sizeUnderTextStyle() {
      return this[S$.sizeUnderTextStyle];
    }
    set sizeUnderTextStyle(value) {
      super.sizeUnderTextStyle = value;
    }
    get textFontOptions() {
      return this[S$.textFontOptions];
    }
    set textFontOptions(value) {
      super.textFontOptions = value;
    }
    get mathFontOptions() {
      return this[S$.mathFontOptions];
    }
    set mathFontOptions(value) {
      super.mathFontOptions = value;
    }
    get fontSize() {
      return this[S$.fontSize];
    }
    set fontSize(value) {
      super.fontSize = value;
    }
    get logicalPpi() {
      return this[S$.logicalPpi$2];
    }
    set logicalPpi(value) {
      super.logicalPpi = value;
    }
    get size() {
      let t153;
      if (!dart.test(this[S$.__MathOptions_size_isSet])) {
        let t152 = style$0['MathStyleExtOnSize|underStyle'](this.sizeUnderTextStyle, this.style);
        if (dart.test(this[S$.__MathOptions_size_isSet])) dart.throw(new _internal.LateError.fieldADI("size"));
        this[S$.__MathOptions_size] = t152;
        this[S$.__MathOptions_size_isSet] = true;
      }
      t153 = this[S$.__MathOptions_size];
      return t153;
    }
    get sizeMultiplier() {
      let t154;
      if (!dart.test(this[S$.__MathOptions_sizeMultiplier_isSet])) {
        let t153 = size$['SizeModeExt|get#sizeMultiplier'](this.size);
        if (dart.test(this[S$.__MathOptions_sizeMultiplier_isSet])) dart.throw(new _internal.LateError.fieldADI("sizeMultiplier"));
        this[S$.__MathOptions_sizeMultiplier] = t153;
        this[S$.__MathOptions_sizeMultiplier_isSet] = true;
      }
      t154 = this[S$.__MathOptions_sizeMultiplier];
      return t154;
    }
    get fontMetrics() {
      let t155;
      if (!dart.test(this[S$.__MathOptions_fontMetrics_isSet])) {
        let t154 = font_metrics$.getGlobalMetrics(this.size);
        if (dart.test(this[S$.__MathOptions_fontMetrics_isSet])) dart.throw(new _internal.LateError.fieldADI("fontMetrics"));
        this[S$.__MathOptions_fontMetrics] = t154;
        this[S$.__MathOptions_fontMetrics_isSet] = true;
      }
      t155 = this[S$.__MathOptions_fontMetrics];
      return t155;
    }
    static new(opts) {
      let t155, t155$;
      let style = opts && 'style' in opts ? opts.style : C[104] || CT.C104;
      if (style == null) dart.nullFailed(I[168], 95, 15, "style");
      let color = opts && 'color' in opts ? opts.color : C[3947] || CT.C3947;
      if (color == null) dart.nullFailed(I[168], 96, 11, "color");
      let sizeUnderTextStyle = opts && 'sizeUnderTextStyle' in opts ? opts.sizeUnderTextStyle : C[114] || CT.C114;
      if (sizeUnderTextStyle == null) dart.nullFailed(I[168], 97, 14, "sizeUnderTextStyle");
      let textFontOptions = opts && 'textFontOptions' in opts ? opts.textFontOptions : null;
      let mathFontOptions = opts && 'mathFontOptions' in opts ? opts.mathFontOptions : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let logicalPpi = opts && 'logicalPpi' in opts ? opts.logicalPpi : null;
      let effectiveFontSize = (t155 = fontSize, t155 == null ? logicalPpi == null ? 10 / dart.nullCheck(size$['UnitExt|get#toPt'](size$.Unit.lp)) : options$.MathOptions.defaultFontSizeFor({logicalPpi: logicalPpi}) : t155);
      let effectiveLogicalPPI = (t155$ = logicalPpi, t155$ == null ? options$.MathOptions.defaultLogicalPpiFor({fontSize: effectiveFontSize}) : t155$);
      return new options$.MathOptions.__({fontSize: effectiveFontSize, logicalPpi: effectiveLogicalPPI, style: style, color: color, sizeUnderTextStyle: sizeUnderTextStyle, mathFontOptions: mathFontOptions, textFontOptions: textFontOptions});
    }
    static defaultLogicalPpiFor(opts) {
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      if (fontSize == null) dart.nullFailed(I[168], 143, 55, "fontSize");
      return dart.notNull(fontSize) * dart.nullCheck(size$['UnitExt|get#toPt'](size$.Unit.inches)) / 10;
    }
    static defaultFontSizeFor(opts) {
      let logicalPpi = opts && 'logicalPpi' in opts ? opts.logicalPpi : null;
      if (logicalPpi == null) dart.nullFailed(I[168], 147, 53, "logicalPpi");
      return 10 / dart.nullCheck(size$['UnitExt|get#toPt'](size$.Unit.inches)) * dart.notNull(logicalPpi);
    }
    havingStyle(style) {
      if (style == null) dart.nullFailed(I[168], 165, 37, "style");
      if (this.style == style) return this;
      return this.copyWith({style: style});
    }
    havingCrampedStyle() {
      if (dart.test(style$0['MathStyleExt|get#cramped'](this.style))) return this;
      return this.copyWith({style: style$0['MathStyleExt|cramp'](this.style)});
    }
    havingSize(size) {
      if (size == null) dart.nullFailed(I[168], 181, 35, "size");
      if (this.size == size && this.sizeUnderTextStyle == size) return this;
      return this.copyWith({style: style$0['MathStyleExt|atLeastText'](this.style), sizeUnderTextStyle: size});
    }
    havingStyleUnderBaseSize(style) {
      let t155;
      style = (t155 = style, t155 == null ? style$0['MathStyleExt|atLeastText'](this.style) : t155);
      if (this.sizeUnderTextStyle == size$.MathSize.normalsize && this.style == style) {
        return this;
      }
      return this.copyWith({style: style, sizeUnderTextStyle: size$.MathSize.normalsize});
    }
    havingBaseSize() {
      if (this.sizeUnderTextStyle == size$.MathSize.normalsize) return this;
      return this.copyWith({sizeUnderTextStyle: size$.MathSize.normalsize});
    }
    withColor(color) {
      if (color == null) dart.nullFailed(I[168], 212, 31, "color");
      if (dart.equals(this.color, color)) return this;
      return this.copyWith({color: color});
    }
    withTextFont(font) {
      let t155;
      if (font == null) dart.nullFailed(I[168], 219, 47, "font");
      return this.copyWith({mathFontOptions: null, textFontOptions: (t155 = this.textFontOptions, t155 == null ? new options$.FontOptions.new() : t155).mergeWith(font)});
    }
    withMathFont(font) {
      if (font == null) dart.nullFailed(I[168], 226, 40, "font");
      if (dart.equals(font, this.mathFontOptions)) return this;
      return this.copyWith({mathFontOptions: font});
    }
    copyWith(opts) {
      let t155, t155$, t155$0, t155$1, t155$2;
      let style = opts && 'style' in opts ? opts.style : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let sizeUnderTextStyle = opts && 'sizeUnderTextStyle' in opts ? opts.sizeUnderTextStyle : null;
      let textFontOptions = opts && 'textFontOptions' in opts ? opts.textFontOptions : null;
      let mathFontOptions = opts && 'mathFontOptions' in opts ? opts.mathFontOptions : null;
      return new options$.MathOptions.__({fontSize: this.fontSize, logicalPpi: this.logicalPpi, style: (t155 = style, t155 == null ? this.style : t155), color: (t155$ = color, t155$ == null ? this.color : t155$), sizeUnderTextStyle: (t155$0 = sizeUnderTextStyle, t155$0 == null ? this.sizeUnderTextStyle : t155$0), textFontOptions: (t155$1 = textFontOptions, t155$1 == null ? this.textFontOptions : t155$1), mathFontOptions: (t155$2 = mathFontOptions, t155$2 == null ? this.mathFontOptions : t155$2)});
    }
    merge(partialOptions) {
      if (partialOptions == null) dart.nullFailed(I[168], 254, 33, "partialOptions");
      let res = this;
      if (partialOptions.size != null) {
        res = res.havingSize(dart.nullCheck(partialOptions.size));
      }
      if (partialOptions.style != null) {
        res = res.havingStyle(dart.nullCheck(partialOptions.style));
      }
      if (partialOptions.color != null) {
        res = res.withColor(dart.nullCheck(partialOptions.color));
      }
      if (partialOptions.textFontOptions != null) {
        res = res.withTextFont(dart.nullCheck(partialOptions.textFontOptions));
      }
      if (partialOptions.mathFontOptions != null) {
        res = res.withMathFont(dart.nullCheck(partialOptions.mathFontOptions));
      }
      return res;
    }
  };
  (options$.MathOptions.__ = function(opts) {
    let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
    if (fontSize == null) dart.nullFailed(I[168], 76, 19, "fontSize");
    let logicalPpi = opts && 'logicalPpi' in opts ? opts.logicalPpi : null;
    if (logicalPpi == null) dart.nullFailed(I[168], 77, 19, "logicalPpi");
    let style = opts && 'style' in opts ? opts.style : null;
    if (style == null) dart.nullFailed(I[168], 78, 19, "style");
    let color = opts && 'color' in opts ? opts.color : C[3947] || CT.C3947;
    if (color == null) dart.nullFailed(I[168], 79, 10, "color");
    let sizeUnderTextStyle = opts && 'sizeUnderTextStyle' in opts ? opts.sizeUnderTextStyle : C[114] || CT.C114;
    if (sizeUnderTextStyle == null) dart.nullFailed(I[168], 80, 10, "sizeUnderTextStyle");
    let textFontOptions = opts && 'textFontOptions' in opts ? opts.textFontOptions : null;
    let mathFontOptions = opts && 'mathFontOptions' in opts ? opts.mathFontOptions : null;
    this[S$.__MathOptions_size] = null;
    this[S$.__MathOptions_size_isSet] = false;
    this[S$.__MathOptions_sizeMultiplier] = null;
    this[S$.__MathOptions_sizeMultiplier_isSet] = false;
    this[S$.__MathOptions_fontMetrics] = null;
    this[S$.__MathOptions_fontMetrics_isSet] = false;
    this[S$.fontSize] = fontSize;
    this[S$.logicalPpi$2] = logicalPpi;
    this[S$.style$1] = style;
    this[S$.color$2] = color;
    this[S$.sizeUnderTextStyle] = sizeUnderTextStyle;
    this[S$.textFontOptions] = textFontOptions;
    this[S$.mathFontOptions] = mathFontOptions;
    ;
  }).prototype = options$.MathOptions.prototype;
  dart.addTypeTests(options$.MathOptions);
  dart.addTypeCaches(options$.MathOptions);
  dart.setMethodSignature(options$.MathOptions, () => ({
    __proto__: dart.getMethods(options$.MathOptions.__proto__),
    havingStyle: dart.fnType(options$.MathOptions, [style$0.MathStyle]),
    havingCrampedStyle: dart.fnType(options$.MathOptions, []),
    havingSize: dart.fnType(options$.MathOptions, [size$.MathSize]),
    havingStyleUnderBaseSize: dart.fnType(options$.MathOptions, [dart.nullable(style$0.MathStyle)]),
    havingBaseSize: dart.fnType(options$.MathOptions, []),
    withColor: dart.fnType(options$.MathOptions, [ui.Color]),
    withTextFont: dart.fnType(options$.MathOptions, [options$.PartialFontOptions]),
    withMathFont: dart.fnType(options$.MathOptions, [options$.FontOptions]),
    copyWith: dart.fnType(options$.MathOptions, [], {color: dart.nullable(ui.Color), mathFontOptions: dart.nullable(options$.FontOptions), sizeUnderTextStyle: dart.nullable(size$.MathSize), style: dart.nullable(style$0.MathStyle), textFontOptions: dart.nullable(options$.FontOptions)}, {}),
    merge: dart.fnType(options$.MathOptions, [options$.OptionsDiff])
  }));
  dart.setGetterSignature(options$.MathOptions, () => ({
    __proto__: dart.getGetters(options$.MathOptions.__proto__),
    size: size$.MathSize,
    sizeMultiplier: core.double,
    fontMetrics: font_metrics.FontMetrics
  }));
  dart.setLibraryUri(options$.MathOptions, I[169]);
  dart.setFieldSignature(options$.MathOptions, () => ({
    __proto__: dart.getFields(options$.MathOptions.__proto__),
    style: dart.finalFieldType(style$0.MathStyle),
    color: dart.finalFieldType(ui.Color),
    [S$.__MathOptions_size]: dart.fieldType(dart.nullable(size$.MathSize)),
    [S$.__MathOptions_size_isSet]: dart.fieldType(core.bool),
    sizeUnderTextStyle: dart.finalFieldType(size$.MathSize),
    textFontOptions: dart.finalFieldType(dart.nullable(options$.FontOptions)),
    mathFontOptions: dart.finalFieldType(dart.nullable(options$.FontOptions)),
    [S$.__MathOptions_sizeMultiplier]: dart.fieldType(dart.nullable(core.double)),
    [S$.__MathOptions_sizeMultiplier_isSet]: dart.fieldType(core.bool),
    [S$.__MathOptions_fontMetrics]: dart.fieldType(dart.nullable(font_metrics.FontMetrics)),
    [S$.__MathOptions_fontMetrics_isSet]: dart.fieldType(core.bool),
    fontSize: dart.finalFieldType(core.double),
    logicalPpi: dart.finalFieldType(core.double)
  }));
  dart.defineLazy(options$.MathOptions, {
    /*options$.MathOptions._defaultLpPerPt*/get _defaultLpPerPt() {
      return 0.45168749999999996;
    },
    /*options$.MathOptions._defaultPtPerEm*/get _defaultPtPerEm() {
      return 10;
    },
    /*options$.MathOptions.defaultLogicalPpi*/get defaultLogicalPpi() {
      return 160;
    },
    /*options$.MathOptions.defaultFontSize*/get defaultFontSize() {
      return 22.139200221392002;
    },
    /*options$.MathOptions.displayOptions*/get displayOptions() {
      return new options$.MathOptions.__({fontSize: 22.139200221392002, logicalPpi: 160, style: style$0.MathStyle.display});
    },
    /*options$.MathOptions.textOptions*/get textOptions() {
      return new options$.MathOptions.__({fontSize: 22.139200221392002, logicalPpi: 160, style: style$0.MathStyle.text});
    }
  }, false);
  options$.OptionsDiff = class OptionsDiff extends core.Object {
    get style() {
      return this[S$.style$2];
    }
    set style(value) {
      super.style = value;
    }
    get size() {
      return this[S$.size$2];
    }
    set size(value) {
      super.size = value;
    }
    get color() {
      return this[S$.color$3];
    }
    set color(value) {
      super.color = value;
    }
    get textFontOptions() {
      return this[S$.textFontOptions$1];
    }
    set textFontOptions(value) {
      super.textFontOptions = value;
    }
    get mathFontOptions() {
      return this[S$.mathFontOptions$1];
    }
    set mathFontOptions(value) {
      super.mathFontOptions = value;
    }
    get isEmpty() {
      return this.style == null && this.color == null && this.size == null && this.textFontOptions == null && this.mathFontOptions == null;
    }
    removeStyle() {
      if (this.style == null) return this;
      return new options$.OptionsDiff.new({color: this.color, size: this.size, textFontOptions: this.textFontOptions, mathFontOptions: this.mathFontOptions});
    }
    removeMathFont() {
      if (this.mathFontOptions == null) return this;
      return new options$.OptionsDiff.new({color: this.color, size: this.size, style: this.style, textFontOptions: this.textFontOptions});
    }
  };
  (options$.OptionsDiff.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let textFontOptions = opts && 'textFontOptions' in opts ? opts.textFontOptions : null;
    let mathFontOptions = opts && 'mathFontOptions' in opts ? opts.mathFontOptions : null;
    this[S$.style$2] = style;
    this[S$.color$3] = color;
    this[S$.size$2] = size;
    this[S$.textFontOptions$1] = textFontOptions;
    this[S$.mathFontOptions$1] = mathFontOptions;
    ;
  }).prototype = options$.OptionsDiff.prototype;
  dart.addTypeTests(options$.OptionsDiff);
  dart.addTypeCaches(options$.OptionsDiff);
  dart.setMethodSignature(options$.OptionsDiff, () => ({
    __proto__: dart.getMethods(options$.OptionsDiff.__proto__),
    removeStyle: dart.fnType(options$.OptionsDiff, []),
    removeMathFont: dart.fnType(options$.OptionsDiff, [])
  }));
  dart.setGetterSignature(options$.OptionsDiff, () => ({
    __proto__: dart.getGetters(options$.OptionsDiff.__proto__),
    isEmpty: core.bool
  }));
  dart.setLibraryUri(options$.OptionsDiff, I[169]);
  dart.setFieldSignature(options$.OptionsDiff, () => ({
    __proto__: dart.getFields(options$.OptionsDiff.__proto__),
    style: dart.finalFieldType(dart.nullable(style$0.MathStyle)),
    size: dart.finalFieldType(dart.nullable(size$.MathSize)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    textFontOptions: dart.finalFieldType(dart.nullable(options$.PartialFontOptions)),
    mathFontOptions: dart.finalFieldType(dart.nullable(options$.FontOptions))
  }));
  options$.FontOptions = class FontOptions extends core.Object {
    get fontFamily() {
      return this[S$.fontFamily];
    }
    set fontFamily(value) {
      super.fontFamily = value;
    }
    get fontWeight() {
      return this[S$.fontWeight];
    }
    set fontWeight(value) {
      super.fontWeight = value;
    }
    get fontShape() {
      return this[S$.fontShape];
    }
    set fontShape(value) {
      super.fontShape = value;
    }
    get fallback() {
      return this[S$.fallback];
    }
    set fallback(value) {
      super.fallback = value;
    }
    get fontName() {
      let postfix = (dart.equals(this.fontWeight, ui.FontWeight.bold) ? "Bold" : "") + (this.fontShape == ui.FontStyle.italic ? "Italic" : "");
      return dart.str(this.fontFamily) + "-" + (postfix[S.$isEmpty] ? "Regular" : postfix);
    }
    copyWith(opts) {
      let t155, t155$, t155$0, t155$1;
      let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontShape = opts && 'fontShape' in opts ? opts.fontShape : null;
      let fallback = opts && 'fallback' in opts ? opts.fallback : null;
      return new options$.FontOptions.new({fontFamily: (t155 = fontFamily, t155 == null ? this.fontFamily : t155), fontWeight: (t155$ = fontWeight, t155$ == null ? this.fontWeight : t155$), fontShape: (t155$0 = fontShape, t155$0 == null ? this.fontShape : t155$0), fallback: (t155$1 = fallback, t155$1 == null ? this.fallback : t155$1)});
    }
    mergeWith(value) {
      if (value == null) return this;
      return this.copyWith({fontFamily: value.fontFamily, fontWeight: value.fontWeight, fontShape: value.fontShape});
    }
    _equals(o) {
      if (o == null) return false;
      if (this === o) return true;
      return options$.FontOptions.is(o) && o.fontFamily == this.fontFamily && dart.equals(o.fontWeight, this.fontWeight) && o.fontShape == this.fontShape && dart.test(collections.listEquals(options$.FontOptions, o.fallback, this.fallback));
    }
    get hashCode() {
      return ui.hashValues(dart.hashCode(this.fontFamily), dart.hashCode(this.fontWeight), dart.hashCode(this.fontShape));
    }
  };
  (options$.FontOptions.new = function(opts) {
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : "Main";
    if (fontFamily == null) dart.nullFailed(I[168], 352, 10, "fontFamily");
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[262] || CT.C262;
    if (fontWeight == null) dart.nullFailed(I[168], 353, 10, "fontWeight");
    let fontShape = opts && 'fontShape' in opts ? opts.fontShape : C[261] || CT.C261;
    if (fontShape == null) dart.nullFailed(I[168], 354, 10, "fontShape");
    let fallback = opts && 'fallback' in opts ? opts.fallback : C[260] || CT.C260;
    if (fallback == null) dart.nullFailed(I[168], 355, 10, "fallback");
    this[S$.fontFamily] = fontFamily;
    this[S$.fontWeight] = fontWeight;
    this[S$.fontShape] = fontShape;
    this[S$.fallback] = fallback;
    ;
  }).prototype = options$.FontOptions.prototype;
  dart.addTypeTests(options$.FontOptions);
  dart.addTypeCaches(options$.FontOptions);
  dart.setMethodSignature(options$.FontOptions, () => ({
    __proto__: dart.getMethods(options$.FontOptions.__proto__),
    copyWith: dart.fnType(options$.FontOptions, [], {fallback: dart.nullable(core.List$(options$.FontOptions)), fontFamily: dart.nullable(core.String), fontShape: dart.nullable(ui.FontStyle), fontWeight: dart.nullable(ui.FontWeight)}, {}),
    mergeWith: dart.fnType(options$.FontOptions, [dart.nullable(options$.PartialFontOptions)])
  }));
  dart.setGetterSignature(options$.FontOptions, () => ({
    __proto__: dart.getGetters(options$.FontOptions.__proto__),
    fontName: core.String
  }));
  dart.setLibraryUri(options$.FontOptions, I[169]);
  dart.setFieldSignature(options$.FontOptions, () => ({
    __proto__: dart.getFields(options$.FontOptions.__proto__),
    fontFamily: dart.finalFieldType(core.String),
    fontWeight: dart.finalFieldType(ui.FontWeight),
    fontShape: dart.finalFieldType(ui.FontStyle),
    fallback: dart.finalFieldType(core.List$(options$.FontOptions))
  }));
  dart.defineExtensionMethods(options$.FontOptions, ['_equals']);
  dart.defineExtensionAccessors(options$.FontOptions, ['hashCode']);
  options$.PartialFontOptions = class PartialFontOptions extends core.Object {
    get fontFamily() {
      return this[S$.fontFamily$1];
    }
    set fontFamily(value) {
      super.fontFamily = value;
    }
    get fontWeight() {
      return this[S$.fontWeight$1];
    }
    set fontWeight(value) {
      super.fontWeight = value;
    }
    get fontShape() {
      return this[S$.fontShape$1];
    }
    set fontShape(value) {
      super.fontShape = value;
    }
    _equals(o) {
      if (o == null) return false;
      if (this === o) return true;
      return options$.PartialFontOptions.is(o) && o.fontFamily == this.fontFamily && dart.equals(o.fontWeight, this.fontWeight) && o.fontShape == this.fontShape;
    }
    get hashCode() {
      return ui.hashValues(dart.hashCode(this.fontFamily), dart.hashCode(this.fontWeight), dart.hashCode(this.fontShape));
    }
  };
  (options$.PartialFontOptions.new = function(opts) {
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
    let fontShape = opts && 'fontShape' in opts ? opts.fontShape : null;
    this[S$.fontFamily$1] = fontFamily;
    this[S$.fontWeight$1] = fontWeight;
    this[S$.fontShape$1] = fontShape;
    ;
  }).prototype = options$.PartialFontOptions.prototype;
  dart.addTypeTests(options$.PartialFontOptions);
  dart.addTypeCaches(options$.PartialFontOptions);
  dart.setLibraryUri(options$.PartialFontOptions, I[169]);
  dart.setFieldSignature(options$.PartialFontOptions, () => ({
    __proto__: dart.getFields(options$.PartialFontOptions.__proto__),
    fontFamily: dart.finalFieldType(dart.nullable(core.String)),
    fontWeight: dart.finalFieldType(dart.nullable(ui.FontWeight)),
    fontShape: dart.finalFieldType(dart.nullable(ui.FontStyle))
  }));
  dart.defineExtensionMethods(options$.PartialFontOptions, ['_equals']);
  dart.defineExtensionAccessors(options$.PartialFontOptions, ['hashCode']);
  dart.trackLibraries("packages/flutter_math_fork/src/widgets/selection/web_selection_manager.dart", {
    "package:flutter_math_fork/src/widgets/selection/web_selection_manager.dart": web_selection_manager,
    "package:flutter_math_fork/src/widgets/selection/handle_overlay.dart": handle_overlay,
    "package:flutter_math_fork/src/widgets/selection/overlay.dart": overlay$0,
    "package:flutter_math_fork/src/widgets/selection/gesture_detector_builder_selectable.dart": gesture_detector_builder_selectable,
    "package:flutter_math_fork/src/widgets/selection/gesture_detector_builder.dart": gesture_detector_builder,
    "package:flutter_math_fork/src/widgets/selection/overlay_manager.dart": overlay_manager,
    "package:flutter_math_fork/src/encoder/optimization.dart": optimization$,
    "package:flutter_math_fork/src/encoder/matcher.dart": matcher,
    "package:flutter_math_fork/src/encoder/tex/functions.dart": functions,
    "package:flutter_math_fork/src/encoder/encoder.dart": encoder,
    "package:flutter_math_fork/src/encoder/tex/encoder.dart": encoder$,
    "package:flutter_math_fork/src/widgets/selection/selection_manager.dart": selection_manager,
    "package:flutter_math_fork/src/widgets/selection/cursor_timer_manager.dart": cursor_timer_manager,
    "package:flutter_math_fork/src/ast/tex_break.dart": tex_break,
    "package:flutter_math_fork/src/widgets/math.dart": math$,
    "package:flutter_math_fork/src/widgets/controller.dart": controller,
    "package:flutter_math_fork/src/parser/tex/functions/katex_ext.dart": katex_ext,
    "package:flutter_math_fork/src/render/layout/eqn_array.dart": eqn_array,
    "package:flutter_math_fork/src/ast/nodes/equation_array.dart": equation_array,
    "package:flutter_math_fork/src/parser/tex/environments/eqn_array.dart": eqn_array$,
    "package:flutter_math_fork/src/parser/tex/symbols_extra.dart": symbols_extra$,
    "package:flutter_math_fork/src/parser/tex/symbols.dart": symbols,
    "package:flutter_math_fork/src/parser/tex/namespace.dart": namespace,
    "package:flutter_math_fork/src/parser/tex/macro_expander.dart": macro_expander,
    "package:flutter_math_fork/src/parser/tex/parser.dart": parser$,
    "package:flutter_math_fork/src/ast/nodes/matrix.dart": matrix,
    "package:flutter_math_fork/src/parser/tex/environments/array.dart": array,
    "package:flutter_math_fork/src/parser/tex/define_environment.dart": define_environment,
    "package:flutter_math_fork/src/ast/nodes/under.dart": under,
    "package:flutter_math_fork/src/ast/nodes/stretchy_op.dart": stretchy_op,
    "package:flutter_math_fork/src/ast/nodes/sqrt.dart": sqrt,
    "package:flutter_math_fork/src/ast/nodes/space.dart": space,
    "package:flutter_math_fork/src/ast/nodes/raise_box.dart": raise_box,
    "package:flutter_math_fork/src/ast/nodes/phantom.dart": phantom,
    "package:flutter_math_fork/src/ast/nodes/nary_op.dart": nary_op,
    "package:flutter_math_fork/src/render/layout/multiscripts.dart": multiscripts,
    "package:flutter_math_fork/src/ast/nodes/multiscripts.dart": multiscripts$,
    "package:flutter_math_fork/src/render/svg/delimiter.dart": delimiter,
    "package:flutter_math_fork/src/ast/nodes/left_right.dart": left_right,
    "package:flutter_math_fork/src/ast/spacing.dart": spacing$,
    "package:flutter_math_fork/src/ast/nodes/function.dart": $function,
    "package:flutter_math_fork/src/ast/nodes/frac.dart": frac$,
    "package:flutter_math_fork/src/render/layout/custom_layout.dart": custom_layout,
    "package:flutter_math_fork/src/ast/nodes/enclosure.dart": enclosure,
    "package:flutter_math_fork/src/ast/nodes/accent_under.dart": accent_under,
    "package:flutter_math_fork/src/parser/tex/font.dart": font,
    "package:flutter_math_fork/src/ast/nodes/symbol.dart": symbol$,
    "package:flutter_math_fork/src/ast/nodes/style.dart": style$,
    "package:flutter_math_fork/src/ast/nodes/over.dart": over,
    "package:flutter_math_fork/src/render/symbols/make_composite.dart": make_composite,
    "package:flutter_math_fork/src/ast/symbols/symbols_composite.dart": symbols_composite,
    "package:flutter_math_fork/src/ast/symbols/symbols.dart": symbols$,
    "package:flutter_math_fork/src/render/symbols/make_symbol.dart": make_symbol,
    "package:flutter_math_fork/src/render/svg/stretchy.dart": stretchy,
    "package:flutter_math_fork/src/render/svg/static.dart": $static,
    "package:flutter_math_fork/src/render/layout/reset_dimension.dart": reset_dimension,
    "package:flutter_math_fork/src/ast/nodes/accent.dart": accent$,
    "package:flutter_math_fork/src/parser/tex/functions/katex_base.dart": katex_base,
    "package:flutter_math_fork/src/parser/tex/functions.dart": functions$,
    "package:flutter_math_fork/src/parser/tex/macros.dart": macros,
    "package:flutter_math_fork/src/parser/tex/settings.dart": settings,
    "package:flutter_math_fork/src/parser/tex/lexer.dart": lexer,
    "package:flutter_math_fork/src/parser/tex/source_location.dart": source_location,
    "package:flutter_math_fork/src/parser/tex/token.dart": token,
    "package:flutter_math_fork/src/parser/tex/parse_error.dart": parse_error,
    "package:flutter_math_fork/src/widgets/selectable.dart": selectable,
    "package:flutter_math_fork/src/render/layout/line_editable.dart": line_editable,
    "package:flutter_math_fork/src/render/constants.dart": constants,
    "package:flutter_math_fork/src/render/layout/line.dart": line,
    "package:flutter_math_fork/src/ast/syntax_tree.dart": syntax_tree,
    "package:flutter_math_fork/src/font/metrics/font_metrics_data.dart": font_metrics_data,
    "package:flutter_math_fork/src/ast/style.dart": style$0,
    "package:flutter_math_fork/src/ast/size.dart": size$,
    "package:flutter_math_fork/src/font/metrics/font_metrics.dart": font_metrics$,
    "package:flutter_math_fork/src/ast/options.dart": options$
  }, {
    "package:flutter_math_fork/src/encoder/tex/functions.dart": ["functions/accent.dart", "functions/accent_under.dart", "functions/frac.dart", "functions/function.dart", "functions/left_right.dart", "functions/multiscripts.dart", "functions/nary.dart", "functions/sqrt.dart", "functions/stretchy_op.dart", "functions/style.dart", "functions/symbol.dart"],
    "package:flutter_math_fork/src/parser/tex/functions/katex_ext.dart": ["katex_ext/not.dart"],
    "package:flutter_math_fork/src/parser/tex/functions/katex_base.dart": ["katex_base/accent.dart", "katex_base/accent_under.dart", "katex_base/array.dart", "katex_base/arrow.dart", "katex_base/break.dart", "katex_base/char.dart", "katex_base/color.dart", "katex_base/cr.dart", "katex_base/delimsizing.dart", "katex_base/enclose.dart", "katex_base/environment.dart", "katex_base/font.dart", "katex_base/genfrac.dart", "katex_base/horiz_brace.dart", "katex_base/kern.dart", "katex_base/math.dart", "katex_base/mclass.dart", "katex_base/op.dart", "katex_base/operator_name.dart", "katex_base/phantom.dart", "katex_base/raise_box.dart", "katex_base/rule.dart", "katex_base/sizing.dart", "katex_base/sqrt.dart", "katex_base/styling.dart", "katex_base/text.dart", "katex_base/underover.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["selection_manager.dart","web_selection_manager.dart","handle_overlay.dart","overlay.dart","gesture_detector_builder.dart","gesture_detector_builder_selectable.dart","overlay_manager.dart","../../encoder/optimization.dart","../../encoder/matcher.dart","../../encoder/tex/functions.dart","../../encoder/tex/functions/accent.dart","../../encoder/tex/functions/accent_under.dart","../../encoder/tex/functions/frac.dart","../../encoder/tex/functions/function.dart","../../encoder/tex/functions/left_right.dart","../../encoder/tex/functions/multiscripts.dart","../../encoder/tex/functions/nary.dart","../../encoder/tex/functions/sqrt.dart","../../encoder/tex/functions/stretchy_op.dart","../../encoder/tex/functions/style.dart","../../encoder/tex/functions/symbol.dart","../../encoder/encoder.dart","../../ast/syntax_tree.dart","../../encoder/tex/encoder.dart","cursor_timer_manager.dart","../../ast/tex_break.dart","../math.dart","../controller.dart","../../parser/tex/functions/katex_ext/not.dart","../../parser/tex/functions/katex_ext.dart","../../render/layout/eqn_array.dart","../../ast/nodes/equation_array.dart","../../parser/tex/environments/eqn_array.dart","../../parser/tex/symbols_extra.dart","../../parser/tex/symbols.dart","../../parser/tex/namespace.dart","../../parser/tex/macro_expander.dart","../../parser/tex/parser.dart","../../ast/nodes/matrix.dart","../../render/layout/custom_layout.dart","../../parser/tex/environments/array.dart","../../parser/tex/define_environment.dart","../../ast/nodes/under.dart","../../ast/nodes/stretchy_op.dart","../../ast/nodes/sqrt.dart","../../ast/nodes/space.dart","../../ast/nodes/raise_box.dart","../../ast/nodes/phantom.dart","../../ast/nodes/nary_op.dart","../../render/layout/multiscripts.dart","../../ast/nodes/multiscripts.dart","../../render/svg/delimiter.dart","../../ast/nodes/left_right.dart","../../ast/spacing.dart","../../ast/nodes/function.dart","../../ast/nodes/frac.dart","../../ast/nodes/enclosure.dart","../../ast/nodes/accent_under.dart","../../parser/tex/font.dart","../../ast/nodes/symbol.dart","../../ast/nodes/style.dart","../../ast/nodes/over.dart","../../render/symbols/make_composite.dart","../../ast/symbols/symbols_composite.dart","../../ast/symbols/symbols.dart","../../render/symbols/make_symbol.dart","../../render/svg/stretchy.dart","../../render/svg/static.dart","../../render/layout/reset_dimension.dart","../../ast/nodes/accent.dart","../../parser/tex/functions/katex_base/cr.dart","../../parser/tex/functions/katex_base/delimsizing.dart","../../parser/tex/functions/katex_base/environment.dart","../../parser/tex/functions/katex_base/accent.dart","../../parser/tex/functions/katex_base/accent_under.dart","../../parser/tex/functions/katex_base/array.dart","../../parser/tex/functions/katex_base/arrow.dart","../../parser/tex/functions/katex_base/break.dart","../../parser/tex/functions/katex_base/char.dart","../../parser/tex/functions/katex_base/color.dart","../../parser/tex/functions/katex_base/enclose.dart","../../parser/tex/functions/katex_base/font.dart","../../parser/tex/functions/katex_base/genfrac.dart","../../parser/tex/functions/katex_base/horiz_brace.dart","../../parser/tex/functions/katex_base/kern.dart","../../parser/tex/functions/katex_base/math.dart","../../parser/tex/functions/katex_base/mclass.dart","../../parser/tex/functions/katex_base/op.dart","../../parser/tex/functions/katex_base/operator_name.dart","../../parser/tex/functions/katex_base/phantom.dart","../../parser/tex/functions/katex_base/raise_box.dart","../../parser/tex/functions/katex_base/rule.dart","../../parser/tex/functions/katex_base/sizing.dart","../../parser/tex/functions/katex_base/sqrt.dart","../../parser/tex/functions/katex_base/styling.dart","../../parser/tex/functions/katex_base/text.dart","../../parser/tex/functions/katex_base/underover.dart","../../parser/tex/functions/katex_base.dart","../../parser/tex/functions.dart","../../parser/tex/macros.dart","../../parser/tex/settings.dart","../../parser/tex/lexer.dart","../../parser/tex/source_location.dart","../../parser/tex/token.dart","../../parser/tex/parse_error.dart","../selectable.dart","../../render/layout/line_editable.dart","../../render/layout/line.dart","../../render/constants.dart","../../font/metrics/font_metrics_data.dart","../../ast/style.dart","../../ast/size.dart","../../font/metrics/font_metrics.dart","../../ast/options.dart"],"names":[],"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","file":"../../../../../../../../../../../C:/packages/flutter_math_fork/src/widgets/selection/web_selection_manager.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__selection__web_selection_manager: web_selection_manager,
    src__widgets__selection__handle_overlay: handle_overlay,
    src__widgets__selection__overlay: overlay$0,
    src__widgets__selection__gesture_detector_builder_selectable: gesture_detector_builder_selectable,
    src__widgets__selection__gesture_detector_builder: gesture_detector_builder,
    src__widgets__selection__overlay_manager: overlay_manager,
    src__encoder__optimization: optimization$,
    src__encoder__matcher: matcher,
    src__encoder__tex__functions: functions,
    src__encoder__encoder: encoder,
    src__encoder__tex__encoder: encoder$,
    src__widgets__selection__selection_manager: selection_manager,
    src__widgets__selection__cursor_timer_manager: cursor_timer_manager,
    src__ast__tex_break: tex_break,
    src__widgets__math: math$,
    src__widgets__controller: controller,
    src__parser__tex__functions__katex_ext: katex_ext,
    src__render__layout__eqn_array: eqn_array,
    src__ast__nodes__equation_array: equation_array,
    src__parser__tex__environments__eqn_array: eqn_array$,
    src__parser__tex__symbols_extra: symbols_extra$,
    src__parser__tex__symbols: symbols,
    src__parser__tex__namespace: namespace,
    src__parser__tex__macro_expander: macro_expander,
    src__parser__tex__parser: parser$,
    src__ast__nodes__matrix: matrix,
    src__parser__tex__environments__array: array,
    src__parser__tex__define_environment: define_environment,
    src__ast__nodes__under: under,
    src__ast__nodes__stretchy_op: stretchy_op,
    src__ast__nodes__sqrt: sqrt,
    src__ast__nodes__space: space,
    src__ast__nodes__raise_box: raise_box,
    src__ast__nodes__phantom: phantom,
    src__ast__nodes__nary_op: nary_op,
    src__render__layout__multiscripts: multiscripts,
    src__ast__nodes__multiscripts: multiscripts$,
    src__render__svg__delimiter: delimiter,
    src__ast__nodes__left_right: left_right,
    src__ast__spacing: spacing$,
    src__ast__nodes__function: $function,
    src__ast__nodes__frac: frac$,
    src__render__layout__custom_layout: custom_layout,
    src__ast__nodes__enclosure: enclosure,
    src__ast__nodes__accent_under: accent_under,
    src__parser__tex__font: font,
    src__ast__nodes__symbol: symbol$,
    src__ast__nodes__style: style$,
    src__ast__nodes__over: over,
    src__render__symbols__make_composite: make_composite,
    src__ast__symbols__symbols_composite: symbols_composite,
    src__ast__symbols__symbols: symbols$,
    src__render__symbols__make_symbol: make_symbol,
    src__render__svg__stretchy: stretchy,
    src__render__svg__static: $static,
    src__render__layout__reset_dimension: reset_dimension,
    src__ast__nodes__accent: accent$,
    src__parser__tex__functions__katex_base: katex_base,
    src__parser__tex__functions: functions$,
    src__parser__tex__macros: macros,
    src__parser__tex__settings: settings,
    src__parser__tex__lexer: lexer,
    src__parser__tex__source_location: source_location,
    src__parser__tex__token: token,
    src__parser__tex__parse_error: parse_error,
    src__widgets__selectable: selectable,
    src__render__layout__line_editable: line_editable,
    src__render__constants: constants,
    src__render__layout__line: line,
    src__ast__syntax_tree: syntax_tree,
    src__font__metrics__font_metrics_data: font_metrics_data,
    src__ast__style: style$0,
    src__ast__size: size$,
    src__font__metrics__font_metrics: font_metrics$,
    src__ast__options: options$
  };
}));

//# sourceMappingURL=web_selection_manager.dart.lib.js.map
